(self.webpackChunkpcf_project=self.webpackChunkpcf_project||[]).push([[209],{"./node_modules/@babel/runtime/helpers/esm/extends.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";function _extends(){return(_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}__webpack_require__.d(__webpack_exports__,{Z:()=>_extends})},"./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>_inheritsLoose});var _setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js");function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,(0,_setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__.Z)(subClass,superClass)}},"./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";function _setPrototypeOf(o,p){return(_setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o})(o,p)}__webpack_require__.d(__webpack_exports__,{Z:()=>_setPrototypeOf})},"./node_modules/@emotion/hash/dist/emotion-hash.esm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";function murmur2(str){for(var k,h=0,i=0,len=str.length;len>=4;++i,len-=4)k=(65535&(k=255&str.charCodeAt(i)|(255&str.charCodeAt(++i))<<8|(255&str.charCodeAt(++i))<<16|(255&str.charCodeAt(++i))<<24))*1540483477+((k>>>16)*59797<<16),k^=k>>>24,h=(65535&k)*1540483477+((k>>>16)*59797<<16)^(65535&h)*1540483477+((h>>>16)*59797<<16);switch(len){case 3:h^=(255&str.charCodeAt(i+2))<<16;case 2:h^=(255&str.charCodeAt(i+1))<<8;case 1:h^=255&str.charCodeAt(i),h=(65535&h)*1540483477+((h>>>16)*59797<<16)}return h^=h>>>13,(((h=(65535&h)*1540483477+((h>>>16)*59797<<16))^h>>>15)>>>0).toString(36)}__webpack_require__.d(__webpack_exports__,{Z:()=>murmur2})},"./node_modules/@fluentui/react-avatar/lib/components/Avatar/Avatar.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{q:()=>Avatar});var react=__webpack_require__("./node_modules/react/index.js"),jsx_runtime=__webpack_require__("./node_modules/@fluentui/react-jsx-runtime/lib/jsx-runtime.js"),assertSlots=__webpack_require__("./node_modules/@fluentui/react-utilities/lib/compose/assertSlots.js");let renderAvatar_unstable=state=>((0,assertSlots.a)(state),(0,jsx_runtime.BX)(state.root,{children:[state.initials&&(0,jsx_runtime.tZ)(state.initials,{}),state.icon&&(0,jsx_runtime.tZ)(state.icon,{}),state.image&&(0,jsx_runtime.tZ)(state.image,{}),state.badge&&(0,jsx_runtime.tZ)(state.badge,{}),state.activeAriaLabelElement]}));var useId=__webpack_require__("./node_modules/@fluentui/react-utilities/lib/hooks/useId.js"),slot=__webpack_require__("./node_modules/@fluentui/react-utilities/lib/compose/slot.js"),getNativeElementProps=__webpack_require__("./node_modules/@fluentui/react-utilities/lib/utils/getNativeElementProps.js"),mergeCallbacks=__webpack_require__("./node_modules/@fluentui/react-utilities/lib/utils/mergeCallbacks.js");let UNWANTED_ENCLOSURES_REGEX=/[\(\[\{][^\)\]\}]*[\)\]\}]/g,UNWANTED_CHARS_REGEX=/[\0-\u001F\!-/:-@\[-`\{-\u00BF\u0250-\u036F\uD800-\uFFFF]/g,PHONENUMBER_REGEX=/^\d+[\d\s]*(:?ext|x|)\s*\d+$/i,MULTIPLE_WHITESPACES_REGEX=/\s+/g,UNSUPPORTED_TEXT_REGEX=/[\u0600-\u06FF\u0750-\u077F\u08A0-\u08FF\u1100-\u11FF\u3130-\u318F\uA960-\uA97F\uAC00-\uD7AF\uD7B0-\uD7FF\u3040-\u309F\u30A0-\u30FF\u3400-\u4DBF\u4E00-\u9FFF\uF900-\uFAFF]|[\uD840-\uD869][\uDC00-\uDED6]/;function getInitialsLatin(displayName,isRtl,firstInitialOnly){let initials="",splits=displayName.split(" ");return(0!==splits.length&&(initials+=splits[0].charAt(0).toUpperCase()),firstInitialOnly||(2===splits.length?initials+=splits[1].charAt(0).toUpperCase():3===splits.length&&(initials+=splits[2].charAt(0).toUpperCase())),isRtl&&initials.length>1)?initials.charAt(1)+initials.charAt(0):initials}function cleanupDisplayName(displayName){return displayName=(displayName=(displayName=(displayName=displayName.replace(UNWANTED_ENCLOSURES_REGEX,"")).replace(UNWANTED_CHARS_REGEX,"")).replace(MULTIPLE_WHITESPACES_REGEX," ")).trim()}function getInitials(displayName,isRtl,options){return displayName?(displayName=cleanupDisplayName(displayName),UNSUPPORTED_TEXT_REGEX.test(displayName)||!(null==options?void 0:options.allowPhoneInitials)&&PHONENUMBER_REGEX.test(displayName))?"":getInitialsLatin(displayName,isRtl,null==options?void 0:options.firstInitialOnly):""}var utils_createFluentIcon=__webpack_require__("./node_modules/@fluentui/react-icons/lib/utils/createFluentIcon.js");let PersonRegular=(0,utils_createFluentIcon.k)("PersonRegular","1em",["M10 2a4 4 0 1 0 0 8 4 4 0 0 0 0-8ZM7 6a3 3 0 1 1 6 0 3 3 0 0 1-6 0Zm-2 5a2 2 0 0 0-2 2c0 1.7.83 2.97 2.13 3.8A9.14 9.14 0 0 0 10 18c1.85 0 3.58-.39 4.87-1.2A4.35 4.35 0 0 0 17 13a2 2 0 0 0-2-2H5Zm-1 2a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1c0 1.3-.62 2.28-1.67 2.95A8.16 8.16 0 0 1 10 17a8.16 8.16 0 0 1-4.33-1.05A3.36 3.36 0 0 1 4 13Z"]),PresenceAvailable10Filled=(0,utils_createFluentIcon.k)("PresenceAvailable10Filled","10",["M5 10A5 5 0 1 0 5 0a5 5 0 0 0 0 10Zm2.1-5.9L4.85 6.35a.5.5 0 0 1-.7 0l-1-1a.5.5 0 0 1 .7-.7l.65.64 1.9-1.9a.5.5 0 0 1 .7.71Z"]),PresenceAvailable10Regular=(0,utils_createFluentIcon.k)("PresenceAvailable10Regular","10",["M5 0a5 5 0 1 0 0 10A5 5 0 0 0 5 0ZM1 5a4 4 0 1 1 8 0 4 4 0 0 1-8 0Zm6.1-1.6c.2.2.2.5 0 .7L4.85 6.35a.5.5 0 0 1-.7 0l-1-1a.5.5 0 1 1 .7-.7l.65.64 1.9-1.9c.2-.19.5-.19.7 0Z"]),PresenceAvailable12Filled=(0,utils_createFluentIcon.k)("PresenceAvailable12Filled","12",["M6 12A6 6 0 1 0 6 0a6 6 0 0 0 0 12Zm2.53-6.72L5.78 8.03c-.3.3-.77.3-1.06 0l-1-1a.75.75 0 0 1 1.06-1.06l.47.47 2.22-2.22a.75.75 0 0 1 1.06 1.06Z"]),PresenceAvailable12Regular=(0,utils_createFluentIcon.k)("PresenceAvailable12Regular","12",["M6 0a6 6 0 1 0 0 12A6 6 0 0 0 6 0ZM1.5 6a4.5 4.5 0 1 1 9 0 4.5 4.5 0 0 1-9 0Zm7.03-1.78c.3.3.3.77 0 1.06L5.78 8.03c-.3.3-.77.3-1.06 0l-1-1a.75.75 0 0 1 1.06-1.06l.47.47 2.22-2.22c.3-.3.77-.3 1.06 0Z"]),PresenceAvailable16Filled=(0,utils_createFluentIcon.k)("PresenceAvailable16Filled","16",["M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16Zm3.7-9.3-4 4a1 1 0 0 1-1.41 0l-2-2a1 1 0 1 1 1.42-1.4L7 8.58l3.3-3.3a1 1 0 0 1 1.4 1.42Z"]),PresenceAvailable16Regular=(0,utils_createFluentIcon.k)("PresenceAvailable16Regular","16",["M11.7 6.7a1 1 0 0 0-1.4-1.4L7 8.58l-1.3-1.3a1 1 0 0 0-1.4 1.42l2 2a1 1 0 0 0 1.4 0l4-4ZM0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm8-6a6 6 0 1 0 0 12A6 6 0 0 0 8 2Z"]),PresenceAvailable20Filled=(0,utils_createFluentIcon.k)("PresenceAvailable20Filled","20",["M10 20a10 10 0 1 0 0-20 10 10 0 0 0 0 20Zm4.2-11.8-4.5 4.5a1 1 0 0 1-1.4 0l-2-2a1 1 0 1 1 1.4-1.4L9 10.58l3.8-3.8a1 1 0 1 1 1.4 1.42Z"]),PresenceAvailable20Regular=(0,utils_createFluentIcon.k)("PresenceAvailable20Regular","20",["M10 0a10 10 0 1 0 0 20 10 10 0 0 0 0-20ZM2 10a8 8 0 1 1 16 0 8 8 0 0 1-16 0Zm12.2-3.2a1 1 0 0 1 0 1.4l-4.5 4.5a1 1 0 0 1-1.4 0l-2-2a1 1 0 0 1 1.4-1.4L9 10.58l3.8-3.8a1 1 0 0 1 1.4 0Z"]),PresenceAway10Filled=(0,utils_createFluentIcon.k)("PresenceAway10Filled","10",["M5 10A5 5 0 1 0 5 0a5 5 0 0 0 0 10Zm0-7v1.8l1.35 1.35a.5.5 0 1 1-.7.7l-1.5-1.5A.5.5 0 0 1 4 5V3a.5.5 0 0 1 1 0Z"]),PresenceAway12Filled=(0,utils_createFluentIcon.k)("PresenceAway12Filled","12",["M6 12A6 6 0 1 0 6 0a6 6 0 0 0 0 12Zm.5-8.75v2.4l1.49 1.28A.75.75 0 1 1 7 8.07l-1.75-1.5A.75.75 0 0 1 5 6V3.25a.75.75 0 0 1 1.5 0Z"]),PresenceAway16Filled=(0,utils_createFluentIcon.k)("PresenceAway16Filled","16",["M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16Zm.5-11.5v3.02l2.12 1.7a1 1 0 1 1-1.24 1.56l-2.5-2A1 1 0 0 1 6.5 8V4.5a1 1 0 0 1 2 0Z"]),PresenceAway20Filled=(0,utils_createFluentIcon.k)("PresenceAway20Filled","20",["M10 20a10 10 0 1 0 0-20 10 10 0 0 0 0 20Zm0-14V9.6l2.7 2.7a1 1 0 0 1-1.4 1.42l-3-3A1 1 0 0 1 8 10V6a1 1 0 1 1 2 0Z"]),PresenceBlocked10Regular=(0,utils_createFluentIcon.k)("PresenceBlocked10Regular","10",["M10 5A5 5 0 1 0 0 5a5 5 0 0 0 10 0ZM9 5a4 4 0 0 1-6.45 3.16l5.61-5.61C8.69 3.22 9 4.08 9 5ZM7.45 1.84 1.84 7.45a4 4 0 0 1 5.61-5.61Z"]),PresenceBlocked12Regular=(0,utils_createFluentIcon.k)("PresenceBlocked12Regular","12",["M12 6A6 6 0 1 1 0 6a6 6 0 0 1 12 0Zm-1.5 0c0-.97-.3-1.87-.83-2.6L3.39 9.66A4.5 4.5 0 0 0 10.5 6ZM8.6 2.33a4.5 4.5 0 0 0-6.28 6.28l6.29-6.28Z"]),PresenceBlocked16Regular=(0,utils_createFluentIcon.k)("PresenceBlocked16Regular","16",["M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0Zm-2 0c0-1.3-.41-2.5-1.1-3.48L4.51 12.9A6 6 0 0 0 14 8Zm-2.52-4.9a6 6 0 0 0-8.37 8.37l8.37-8.36Z"]),PresenceBlocked20Regular=(0,utils_createFluentIcon.k)("PresenceBlocked20Regular","20",["M20 10a10 10 0 1 0-20 0 10 10 0 0 0 20 0Zm-2 0a8 8 0 0 1-12.9 6.32L16.31 5.09A7.97 7.97 0 0 1 18 10Zm-3.1-6.32L3.69 14.91A8 8 0 0 1 14.91 3.68Z"]),PresenceBusy10Filled=(0,utils_createFluentIcon.k)("PresenceBusy10Filled","10",["M10 5A5 5 0 1 1 0 5a5 5 0 0 1 10 0Z"]),PresenceBusy12Filled=(0,utils_createFluentIcon.k)("PresenceBusy12Filled","12",["M12 6A6 6 0 1 1 0 6a6 6 0 0 1 12 0Z"]),PresenceBusy16Filled=(0,utils_createFluentIcon.k)("PresenceBusy16Filled","16",["M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0Z"]),PresenceBusy20Filled=(0,utils_createFluentIcon.k)("PresenceBusy20Filled","20",["M20 10a10 10 0 1 1-20 0 10 10 0 0 1 20 0Z"]),PresenceDnd10Filled=(0,utils_createFluentIcon.k)("PresenceDnd10Filled","10",["M5 10A5 5 0 1 0 5 0a5 5 0 0 0 0 10ZM3.5 4.5h3a.5.5 0 0 1 0 1h-3a.5.5 0 0 1 0-1Z"]),PresenceDnd10Regular=(0,utils_createFluentIcon.k)("PresenceDnd10Regular","10",["M5 0a5 5 0 1 0 0 10A5 5 0 0 0 5 0ZM1 5a4 4 0 1 1 8 0 4 4 0 0 1-8 0Zm2 0c0-.28.22-.5.5-.5h3a.5.5 0 0 1 0 1h-3A.5.5 0 0 1 3 5Z"]),PresenceDnd12Filled=(0,utils_createFluentIcon.k)("PresenceDnd12Filled","12",["M6 12A6 6 0 1 0 6 0a6 6 0 0 0 0 12ZM3.75 5.25h4.5a.75.75 0 0 1 0 1.5h-4.5a.75.75 0 0 1 0-1.5Z"]),PresenceDnd12Regular=(0,utils_createFluentIcon.k)("PresenceDnd12Regular","12",["M6 0a6 6 0 1 0 0 12A6 6 0 0 0 6 0ZM1.5 6a4.5 4.5 0 1 1 9 0 4.5 4.5 0 0 1-9 0ZM3 6c0-.41.34-.75.75-.75h4.5a.75.75 0 0 1 0 1.5h-4.5A.75.75 0 0 1 3 6Z"]),PresenceDnd16Filled=(0,utils_createFluentIcon.k)("PresenceDnd16Filled","16",["M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16ZM5.25 7h5.5a1 1 0 1 1 0 2h-5.5a1 1 0 1 1 0-2Z"]),PresenceDnd16Regular=(0,utils_createFluentIcon.k)("PresenceDnd16Regular","16",["M5.25 7a1 1 0 0 0 0 2h5.5a1 1 0 1 0 0-2h-5.5ZM0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm8-6a6 6 0 1 0 0 12A6 6 0 0 0 8 2Z"]),PresenceDnd20Filled=(0,utils_createFluentIcon.k)("PresenceDnd20Filled","20",["M10 20a10 10 0 1 0 0-20 10 10 0 0 0 0 20ZM7 9h6a1 1 0 1 1 0 2H7a1 1 0 1 1 0-2Z"]),PresenceDnd20Regular=(0,utils_createFluentIcon.k)("PresenceDnd20Regular","20",["M10 0a10 10 0 1 0 0 20 10 10 0 0 0 0-20ZM2 10a8 8 0 1 1 16 0 8 8 0 0 1-16 0Zm4 0a1 1 0 0 1 1-1h6a1 1 0 1 1 0 2H7a1 1 0 0 1-1-1Z"]),PresenceOffline10Regular=(0,utils_createFluentIcon.k)("PresenceOffline10Regular","10",["M6.85 3.15c.2.2.2.5 0 .7L5.71 5l1.14 1.15a.5.5 0 1 1-.7.7L5 5.71 3.85 6.85a.5.5 0 1 1-.7-.7L4.29 5 3.15 3.85a.5.5 0 1 1 .7-.7L5 4.29l1.15-1.14c.2-.2.5-.2.7 0ZM0 5a5 5 0 1 1 10 0A5 5 0 0 1 0 5Zm5-4a4 4 0 1 0 0 8 4 4 0 0 0 0-8Z"]),PresenceOffline12Regular=(0,utils_createFluentIcon.k)("PresenceOffline12Regular","12",["M8.03 3.97c.3.3.3.77 0 1.06L7.06 6l.97.97a.75.75 0 0 1-1.06 1.06L6 7.06l-.97.97a.75.75 0 0 1-1.06-1.06L4.94 6l-.97-.97a.75.75 0 0 1 1.06-1.06l.97.97.97-.97c.3-.3.77-.3 1.06 0ZM0 6a6 6 0 1 1 12 0A6 6 0 0 1 0 6Zm6-4.5a4.5 4.5 0 1 0 0 9 4.5 4.5 0 0 0 0-9Z"]),PresenceOffline16Regular=(0,utils_createFluentIcon.k)("PresenceOffline16Regular","16",["M10.7 5.3a1 1 0 0 1 0 1.4L9.42 8l1.3 1.3a1 1 0 0 1-1.42 1.4L8 9.42l-1.3 1.3a1 1 0 0 1-1.4-1.42L6.58 8l-1.3-1.3a1 1 0 0 1 1.42-1.4L8 6.58l1.3-1.3a1 1 0 0 1 1.4 0ZM0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm8-6a6 6 0 1 0 0 12A6 6 0 0 0 8 2Z"]),PresenceOffline20Regular=(0,utils_createFluentIcon.k)("PresenceOffline20Regular","20",["M13.7 6.3a1 1 0 0 1 0 1.4L11.42 10l2.3 2.3a1 1 0 0 1-1.42 1.4L10 11.42l-2.3 2.3a1 1 0 0 1-1.4-1.42L8.58 10l-2.3-2.3a1 1 0 0 1 1.42-1.4L10 8.58l2.3-2.3a1 1 0 0 1 1.4 0ZM0 10a10 10 0 1 1 20 0 10 10 0 0 1-20 0Zm10-8a8 8 0 1 0 0 16 8 8 0 0 0 0-16Z"]),PresenceOof10Regular=(0,utils_createFluentIcon.k)("PresenceOof10Regular","10",["M5.35 3.85a.5.5 0 1 0-.7-.7l-1.5 1.5a.5.5 0 0 0 0 .7l1.5 1.5a.5.5 0 1 0 .7-.7L4.7 5.5h1.8a.5.5 0 1 0 0-1H4.7l.65-.65ZM5 0a5 5 0 1 0 0 10A5 5 0 0 0 5 0ZM1 5a4 4 0 1 1 8 0 4 4 0 0 1-8 0Z"]),PresenceOof12Regular=(0,utils_createFluentIcon.k)("PresenceOof12Regular","12",["M6.28 4.53a.75.75 0 0 0-1.06-1.06l-2 2c-.3.3-.3.77 0 1.06l2 2a.75.75 0 0 0 1.06-1.06l-.72-.72h2.69a.75.75 0 1 0 0-1.5h-2.7l.73-.72ZM6 0a6 6 0 1 0 0 12A6 6 0 0 0 6 0ZM1.5 6a4.5 4.5 0 1 1 9 0 4.5 4.5 0 0 1-9 0Z"]),PresenceOof16Regular=(0,utils_createFluentIcon.k)("PresenceOof16Regular","16",["M8.2 6.2a1 1 0 1 0-1.4-1.4L4.3 7.3a1 1 0 0 0 0 1.4l2.5 2.5a1 1 0 0 0 1.4-1.4L7.42 9H11a1 1 0 1 0 0-2H7.41l.8-.8ZM8 0a8 8 0 1 0 0 16A8 8 0 0 0 8 0ZM2 8a6 6 0 1 1 12 0A6 6 0 0 1 2 8Z"]),PresenceOof20Regular=(0,utils_createFluentIcon.k)("PresenceOof20Regular","20",["M10.7 7.7A1 1 0 1 0 9.28 6.3l-3 3a1 1 0 0 0 0 1.41l3 3a1 1 0 1 0 1.42-1.41l-1.3-1.3H13a1 1 0 1 0 0-2H9.4l1.3-1.29ZM10 0a10 10 0 1 0 0 20 10 10 0 0 0 0-20ZM2 10a8 8 0 1 1 16 0 8 8 0 0 1-16 0Z"]),PresenceUnknown10Regular=(0,utils_createFluentIcon.k)("PresenceUnknown10Regular","10",["M5 1a4 4 0 1 0 0 8 4 4 0 0 0 0-8ZM0 5a5 5 0 1 1 10 0A5 5 0 0 1 0 5Z"]),PresenceUnknown12Regular=(0,utils_createFluentIcon.k)("PresenceUnknown12Regular","12",["M6 1.5a4.5 4.5 0 1 0 0 9 4.5 4.5 0 0 0 0-9ZM0 6a6 6 0 1 1 12 0A6 6 0 0 1 0 6Z"]),PresenceUnknown16Regular=(0,utils_createFluentIcon.k)("PresenceUnknown16Regular","16",["M8 2a6 6 0 1 0 0 12A6 6 0 0 0 8 2ZM0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Z"]),PresenceUnknown20Regular=(0,utils_createFluentIcon.k)("PresenceUnknown20Regular","20",["M10 2a8 8 0 1 0 0 16 8 8 0 0 0 0-16ZM0 10a10 10 0 1 1 20 0 10 10 0 0 1-20 0Z"]),presenceAwayFilled={tiny:PresenceAway10Filled,"extra-small":PresenceAway10Filled,small:PresenceAway12Filled,medium:PresenceAway16Filled,large:PresenceAway20Filled,"extra-large":PresenceAway20Filled},presenceAvailableRegular={tiny:PresenceAvailable10Regular,"extra-small":PresenceAvailable10Regular,small:PresenceAvailable12Regular,medium:PresenceAvailable16Regular,large:PresenceAvailable20Regular,"extra-large":PresenceAvailable20Regular},presenceAvailableFilled={tiny:PresenceAvailable10Filled,"extra-small":PresenceAvailable10Filled,small:PresenceAvailable12Filled,medium:PresenceAvailable16Filled,large:PresenceAvailable20Filled,"extra-large":PresenceAvailable20Filled},presenceBlockedRegular={tiny:PresenceBlocked10Regular,"extra-small":PresenceBlocked10Regular,small:PresenceBlocked12Regular,medium:PresenceBlocked16Regular,large:PresenceBlocked20Regular,"extra-large":PresenceBlocked20Regular},presenceBusyFilled={tiny:PresenceBusy10Filled,"extra-small":PresenceBusy10Filled,small:PresenceBusy12Filled,medium:PresenceBusy16Filled,large:PresenceBusy20Filled,"extra-large":PresenceBusy20Filled},presenceDndFilled={tiny:PresenceDnd10Filled,"extra-small":PresenceDnd10Filled,small:PresenceDnd12Filled,medium:PresenceDnd16Filled,large:PresenceDnd20Filled,"extra-large":PresenceDnd20Filled},presenceDndRegular={tiny:PresenceDnd10Regular,"extra-small":PresenceDnd10Regular,small:PresenceDnd12Regular,medium:PresenceDnd16Regular,large:PresenceDnd20Regular,"extra-large":PresenceDnd20Regular},presenceOofRegular={tiny:PresenceOof10Regular,"extra-small":PresenceOof10Regular,small:PresenceOof12Regular,medium:PresenceOof16Regular,large:PresenceOof20Regular,"extra-large":PresenceOof20Regular},presenceOfflineRegular={tiny:PresenceOffline10Regular,"extra-small":PresenceOffline10Regular,small:PresenceOffline12Regular,medium:PresenceOffline16Regular,large:PresenceOffline20Regular,"extra-large":PresenceOffline20Regular},presenceUnknownRegular={tiny:PresenceUnknown10Regular,"extra-small":PresenceUnknown10Regular,small:PresenceUnknown12Regular,medium:PresenceUnknown16Regular,large:PresenceUnknown20Regular,"extra-large":PresenceUnknown20Regular},useBadge_unstable=(props,ref)=>{let{shape="circular",size="medium",iconPosition="before",appearance="filled",color="brand"}=props;return{shape,size,iconPosition,appearance,color,components:{root:"div",icon:"span"},root:slot.Bx((0,getNativeElementProps.n)("div",{ref,...props}),{elementType:"div"}),icon:slot.jt(props.icon,{elementType:"span"})}},iconMap=(status,outOfOffice,size)=>{switch(status){case"available":return outOfOffice?presenceAvailableRegular[size]:presenceAvailableFilled[size];case"away":return outOfOffice?presenceOofRegular[size]:presenceAwayFilled[size];case"blocked":return presenceBlockedRegular[size];case"busy":return outOfOffice?presenceUnknownRegular[size]:presenceBusyFilled[size];case"do-not-disturb":return outOfOffice?presenceDndRegular[size]:presenceDndFilled[size];case"offline":return outOfOffice?presenceOofRegular[size]:presenceOfflineRegular[size];case"out-of-office":return presenceOofRegular[size];case"unknown":return presenceUnknownRegular[size]}},DEFAULT_STRINGS={busy:"busy","out-of-office":"out of office",away:"away",available:"available",offline:"offline","do-not-disturb":"do not disturb",unknown:"unknown",blocked:"blocked"},usePresenceBadge_unstable=(props,ref)=>{let{size="medium",status="available",outOfOffice=!1}=props,statusText=DEFAULT_STRINGS[status],oofText=props.outOfOffice&&"out-of-office"!==props.status?` ${DEFAULT_STRINGS["out-of-office"]}`:"",IconElement=iconMap(status,outOfOffice,size);return{...useBadge_unstable({"aria-label":statusText+oofText,role:"img",...props,size,icon:slot.jt(props.icon,{defaultProps:{children:IconElement?react.createElement(IconElement,null):null},renderByDefault:!0,elementType:"span"})},ref),status,outOfOffice}};var _resetStyles_esm=__webpack_require__("./node_modules/@griffel/react/__resetStyles.esm.js"),_styles_esm=__webpack_require__("./node_modules/@griffel/react/__styles.esm.js"),mergeClasses_esm=__webpack_require__("./node_modules/@griffel/core/mergeClasses.esm.js");let presenceBadgeClassNames={root:"fui-PresenceBadge",icon:"fui-PresenceBadge__icon"},getIsBusy=status=>"busy"===status||"do-not-disturb"===status||"blocked"===status,useRootClassName=(0,_resetStyles_esm.U)("r832ydo",null,[".r832ydo{display:inline-flex;box-sizing:border-box;align-items:center;justify-content:center;border-radius:var(--borderRadiusCircular);background-color:var(--colorNeutralBackground1);padding:1px;background-clip:content-box;}"]),useIconClassName=(0,_resetStyles_esm.U)("r11ag4qr",null,[".r11ag4qr{display:flex;margin:-1px;}"]),useStyles=(0,_styles_esm.s)({statusBusy:{sj55zd:"fvi85wt"},statusAway:{sj55zd:"f14k8a89"},statusAvailable:{sj55zd:"fqa5hgp"},statusOffline:{sj55zd:"f11d4kpn"},statusOutOfOffice:{sj55zd:"fdce8r3"},statusUnknown:{sj55zd:"f11d4kpn"},outOfOffice:{sj55zd:"fr0bkrk"},outOfOfficeAvailable:{sj55zd:"fqa5hgp"},outOfOfficeBusy:{sj55zd:"fvi85wt"},outOfOfficeUnknown:{sj55zd:"f11d4kpn"},tiny:{Bubjx69:"f9ikmtg",a9b677:"f16dn6v3",B2eet1l:"f1w2irj7",B5pe6w7:"fab5kbq",p4uzdd:"f1ms1d91"},large:{Bubjx69:"f9ikmtg",a9b677:"f64fuq3",B5pe6w7:"f1vfi1yj",p4uzdd:"f15s34gz"},extraLarge:{Bubjx69:"f9ikmtg",a9b677:"f1w9dchk",B5pe6w7:"f14efy9b",p4uzdd:"fhipgdu"}},{d:[".fvi85wt{color:var(--colorPaletteRedBackground3);}",".f14k8a89{color:var(--colorPaletteMarigoldBackground3);}",".fqa5hgp{color:var(--colorPaletteLightGreenForeground3);}",".f11d4kpn{color:var(--colorNeutralForeground3);}",".fdce8r3{color:var(--colorPaletteBerryForeground3);}",".fr0bkrk{color:var(--colorNeutralBackground1);}",".f9ikmtg{aspect-ratio:1;}",".f16dn6v3{width:6px;}",".f1w2irj7{background-clip:unset;}",".fab5kbq svg{width:6px!important;}",".f1ms1d91 svg{height:6px!important;}",".f64fuq3{width:20px;}",".f1vfi1yj svg{width:20px!important;}",".f15s34gz svg{height:20px!important;}",".f1w9dchk{width:28px;}",".f14efy9b svg{width:28px!important;}",".fhipgdu svg{height:28px!important;}"]}),usePresenceBadgeStyles_unstable=state=>{let rootClassName=useRootClassName(),iconClassName=useIconClassName(),styles=useStyles(),isBusy=getIsBusy(state.status);return state.root.className=(0,mergeClasses_esm.z)(presenceBadgeClassNames.root,rootClassName,isBusy&&styles.statusBusy,"away"===state.status&&styles.statusAway,"available"===state.status&&styles.statusAvailable,"offline"===state.status&&styles.statusOffline,"out-of-office"===state.status&&styles.statusOutOfOffice,"unknown"===state.status&&styles.statusUnknown,state.outOfOffice&&styles.outOfOffice,state.outOfOffice&&"available"===state.status&&styles.outOfOfficeAvailable,state.outOfOffice&&isBusy&&styles.outOfOfficeBusy,state.outOfOffice&&("out-of-office"===state.status||"away"===state.status||"offline"===state.status)&&styles.statusOutOfOffice,state.outOfOffice&&"unknown"===state.status&&styles.outOfOfficeUnknown,"tiny"===state.size&&styles.tiny,"large"===state.size&&styles.large,"extra-large"===state.size&&styles.extraLarge,state.root.className),state.icon&&(state.icon.className=(0,mergeClasses_esm.z)(presenceBadgeClassNames.icon,iconClassName,state.icon.className)),state};var CustomStyleHooksContext=__webpack_require__("./node_modules/@fluentui/react-shared-contexts/lib/CustomStyleHooksContext/CustomStyleHooksContext.js");let renderBadge_unstable=state=>((0,assertSlots.a)(state),(0,jsx_runtime.BX)(state.root,{children:["before"===state.iconPosition&&state.icon&&(0,jsx_runtime.tZ)(state.icon,{}),state.root.children,"after"===state.iconPosition&&state.icon&&(0,jsx_runtime.tZ)(state.icon,{})]})),PresenceBadge=react.forwardRef((props,ref)=>{let state=usePresenceBadge_unstable(props,ref);return usePresenceBadgeStyles_unstable(state),(0,CustomStyleHooksContext.oj)("usePresenceBadgeStyles_unstable")(state),renderBadge_unstable(state)});PresenceBadge.displayName="PresenceBadge";var ProviderContext=__webpack_require__("./node_modules/@fluentui/react-shared-contexts/lib/ProviderContext/ProviderContext.js"),AvatarContext=__webpack_require__("./node_modules/@fluentui/react-avatar/lib/contexts/AvatarContext.js");let useAvatar_DEFAULT_STRINGS={active:"active",inactive:"inactive"},useAvatar_unstable=(props,ref)=>{let activeAriaLabelElement,icon;let{dir}=(0,ProviderContext.O)(),{shape:contextShape,size:contextSize}=(0,AvatarContext.F)(),{name,size=null!=contextSize?contextSize:32,shape=null!=contextShape?contextShape:"circular",active="unset",activeAppearance="ring",idForColor}=props,{color="neutral"}=props;if("colorful"===color){var _ref;color=avatarColors[getHashCode(null!==(_ref=null!=idForColor?idForColor:name)&&void 0!==_ref?_ref:"")%avatarColors.length]}let baseId=(0,useId.Me)("avatar-"),root=slot.Bx((0,getNativeElementProps.n)("span",{role:"img",id:baseId,...props,ref},["name"]),{elementType:"span"}),[imageHidden,setImageHidden]=react.useState(void 0),image=slot.jt(props.image,{defaultProps:{alt:"",role:"presentation","aria-hidden":!0,hidden:imageHidden},elementType:"img"});(null==image?void 0:image.src)||(image=void 0),image&&(image.onError=(0,mergeCallbacks.E)(image.onError,()=>setImageHidden(!0)),image.onLoad=(0,mergeCallbacks.E)(image.onLoad,()=>setImageHidden(void 0)));let initials=slot.jt(props.initials,{renderByDefault:!0,defaultProps:{children:getInitials(name,"rtl"===dir,{firstInitialOnly:size<=16}),id:baseId+"__initials"},elementType:"span"});(null==initials?void 0:initials.children)||(initials=void 0),initials||image&&!imageHidden||(icon=slot.jt(props.icon,{renderByDefault:!0,defaultProps:{children:react.createElement(PersonRegular,null),"aria-hidden":!0},elementType:"span"}));let badge=slot.jt(props.badge,{defaultProps:{size:getBadgeSize(size),id:baseId+"__badge"},elementType:PresenceBadge});if(!root["aria-label"]&&!root["aria-labelledby"]&&(name?(root["aria-label"]=name,badge&&(root["aria-labelledby"]=root.id+" "+badge.id)):initials&&(root["aria-labelledby"]=initials.id+(badge?" "+badge.id:"")),"active"===active||"inactive"===active)){let activeText=useAvatar_DEFAULT_STRINGS[active];if(root["aria-labelledby"]){let activeId=baseId+"__active";root["aria-labelledby"]+=" "+activeId,activeAriaLabelElement=react.createElement("span",{hidden:!0,id:activeId},activeText)}else root["aria-label"]&&(root["aria-label"]+=" "+activeText)}return{size,shape,active,activeAppearance,activeAriaLabelElement,color,components:{root:"span",initials:"span",icon:"span",image:"img",badge:PresenceBadge},root,initials,icon,image,badge}},getBadgeSize=size=>size>=96?"extra-large":size>=64?"large":size>=56?"medium":size>=40?"small":size>=28?"extra-small":"tiny",avatarColors=["dark-red","cranberry","red","pumpkin","peach","marigold","gold","brass","brown","forest","seafoam","dark-green","light-teal","teal","steel","blue","royal-blue","cornflower","navy","lavender","purple","grape","lilac","pink","magenta","plum","beige","mink","platinum","anchor"],getHashCode=str=>{let hashCode=0;for(let len=str.length-1;len>=0;len--){let ch=str.charCodeAt(len),shift=len%8;hashCode^=(ch<<shift)+(ch>>8-shift)}return hashCode},avatarClassNames={root:"fui-Avatar",image:"fui-Avatar__image",initials:"fui-Avatar__initials",icon:"fui-Avatar__icon",badge:"fui-Avatar__badge"},useAvatarStyles_styles_useRootClassName=(0,_resetStyles_esm.U)("r81b29z","r1aatmv",{r:[".r81b29z{display:inline-block;flex-shrink:0;position:relative;vertical-align:middle;border-radius:var(--borderRadiusCircular);font-family:var(--fontFamilyBase);font-weight:var(--fontWeightSemibold);font-size:var(--fontSizeBase300);width:32px;height:32px;}",".r81b29z::before,.r81b29z::after{position:absolute;top:0;left:0;bottom:0;right:0;z-index:-1;margin:calc(-2 * var(--fui-Avatar-ringWidth, 0px));border-radius:inherit;transition-property:margin,opacity;transition-timing-function:var(--curveEasyEaseMax),var(--curveLinear);transition-duration:var(--durationUltraSlow),var(--durationSlower);}",".r81b29z::before{border-style:solid;border-width:var(--fui-Avatar-ringWidth);}",".r1aatmv{display:inline-block;flex-shrink:0;position:relative;vertical-align:middle;border-radius:var(--borderRadiusCircular);font-family:var(--fontFamilyBase);font-weight:var(--fontWeightSemibold);font-size:var(--fontSizeBase300);width:32px;height:32px;}",".r1aatmv::before,.r1aatmv::after{position:absolute;top:0;right:0;bottom:0;left:0;z-index:-1;margin:calc(-2 * var(--fui-Avatar-ringWidth, 0px));border-radius:inherit;transition-property:margin,opacity;transition-timing-function:var(--curveEasyEaseMax),var(--curveLinear);transition-duration:var(--durationUltraSlow),var(--durationSlower);}",".r1aatmv::before{border-style:solid;border-width:var(--fui-Avatar-ringWidth);}"],s:["@media screen and (prefers-reduced-motion: reduce){.r81b29z::before,.r81b29z::after{transition-duration:0.01ms;}}","@media screen and (prefers-reduced-motion: reduce){.r1aatmv::before,.r1aatmv::after{transition-duration:0.01ms;}}"]}),useImageClassName=(0,_resetStyles_esm.U)("r136dc0n","rjly0nl",[".r136dc0n{position:absolute;top:0;left:0;width:100%;height:100%;border-radius:inherit;object-fit:cover;vertical-align:top;}",".rjly0nl{position:absolute;top:0;right:0;width:100%;height:100%;border-radius:inherit;object-fit:cover;vertical-align:top;}"]),useIconInitialsClassName=(0,_resetStyles_esm.U)("rip04v","r31uzil",[".rip04v{position:absolute;box-sizing:border-box;top:0;left:0;width:100%;height:100%;line-height:1;border:var(--strokeWidthThin) solid var(--colorTransparentStroke);display:flex;align-items:center;justify-content:center;vertical-align:center;text-align:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border-radius:inherit;}",".r31uzil{position:absolute;box-sizing:border-box;top:0;right:0;width:100%;height:100%;line-height:1;border:var(--strokeWidthThin) solid var(--colorTransparentStroke);display:flex;align-items:center;justify-content:center;vertical-align:center;text-align:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border-radius:inherit;}"]),useAvatarStyles_styles_useStyles=(0,_styles_esm.s)({textCaption2Strong:{Be2twd7:"f13mqy1h"},textCaption1Strong:{Be2twd7:"fy9rknc"},textSubtitle2:{Be2twd7:"fod5ikn"},textSubtitle1:{Be2twd7:"f1pp30po"},textTitle3:{Be2twd7:"f1x0m3f5"},squareSmall:{Bbmb7ep:["f1g3puop","fi2rrw2"],Beyfa6y:["fi2rrw2","f1g3puop"],B7oj6ja:["f1rstyi9","f1s4nn1u"],Btl43ni:["f1s4nn1u","f1rstyi9"]},squareMedium:{Bbmb7ep:["f1aa9q02","f16jpd5f"],Beyfa6y:["f16jpd5f","f1aa9q02"],B7oj6ja:["f1jar5jt","fyu767a"],Btl43ni:["fyu767a","f1jar5jt"]},squareLarge:{Bbmb7ep:["f1ldthgs","frrelxk"],Beyfa6y:["frrelxk","f1ldthgs"],B7oj6ja:["fobrfso","ffisxpw"],Btl43ni:["ffisxpw","fobrfso"]},squareXLarge:{Bbmb7ep:["fnivh3a","fc7yr5o"],Beyfa6y:["fc7yr5o","fnivh3a"],B7oj6ja:["f1el4m67","f8yange"],Btl43ni:["f8yange","f1el4m67"]},activeOrInactive:{Bz10aip:"ftfx35i",Bmy1vo4:"fv0atk9",B3o57yi:"f1iry5bo",Bkqvd7p:"f15n41j8",Hwfdqs:"f1onx1g3"},ring:{Ftih45:"f1wl9k8s"},ringBadgeCutout:{f4a502:"fp2gujx"},ringThick:{of393c:"fq1w1vq"},ringThicker:{of393c:"fzg6ace"},ringThickest:{of393c:"f1nu8p71"},shadow:{Bsft5z2:"f13zj6fq"},shadow4:{Be6vj1x:"fcjn15l"},shadow8:{Be6vj1x:"f1tm8t9f"},shadow16:{Be6vj1x:"f1a1aohj"},shadow28:{Be6vj1x:"fond6v5"},inactive:{abs64n:"fp25eh",Bz10aip:"f1clczzi",Bkqvd7p:"f1l3s34x",Bucmhp4:"f1f5ar78",b2tv09:["fqxtap0","fhjukvy"],Bfgortx:"f1qj1nzo",Bnvr3x9:["fhjukvy","fqxtap0"],b6ubon:"fw457kn",Bqinb2h:"f1wmllxl"},badge:{qhf8xq:"f1euv43f",B5kzvoi:"f1yab3r1",j35jbq:["f1e31b4d","f1vgc2s3"]},badgeCutout:{btxmck:"f1eugkqs"},badgeAlign:{Dnlfbu:["f1tlnv9o","f1y9kyih"]},tiny:{Bdjeniz:"f1uwoubl",niu6jh:"fid048z"},"extra-small":{Bdjeniz:"f13ar0e0",niu6jh:"fid048z"},small:{Bdjeniz:"fwwuruf",niu6jh:"fid048z"},medium:{Bdjeniz:"f1af27q5",niu6jh:"fid048z"},large:{Bdjeniz:"f18yy57a",niu6jh:"f924bxt"},"extra-large":{Bdjeniz:"f2jg042",niu6jh:"f924bxt"},icon12:{Be2twd7:"f1ugzwwg"},icon16:{Be2twd7:"f4ybsrx"},icon20:{Be2twd7:"fe5j1ua"},icon24:{Be2twd7:"f1rt2boy"},icon28:{Be2twd7:"f24l1pt"},icon32:{Be2twd7:"ffl51b"},icon48:{Be2twd7:"f18m8u13"}},{d:[".f13mqy1h{font-size:var(--fontSizeBase100);}",".fy9rknc{font-size:var(--fontSizeBase200);}",".fod5ikn{font-size:var(--fontSizeBase400);}",".f1pp30po{font-size:var(--fontSizeBase500);}",".f1x0m3f5{font-size:var(--fontSizeBase600);}",".f1g3puop{border-bottom-right-radius:var(--borderRadiusSmall);}",".fi2rrw2{border-bottom-left-radius:var(--borderRadiusSmall);}",".f1rstyi9{border-top-right-radius:var(--borderRadiusSmall);}",".f1s4nn1u{border-top-left-radius:var(--borderRadiusSmall);}",".f1aa9q02{border-bottom-right-radius:var(--borderRadiusMedium);}",".f16jpd5f{border-bottom-left-radius:var(--borderRadiusMedium);}",".f1jar5jt{border-top-right-radius:var(--borderRadiusMedium);}",".fyu767a{border-top-left-radius:var(--borderRadiusMedium);}",".f1ldthgs{border-bottom-right-radius:var(--borderRadiusLarge);}",".frrelxk{border-bottom-left-radius:var(--borderRadiusLarge);}",".fobrfso{border-top-right-radius:var(--borderRadiusLarge);}",".ffisxpw{border-top-left-radius:var(--borderRadiusLarge);}",".fnivh3a{border-bottom-right-radius:var(--borderRadiusXLarge);}",".fc7yr5o{border-bottom-left-radius:var(--borderRadiusXLarge);}",".f1el4m67{border-top-right-radius:var(--borderRadiusXLarge);}",".f8yange{border-top-left-radius:var(--borderRadiusXLarge);}",".ftfx35i{transform:perspective(1px);}",".fv0atk9{transition-property:transform,opacity;}",".f1iry5bo{transition-duration:var(--durationUltraSlow),var(--durationFaster);}",".f15n41j8{transition-timing-function:var(--curveEasyEaseMax),var(--curveLinear);}",'.f1wl9k8s::before{content:"";}',".fp2gujx::before{-webkit-mask-image:radial-gradient(circle at bottom calc(var(--fui-Avatar-badgeRadius) + 2 * var(--fui-Avatar-ringWidth)) var(--fui-Avatar-badgeAlign) calc(var(--fui-Avatar-badgeRadius) + 2 * var(--fui-Avatar-ringWidth)), transparent calc(var(--fui-Avatar-badgeRadius) + var(--fui-Avatar-badgeGap) - 0.25px), white calc(var(--fui-Avatar-badgeRadius) + var(--fui-Avatar-badgeGap) + 0.25px));mask-image:radial-gradient(circle at bottom calc(var(--fui-Avatar-badgeRadius) + 2 * var(--fui-Avatar-ringWidth)) var(--fui-Avatar-badgeAlign) calc(var(--fui-Avatar-badgeRadius) + 2 * var(--fui-Avatar-ringWidth)), transparent calc(var(--fui-Avatar-badgeRadius) + var(--fui-Avatar-badgeGap) - 0.25px), white calc(var(--fui-Avatar-badgeRadius) + var(--fui-Avatar-badgeGap) + 0.25px));}",".fq1w1vq{--fui-Avatar-ringWidth:var(--strokeWidthThick);}",".fzg6ace{--fui-Avatar-ringWidth:var(--strokeWidthThicker);}",".f1nu8p71{--fui-Avatar-ringWidth:var(--strokeWidthThickest);}",'.f13zj6fq::after{content:"";}',".fcjn15l::after{box-shadow:var(--shadow4);}",".f1tm8t9f::after{box-shadow:var(--shadow8);}",".f1a1aohj::after{box-shadow:var(--shadow16);}",".fond6v5::after{box-shadow:var(--shadow28);}",".fp25eh{opacity:0.8;}",".f1clczzi{transform:scale(0.875);}",".f1l3s34x{transition-timing-function:var(--curveDecelerateMin),var(--curveLinear);}",".f1f5ar78::before,.f1f5ar78::after{margin-top:0;}",".fqxtap0::before,.fqxtap0::after{margin-right:0;}",".fhjukvy::before,.fhjukvy::after{margin-left:0;}",".f1qj1nzo::before,.f1qj1nzo::after{margin-bottom:0;}",".fw457kn::before,.fw457kn::after{opacity:0;}",".f1wmllxl::before,.f1wmllxl::after{transition-timing-function:var(--curveDecelerateMin),var(--curveLinear);}",".f1euv43f{position:absolute;}",".f1yab3r1{bottom:0;}",".f1e31b4d{right:0;}",".f1vgc2s3{left:0;}",".f1eugkqs{-webkit-mask-image:radial-gradient(circle at bottom var(--fui-Avatar-badgeRadius) var(--fui-Avatar-badgeAlign) var(--fui-Avatar-badgeRadius), transparent calc(var(--fui-Avatar-badgeRadius) + var(--fui-Avatar-badgeGap) - 0.25px), white calc(var(--fui-Avatar-badgeRadius) + var(--fui-Avatar-badgeGap) + 0.25px));mask-image:radial-gradient(circle at bottom var(--fui-Avatar-badgeRadius) var(--fui-Avatar-badgeAlign) var(--fui-Avatar-badgeRadius), transparent calc(var(--fui-Avatar-badgeRadius) + var(--fui-Avatar-badgeGap) - 0.25px), white calc(var(--fui-Avatar-badgeRadius) + var(--fui-Avatar-badgeGap) + 0.25px));}",".f1tlnv9o{--fui-Avatar-badgeAlign:right;}",".f1y9kyih{--fui-Avatar-badgeAlign:left;}",".f1uwoubl{--fui-Avatar-badgeRadius:3px;}",".fid048z{--fui-Avatar-badgeGap:var(--strokeWidthThin);}",".f13ar0e0{--fui-Avatar-badgeRadius:5px;}",".fwwuruf{--fui-Avatar-badgeRadius:6px;}",".f1af27q5{--fui-Avatar-badgeRadius:8px;}",".f18yy57a{--fui-Avatar-badgeRadius:10px;}",".f924bxt{--fui-Avatar-badgeGap:var(--strokeWidthThick);}",".f2jg042{--fui-Avatar-badgeRadius:14px;}",".f1ugzwwg{font-size:12px;}",".f4ybsrx{font-size:16px;}",".fe5j1ua{font-size:20px;}",".f1rt2boy{font-size:24px;}",".f24l1pt{font-size:28px;}",".ffl51b{font-size:32px;}",".f18m8u13{font-size:48px;}"],m:[["@media screen and (prefers-reduced-motion: reduce){.f1onx1g3{transition-duration:0.01ms;}}",{m:"screen and (prefers-reduced-motion: reduce)"}]]}),useSizeStyles=(0,_styles_esm.s)({16:{a9b677:"fjw5fx7",Bqenvij:"fd461yt"},20:{a9b677:"f64fuq3",Bqenvij:"fjamq6b"},24:{a9b677:"fq4mcun",Bqenvij:"frvgh55"},28:{a9b677:"f1w9dchk",Bqenvij:"fxldao9"},32:{a9b677:"f1szoe96",Bqenvij:"f1d2rq10"},36:{a9b677:"fpdz1er",Bqenvij:"f8ljn23"},40:{a9b677:"feqmc2u",Bqenvij:"fbhnoac"},48:{a9b677:"f124akge",Bqenvij:"ff2sm71"},56:{a9b677:"f1u66zr1",Bqenvij:"fzki0ko"},64:{a9b677:"fa9ln6p",Bqenvij:"f16k9i2m"},72:{a9b677:"fhcae8x",Bqenvij:"f1shusfg"},96:{a9b677:"f1kyr2gn",Bqenvij:"fypu0ge"},120:{a9b677:"fwfqyga",Bqenvij:"fjr5b71"},128:{a9b677:"f1iksgmy",Bqenvij:"fele2au"}},{d:[".fjw5fx7{width:16px;}",".fd461yt{height:16px;}",".f64fuq3{width:20px;}",".fjamq6b{height:20px;}",".fq4mcun{width:24px;}",".frvgh55{height:24px;}",".f1w9dchk{width:28px;}",".fxldao9{height:28px;}",".f1szoe96{width:32px;}",".f1d2rq10{height:32px;}",".fpdz1er{width:36px;}",".f8ljn23{height:36px;}",".feqmc2u{width:40px;}",".fbhnoac{height:40px;}",".f124akge{width:48px;}",".ff2sm71{height:48px;}",".f1u66zr1{width:56px;}",".fzki0ko{height:56px;}",".fa9ln6p{width:64px;}",".f16k9i2m{height:64px;}",".fhcae8x{width:72px;}",".f1shusfg{height:72px;}",".f1kyr2gn{width:96px;}",".fypu0ge{height:96px;}",".fwfqyga{width:120px;}",".fjr5b71{height:120px;}",".f1iksgmy{width:128px;}",".fele2au{height:128px;}"]}),useColorStyles=(0,_styles_esm.s)({neutral:{sj55zd:"f11d4kpn",De3pzq:"f18f03hv"},brand:{sj55zd:"fonrgv7",De3pzq:"f1blnnmj"},"dark-red":{sj55zd:"fqjd1y1",De3pzq:"f1vq2oo4"},cranberry:{sj55zd:"fg9gses",De3pzq:"f1lwxszt"},red:{sj55zd:"f23f7i0",De3pzq:"f1q9qhfq"},pumpkin:{sj55zd:"fjnan08",De3pzq:"fz91bi3"},peach:{sj55zd:"fknu15p",De3pzq:"f1b9nr51"},marigold:{sj55zd:"f9603vw",De3pzq:"f3z4w6d"},gold:{sj55zd:"fmq0uwp",De3pzq:"fg50kya"},brass:{sj55zd:"f28g5vo",De3pzq:"f4w2gd0"},brown:{sj55zd:"ftl572b",De3pzq:"f14wu1f4"},forest:{sj55zd:"f1gymlvd",De3pzq:"f19ut4y6"},seafoam:{sj55zd:"fnnb6wn",De3pzq:"f1n057jc"},"dark-green":{sj55zd:"ff58qw8",De3pzq:"f11t05wk"},"light-teal":{sj55zd:"f1up9qbj",De3pzq:"f42feg1"},teal:{sj55zd:"f135dsb4",De3pzq:"f6hvv1p"},steel:{sj55zd:"f151dlcp",De3pzq:"f1lnp8zf"},blue:{sj55zd:"f1rjv50u",De3pzq:"f1ggcpy6"},"royal-blue":{sj55zd:"f1emykk5",De3pzq:"f12rj61f"},cornflower:{sj55zd:"fqsigj7",De3pzq:"f8k7hur"},navy:{sj55zd:"f1nj97xi",De3pzq:"f19gw0ux"},lavender:{sj55zd:"fwctg0i",De3pzq:"ff379vm"},purple:{sj55zd:"fjrsgpu",De3pzq:"f1mzf1e1"},grape:{sj55zd:"f1fiiydq",De3pzq:"f1o4k8oy"},lilac:{sj55zd:"f1res9jt",De3pzq:"f1x6mz1o"},pink:{sj55zd:"fv3fbbi",De3pzq:"fydlv6t"},magenta:{sj55zd:"f1f1fwnz",De3pzq:"f4xb6j5"},plum:{sj55zd:"f8ptl6j",De3pzq:"fqo8e26"},beige:{sj55zd:"f1ntv3ld",De3pzq:"f101elhj"},mink:{sj55zd:"f1fscmp",De3pzq:"f13g8o5c"},platinum:{sj55zd:"f1dr00v2",De3pzq:"fkh7blw"},anchor:{sj55zd:"f1f3ti53",De3pzq:"fu4yj0j"}},{d:[".f11d4kpn{color:var(--colorNeutralForeground3);}",".f18f03hv{background-color:var(--colorNeutralBackground6);}",".fonrgv7{color:var(--colorNeutralForegroundStaticInverted);}",".f1blnnmj{background-color:var(--colorBrandBackgroundStatic);}",".fqjd1y1{color:var(--colorPaletteDarkRedForeground2);}",".f1vq2oo4{background-color:var(--colorPaletteDarkRedBackground2);}",".fg9gses{color:var(--colorPaletteCranberryForeground2);}",".f1lwxszt{background-color:var(--colorPaletteCranberryBackground2);}",".f23f7i0{color:var(--colorPaletteRedForeground2);}",".f1q9qhfq{background-color:var(--colorPaletteRedBackground2);}",".fjnan08{color:var(--colorPalettePumpkinForeground2);}",".fz91bi3{background-color:var(--colorPalettePumpkinBackground2);}",".fknu15p{color:var(--colorPalettePeachForeground2);}",".f1b9nr51{background-color:var(--colorPalettePeachBackground2);}",".f9603vw{color:var(--colorPaletteMarigoldForeground2);}",".f3z4w6d{background-color:var(--colorPaletteMarigoldBackground2);}",".fmq0uwp{color:var(--colorPaletteGoldForeground2);}",".fg50kya{background-color:var(--colorPaletteGoldBackground2);}",".f28g5vo{color:var(--colorPaletteBrassForeground2);}",".f4w2gd0{background-color:var(--colorPaletteBrassBackground2);}",".ftl572b{color:var(--colorPaletteBrownForeground2);}",".f14wu1f4{background-color:var(--colorPaletteBrownBackground2);}",".f1gymlvd{color:var(--colorPaletteForestForeground2);}",".f19ut4y6{background-color:var(--colorPaletteForestBackground2);}",".fnnb6wn{color:var(--colorPaletteSeafoamForeground2);}",".f1n057jc{background-color:var(--colorPaletteSeafoamBackground2);}",".ff58qw8{color:var(--colorPaletteDarkGreenForeground2);}",".f11t05wk{background-color:var(--colorPaletteDarkGreenBackground2);}",".f1up9qbj{color:var(--colorPaletteLightTealForeground2);}",".f42feg1{background-color:var(--colorPaletteLightTealBackground2);}",".f135dsb4{color:var(--colorPaletteTealForeground2);}",".f6hvv1p{background-color:var(--colorPaletteTealBackground2);}",".f151dlcp{color:var(--colorPaletteSteelForeground2);}",".f1lnp8zf{background-color:var(--colorPaletteSteelBackground2);}",".f1rjv50u{color:var(--colorPaletteBlueForeground2);}",".f1ggcpy6{background-color:var(--colorPaletteBlueBackground2);}",".f1emykk5{color:var(--colorPaletteRoyalBlueForeground2);}",".f12rj61f{background-color:var(--colorPaletteRoyalBlueBackground2);}",".fqsigj7{color:var(--colorPaletteCornflowerForeground2);}",".f8k7hur{background-color:var(--colorPaletteCornflowerBackground2);}",".f1nj97xi{color:var(--colorPaletteNavyForeground2);}",".f19gw0ux{background-color:var(--colorPaletteNavyBackground2);}",".fwctg0i{color:var(--colorPaletteLavenderForeground2);}",".ff379vm{background-color:var(--colorPaletteLavenderBackground2);}",".fjrsgpu{color:var(--colorPalettePurpleForeground2);}",".f1mzf1e1{background-color:var(--colorPalettePurpleBackground2);}",".f1fiiydq{color:var(--colorPaletteGrapeForeground2);}",".f1o4k8oy{background-color:var(--colorPaletteGrapeBackground2);}",".f1res9jt{color:var(--colorPaletteLilacForeground2);}",".f1x6mz1o{background-color:var(--colorPaletteLilacBackground2);}",".fv3fbbi{color:var(--colorPalettePinkForeground2);}",".fydlv6t{background-color:var(--colorPalettePinkBackground2);}",".f1f1fwnz{color:var(--colorPaletteMagentaForeground2);}",".f4xb6j5{background-color:var(--colorPaletteMagentaBackground2);}",".f8ptl6j{color:var(--colorPalettePlumForeground2);}",".fqo8e26{background-color:var(--colorPalettePlumBackground2);}",".f1ntv3ld{color:var(--colorPaletteBeigeForeground2);}",".f101elhj{background-color:var(--colorPaletteBeigeBackground2);}",".f1fscmp{color:var(--colorPaletteMinkForeground2);}",".f13g8o5c{background-color:var(--colorPaletteMinkBackground2);}",".f1dr00v2{color:var(--colorPalettePlatinumForeground2);}",".fkh7blw{background-color:var(--colorPalettePlatinumBackground2);}",".f1f3ti53{color:var(--colorPaletteAnchorForeground2);}",".fu4yj0j{background-color:var(--colorPaletteAnchorBackground2);}"]}),useRingColorStyles=(0,_styles_esm.s)({neutral:{Bic5iru:"f1uuiafn"},brand:{Bic5iru:"f1uuiafn"},"dark-red":{Bic5iru:"f1t2x9on"},cranberry:{Bic5iru:"f1pvshc9"},red:{Bic5iru:"f1ectbk9"},pumpkin:{Bic5iru:"fvzpl0b"},peach:{Bic5iru:"fwj2kd7"},marigold:{Bic5iru:"fr120vy"},gold:{Bic5iru:"f8xmmar"},brass:{Bic5iru:"f1hbety2"},brown:{Bic5iru:"f1vg3s4g"},forest:{Bic5iru:"f1m3olm5"},seafoam:{Bic5iru:"f17xiqtr"},"dark-green":{Bic5iru:"fx32vyh"},"light-teal":{Bic5iru:"f1mkihwv"},teal:{Bic5iru:"fecnooh"},steel:{Bic5iru:"f15hfgzm"},blue:{Bic5iru:"fqproka"},"royal-blue":{Bic5iru:"f17v2w59"},cornflower:{Bic5iru:"fp0q1mo"},navy:{Bic5iru:"f1nlym55"},lavender:{Bic5iru:"f62vk8h"},purple:{Bic5iru:"f15zl69q"},grape:{Bic5iru:"f53w4j7"},lilac:{Bic5iru:"fu2771t"},pink:{Bic5iru:"fzflscs"},magenta:{Bic5iru:"fb6rmqc"},plum:{Bic5iru:"f1a4gm5b"},beige:{Bic5iru:"f1qpf9z1"},mink:{Bic5iru:"f1l7or83"},platinum:{Bic5iru:"fzrj0iu"},anchor:{Bic5iru:"f8oz6wf"}},{d:[".f1uuiafn::before{color:var(--colorBrandStroke1);}",".f1t2x9on::before{color:var(--colorPaletteDarkRedBorderActive);}",".f1pvshc9::before{color:var(--colorPaletteCranberryBorderActive);}",".f1ectbk9::before{color:var(--colorPaletteRedBorderActive);}",".fvzpl0b::before{color:var(--colorPalettePumpkinBorderActive);}",".fwj2kd7::before{color:var(--colorPalettePeachBorderActive);}",".fr120vy::before{color:var(--colorPaletteMarigoldBorderActive);}",".f8xmmar::before{color:var(--colorPaletteGoldBorderActive);}",".f1hbety2::before{color:var(--colorPaletteBrassBorderActive);}",".f1vg3s4g::before{color:var(--colorPaletteBrownBorderActive);}",".f1m3olm5::before{color:var(--colorPaletteForestBorderActive);}",".f17xiqtr::before{color:var(--colorPaletteSeafoamBorderActive);}",".fx32vyh::before{color:var(--colorPaletteDarkGreenBorderActive);}",".f1mkihwv::before{color:var(--colorPaletteLightTealBorderActive);}",".fecnooh::before{color:var(--colorPaletteTealBorderActive);}",".f15hfgzm::before{color:var(--colorPaletteSteelBorderActive);}",".fqproka::before{color:var(--colorPaletteBlueBorderActive);}",".f17v2w59::before{color:var(--colorPaletteRoyalBlueBorderActive);}",".fp0q1mo::before{color:var(--colorPaletteCornflowerBorderActive);}",".f1nlym55::before{color:var(--colorPaletteNavyBorderActive);}",".f62vk8h::before{color:var(--colorPaletteLavenderBorderActive);}",".f15zl69q::before{color:var(--colorPalettePurpleBorderActive);}",".f53w4j7::before{color:var(--colorPaletteGrapeBorderActive);}",".fu2771t::before{color:var(--colorPaletteLilacBorderActive);}",".fzflscs::before{color:var(--colorPalettePinkBorderActive);}",".fb6rmqc::before{color:var(--colorPaletteMagentaBorderActive);}",".f1a4gm5b::before{color:var(--colorPalettePlumBorderActive);}",".f1qpf9z1::before{color:var(--colorPaletteBeigeBorderActive);}",".f1l7or83::before{color:var(--colorPaletteMinkBorderActive);}",".fzrj0iu::before{color:var(--colorPalettePlatinumBorderActive);}",".f8oz6wf::before{color:var(--colorPaletteAnchorBorderActive);}"]}),useAvatarStyles_unstable=state=>{let{size,shape,active,activeAppearance,color}=state,rootClassName=useAvatarStyles_styles_useRootClassName(),imageClassName=useImageClassName(),iconInitialsClassName=useIconInitialsClassName(),styles=useAvatarStyles_styles_useStyles(),sizeStyles=useSizeStyles(),colorStyles=useColorStyles(),ringColorStyles=useRingColorStyles(),rootClasses=[rootClassName,32!==size&&sizeStyles[size]];if(state.badge&&rootClasses.push(styles.badgeAlign,styles[state.badge.size||"medium"]),size<=24?rootClasses.push(styles.textCaption2Strong):size<=28?rootClasses.push(styles.textCaption1Strong):size<=40||(size<=56?rootClasses.push(styles.textSubtitle2):size<=96?rootClasses.push(styles.textSubtitle1):rootClasses.push(styles.textTitle3)),"square"===shape&&(size<=24?rootClasses.push(styles.squareSmall):size<=48?rootClasses.push(styles.squareMedium):size<=72?rootClasses.push(styles.squareLarge):rootClasses.push(styles.squareXLarge)),("active"===active||"inactive"===active)&&(rootClasses.push(styles.activeOrInactive),("ring"===activeAppearance||"ring-shadow"===activeAppearance)&&(rootClasses.push(styles.ring,ringColorStyles[color]),state.badge&&rootClasses.push(styles.ringBadgeCutout),size<=48?rootClasses.push(styles.ringThick):size<=64?rootClasses.push(styles.ringThicker):rootClasses.push(styles.ringThickest)),("shadow"===activeAppearance||"ring-shadow"===activeAppearance)&&(rootClasses.push(styles.shadow),size<=28?rootClasses.push(styles.shadow4):size<=48?rootClasses.push(styles.shadow8):size<=64?rootClasses.push(styles.shadow16):rootClasses.push(styles.shadow28)),"inactive"===active&&rootClasses.push(styles.inactive)),state.root.className=(0,mergeClasses_esm.z)(avatarClassNames.root,...rootClasses,state.root.className),state.badge&&(state.badge.className=(0,mergeClasses_esm.z)(avatarClassNames.badge,styles.badge,state.badge.className)),state.image&&(state.image.className=(0,mergeClasses_esm.z)(avatarClassNames.image,imageClassName,colorStyles[color],state.badge&&styles.badgeCutout,state.image.className)),state.initials&&(state.initials.className=(0,mergeClasses_esm.z)(avatarClassNames.initials,iconInitialsClassName,colorStyles[color],state.badge&&styles.badgeCutout,state.initials.className)),state.icon){let iconSizeClass;iconSizeClass=size<=16?styles.icon12:size<=24?styles.icon16:size<=40?styles.icon20:size<=48?styles.icon24:size<=56?styles.icon28:size<=72?styles.icon32:styles.icon48,state.icon.className=(0,mergeClasses_esm.z)(avatarClassNames.icon,iconInitialsClassName,iconSizeClass,colorStyles[color],state.badge&&styles.badgeCutout,state.icon.className)}return state},Avatar=react.forwardRef((props,ref)=>{let state=useAvatar_unstable(props,ref);return useAvatarStyles_unstable(state),(0,CustomStyleHooksContext.oj)("useAvatarStyles_unstable")(state),renderAvatar_unstable(state)});Avatar.displayName="Avatar"},"./node_modules/@fluentui/react-avatar/lib/contexts/AvatarContext.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{F:()=>useAvatarContext,S:()=>AvatarContextProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");let avatarContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(void 0),avatarContextDefaultValue={},AvatarContextProvider=avatarContext.Provider,useAvatarContext=()=>{var _React_useContext;return null!==(_React_useContext=react__WEBPACK_IMPORTED_MODULE_0__.useContext(avatarContext))&&void 0!==_React_useContext?_React_useContext:avatarContextDefaultValue}},"./node_modules/@fluentui/react-checkbox/lib/components/Checkbox/Checkbox.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{X:()=>Checkbox});var react=__webpack_require__("./node_modules/react/index.js"),useFieldControlProps=__webpack_require__("./node_modules/@fluentui/react-field/lib/contexts/useFieldControlProps.js");function isFactoryDispatch(newState){return"function"==typeof newState}let useControllableState=options=>{let[internalState,setInternalState]=react.useState(()=>void 0===options.defaultState?options.initialState:isInitializer(options.defaultState)?options.defaultState():options.defaultState),stateValueRef=react.useRef(options.state);react.useEffect(()=>{stateValueRef.current=options.state},[options.state]);let setControlledState=react.useCallback(newState=>{isFactoryDispatch(newState)&&newState(stateValueRef.current)},[]);return useIsControlled(options.state)?[options.state,setControlledState]:[internalState,setInternalState]};function isInitializer(value){return"function"==typeof value}let useIsControlled=controlledValue=>{let[isControlled]=react.useState(()=>void 0!==controlledValue);return isControlled};var getNativeElementProps=__webpack_require__("./node_modules/@fluentui/react-utilities/lib/utils/getNativeElementProps.js"),useId=__webpack_require__("./node_modules/@fluentui/react-utilities/lib/hooks/useId.js"),slot=__webpack_require__("./node_modules/@fluentui/react-utilities/lib/compose/slot.js"),useIsomorphicLayoutEffect=__webpack_require__("./node_modules/@fluentui/react-utilities/lib/hooks/useIsomorphicLayoutEffect.js");let useEventCallback=fn=>{let callbackRef=react.useRef(()=>{throw Error("Cannot call an event handler while rendering")});return(0,useIsomorphicLayoutEffect.L)(()=>{callbackRef.current=fn},[fn]),react.useCallback((...args)=>(0,callbackRef.current)(...args),[callbackRef])};var useMergedRefs=__webpack_require__("./node_modules/@fluentui/react-utilities/lib/hooks/useMergedRefs.js"),chunk_1=__webpack_require__("./node_modules/@fluentui/react-icons/lib/icons/chunk-1.js"),utils_createFluentIcon=__webpack_require__("./node_modules/@fluentui/react-icons/lib/utils/createFluentIcon.js");let Square12Filled=(0,utils_createFluentIcon.k)("Square12Filled","12",["M2 4c0-1.1.9-2 2-2h4a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V4Z"]),Square16Filled=(0,utils_createFluentIcon.k)("Square16Filled","16",["M2 4.5A2.5 2.5 0 0 1 4.5 2h7A2.5 2.5 0 0 1 14 4.5v7a2.5 2.5 0 0 1-2.5 2.5h-7A2.5 2.5 0 0 1 2 11.5v-7Z"]),Checkmark12Filled=(0,utils_createFluentIcon.k)("Checkmark12Filled","12",["M9.76 3.2c.3.29.32.76.04 1.06l-4.25 4.5a.75.75 0 0 1-1.08.02L2.22 6.53a.75.75 0 0 1 1.06-1.06l1.7 1.7L8.7 3.24a.75.75 0 0 1 1.06-.04Z"]),Checkmark16Filled=(0,utils_createFluentIcon.k)("Checkmark16Filled","16",["M14.05 3.49c.28.3.27.77-.04 1.06l-7.93 7.47A.85.85 0 0 1 4.9 12L2.22 9.28a.75.75 0 1 1 1.06-1.06l2.24 2.27 7.47-7.04a.75.75 0 0 1 1.06.04Z"]);var Label=__webpack_require__("./node_modules/@fluentui/react-label/lib/components/Label/Label.js"),useFocusWithin=__webpack_require__("./node_modules/@fluentui/react-tabster/lib/hooks/useFocusWithin.js");let useCheckbox_unstable=(props,ref)=>{let checkmarkIcon;let{disabled=!1,required,shape="square",size="medium",labelPosition="after",onChange}=props=(0,useFieldControlProps.k)(props,{supportsLabelFor:!0,supportsRequired:!0}),[checked,setChecked]=useControllableState({defaultState:props.defaultChecked,state:props.checked,initialState:!1}),nativeProps=(0,getNativeElementProps.$)({props,primarySlotTagName:"input",excludedPropNames:["checked","defaultChecked","size","onChange"]}),mixed="mixed"===checked,id=(0,useId.Me)("checkbox-",nativeProps.primary.id);mixed?checkmarkIcon="circular"===shape?react.createElement(chunk_1.MW6,null):"large"===size?react.createElement(Square16Filled,null):react.createElement(Square12Filled,null):checked&&(checkmarkIcon="large"===size?react.createElement(Checkmark16Filled,null):react.createElement(Checkmark12Filled,null));let state={shape,checked,disabled,size,labelPosition,components:{root:"span",input:"input",indicator:"div",label:Label._},root:slot.Bx(props.root,{defaultProps:{ref:(0,useFocusWithin.L)(),...nativeProps.root},elementType:"span"}),input:slot.Bx(props.input,{defaultProps:{type:"checkbox",id,ref,checked:!0===checked,...nativeProps.primary},elementType:"input"}),label:slot.jt(props.label,{defaultProps:{htmlFor:id,disabled,required,size:"medium"},elementType:Label._}),indicator:slot.jt(props.indicator,{renderByDefault:!0,defaultProps:{"aria-hidden":!0,children:checkmarkIcon},elementType:"div"})};state.input.onChange=useEventCallback(ev=>{let val=ev.currentTarget.indeterminate?"mixed":ev.currentTarget.checked;null==onChange||onChange(ev,{checked:val}),setChecked(val)});let inputRef=(0,useMergedRefs.r)(state.input.ref);return state.input.ref=inputRef,(0,useIsomorphicLayoutEffect.L)(()=>{inputRef.current&&(inputRef.current.indeterminate=mixed)},[inputRef,mixed]),state};var jsx_runtime=__webpack_require__("./node_modules/@fluentui/react-jsx-runtime/lib/jsx-runtime.js"),assertSlots=__webpack_require__("./node_modules/@fluentui/react-utilities/lib/compose/assertSlots.js");let renderCheckbox_unstable=state=>((0,assertSlots.a)(state),(0,jsx_runtime.BX)(state.root,{children:[(0,jsx_runtime.tZ)(state.input,{}),"before"===state.labelPosition&&state.label&&(0,jsx_runtime.tZ)(state.label,{}),(0,jsx_runtime.tZ)(state.indicator,{}),"after"===state.labelPosition&&state.label&&(0,jsx_runtime.tZ)(state.label,{})]}));var _resetStyles_esm=__webpack_require__("./node_modules/@griffel/react/__resetStyles.esm.js"),_styles_esm=__webpack_require__("./node_modules/@griffel/react/__styles.esm.js"),mergeClasses_esm=__webpack_require__("./node_modules/@griffel/core/mergeClasses.esm.js");let checkboxClassNames={root:"fui-Checkbox",label:"fui-Checkbox__label",input:"fui-Checkbox__input",indicator:"fui-Checkbox__indicator"},useRootBaseClassName=(0,_resetStyles_esm.U)("r1qaeuiq","rm0k3vm",[".r1qaeuiq{position:relative;display:inline-flex;cursor:pointer;vertical-align:middle;color:var(--colorNeutralForeground3);}",".r1qaeuiq:focus{outline-style:none;}",".r1qaeuiq:focus-visible{outline-style:none;}",".r1qaeuiq[data-fui-focus-within]:focus-within{border-top-color:transparent;border-right-color:transparent;border-bottom-color:transparent;border-left-color:transparent;}",'.r1qaeuiq[data-fui-focus-within]:focus-within::after{content:"";position:absolute;pointer-events:none;z-index:1;border-top-style:solid;border-right-style:solid;border-bottom-style:solid;border-left-style:solid;border-top-width:2px;border-right-width:2px;border-bottom-width:2px;border-left-width:2px;border-bottom-right-radius:var(--borderRadiusMedium);border-bottom-left-radius:var(--borderRadiusMedium);border-top-right-radius:var(--borderRadiusMedium);border-top-left-radius:var(--borderRadiusMedium);border-top-color:var(--colorStrokeFocus2);border-right-color:var(--colorStrokeFocus2);border-bottom-color:var(--colorStrokeFocus2);border-left-color:var(--colorStrokeFocus2);top:calc(2px * -1);right:calc(2px * -1);bottom:calc(2px * -1);left:calc(2px * -1);}',".rm0k3vm{position:relative;display:inline-flex;cursor:pointer;vertical-align:middle;color:var(--colorNeutralForeground3);}",".rm0k3vm:focus{outline-style:none;}",".rm0k3vm:focus-visible{outline-style:none;}",".rm0k3vm[data-fui-focus-within]:focus-within{border-top-color:transparent;border-left-color:transparent;border-bottom-color:transparent;border-right-color:transparent;}",'.rm0k3vm[data-fui-focus-within]:focus-within::after{content:"";position:absolute;pointer-events:none;z-index:1;border-top-style:solid;border-left-style:solid;border-bottom-style:solid;border-right-style:solid;border-top-width:2px;border-left-width:2px;border-bottom-width:2px;border-right-width:2px;border-bottom-left-radius:var(--borderRadiusMedium);border-bottom-right-radius:var(--borderRadiusMedium);border-top-left-radius:var(--borderRadiusMedium);border-top-right-radius:var(--borderRadiusMedium);border-top-color:var(--colorStrokeFocus2);border-left-color:var(--colorStrokeFocus2);border-bottom-color:var(--colorStrokeFocus2);border-right-color:var(--colorStrokeFocus2);top:calc(2px * -1);left:calc(2px * -1);bottom:calc(2px * -1);right:calc(2px * -1);}']),useRootStyles=(0,_styles_esm.s)({unchecked:{Bi91k9c:"f3p8bqa",ns3gzv:"ffqb913",n5iecx:["f42z0vd","f1j37kh1"],Bq2lx2j:"f10v6cc1",Bv7p3up:["f1j37kh1","f42z0vd"],lj723h:"f1r2dosr",B6u2zzw:"f1oarbgq",Be5wueo:["fo8gord","f18ci1af"],Cgwcxn:"fviagcr",Btnvhkj:["f18ci1af","fo8gord"]},checked:{sj55zd:"f19n0e5",Bvs3sgl:"f5opsb9",opw9sb:"fpaw01r",C5wppx:"f1gqj827",B32epof:["fub94a2","f13mj44e"],Bphahg7:"f1qq5vh1",Jctw66:["f13mj44e","fub94a2"],Bq0zqd5:"f5x9vvn",ns3gzv:"fub8hyy",n5iecx:["fffzknn","f172bh4s"],Bq2lx2j:"f6tipb1",Bv7p3up:["f172bh4s","fffzknn"],Bgesukf:"f8adco2",B6u2zzw:"f1lepnt8",Be5wueo:["f80ygm0","frrkusm"],Cgwcxn:"f1gg953z",Btnvhkj:["frrkusm","f80ygm0"]},mixed:{sj55zd:"f19n0e5",C5wppx:"f12fgbth",B32epof:["f171e6fm","fttsnhr"],Bphahg7:"f1fyk1ks",Jctw66:["fttsnhr","f171e6fm"],opw9sb:"fvvg2h8",ns3gzv:"f1nlwys0",n5iecx:["f1bhstg2","f6tsdgz"],Bq2lx2j:"fqxbw9v",Bv7p3up:["f6tsdgz","f1bhstg2"],cc1l3s:"f1r38qqt",B6u2zzw:"f12q3i2l",Be5wueo:["f9g1hxu","f1o4ic5t"],Cgwcxn:"f1c3thm1",Btnvhkj:["f1o4ic5t","f9g1hxu"],km5s60:"ffd07pq"},disabled:{Bceei9c:"f158kwzp",sj55zd:"f1s2aq7o",C5wppx:"fgiuqeu",B32epof:["f1q4sfkt","f71co73"],Bphahg7:"f1u7lsiy",Jctw66:["f71co73","f1q4sfkt"],opw9sb:"f3vxa14",Bbusuzp:"f1dcs8yz",B7bxudy:"f1lmtjkn"}},{h:[".f3p8bqa:hover{color:var(--colorNeutralForeground2);}",".ffqb913:hover>.fui-Checkbox__indicator{border-top-color:var(--colorNeutralStrokeAccessibleHover);}",".f42z0vd:hover>.fui-Checkbox__indicator{border-right-color:var(--colorNeutralStrokeAccessibleHover);}",".f1j37kh1:hover>.fui-Checkbox__indicator{border-left-color:var(--colorNeutralStrokeAccessibleHover);}",".f10v6cc1:hover>.fui-Checkbox__indicator{border-bottom-color:var(--colorNeutralStrokeAccessibleHover);}",".f5x9vvn:hover>.fui-Checkbox__indicator{background-color:var(--colorCompoundBrandBackgroundHover);}",".fub8hyy:hover>.fui-Checkbox__indicator{border-top-color:var(--colorCompoundBrandBackgroundHover);}",".fffzknn:hover>.fui-Checkbox__indicator{border-right-color:var(--colorCompoundBrandBackgroundHover);}",".f172bh4s:hover>.fui-Checkbox__indicator{border-left-color:var(--colorCompoundBrandBackgroundHover);}",".f6tipb1:hover>.fui-Checkbox__indicator{border-bottom-color:var(--colorCompoundBrandBackgroundHover);}",".f1nlwys0:hover>.fui-Checkbox__indicator{border-top-color:var(--colorCompoundBrandStrokeHover);}",".f1bhstg2:hover>.fui-Checkbox__indicator{border-right-color:var(--colorCompoundBrandStrokeHover);}",".f6tsdgz:hover>.fui-Checkbox__indicator{border-left-color:var(--colorCompoundBrandStrokeHover);}",".fqxbw9v:hover>.fui-Checkbox__indicator{border-bottom-color:var(--colorCompoundBrandStrokeHover);}",".f1r38qqt:hover>.fui-Checkbox__indicator{color:var(--colorCompoundBrandForeground1Hover);}"],a:[".f1r2dosr:active{color:var(--colorNeutralForeground1);}",".f1oarbgq:active>.fui-Checkbox__indicator{border-top-color:var(--colorNeutralStrokeAccessiblePressed);}",".fo8gord:active>.fui-Checkbox__indicator{border-right-color:var(--colorNeutralStrokeAccessiblePressed);}",".f18ci1af:active>.fui-Checkbox__indicator{border-left-color:var(--colorNeutralStrokeAccessiblePressed);}",".fviagcr:active>.fui-Checkbox__indicator{border-bottom-color:var(--colorNeutralStrokeAccessiblePressed);}",".f8adco2:active>.fui-Checkbox__indicator{background-color:var(--colorCompoundBrandBackgroundPressed);}",".f1lepnt8:active>.fui-Checkbox__indicator{border-top-color:var(--colorCompoundBrandBackgroundPressed);}",".f80ygm0:active>.fui-Checkbox__indicator{border-right-color:var(--colorCompoundBrandBackgroundPressed);}",".frrkusm:active>.fui-Checkbox__indicator{border-left-color:var(--colorCompoundBrandBackgroundPressed);}",".f1gg953z:active>.fui-Checkbox__indicator{border-bottom-color:var(--colorCompoundBrandBackgroundPressed);}",".f12q3i2l:active>.fui-Checkbox__indicator{border-top-color:var(--colorCompoundBrandStrokePressed);}",".f9g1hxu:active>.fui-Checkbox__indicator{border-right-color:var(--colorCompoundBrandStrokePressed);}",".f1o4ic5t:active>.fui-Checkbox__indicator{border-left-color:var(--colorCompoundBrandStrokePressed);}",".f1c3thm1:active>.fui-Checkbox__indicator{border-bottom-color:var(--colorCompoundBrandStrokePressed);}",".ffd07pq:active>.fui-Checkbox__indicator{color:var(--colorCompoundBrandForeground1Pressed);}"],d:[".f19n0e5{color:var(--colorNeutralForeground1);}",".f5opsb9>.fui-Checkbox__indicator{background-color:var(--colorCompoundBrandBackground);}",".fpaw01r>.fui-Checkbox__indicator{color:var(--colorNeutralForegroundInverted);}",".f1gqj827>.fui-Checkbox__indicator{border-top-color:var(--colorCompoundBrandBackground);}",".fub94a2>.fui-Checkbox__indicator{border-right-color:var(--colorCompoundBrandBackground);}",".f13mj44e>.fui-Checkbox__indicator{border-left-color:var(--colorCompoundBrandBackground);}",".f1qq5vh1>.fui-Checkbox__indicator{border-bottom-color:var(--colorCompoundBrandBackground);}",".f12fgbth>.fui-Checkbox__indicator{border-top-color:var(--colorCompoundBrandStroke);}",".f171e6fm>.fui-Checkbox__indicator{border-right-color:var(--colorCompoundBrandStroke);}",".fttsnhr>.fui-Checkbox__indicator{border-left-color:var(--colorCompoundBrandStroke);}",".f1fyk1ks>.fui-Checkbox__indicator{border-bottom-color:var(--colorCompoundBrandStroke);}",".fvvg2h8>.fui-Checkbox__indicator{color:var(--colorCompoundBrandForeground1);}",".f158kwzp{cursor:default;}",".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}",".fgiuqeu>.fui-Checkbox__indicator{border-top-color:var(--colorNeutralStrokeDisabled);}",".f1q4sfkt>.fui-Checkbox__indicator{border-right-color:var(--colorNeutralStrokeDisabled);}",".f71co73>.fui-Checkbox__indicator{border-left-color:var(--colorNeutralStrokeDisabled);}",".f1u7lsiy>.fui-Checkbox__indicator{border-bottom-color:var(--colorNeutralStrokeDisabled);}",".f3vxa14>.fui-Checkbox__indicator{color:var(--colorNeutralForegroundDisabled);}"],m:[["@media (forced-colors: active){.f1dcs8yz{color:GrayText;}}",{m:"(forced-colors: active)"}],["@media (forced-colors: active){.f1lmtjkn>.fui-Checkbox__indicator{color:GrayText;}}",{m:"(forced-colors: active)"}]]}),useInputBaseClassName=(0,_resetStyles_esm.U)("ruo9svu",null,[".ruo9svu{box-sizing:border-box;cursor:inherit;height:100%;margin:0;opacity:0;position:absolute;top:0;width:calc(16px + 2 * var(--spacingHorizontalS));}"]),useInputStyles=(0,_styles_esm.s)({before:{j35jbq:["f1e31b4d","f1vgc2s3"]},after:{oyh7mz:["f1vgc2s3","f1e31b4d"]},large:{a9b677:"f1mq5jt6"}},{d:[".f1e31b4d{right:0;}",".f1vgc2s3{left:0;}",".f1mq5jt6{width:calc(20px + 2 * var(--spacingHorizontalS));}"]}),useIndicatorBaseClassName=(0,_resetStyles_esm.U)("rrh91wr",null,[".rrh91wr{align-self:flex-start;box-sizing:border-box;flex-shrink:0;display:flex;align-items:center;justify-content:center;overflow:hidden;border:var(--strokeWidthThin) solid var(--colorNeutralStrokeAccessible);border-radius:var(--borderRadiusSmall);margin:var(--spacingVerticalS) var(--spacingHorizontalS);fill:currentColor;pointer-events:none;font-size:12px;height:16px;width:16px;}"]),useIndicatorStyles=(0,_styles_esm.s)({large:{Be2twd7:"f4ybsrx",Bqenvij:"fjamq6b",a9b677:"f64fuq3"},circular:{Bbmb7ep:["f8fbkgy","f1nfllo7"],Beyfa6y:["f1nfllo7","f8fbkgy"],B7oj6ja:["f1djnp8u","f1s8kh49"],Btl43ni:["f1s8kh49","f1djnp8u"]}},{d:[".f4ybsrx{font-size:16px;}",".fjamq6b{height:20px;}",".f64fuq3{width:20px;}",".f8fbkgy{border-bottom-right-radius:var(--borderRadiusCircular);}",".f1nfllo7{border-bottom-left-radius:var(--borderRadiusCircular);}",".f1djnp8u{border-top-right-radius:var(--borderRadiusCircular);}",".f1s8kh49{border-top-left-radius:var(--borderRadiusCircular);}"]}),useLabelStyles=(0,_styles_esm.s)({base:{qb2dma:"f7nlbp4",sj55zd:"f1ym3bx4",Bceei9c:"fpo1scq",z8tnut:"f1kwiid1",z189sj:["f1vdfbxk","f1f5gg8d"],Byoj8tv:"f5b47ha",uwmqm3:["f1f5gg8d","f1vdfbxk"]},before:{z189sj:["f7x41pl","fruq291"]},after:{uwmqm3:["fruq291","f7x41pl"]},medium:{B6of3ja:"fjzwpt6",jrapky:"fh6j2fo"},large:{B6of3ja:"f1xlvstr",jrapky:"f49ad5g"}},{d:[".f7nlbp4{align-self:center;}",".f1ym3bx4{color:inherit;}",".fpo1scq{cursor:inherit;}",".f1kwiid1{padding-top:var(--spacingVerticalS);}",".f1vdfbxk{padding-right:var(--spacingHorizontalS);}",".f1f5gg8d{padding-left:var(--spacingHorizontalS);}",".f5b47ha{padding-bottom:var(--spacingVerticalS);}",".f7x41pl{padding-right:var(--spacingHorizontalXS);}",".fruq291{padding-left:var(--spacingHorizontalXS);}",".fjzwpt6{margin-top:calc((16px - var(--lineHeightBase300)) / 2);}",".fh6j2fo{margin-bottom:calc((16px - var(--lineHeightBase300)) / 2);}",".f1xlvstr{margin-top:calc((20px - var(--lineHeightBase300)) / 2);}",".f49ad5g{margin-bottom:calc((20px - var(--lineHeightBase300)) / 2);}"]}),useCheckboxStyles_unstable=state=>{let{checked,disabled,labelPosition,shape,size}=state,rootBaseClassName=useRootBaseClassName(),rootStyles=useRootStyles();state.root.className=(0,mergeClasses_esm.z)(checkboxClassNames.root,rootBaseClassName,disabled?rootStyles.disabled:"mixed"===checked?rootStyles.mixed:checked?rootStyles.checked:rootStyles.unchecked,state.root.className);let inputBaseClassName=useInputBaseClassName(),inputStyles=useInputStyles();state.input.className=(0,mergeClasses_esm.z)(checkboxClassNames.input,inputBaseClassName,"large"===size&&inputStyles.large,inputStyles[labelPosition],state.input.className);let indicatorBaseClassName=useIndicatorBaseClassName(),indicatorStyles=useIndicatorStyles();state.indicator&&(state.indicator.className=(0,mergeClasses_esm.z)(checkboxClassNames.indicator,indicatorBaseClassName,"large"===size&&indicatorStyles.large,"circular"===shape&&indicatorStyles.circular,state.indicator.className));let labelStyles=useLabelStyles();return state.label&&(state.label.className=(0,mergeClasses_esm.z)(checkboxClassNames.label,labelStyles.base,labelStyles[size],labelStyles[labelPosition],state.label.className)),state};var CustomStyleHooksContext=__webpack_require__("./node_modules/@fluentui/react-shared-contexts/lib/CustomStyleHooksContext/CustomStyleHooksContext.js");let Checkbox=react.forwardRef((props,ref)=>{let state=useCheckbox_unstable(props,ref);return useCheckboxStyles_unstable(state),(0,CustomStyleHooksContext.oj)("useCheckboxStyles_unstable")(state),renderCheckbox_unstable(state)});Checkbox.displayName="Checkbox"},"./node_modules/@fluentui/react-field/lib/contexts/useFieldControlProps.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{k:()=>useFieldControlProps_unstable});var react=__webpack_require__("./node_modules/react/index.js");let FieldContext=react.createContext(void 0);FieldContext.Provider;let useFieldContext_unstable=()=>react.useContext(FieldContext);function useFieldControlProps_unstable(props,options){return getFieldControlProps(useFieldContext_unstable(),props,options)}function getFieldControlProps(context,props,options){var _props,_id,_props1,_arialabelledby,_,_props2,_ariainvalid,_1,_props3,_required,_props4,_ariarequired,_2,_props5,_size;if(!context)return props;props={...props};let{generatedControlId,hintId,labelFor,labelId,required,validationMessageId,validationState}=context;return generatedControlId&&(null!==(_id=(_props=props).id)&&void 0!==_id||(_props.id=generatedControlId)),!labelId||(null==options?void 0:options.supportsLabelFor)&&labelFor===props.id||(null===(_=(_props1=props)[_arialabelledby="aria-labelledby"])||void 0===_)&&(_props1[_arialabelledby]=labelId),(validationMessageId||hintId)&&(props["aria-describedby"]=[validationMessageId,hintId,null==props?void 0:props["aria-describedby"]].filter(Boolean).join(" ")),"error"===validationState&&(null!==(_1=(_props2=props)[_ariainvalid="aria-invalid"])&&void 0!==_1||(_props2[_ariainvalid]=!0)),required&&((null==options?void 0:options.supportsRequired)?null!==(_required=(_props3=props).required)&&void 0!==_required||(_props3.required=!0):null!==(_2=(_props4=props)[_ariarequired="aria-required"])&&void 0!==_2||(_props4[_ariarequired]=!0)),(null==options?void 0:options.supportsSize)&&(null!==(_size=(_props5=props).size)&&void 0!==_size||(_props5.size=context.size)),props}},"./node_modules/@fluentui/react-icons/lib/contexts/IconDirectionContext.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{_:()=>IconDirectionContextProvider,a:()=>useIconContext});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");let IconDirectionContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(void 0),IconDirectionContextDefaultValue={},IconDirectionContextProvider=IconDirectionContext.Provider,useIconContext=()=>react__WEBPACK_IMPORTED_MODULE_0__.useContext(IconDirectionContext)?react__WEBPACK_IMPORTED_MODULE_0__.useContext(IconDirectionContext):IconDirectionContextDefaultValue},"./node_modules/@fluentui/react-icons/lib/icons/chunk-1.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{MW6:()=>CircleFilled});let CircleFilled=(0,__webpack_require__("./node_modules/@fluentui/react-icons/lib/utils/createFluentIcon.js").k)("CircleFilled","1em",["M10 2a8 8 0 1 0 0 16 8 8 0 0 0 0-16Z"])},"./node_modules/@fluentui/react-icons/lib/utils/createFluentIcon.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{k:()=>createFluentIcon});var react=__webpack_require__("./node_modules/react/index.js"),IconDirectionContext=__webpack_require__("./node_modules/@fluentui/react-icons/lib/contexts/IconDirectionContext.js"),_styles_esm=__webpack_require__("./node_modules/@griffel/react/__styles.esm.js"),mergeClasses_esm=__webpack_require__("./node_modules/@griffel/core/mergeClasses.esm.js");let useRootStyles=(0,_styles_esm.s)({root:{mc9l5x:"f1w7gpdv",Bg96gwp:"fez10in",ycbfsm:"fg4l7m0"},rtl:{Bz10aip:"f13rod7r"}},{d:[".f1w7gpdv{display:inline;}",".fez10in{line-height:0;}",".f13rod7r{-webkit-transform:scaleX(-1);-moz-transform:scaleX(-1);-ms-transform:scaleX(-1);transform:scaleX(-1);}"],t:["@media (forced-colors: active){.fg4l7m0{forced-color-adjust:auto;}}"]}),useIconState=(props,options)=>{let{title,primaryFill="currentColor",...rest}=props,state={...rest,title:void 0,fill:primaryFill},styles=useRootStyles(),iconContext=(0,IconDirectionContext.a)();return state.className=(0,mergeClasses_esm.z)(styles.root,(null==options?void 0:options.flipInRtl)&&(null==iconContext?void 0:iconContext.textDirection)==="rtl"&&styles.rtl,state.className),title&&(state["aria-label"]=title),state["aria-label"]||state["aria-labelledby"]?state.role="img":state["aria-hidden"]=!0,state},createFluentIcon=(displayName,width,paths,options)=>{let viewBoxWidth="1em"===width?"20":width,Icon=react.forwardRef((props,ref)=>{let state={...useIconState(props,{flipInRtl:null==options?void 0:options.flipInRtl}),ref,width,height:width,viewBox:`0 0 ${viewBoxWidth} ${viewBoxWidth}`,xmlns:"http://www.w3.org/2000/svg"};return react.createElement("svg",state,...paths.map(d=>react.createElement("path",{d,fill:state.fill})))});return Icon.displayName=displayName,Icon}},"./node_modules/@fluentui/react-jsx-runtime/lib/jsx-runtime.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{tZ:()=>jsx,BX:()=>jsxs});var constants=__webpack_require__("./node_modules/@fluentui/react-utilities/lib/compose/constants.js");function isSlot(element){return!!(null==element?void 0:element.hasOwnProperty(constants.v))}var react=__webpack_require__("./node_modules/react/index.js");function createCompatSlotComponent(type,props){return{...props,[constants.v]:type}}let createJSX=(runtime,slotRuntime)=>(type,overrideProps,key,source,self1)=>isSlot(overrideProps)?slotRuntime(createCompatSlotComponent(type,overrideProps),null,key,source,self1):isSlot(type)?slotRuntime(type,overrideProps,key,source,self1):runtime(type,overrideProps,key,source,self1);function getMetadataFromSlotComponent(type){let{as,[constants.v]:baseElementType,[constants.A]:renderFunction,...propsWithoutMetadata}=type,elementType="string"==typeof baseElementType&&null!=as?as:baseElementType;return"string"!=typeof elementType&&as&&(propsWithoutMetadata.as=as),{elementType,props:propsWithoutMetadata,renderFunction}}var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),jsx_runtime_namespaceObject=__webpack_require__.t(jsx_runtime,2);let jsx=createJSX(jsx_runtime_namespaceObject.jsx,(type,overrideProps,key)=>{let{elementType,renderFunction,props:slotProps}=getMetadataFromSlotComponent(type),props={...slotProps,...overrideProps};return renderFunction?jsx_runtime_namespaceObject.jsx(react.Fragment,{children:renderFunction(elementType,props)},key):jsx_runtime_namespaceObject.jsx(elementType,props,key)}),jsxs=createJSX(jsx_runtime_namespaceObject.jsxs,(type,overrideProps,key)=>{let{elementType,renderFunction,props:slotProps}=getMetadataFromSlotComponent(type),props={...slotProps,...overrideProps};return renderFunction?jsx_runtime_namespaceObject.jsx(react.Fragment,{children:renderFunction(elementType,{...props,children:jsx_runtime_namespaceObject.jsxs(react.Fragment,{children:props.children},void 0)})},key):jsx_runtime_namespaceObject.jsxs(elementType,props,key)})},"./node_modules/@fluentui/react-label/lib/components/Label/Label.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{_:()=>Label});var react=__webpack_require__("./node_modules/react/index.js"),slot=__webpack_require__("./node_modules/@fluentui/react-utilities/lib/compose/slot.js"),getNativeElementProps=__webpack_require__("./node_modules/@fluentui/react-utilities/lib/utils/getNativeElementProps.js");let useLabel_unstable=(props,ref)=>{let{disabled=!1,required=!1,weight="regular",size="medium"}=props;return{disabled,required:slot.jt(!0===required?"*":required||void 0,{defaultProps:{"aria-hidden":"true"},elementType:"span"}),weight,size,components:{root:"label",required:"span"},root:slot.Bx((0,getNativeElementProps.n)("label",{ref,...props}),{elementType:"label"})}};var jsx_runtime=__webpack_require__("./node_modules/@fluentui/react-jsx-runtime/lib/jsx-runtime.js"),assertSlots=__webpack_require__("./node_modules/@fluentui/react-utilities/lib/compose/assertSlots.js");let renderLabel_unstable=state=>((0,assertSlots.a)(state),(0,jsx_runtime.BX)(state.root,{children:[state.root.children,state.required&&(0,jsx_runtime.tZ)(state.required,{})]}));var _styles_esm=__webpack_require__("./node_modules/@griffel/react/__styles.esm.js"),mergeClasses_esm=__webpack_require__("./node_modules/@griffel/core/mergeClasses.esm.js");let labelClassNames={root:"fui-Label",required:"fui-Label__required"},useStyles=(0,_styles_esm.s)({root:{Bahqtrf:"fk6fouc",sj55zd:"f19n0e5"},disabled:{sj55zd:"f1s2aq7o"},required:{sj55zd:"f1whyuy6",uwmqm3:["fycuoez","f8wuabp"]},requiredDisabled:{sj55zd:"f1s2aq7o"},small:{Be2twd7:"fy9rknc",Bg96gwp:"fwrc4pm"},medium:{Be2twd7:"fkhj508",Bg96gwp:"f1i3iumi"},large:{Be2twd7:"fod5ikn",Bg96gwp:"faaz57k",Bhrd7zp:"fl43uef"},semibold:{Bhrd7zp:"fl43uef"}},{d:[".fk6fouc{font-family:var(--fontFamilyBase);}",".f19n0e5{color:var(--colorNeutralForeground1);}",".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}",".f1whyuy6{color:var(--colorPaletteRedForeground3);}",".fycuoez{padding-left:4px;}",".f8wuabp{padding-right:4px;}",".fy9rknc{font-size:var(--fontSizeBase200);}",".fwrc4pm{line-height:var(--lineHeightBase200);}",".fkhj508{font-size:var(--fontSizeBase300);}",".f1i3iumi{line-height:var(--lineHeightBase300);}",".fod5ikn{font-size:var(--fontSizeBase400);}",".faaz57k{line-height:var(--lineHeightBase400);}",".fl43uef{font-weight:var(--fontWeightSemibold);}"]}),useLabelStyles_unstable=state=>{let styles=useStyles();return state.root.className=(0,mergeClasses_esm.z)(labelClassNames.root,styles.root,state.disabled&&styles.disabled,styles[state.size],"semibold"===state.weight&&styles.semibold,state.root.className),state.required&&(state.required.className=(0,mergeClasses_esm.z)(labelClassNames.required,styles.required,state.disabled&&styles.requiredDisabled,state.required.className)),state};var CustomStyleHooksContext=__webpack_require__("./node_modules/@fluentui/react-shared-contexts/lib/CustomStyleHooksContext/CustomStyleHooksContext.js");let Label=react.forwardRef((props,ref)=>{let state=useLabel_unstable(props,ref);return useLabelStyles_unstable(state),(0,CustomStyleHooksContext.oj)("useLabelStyles_unstable")(state),renderLabel_unstable(state)});Label.displayName="Label"},"./node_modules/@fluentui/react-provider/lib/components/FluentProvider/FluentProvider.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{r:()=>FluentProvider});var react=__webpack_require__("./node_modules/react/index.js"),react_namespaceObject=__webpack_require__.t(react,2),jsx_runtime=__webpack_require__("./node_modules/@fluentui/react-jsx-runtime/lib/jsx-runtime.js"),assertSlots=__webpack_require__("./node_modules/@fluentui/react-utilities/lib/compose/assertSlots.js"),canUseDOM=__webpack_require__("./node_modules/@fluentui/react-utilities/lib/ssr/canUseDOM.js"),TextDirectionContext_esm=__webpack_require__("./node_modules/@griffel/react/TextDirectionContext.esm.js"),ProviderContext=__webpack_require__("./node_modules/@fluentui/react-shared-contexts/lib/ProviderContext/ProviderContext.js");let ThemeContext=react.createContext(void 0),ThemeProvider=ThemeContext.Provider,ThemeClassNameProvider=react.createContext(void 0).Provider;var CustomStyleHooksContext=__webpack_require__("./node_modules/@fluentui/react-shared-contexts/lib/CustomStyleHooksContext/CustomStyleHooksContext.js");let TooltipVisibilityProvider=react.createContext(void 0).Provider,OverridesContext=react.createContext(void 0),OverridesProvider=OverridesContext.Provider;function useOverrides(){var _React_useContext;return null!==(_React_useContext=react.useContext(OverridesContext))&&void 0!==_React_useContext?_React_useContext:{}}var IconDirectionContext=__webpack_require__("./node_modules/@fluentui/react-icons/lib/contexts/IconDirectionContext.js");let renderFluentProvider_unstable=(state,contextValues)=>((0,assertSlots.a)(state),(0,jsx_runtime.tZ)(ProviderContext.z,{value:contextValues.provider,children:(0,jsx_runtime.tZ)(ThemeProvider,{value:contextValues.theme,children:(0,jsx_runtime.tZ)(ThemeClassNameProvider,{value:contextValues.themeClassName,children:(0,jsx_runtime.tZ)(CustomStyleHooksContext.UF,{value:contextValues.customStyleHooks_unstable,children:(0,jsx_runtime.tZ)(TooltipVisibilityProvider,{value:contextValues.tooltip,children:(0,jsx_runtime.tZ)(TextDirectionContext_esm.n,{dir:contextValues.textDirection,children:(0,jsx_runtime.tZ)(IconDirectionContext._,{value:contextValues.iconDirection,children:(0,jsx_runtime.tZ)(OverridesProvider,{value:contextValues.overrides_unstable,children:(0,jsx_runtime.BX)(state.root,{children:[(0,canUseDOM.N)()?null:(0,jsx_runtime.tZ)("style",{dangerouslySetInnerHTML:{__html:state.serverStyleProps.cssRule},...state.serverStyleProps.attributes}),state.root.children]})})})})})})})})}));var RendererContext_esm=__webpack_require__("./node_modules/@griffel/react/RendererContext.esm.js");function isHTMLElement(element,options){var _typedElement_ownerDocument,_options_constructorName;return!!((null==element?void 0:null===(_typedElement_ownerDocument=element.ownerDocument)||void 0===_typedElement_ownerDocument?void 0:_typedElement_ownerDocument.defaultView)&&element instanceof element.ownerDocument.defaultView[null!==(_options_constructorName=null==options?void 0:options.constructorName)&&void 0!==_options_constructorName?_options_constructorName:"HTMLElement"])}var keyborg_esm=__webpack_require__("./node_modules/keyborg/dist/keyborg.esm.js"),constants=__webpack_require__("./node_modules/@fluentui/react-tabster/lib/focus/constants.js");function applyFocusVisiblePolyfill(scope,targetWindow){if(alreadyInScope(scope))return()=>void 0;let state={current:void 0},keyborg=(0,keyborg_esm.Vm)(targetWindow);keyborg.subscribe(isNavigatingWithKeyboard=>{!isNavigatingWithKeyboard&&state.current&&(removeFocusVisibleClass(state.current),state.current=void 0)});let keyborgListener=e=>{state.current&&(removeFocusVisibleClass(state.current),state.current=void 0),keyborg.isNavigatingWithKeyboard()&&isHTMLElement(e.target)&&e.target&&(state.current=e.target,applyFocusVisibleClass(state.current))},blurListener=e=>{(!e.relatedTarget||isHTMLElement(e.relatedTarget)&&!scope.contains(e.relatedTarget))&&state.current&&(removeFocusVisibleClass(state.current),state.current=void 0)};return scope.addEventListener(keyborg_esm.PW,keyborgListener),scope.addEventListener("focusout",blurListener),scope.focusVisible=!0,()=>{scope.removeEventListener(keyborg_esm.PW,keyborgListener),scope.removeEventListener("focusout",blurListener),delete scope.focusVisible,(0,keyborg_esm.ub)(keyborg)}}function applyFocusVisibleClass(el){el.setAttribute(constants.G0,"")}function removeFocusVisibleClass(el){el.removeAttribute(constants.G0)}function alreadyInScope(el){return!!el&&(!!el.focusVisible||alreadyInScope(null==el?void 0:el.parentElement))}function useFocusVisible(options={}){var _options_targetDocument;let contextValue=(0,ProviderContext.O)(),scopeRef=react.useRef(null),targetDocument=null!==(_options_targetDocument=options.targetDocument)&&void 0!==_options_targetDocument?_options_targetDocument:contextValue.targetDocument;return react.useEffect(()=>{if((null==targetDocument?void 0:targetDocument.defaultView)&&scopeRef.current)return applyFocusVisiblePolyfill(scopeRef.current,targetDocument.defaultView)},[scopeRef,targetDocument]),scopeRef}var slot=__webpack_require__("./node_modules/@fluentui/react-utilities/lib/compose/slot.js"),getNativeElementProps=__webpack_require__("./node_modules/@fluentui/react-utilities/lib/utils/getNativeElementProps.js"),useMergedRefs=__webpack_require__("./node_modules/@fluentui/react-utilities/lib/hooks/useMergedRefs.js"),useIsomorphicLayoutEffect=__webpack_require__("./node_modules/@fluentui/react-utilities/lib/hooks/useIsomorphicLayoutEffect.js"),useId=__webpack_require__("./node_modules/@fluentui/react-utilities/lib/hooks/useId.js");function createCSSRuleFromTheme(selector,theme){if(theme){let cssVarsAsString=Object.keys(theme).reduce((cssVarRule,cssVar)=>`${cssVarRule}--${cssVar}: ${theme[cssVar]}; `,"");return`${selector} { ${cssVarsAsString} }`}return`${selector} {}`}var _styles_esm=__webpack_require__("./node_modules/@griffel/core/__styles.esm.js"),mergeClasses_esm=__webpack_require__("./node_modules/@griffel/core/mergeClasses.esm.js");let fluentProviderClassNames={root:"fui-FluentProvider"},useStyles=(0,_styles_esm.s)({root:{sj55zd:"f19n0e5",De3pzq:"fxugw4r",fsow6f:["f1o700av","fes3tcz"],Bahqtrf:"fk6fouc",Be2twd7:"fkhj508",Bhrd7zp:"figsok6",Bg96gwp:"f1i3iumi"}},{d:[".f19n0e5{color:var(--colorNeutralForeground1);}",".fxugw4r{background-color:var(--colorNeutralBackground1);}",".f1o700av{text-align:left;}",".fes3tcz{text-align:right;}",".fk6fouc{font-family:var(--fontFamilyBase);}",".fkhj508{font-size:var(--fontSizeBase300);}",".figsok6{font-weight:var(--fontWeightRegular);}",".f1i3iumi{line-height:var(--lineHeightBase300);}"]}),useFluentProviderStyles_unstable=state=>{let renderer=(0,RendererContext_esm.a)(),styles=useStyles({dir:state.dir,renderer});return state.root.className=(0,mergeClasses_esm.z)(fluentProviderClassNames.root,state.themeClassName,styles.root,state.root.className),state},useInsertionEffect=react_namespaceObject.useInsertionEffect?react_namespaceObject.useInsertionEffect:useIsomorphicLayoutEffect.L,createStyleTag=(target,elementAttributes)=>{if(!target)return;let tag=target.createElement("style");return Object.keys(elementAttributes).forEach(attrName=>{tag.setAttribute(attrName,elementAttributes[attrName])}),target.head.appendChild(tag),tag},insertSheet=(tag,rule)=>{let sheet=tag.sheet;sheet&&(sheet.cssRules.length>0&&sheet.deleteRule(0),sheet.insertRule(rule,0))},useFluentProviderThemeStyleTag=options=>{let{targetDocument,theme,rendererAttributes}=options,styleTag=react.useRef(),styleTagId=(0,useId.Me)(fluentProviderClassNames.root),rule=react.useMemo(()=>createCSSRuleFromTheme(`.${styleTagId}`,theme),[theme,styleTagId]);return useHandleSSRStyleElements(targetDocument,styleTagId),useInsertionEffect(()=>{let ssrStyleElement=null==targetDocument?void 0:targetDocument.getElementById(styleTagId);return ssrStyleElement?styleTag.current=ssrStyleElement:(styleTag.current=createStyleTag(targetDocument,{...rendererAttributes,id:styleTagId}),styleTag.current&&insertSheet(styleTag.current,rule)),()=>{var _styleTag_current;null===(_styleTag_current=styleTag.current)||void 0===_styleTag_current||_styleTag_current.remove()}},[styleTagId,targetDocument,rule,rendererAttributes]),{styleTagId,rule}};function useHandleSSRStyleElements(targetDocument,styleTagId){react.useState(()=>{if(!targetDocument)return;let themeStyleElement=targetDocument.getElementById(styleTagId);themeStyleElement&&targetDocument.head.append(themeStyleElement)})}let useFluentProvider_unstable=(props,ref)=>{var _renderer_styleElementAttributes;let parentContext=(0,ProviderContext.O)(),parentTheme=useTheme(),parentOverrides=useOverrides(),parentCustomStyleHooks=react.useContext(CustomStyleHooksContext.Qb)||{},{applyStylesToPortals=!0,customStyleHooks_unstable,dir=parentContext.dir,targetDocument=parentContext.targetDocument,theme,overrides_unstable:overrides={}}=props,mergedTheme=shallowMerge(parentTheme,theme),mergedOverrides=shallowMerge(parentOverrides,overrides),mergedCustomStyleHooks=shallowMerge(parentCustomStyleHooks,customStyleHooks_unstable),renderer=(0,RendererContext_esm.a)(),{styleTagId,rule}=useFluentProviderThemeStyleTag({theme:mergedTheme,targetDocument,rendererAttributes:null!==(_renderer_styleElementAttributes=renderer.styleElementAttributes)&&void 0!==_renderer_styleElementAttributes?_renderer_styleElementAttributes:{}});return{applyStylesToPortals,customStyleHooks_unstable:mergedCustomStyleHooks,dir,targetDocument,theme:mergedTheme,overrides_unstable:mergedOverrides,themeClassName:styleTagId,components:{root:"div"},root:slot.Bx((0,getNativeElementProps.n)("div",{...props,dir,ref:(0,useMergedRefs.r)(ref,useFocusVisible({targetDocument}))}),{elementType:"div"}),serverStyleProps:{cssRule:rule,attributes:{...renderer.styleElementAttributes,id:styleTagId}}}};function shallowMerge(a,b){return a&&b?{...a,...b}:a||b}function useTheme(){return react.useContext(ThemeContext)}function useFluentProviderContextValues_unstable(state){let{applyStylesToPortals,customStyleHooks_unstable,dir,root,targetDocument,theme,themeClassName,overrides_unstable}=state,provider=react.useMemo(()=>({dir,targetDocument}),[dir,targetDocument]),[tooltip]=react.useState(()=>({})),iconDirection=react.useMemo(()=>({textDirection:dir}),[dir]);return{customStyleHooks_unstable,overrides_unstable,provider,textDirection:dir,iconDirection,tooltip,theme,themeClassName:applyStylesToPortals?root.className:themeClassName}}let FluentProvider=react.forwardRef((props,ref)=>{let state=useFluentProvider_unstable(props,ref);useFluentProviderStyles_unstable(state);let contextValues=useFluentProviderContextValues_unstable(state);return renderFluentProvider_unstable(state,contextValues)});FluentProvider.displayName="FluentProvider"},"./node_modules/@fluentui/react-shared-contexts/lib/CustomStyleHooksContext/CustomStyleHooksContext.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Qb:()=>CustomStyleHooksContext,UF:()=>CustomStyleHooksProvider,oj:()=>useCustomStyleHook});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");let CustomStyleHooksContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(void 0),noop=()=>{},CustomStyleHooksProvider=CustomStyleHooksContext.Provider,useCustomStyleHook=hook=>{var _React_useContext,_React_useContext_hook;return null!==(_React_useContext_hook=null===(_React_useContext=react__WEBPACK_IMPORTED_MODULE_0__.useContext(CustomStyleHooksContext))||void 0===_React_useContext?void 0:_React_useContext[hook])&&void 0!==_React_useContext_hook?_React_useContext_hook:noop}},"./node_modules/@fluentui/react-shared-contexts/lib/ProviderContext/ProviderContext.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{O:()=>useFluent,z:()=>Provider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");let ProviderContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(void 0),providerContextDefaultValue={targetDocument:"object"==typeof document?document:void 0,dir:"ltr"},Provider=ProviderContext.Provider;function useFluent(){var _React_useContext;return null!==(_React_useContext=react__WEBPACK_IMPORTED_MODULE_0__.useContext(ProviderContext))&&void 0!==_React_useContext?_React_useContext:providerContextDefaultValue}},"./node_modules/@fluentui/react-switch/lib/components/Switch/Switch.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{r:()=>Switch});var react=__webpack_require__("./node_modules/react/index.js"),useFieldControlProps=__webpack_require__("./node_modules/@fluentui/react-field/lib/contexts/useFieldControlProps.js"),chunk_1=__webpack_require__("./node_modules/@fluentui/react-icons/lib/icons/chunk-1.js"),Label=__webpack_require__("./node_modules/@fluentui/react-label/lib/components/Label/Label.js"),useFocusWithin=__webpack_require__("./node_modules/@fluentui/react-tabster/lib/hooks/useFocusWithin.js"),getNativeElementProps=__webpack_require__("./node_modules/@fluentui/react-utilities/lib/utils/getNativeElementProps.js"),useId=__webpack_require__("./node_modules/@fluentui/react-utilities/lib/hooks/useId.js"),slot=__webpack_require__("./node_modules/@fluentui/react-utilities/lib/compose/slot.js"),mergeCallbacks=__webpack_require__("./node_modules/@fluentui/react-utilities/lib/utils/mergeCallbacks.js");let useSwitch_unstable=(props,ref)=>{let{checked,defaultChecked,disabled,labelPosition="after",onChange,required}=props=(0,useFieldControlProps.k)(props,{supportsLabelFor:!0,supportsRequired:!0}),nativeProps=(0,getNativeElementProps.$)({props,primarySlotTagName:"input",excludedPropNames:["checked","defaultChecked","onChange"]}),id=(0,useId.Me)("switch-",nativeProps.primary.id),root=slot.Bx(props.root,{defaultProps:{ref:(0,useFocusWithin.L)(),...nativeProps.root},elementType:"div"}),indicator=slot.Bx(props.indicator,{defaultProps:{"aria-hidden":!0,children:react.createElement(chunk_1.MW6,null)},elementType:"div"}),input=slot.Bx(props.input,{defaultProps:{checked,defaultChecked,id,ref,role:"switch",type:"checkbox",...nativeProps.primary},elementType:"input"});input.onChange=(0,mergeCallbacks.E)(input.onChange,ev=>null==onChange?void 0:onChange(ev,{checked:ev.currentTarget.checked}));let label=slot.jt(props.label,{defaultProps:{disabled,htmlFor:id,required,size:"medium"},elementType:Label._});return{labelPosition,components:{root:"div",indicator:"div",input:"input",label:Label._},root,indicator,input,label}};var jsx_runtime=__webpack_require__("./node_modules/@fluentui/react-jsx-runtime/lib/jsx-runtime.js"),assertSlots=__webpack_require__("./node_modules/@fluentui/react-utilities/lib/compose/assertSlots.js");let renderSwitch_unstable=state=>{(0,assertSlots.a)(state);let{labelPosition}=state;return(0,jsx_runtime.BX)(state.root,{children:[(0,jsx_runtime.tZ)(state.input,{}),"after"!==labelPosition&&state.label&&(0,jsx_runtime.tZ)(state.label,{}),(0,jsx_runtime.tZ)(state.indicator,{}),"after"===labelPosition&&state.label&&(0,jsx_runtime.tZ)(state.label,{})]})};var _resetStyles_esm=__webpack_require__("./node_modules/@griffel/react/__resetStyles.esm.js"),_styles_esm=__webpack_require__("./node_modules/@griffel/react/__styles.esm.js"),mergeClasses_esm=__webpack_require__("./node_modules/@griffel/core/mergeClasses.esm.js");let switchClassNames={root:"fui-Switch",indicator:"fui-Switch__indicator",input:"fui-Switch__input",label:"fui-Switch__label"};switchClassNames.root;let useRootBaseClassName=(0,_resetStyles_esm.U)("rugt7u1","rqv95o1",[".rugt7u1{align-items:flex-start;box-sizing:border-box;display:inline-flex;position:relative;}",".rugt7u1:focus{outline-style:none;}",".rugt7u1:focus-visible{outline-style:none;}",".rugt7u1[data-fui-focus-within]:focus-within{border-top-color:transparent;border-right-color:transparent;border-bottom-color:transparent;border-left-color:transparent;}",'.rugt7u1[data-fui-focus-within]:focus-within::after{content:"";position:absolute;pointer-events:none;z-index:1;border-top-style:solid;border-right-style:solid;border-bottom-style:solid;border-left-style:solid;border-top-width:2px;border-right-width:2px;border-bottom-width:2px;border-left-width:2px;border-bottom-right-radius:var(--borderRadiusMedium);border-bottom-left-radius:var(--borderRadiusMedium);border-top-right-radius:var(--borderRadiusMedium);border-top-left-radius:var(--borderRadiusMedium);border-top-color:var(--colorStrokeFocus2);border-right-color:var(--colorStrokeFocus2);border-bottom-color:var(--colorStrokeFocus2);border-left-color:var(--colorStrokeFocus2);top:calc(2px * -1);right:calc(2px * -1);bottom:calc(2px * -1);left:calc(2px * -1);}',".rqv95o1{align-items:flex-start;box-sizing:border-box;display:inline-flex;position:relative;}",".rqv95o1:focus{outline-style:none;}",".rqv95o1:focus-visible{outline-style:none;}",".rqv95o1[data-fui-focus-within]:focus-within{border-top-color:transparent;border-left-color:transparent;border-bottom-color:transparent;border-right-color:transparent;}",'.rqv95o1[data-fui-focus-within]:focus-within::after{content:"";position:absolute;pointer-events:none;z-index:1;border-top-style:solid;border-left-style:solid;border-bottom-style:solid;border-right-style:solid;border-top-width:2px;border-left-width:2px;border-bottom-width:2px;border-right-width:2px;border-bottom-left-radius:var(--borderRadiusMedium);border-bottom-right-radius:var(--borderRadiusMedium);border-top-left-radius:var(--borderRadiusMedium);border-top-right-radius:var(--borderRadiusMedium);border-top-color:var(--colorStrokeFocus2);border-left-color:var(--colorStrokeFocus2);border-bottom-color:var(--colorStrokeFocus2);border-right-color:var(--colorStrokeFocus2);top:calc(2px * -1);left:calc(2px * -1);bottom:calc(2px * -1);right:calc(2px * -1);}']),useRootStyles=(0,_styles_esm.s)({vertical:{Beiy3e4:"f1vx9l62"}},{d:[".f1vx9l62{flex-direction:column;}"]}),useIndicatorBaseClassName=(0,_resetStyles_esm.U)("r13wlxb8",null,{r:[".r13wlxb8{border-radius:var(--borderRadiusCircular);border:1px solid;line-height:0;box-sizing:border-box;fill:currentColor;flex-shrink:0;font-size:18px;height:20px;margin:var(--spacingVerticalS) var(--spacingHorizontalS);pointer-events:none;transition-duration:var(--durationNormal);transition-timing-function:var(--curveEasyEase);transition-property:background,border,color;width:40px;}",".r13wlxb8>*{transition-duration:var(--durationNormal);transition-timing-function:var(--curveEasyEase);transition-property:transform;}"],s:["@media screen and (prefers-reduced-motion: reduce){.r13wlxb8{transition-duration:0.01ms;}}","@media screen and (prefers-reduced-motion: reduce){.r13wlxb8>*{transition-duration:0.01ms;}}"]}),useIndicatorStyles=(0,_styles_esm.s)({labelAbove:{B6of3ja:"f1hu3pq6"}},{d:[".f1hu3pq6{margin-top:0;}"]}),useInputBaseClassName=(0,_resetStyles_esm.U)("rw4brat","r1f4bxyr",{r:[".rw4brat{box-sizing:border-box;cursor:pointer;height:100%;margin:0;opacity:0;position:absolute;width:calc(40px + 2 * var(--spacingHorizontalS));}",".rw4brat:checked~.fui-Switch__indicator>*{transform:translateX(20px);}",".rw4brat:disabled{cursor:default;}",".rw4brat:disabled~.fui-Switch__indicator{color:var(--colorNeutralForegroundDisabled);}",".rw4brat:disabled~.fui-Switch__label{cursor:default;color:var(--colorNeutralForegroundDisabled);}",".rw4brat:enabled:not(:checked)~.fui-Switch__indicator{color:var(--colorNeutralStrokeAccessible);border-color:var(--colorNeutralStrokeAccessible);}",".rw4brat:enabled:not(:checked)~.fui-Switch__label{color:var(--colorNeutralForeground1);}",".rw4brat:enabled:not(:checked):hover~.fui-Switch__indicator{color:var(--colorNeutralStrokeAccessibleHover);border-color:var(--colorNeutralStrokeAccessibleHover);}",".rw4brat:enabled:not(:checked):hover:active~.fui-Switch__indicator{color:var(--colorNeutralStrokeAccessiblePressed);border-color:var(--colorNeutralStrokeAccessiblePressed);}",".rw4brat:enabled:checked~.fui-Switch__indicator{background-color:var(--colorCompoundBrandBackground);color:var(--colorNeutralForegroundInverted);border-color:var(--colorTransparentStroke);}",".rw4brat:enabled:checked:hover~.fui-Switch__indicator{background-color:var(--colorCompoundBrandBackgroundHover);border-color:var(--colorTransparentStrokeInteractive);}",".rw4brat:enabled:checked:hover:active~.fui-Switch__indicator{background-color:var(--colorCompoundBrandBackgroundPressed);border-color:var(--colorTransparentStrokeInteractive);}",".rw4brat:disabled:not(:checked)~.fui-Switch__indicator{border-color:var(--colorNeutralStrokeDisabled);}",".rw4brat:disabled:checked~.fui-Switch__indicator{background-color:var(--colorNeutralBackgroundDisabled);border-color:var(--colorTransparentStrokeDisabled);}",".r1f4bxyr{box-sizing:border-box;cursor:pointer;height:100%;margin:0;opacity:0;position:absolute;width:calc(40px + 2 * var(--spacingHorizontalS));}",".r1f4bxyr:checked~.fui-Switch__indicator>*{transform:translateX(-20px);}",".r1f4bxyr:disabled{cursor:default;}",".r1f4bxyr:disabled~.fui-Switch__indicator{color:var(--colorNeutralForegroundDisabled);}",".r1f4bxyr:disabled~.fui-Switch__label{cursor:default;color:var(--colorNeutralForegroundDisabled);}",".r1f4bxyr:enabled:not(:checked)~.fui-Switch__indicator{color:var(--colorNeutralStrokeAccessible);border-color:var(--colorNeutralStrokeAccessible);}",".r1f4bxyr:enabled:not(:checked)~.fui-Switch__label{color:var(--colorNeutralForeground1);}",".r1f4bxyr:enabled:not(:checked):hover~.fui-Switch__indicator{color:var(--colorNeutralStrokeAccessibleHover);border-color:var(--colorNeutralStrokeAccessibleHover);}",".r1f4bxyr:enabled:not(:checked):hover:active~.fui-Switch__indicator{color:var(--colorNeutralStrokeAccessiblePressed);border-color:var(--colorNeutralStrokeAccessiblePressed);}",".r1f4bxyr:enabled:checked~.fui-Switch__indicator{background-color:var(--colorCompoundBrandBackground);color:var(--colorNeutralForegroundInverted);border-color:var(--colorTransparentStroke);}",".r1f4bxyr:enabled:checked:hover~.fui-Switch__indicator{background-color:var(--colorCompoundBrandBackgroundHover);border-color:var(--colorTransparentStrokeInteractive);}",".r1f4bxyr:enabled:checked:hover:active~.fui-Switch__indicator{background-color:var(--colorCompoundBrandBackgroundPressed);border-color:var(--colorTransparentStrokeInteractive);}",".r1f4bxyr:disabled:not(:checked)~.fui-Switch__indicator{border-color:var(--colorNeutralStrokeDisabled);}",".r1f4bxyr:disabled:checked~.fui-Switch__indicator{background-color:var(--colorNeutralBackgroundDisabled);border-color:var(--colorTransparentStrokeDisabled);}"],s:["@media (forced-colors: active){.rw4brat:disabled~.fui-Switch__indicator{color:GrayText;border-color:GrayText;}.rw4brat:disabled~.fui-Switch__label{color:GrayText;}.rw4brat:enabled:checked:hover~.fui-Switch__indicator{background-color:Highlight;color:Canvas;}.rw4brat:enabled:checked~.fui-Switch__indicator{background-color:Highlight;color:Canvas;}}","@media (forced-colors: active){.r1f4bxyr:disabled~.fui-Switch__indicator{color:GrayText;border-color:GrayText;}.r1f4bxyr:disabled~.fui-Switch__label{color:GrayText;}.r1f4bxyr:enabled:checked:hover~.fui-Switch__indicator{background-color:Highlight;color:Canvas;}.r1f4bxyr:enabled:checked~.fui-Switch__indicator{background-color:Highlight;color:Canvas;}}"]}),useInputStyles=(0,_styles_esm.s)({before:{j35jbq:["f1e31b4d","f1vgc2s3"],Bhzewxz:"f15twtuk"},after:{oyh7mz:["f1vgc2s3","f1e31b4d"],Bhzewxz:"f15twtuk"},above:{B5kzvoi:"f1yab3r1",Bqenvij:"f1aar7gd",a9b677:"fly5x3f"}},{d:[".f1e31b4d{right:0;}",".f1vgc2s3{left:0;}",".f15twtuk{top:0;}",".f1yab3r1{bottom:0;}",".f1aar7gd{height:calc(20px + var(--spacingVerticalS));}",".fly5x3f{width:100%;}"]}),useLabelStyles=(0,_styles_esm.s)({base:{Bceei9c:"f1k6fduh",jrapky:"f49ad5g",B6of3ja:"f1xlvstr",z8tnut:"f1kwiid1",z189sj:["f1vdfbxk","f1f5gg8d"],Byoj8tv:"f5b47ha",uwmqm3:["f1f5gg8d","f1vdfbxk"]},above:{z8tnut:"f1ywm7hm",Byoj8tv:"f14wxoun",a9b677:"fly5x3f"},after:{uwmqm3:["fruq291","f7x41pl"]},before:{z189sj:["f7x41pl","fruq291"]}},{d:[".f1k6fduh{cursor:pointer;}",".f49ad5g{margin-bottom:calc((20px - var(--lineHeightBase300)) / 2);}",".f1xlvstr{margin-top:calc((20px - var(--lineHeightBase300)) / 2);}",".f1kwiid1{padding-top:var(--spacingVerticalS);}",".f1vdfbxk{padding-right:var(--spacingHorizontalS);}",".f1f5gg8d{padding-left:var(--spacingHorizontalS);}",".f5b47ha{padding-bottom:var(--spacingVerticalS);}",".f1ywm7hm{padding-top:var(--spacingVerticalXS);}",".f14wxoun{padding-bottom:var(--spacingVerticalXS);}",".fly5x3f{width:100%;}",".fruq291{padding-left:var(--spacingHorizontalXS);}",".f7x41pl{padding-right:var(--spacingHorizontalXS);}"]}),useSwitchStyles_unstable=state=>{let rootBaseClassName=useRootBaseClassName(),rootStyles=useRootStyles(),indicatorBaseClassName=useIndicatorBaseClassName(),indicatorStyles=useIndicatorStyles(),inputBaseClassName=useInputBaseClassName(),inputStyles=useInputStyles(),labelStyles=useLabelStyles(),{label,labelPosition}=state;return state.root.className=(0,mergeClasses_esm.z)(switchClassNames.root,rootBaseClassName,"above"===labelPosition&&rootStyles.vertical,state.root.className),state.indicator.className=(0,mergeClasses_esm.z)(switchClassNames.indicator,indicatorBaseClassName,label&&"above"===labelPosition&&indicatorStyles.labelAbove,state.indicator.className),state.input.className=(0,mergeClasses_esm.z)(switchClassNames.input,inputBaseClassName,label&&inputStyles[labelPosition],state.input.className),state.label&&(state.label.className=(0,mergeClasses_esm.z)(switchClassNames.label,labelStyles.base,labelStyles[labelPosition],state.label.className)),state};var CustomStyleHooksContext=__webpack_require__("./node_modules/@fluentui/react-shared-contexts/lib/CustomStyleHooksContext/CustomStyleHooksContext.js");let Switch=react.forwardRef((props,ref)=>{let state=useSwitch_unstable(props,ref);return useSwitchStyles_unstable(state),(0,CustomStyleHooksContext.oj)("useSwitchStyles_unstable")(state),renderSwitch_unstable(state)});Switch.displayName="Switch"},"./node_modules/@fluentui/react-tabster/lib/focus/constants.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{G0:()=>FOCUS_VISIBLE_ATTR,Io:()=>FOCUS_WITHIN_ATTR,vC:()=>defaultOptions});let FOCUS_VISIBLE_ATTR="data-fui-focus-visible",FOCUS_WITHIN_ATTR="data-fui-focus-within",defaultOptions={style:{},selector:"focus",customizeSelector:selector=>selector}},"./node_modules/@fluentui/react-tabster/lib/hooks/useFocusWithin.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{L:()=>useFocusWithin});var react=__webpack_require__("./node_modules/react/index.js"),ProviderContext=__webpack_require__("./node_modules/@fluentui/react-shared-contexts/lib/ProviderContext/ProviderContext.js"),keyborg_esm=__webpack_require__("./node_modules/keyborg/dist/keyborg.esm.js"),constants=__webpack_require__("./node_modules/@fluentui/react-tabster/lib/focus/constants.js");function applyFocusWithinPolyfill(element,win){let keyborg=(0,keyborg_esm.Vm)(win);keyborg.subscribe(isNavigatingWithKeyboard=>{isNavigatingWithKeyboard||removeFocusWithinClass(element)});let keyborgListener=e=>{keyborg.isNavigatingWithKeyboard()&&isHTMLElement(e.target)&&applyFocusWithinClass(element)},blurListener=e=>{(!e.relatedTarget||isHTMLElement(e.relatedTarget)&&!element.contains(e.relatedTarget))&&removeFocusWithinClass(element)};return element.addEventListener(keyborg_esm.PW,keyborgListener),element.addEventListener("focusout",blurListener),()=>{element.removeEventListener(keyborg_esm.PW,keyborgListener),element.removeEventListener("focusout",blurListener),(0,keyborg_esm.ub)(keyborg)}}function applyFocusWithinClass(el){el.setAttribute(constants.Io,"")}function removeFocusWithinClass(el){el.removeAttribute(constants.Io)}function isHTMLElement(target){return!!target&&!!(target&&"object"==typeof target&&"classList"in target&&"contains"in target)}function useFocusWithin(){let{targetDocument}=(0,ProviderContext.O)(),elementRef=react.useRef(null);return react.useEffect(()=>{if((null==targetDocument?void 0:targetDocument.defaultView)&&elementRef.current)return applyFocusWithinPolyfill(elementRef.current,targetDocument.defaultView)},[elementRef,targetDocument]),elementRef}},"./node_modules/@fluentui/react-tags/lib/components/InteractionTagPrimary/InteractionTagPrimary.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{v:()=>InteractionTagPrimary});var react=__webpack_require__("./node_modules/react/index.js"),slot=__webpack_require__("./node_modules/@fluentui/react-utilities/lib/compose/slot.js"),getNativeElementProps=__webpack_require__("./node_modules/@fluentui/react-utilities/lib/utils/getNativeElementProps.js"),interactionTagContext=__webpack_require__("./node_modules/@fluentui/react-tags/lib/contexts/interactionTagContext.js");let avatarSizeMap={medium:28,small:20,"extra-small":16},avatarShapeMap={rounded:"square",circular:"circular"},useInteractionTagPrimary_unstable=(props,ref)=>{let{appearance,disabled,interactionTagPrimaryId,shape,size}=(0,interactionTagContext.MQ)(),{hasSecondaryAction=!1}=props;return{appearance,avatarShape:avatarShapeMap[shape],avatarSize:avatarSizeMap[size],disabled,hasSecondaryAction,shape,size,components:{root:"button",media:"span",icon:"span",primaryText:"span",secondaryText:"span"},root:slot.Bx((0,getNativeElementProps.n)("button",{ref,disabled,id:interactionTagPrimaryId,...props}),{elementType:"button"}),media:slot.jt(props.media,{elementType:"span"}),icon:slot.jt(props.icon,{elementType:"span"}),primaryText:slot.jt(props.primaryText,{renderByDefault:!0,defaultProps:{children:props.children},elementType:"span"}),secondaryText:slot.jt(props.secondaryText,{elementType:"span"})}};var jsx_runtime=__webpack_require__("./node_modules/@fluentui/react-jsx-runtime/lib/jsx-runtime.js"),assertSlots=__webpack_require__("./node_modules/@fluentui/react-utilities/lib/compose/assertSlots.js"),AvatarContext=__webpack_require__("./node_modules/@fluentui/react-avatar/lib/contexts/AvatarContext.js");let renderInteractionTagPrimary_unstable=(state,contextValues)=>((0,assertSlots.a)(state),(0,jsx_runtime.BX)(state.root,{children:[state.media&&(0,jsx_runtime.tZ)(AvatarContext.S,{value:contextValues.avatar,children:(0,jsx_runtime.tZ)(state.media,{})}),state.icon&&(0,jsx_runtime.tZ)(state.icon,{}),state.primaryText&&(0,jsx_runtime.tZ)(state.primaryText,{}),state.secondaryText&&(0,jsx_runtime.tZ)(state.secondaryText,{})]})),positionMap=["Top","Right","Bottom","Left"];function generateStyles(property,suffix,...values){let[firstValue,secondValue=firstValue,thirdValue=firstValue,fourthValue=secondValue]=values,valuesWithDefaults=[firstValue,secondValue,thirdValue,fourthValue],styles={};for(let i=0;i<valuesWithDefaults.length;i+=1)(valuesWithDefaults[i]||0===valuesWithDefaults[i])&&(styles[property+positionMap[i]+suffix]=valuesWithDefaults[i]);return styles}function borderWidth(...values){return generateStyles("border","Width",...values)}function borderStyle(...values){return generateStyles("border","Style",...values)}function borderColor(...values){return generateStyles("border","Color",...values)}let LINE_STYLES=["none","hidden","dotted","dashed","solid","double","groove","ridge","inset","outset"];function isBorderStyle(value){return LINE_STYLES.includes(value)}function border(...values){return isBorderStyle(values[0])?{...borderStyle(values[0]),...values[1]&&borderWidth(values[1]),...values[2]&&borderColor(values[2])}:{...borderWidth(values[0]),...values[1]&&borderStyle(values[1]),...values[2]&&borderColor(values[2])}}function borderLeft(...values){return isBorderStyle(values[0])?{borderLeftStyle:values[0],...values[1]&&{borderLeftWidth:values[1]},...values[2]&&{borderLeftColor:values[2]}}:{borderLeftWidth:values[0],...values[1]&&{borderLeftStyle:values[1]},...values[2]&&{borderLeftColor:values[2]}}}function borderBottom(...values){return isBorderStyle(values[0])?{borderBottomStyle:values[0],...values[1]&&{borderBottomWidth:values[1]},...values[2]&&{borderBottomColor:values[2]}}:{borderBottomWidth:values[0],...values[1]&&{borderBottomStyle:values[1]},...values[2]&&{borderBottomColor:values[2]}}}function borderRight(...values){return isBorderStyle(values[0])?{borderRightStyle:values[0],...values[1]&&{borderRightWidth:values[1]},...values[2]&&{borderRightColor:values[2]}}:{borderRightWidth:values[0],...values[1]&&{borderRightStyle:values[1]},...values[2]&&{borderRightColor:values[2]}}}function borderTop(...values){return isBorderStyle(values[0])?{borderTopStyle:values[0],...values[1]&&{borderTopWidth:values[1]},...values[2]&&{borderTopColor:values[2]}}:{borderTopWidth:values[0],...values[1]&&{borderTopStyle:values[1]},...values[2]&&{borderTopColor:values[2]}}}function borderRadius(value1,value2=value1,value3=value1,value4=value2){return{borderBottomRightRadius:value3,borderBottomLeftRadius:value4,borderTopRightRadius:value2,borderTopLeftRadius:value1}}let isUnit=value=>"string"==typeof value&&/(\d+(\w+|%))/.test(value),isUnitless=value=>"number"==typeof value&&!Number.isNaN(value),isInitial=value=>"initial"===value,isAuto=value=>"auto"===value,isNone=value=>"none"===value,widthReservedKeys=["content","fit-content","max-content","min-content"],isWidth=value=>widthReservedKeys.some(key=>value===key)||isUnit(value);function flex(...values){let isOneValueSyntax=1===values.length,isTwoValueSyntax=2===values.length,isThreeValueSyntax=3===values.length;if(isOneValueSyntax){let[firstValue]=values;if(isInitial(firstValue))return{flexGrow:0,flexShrink:1,flexBasis:"auto"};if(isAuto(firstValue))return{flexGrow:1,flexShrink:1,flexBasis:"auto"};if(isNone(firstValue))return{flexGrow:0,flexShrink:0,flexBasis:"auto"};if(isUnitless(firstValue))return{flexGrow:firstValue,flexShrink:1,flexBasis:0};if(isWidth(firstValue))return{flexGrow:1,flexShrink:1,flexBasis:firstValue}}if(isTwoValueSyntax){let[firstValue,secondValue]=values;if(isUnitless(secondValue))return{flexGrow:firstValue,flexShrink:secondValue,flexBasis:0};if(isWidth(secondValue))return{flexGrow:firstValue,flexShrink:1,flexBasis:secondValue}}if(isThreeValueSyntax){let[firstValue,secondValue,thirdValue]=values;if(isUnitless(firstValue)&&isUnitless(secondValue)&&(isAuto(thirdValue)||isWidth(thirdValue)))return{flexGrow:firstValue,flexShrink:secondValue,flexBasis:thirdValue}}return{}}function gap(columnGap,rowGap=columnGap){return{columnGap,rowGap}}let cssVarRegEx=/var\(.*\)/gi;function isValidGridAreaInput(value){return void 0===value||"number"==typeof value||"string"==typeof value&&!cssVarRegEx.test(value)}let customIdentRegEx=/^[a-zA-Z0-9\-_\\#;]+$/,nonCustomIdentRegEx=/^-moz-initial$|^auto$|^initial$|^inherit$|^revert$|^unset$|^span \d+$|\d.*/;function isCustomIdent(value){return void 0!==value&&"string"==typeof value&&customIdentRegEx.test(value)&&!nonCustomIdentRegEx.test(value)}function gridArea(...values){if(values.some(value=>!isValidGridAreaInput(value)))return{};let gridRowStart=void 0!==values[0]?values[0]:"auto",gridColumnStart=void 0!==values[1]?values[1]:isCustomIdent(gridRowStart)?gridRowStart:"auto",gridRowEnd=void 0!==values[2]?values[2]:isCustomIdent(gridRowStart)?gridRowStart:"auto",gridColumnEnd=void 0!==values[3]?values[3]:isCustomIdent(gridColumnStart)?gridColumnStart:"auto";return{gridRowStart,gridColumnStart,gridRowEnd,gridColumnEnd}}function margin(...values){return generateStyles("margin","",...values)}function marginBlock(start,end=start){return{marginBlockStart:start,marginBlockEnd:end}}function marginInline(start,end=start){return{marginInlineStart:start,marginInlineEnd:end}}function padding(...values){return generateStyles("padding","",...values)}function paddingBlock(start,end=start){return{paddingBlockStart:start,paddingBlockEnd:end}}function paddingInline(start,end=start){return{paddingInlineStart:start,paddingInlineEnd:end}}function overflow(overflowX,overflowY=overflowX){return{overflowX,overflowY}}function inset(...values){let[firstValue,secondValue=firstValue,thirdValue=firstValue,fourthValue=secondValue]=values;return{top:firstValue,right:secondValue,bottom:thirdValue,left:fourthValue}}function outline(outlineWidth,outlineStyle,outlineColor){return{outlineWidth,...outlineStyle&&{outlineStyle},...outlineColor&&{outlineColor}}}function transition(...values){return isTransitionGlobalInputs(values)?{transitionDelay:values[0],transitionDuration:values[0],transitionProperty:values[0],transitionTimingFunction:values[0]}:normalizeTransitionInputs(values).reduce((acc,[property,duration="0s",delay="0s",timingFunction="ease"],index)=>(0===index?(acc.transitionProperty=property,acc.transitionDuration=duration,acc.transitionDelay=delay,acc.transitionTimingFunction=timingFunction):(acc.transitionProperty+=`, ${property}`,acc.transitionDuration+=`, ${duration}`,acc.transitionDelay+=`, ${delay}`,acc.transitionTimingFunction+=`, ${timingFunction}`),acc),{})}let transitionGlobalInputs=["-moz-initial","inherit","initial","revert","unset"];function isTransitionGlobalInputs(values){return 1===values.length&&transitionGlobalInputs.includes(values[0])}function normalizeTransitionInputs(transitionInputs){return 1===transitionInputs.length&&Array.isArray(transitionInputs[0])?transitionInputs[0]:[transitionInputs]}function textDecoration(value,...values){if(0===values.length)return isTextDecorationStyleInput(value)?{textDecorationStyle:value}:{textDecorationLine:value};let[textDecorationStyle,textDecorationColor,textDecorationThickness]=values;return{textDecorationLine:value,...textDecorationStyle&&{textDecorationStyle},...textDecorationColor&&{textDecorationColor},...textDecorationThickness&&{textDecorationThickness}}}let textDecorationStyleInputs=["dashed","dotted","double","solid","wavy"];function isTextDecorationStyleInput(value){return textDecorationStyleInputs.includes(value)}var _resetStyles_esm=__webpack_require__("./node_modules/@griffel/react/__resetStyles.esm.js"),_styles_esm=__webpack_require__("./node_modules/@griffel/react/__styles.esm.js"),mergeClasses_esm=__webpack_require__("./node_modules/@griffel/core/mergeClasses.esm.js"),constants=__webpack_require__("./node_modules/@fluentui/react-tabster/lib/focus/constants.js");function createCustomFocusIndicatorStyle(style,{selector:selectorType=constants.vC.selector,customizeSelector=constants.vC.customizeSelector}=constants.vC){return{[customizeSelector(createBaseSelector(selectorType))]:style}}function createBaseSelector(selectorType){switch(selectorType){case"focus":return`&[${constants.G0}]`;case"focus-within":return`&[${constants.Io}]:focus-within`}}let tokens={colorTransparentStroke:"var(--colorTransparentStroke)",colorStrokeFocus2:"var(--colorStrokeFocus2)",strokeWidthThin:"var(--strokeWidthThin)",strokeWidthThick:"var(--strokeWidthThick)"};tokens.strokeWidthThin,tokens.colorTransparentStroke;let useIconStyles=(0,_styles_esm.s)({base:{Ijaq50:"f11uok23",Br312pm:"f1qdfnnj",nk6f5a:"f1s27gz",Bw0ie65:"f86d0yl",mc9l5x:"f22iagw"},medium:{uwmqm3:["f1rtp3s9","f18k1jr3"],z189sj:["f7x41pl","fruq291"],a9b677:"f64fuq3",Be2twd7:"fe5j1ua"},small:{uwmqm3:["f15vdbe4","fwiuce9"],z189sj:["ffczdla","fgiv446"],a9b677:"fjw5fx7",Be2twd7:"f4ybsrx"},"extra-small":{uwmqm3:["f15vdbe4","fwiuce9"],z189sj:["ffczdla","fgiv446"],a9b677:"frx94fk",Be2twd7:"f1ugzwwg"}},{d:[".f11uok23{grid-row-start:media;}",".f1qdfnnj{grid-column-start:media;}",".f1s27gz{grid-row-end:media;}",".f86d0yl{grid-column-end:media;}",".f22iagw{display:flex;}",".f1rtp3s9{padding-left:7px;}",".f18k1jr3{padding-right:7px;}",".f7x41pl{padding-right:var(--spacingHorizontalXS);}",".fruq291{padding-left:var(--spacingHorizontalXS);}",".f64fuq3{width:20px;}",".fe5j1ua{font-size:20px;}",".f15vdbe4{padding-left:5px;}",".fwiuce9{padding-right:5px;}",".ffczdla{padding-right:var(--spacingHorizontalXXS);}",".fgiv446{padding-left:var(--spacingHorizontalXXS);}",".fjw5fx7{width:16px;}",".f4ybsrx{font-size:16px;}",".frx94fk{width:12px;}",".f1ugzwwg{font-size:12px;}"]}),useMediaStyles=(0,_styles_esm.s)({base:{Ijaq50:"f11uok23",Br312pm:"f1qdfnnj",nk6f5a:"f1s27gz",Bw0ie65:"f86d0yl",mc9l5x:"f22iagw",uwmqm3:["f10xn8zz","f136y8j8"]},medium:{z189sj:["f1vdfbxk","f1f5gg8d"]},small:{z189sj:["fdw0yi8","fk8j09s"]},"extra-small":{z189sj:["fdw0yi8","fk8j09s"]}},{d:[".f11uok23{grid-row-start:media;}",".f1qdfnnj{grid-column-start:media;}",".f1s27gz{grid-row-end:media;}",".f86d0yl{grid-column-end:media;}",".f22iagw{display:flex;}",".f10xn8zz{padding-left:1px;}",".f136y8j8{padding-right:1px;}",".f1vdfbxk{padding-right:var(--spacingHorizontalS);}",".f1f5gg8d{padding-left:var(--spacingHorizontalS);}",".fdw0yi8{padding-right:var(--spacingHorizontalSNudge);}",".fk8j09s{padding-left:var(--spacingHorizontalSNudge);}"]}),usePrimaryTextStyles=(0,_styles_esm.s)({base:{Huce71:"fz5stix",uwmqm3:["fgiv446","ffczdla"],z189sj:["ffczdla","fgiv446"]},medium:{Bahqtrf:"fk6fouc",Be2twd7:"fkhj508",Bhrd7zp:"figsok6",Bg96gwp:"f1i3iumi"},small:{Bahqtrf:"fk6fouc",Be2twd7:"fy9rknc",Bhrd7zp:"figsok6",Bg96gwp:"fwrc4pm"},"extra-small":{Bahqtrf:"fk6fouc",Be2twd7:"fy9rknc",Bhrd7zp:"figsok6",Bg96gwp:"fwrc4pm"},withoutSecondaryText:{Br312pm:"faqcfhe",Ijaq50:"f1q3ipgb",nk6f5a:"fc0ab3q",Byoj8tv:"f1g03r3y"},withSecondaryText:{Ijaq50:"f1q3ipgb",Br312pm:"faqcfhe",nk6f5a:"fs32cm1",Bw0ie65:"f1bo7viq",Bahqtrf:"fk6fouc",Be2twd7:"fy9rknc",Bhrd7zp:"figsok6",Bg96gwp:"fwrc4pm",B6of3ja:"f1ryq6si"}},{d:[".fz5stix{white-space:nowrap;}",".fgiv446{padding-left:var(--spacingHorizontalXXS);}",".ffczdla{padding-right:var(--spacingHorizontalXXS);}",".fk6fouc{font-family:var(--fontFamilyBase);}",".fkhj508{font-size:var(--fontSizeBase300);}",".figsok6{font-weight:var(--fontWeightRegular);}",".f1i3iumi{line-height:var(--lineHeightBase300);}",".fy9rknc{font-size:var(--fontSizeBase200);}",".fwrc4pm{line-height:var(--lineHeightBase200);}",".faqcfhe{grid-column-start:primary;}",".f1q3ipgb{grid-row-start:primary;}",".fc0ab3q{grid-row-end:secondary;}",".f1g03r3y{padding-bottom:var(--spacingHorizontalXXS);}",".fs32cm1{grid-row-end:primary;}",".f1bo7viq{grid-column-end:primary;}",".f1ryq6si{margin-top:-2px;}"]}),useSecondaryTextBaseClassName=(0,_resetStyles_esm.U)("r7hv1ps","rnrslm9",[".r7hv1ps{grid-area:secondary;padding-left:var(--spacingHorizontalXXS);padding-right:var(--spacingHorizontalXXS);font-family:var(--fontFamilyBase);font-size:var(--fontSizeBase100);font-weight:var(--fontWeightRegular);line-height:var(--lineHeightBase100);white-space:nowrap;}",".rnrslm9{grid-area:secondary;padding-right:var(--spacingHorizontalXXS);padding-left:var(--spacingHorizontalXXS);font-family:var(--fontFamilyBase);font-size:var(--fontSizeBase100);font-weight:var(--fontWeightRegular);line-height:var(--lineHeightBase100);white-space:nowrap;}"]),interactionTagPrimaryClassNames={root:"fui-InteractionTagPrimary",media:"fui-InteractionTagPrimary__media",icon:"fui-InteractionTagPrimary__icon",primaryText:"fui-InteractionTagPrimary__primaryText",secondaryText:"fui-InteractionTagPrimary__secondaryText"};({border:`${tokens.strokeWidthThin} solid ${tokens.colorTransparentStroke}`,...createCustomFocusIndicatorStyle({...({border:border,borderLeft:borderLeft,borderBottom:borderBottom,borderRight:borderRight,borderTop:borderTop,borderColor:borderColor,borderStyle:borderStyle,borderRadius:borderRadius,borderWidth:borderWidth,flex:flex,gap:gap,gridArea:gridArea,margin:margin,marginBlock:marginBlock,marginInline:marginInline,padding:padding,paddingBlock:paddingBlock,paddingInline:paddingInline,overflow:overflow,inset:inset,outline:outline,transition:transition,textDecoration:textDecoration}).outline(tokens.strokeWidthThick,"solid",tokens.colorStrokeFocus2),zIndex:1})});let useInteractionTagPrimaryStyles_styles_useRootRoundedBaseClassName=(0,_resetStyles_esm.U)("r11r5xvj","rjnnu2a",{r:['.r11r5xvj{color:inherit;font-family:inherit;padding:0px;border-style:none;-webkit-appearance:button;-moz-appearance:button;-ms-appearance:button;appearance:button;text-align:unset;background-color:transparent;display:inline-grid;height:100%;align-items:center;grid-template-areas:"media primary  " "media secondary";border:var(--strokeWidthThin) solid var(--colorTransparentStroke);border-radius:var(--borderRadiusMedium);}',".r11r5xvj[data-fui-focus-visible]{outline-width:var(--strokeWidthThick);outline-style:solid;outline-color:var(--colorStrokeFocus2);z-index:1;}",'.rjnnu2a{color:inherit;font-family:inherit;padding:0px;border-style:none;-webkit-appearance:button;-moz-appearance:button;-ms-appearance:button;appearance:button;text-align:unset;background-color:transparent;display:inline-grid;height:100%;align-items:center;grid-template-areas:"media primary  " "media secondary";border:var(--strokeWidthThin) solid var(--colorTransparentStroke);border-radius:var(--borderRadiusMedium);}',".rjnnu2a[data-fui-focus-visible]{outline-width:var(--strokeWidthThick);outline-style:solid;outline-color:var(--colorStrokeFocus2);z-index:1;}"],s:['@media (forced-colors: active){.r11r5xvj{position:relative;}.r11r5xvj::before{content:"";border-top-width:var(--strokeWidthThin);border-top-style:solid;position:absolute;top:-1px;left:-1px;right:-1px;bottom:-1px;border-top-left-radius:var(--borderRadiusMedium);border-top-right-radius:var(--borderRadiusMedium);}}','@media (forced-colors: active){.rjnnu2a{position:relative;}.rjnnu2a::before{content:"";border-top-width:var(--strokeWidthThin);border-top-style:solid;position:absolute;top:-1px;right:-1px;left:-1px;bottom:-1px;border-top-right-radius:var(--borderRadiusMedium);border-top-left-radius:var(--borderRadiusMedium);}}']}),useInteractionTagPrimaryStyles_styles_useRootCircularBaseClassName=(0,_resetStyles_esm.U)("r1k6bywq","r46rai9",{r:['.r1k6bywq{color:inherit;font-family:inherit;padding:0px;border-style:none;-webkit-appearance:button;-moz-appearance:button;-ms-appearance:button;appearance:button;text-align:unset;background-color:transparent;display:inline-grid;height:100%;align-items:center;grid-template-areas:"media primary  " "media secondary";border:var(--strokeWidthThin) solid var(--colorTransparentStroke);border-radius:var(--borderRadiusCircular);}',".r1k6bywq[data-fui-focus-visible]{outline-width:var(--strokeWidthThick);outline-style:solid;outline-color:var(--colorStrokeFocus2);z-index:1;}",'.r46rai9{color:inherit;font-family:inherit;padding:0px;border-style:none;-webkit-appearance:button;-moz-appearance:button;-ms-appearance:button;appearance:button;text-align:unset;background-color:transparent;display:inline-grid;height:100%;align-items:center;grid-template-areas:"media primary  " "media secondary";border:var(--strokeWidthThin) solid var(--colorTransparentStroke);border-radius:var(--borderRadiusCircular);}',".r46rai9[data-fui-focus-visible]{outline-width:var(--strokeWidthThick);outline-style:solid;outline-color:var(--colorStrokeFocus2);z-index:1;}"],s:['@media (forced-colors: active){.r1k6bywq{position:relative;}.r1k6bywq::before{content:"";border-top-width:var(--strokeWidthThin);border-top-style:solid;border-left-width:var(--strokeWidthThin);border-left-style:solid;position:absolute;top:-1px;left:-1px;right:-1px;bottom:-1px;border-top-left-radius:var(--borderRadiusCircular);border-bottom-left-radius:var(--borderRadiusCircular);}}','@media (forced-colors: active){.r46rai9{position:relative;}.r46rai9::before{content:"";border-top-width:var(--strokeWidthThin);border-top-style:solid;border-right-width:var(--strokeWidthThin);border-right-style:solid;position:absolute;top:-1px;right:-1px;left:-1px;bottom:-1px;border-top-right-radius:var(--borderRadiusCircular);border-bottom-right-radius:var(--borderRadiusCircular);}}']}),useRootCircularContrastStyles=(0,_styles_esm.s)({withoutSecondaryAction:{Bglfifq:"ff3fe07",G4pote:["f1b2qn5y","fw1c3ou"],B33s42s:["f9bjnkc","f17ca6ku"],w20ur:["f6k8nl2","f1ik0cvg"],Byczuf6:["f10f1qdh","fmb7qm7"]}},{m:[["@media (forced-colors: active){.ff3fe07{position:relative;}}",{m:"(forced-colors: active)"}],["@media (forced-colors: active){.f1b2qn5y::before{border-right-width:var(--strokeWidthThin);}.fw1c3ou::before{border-left-width:var(--strokeWidthThin);}}",{m:"(forced-colors: active)"}],["@media (forced-colors: active){.f17ca6ku::before{border-left-style:solid;}.f9bjnkc::before{border-right-style:solid;}}",{m:"(forced-colors: active)"}],["@media (forced-colors: active){.f1ik0cvg::before{border-top-left-radius:var(--borderRadiusCircular);}.f6k8nl2::before{border-top-right-radius:var(--borderRadiusCircular);}}",{m:"(forced-colors: active)"}],["@media (forced-colors: active){.f10f1qdh::before{border-bottom-right-radius:var(--borderRadiusCircular);}.fmb7qm7::before{border-bottom-left-radius:var(--borderRadiusCircular);}}",{m:"(forced-colors: active)"}]]}),useInteractionTagPrimaryStyles_styles_useRootStyles=(0,_styles_esm.s)({filled:{De3pzq:"f16xq7d1",sj55zd:"fkfq4zb",eoavqd:"f8491dx",Jwef8y:"f1h648pw",Bi91k9c:"fnwyq0v",ecr2s2:"fwdzr64",lj723h:"flvvhsy",Bqrx1nm:"fq7113v",kx9iu6:"fp3oj7s"},outline:{De3pzq:"fhovq9v",sj55zd:"fkfq4zb",g2u3we:"fj3muxo",h3c5rm:["f1akhkt","f1lxtadh"],B9xav0g:"f1aperda",zhjwy3:["f1lxtadh","f1akhkt"],eoavqd:"f8491dx",Jwef8y:"f1t94bn6",Bi91k9c:"fnwyq0v",Bk3fhr4:"ft1hn21",I6i3kg:"fqbfmpb",Bmfj8id:"fuxngvv",ecr2s2:"f1wfn5kd",lj723h:"flvvhsy",Bnrwwps:"fvpl5sy",weioyw:"f1xblose",Bpre390:"f8upcvr",Bqrx1nm:"fq7113v",kx9iu6:"fp3oj7s"},brand:{De3pzq:"f16xkysk",sj55zd:"f16muhyy",eoavqd:"f8491dx",Jwef8y:"f1yj72w4",Bi91k9c:"f3ymbdj",ecr2s2:"fy3sl2y",lj723h:"fryz5bw",Bqrx1nm:"fq7113v",kx9iu6:"fp3oj7s"},medium:{z189sj:["f18k1jr3","f1rtp3s9"]},small:{z189sj:["fwiuce9","f15vdbe4"]},"extra-small":{z189sj:["fwiuce9","f15vdbe4"]}},{d:[".f16xq7d1{background-color:var(--colorNeutralBackground3);}",".fkfq4zb{color:var(--colorNeutralForeground2);}",".fhovq9v{background-color:var(--colorSubtleBackground);}",".fj3muxo{border-top-color:var(--colorNeutralStroke1);}",".f1akhkt{border-right-color:var(--colorNeutralStroke1);}",".f1lxtadh{border-left-color:var(--colorNeutralStroke1);}",".f1aperda{border-bottom-color:var(--colorNeutralStroke1);}",".f16xkysk{background-color:var(--colorBrandBackground2);}",".f16muhyy{color:var(--colorBrandForeground1);}",".f18k1jr3{padding-right:7px;}",".f1rtp3s9{padding-left:7px;}",".fwiuce9{padding-right:5px;}",".f15vdbe4{padding-left:5px;}"],h:[".f8491dx:hover{cursor:pointer;}",".f1h648pw:hover{background-color:var(--colorNeutralBackground3Hover);}",".fnwyq0v:hover{color:var(--colorNeutralForeground2Hover);}",".f1t94bn6:hover{background-color:var(--colorSubtleBackgroundHover);}",".ft1hn21:hover .fui-Icon-filled{display:inline;}",".fqbfmpb:hover .fui-Icon-filled{color:var(--colorNeutralForeground2BrandHover);}",".fuxngvv:hover .fui-Icon-regular{display:none;}",".f1yj72w4:hover{background-color:var(--colorBrandBackground2Hover);}",".f3ymbdj:hover{color:var(--colorCompoundBrandForeground1Hover);}"],a:[".fwdzr64:active{background-color:var(--colorNeutralBackground3Pressed);}",".flvvhsy:active{color:var(--colorNeutralForeground2Pressed);}",".f1wfn5kd:active{background-color:var(--colorSubtleBackgroundPressed);}",".fvpl5sy:active .fui-Icon-filled{display:inline;}",".f1xblose:active .fui-Icon-filled{color:var(--colorNeutralForeground2BrandPressed);}",".f8upcvr:active .fui-Icon-regular{display:none;}",".fy3sl2y:active{background-color:var(--colorBrandBackground2Pressed);}",".fryz5bw:active{color:var(--colorCompoundBrandForeground1Pressed);}"],m:[["@media (forced-colors: active){.fq7113v:hover{background-color:HighlightText;}}",{m:"(forced-colors: active)"}],["@media (forced-colors: active){.fp3oj7s:active{background-color:HighlightText;}}",{m:"(forced-colors: active)"}]]}),useRootDisabledAppearances=(0,_styles_esm.s)({filled:{Bceei9c:"fdrzuqr",De3pzq:"f1bg9a2p",sj55zd:"f1s2aq7o",g2u3we:"fgig46g",h3c5rm:["f1mxt3zg","fziff3p"],B9xav0g:"f250w3l",zhjwy3:["fziff3p","f1mxt3zg"]},outline:{Bceei9c:"fdrzuqr",De3pzq:"fhovq9v",sj55zd:"f1s2aq7o",g2u3we:"f1jj8ep1",h3c5rm:["f15xbau","fy0fskl"],B9xav0g:"f4ikngz",zhjwy3:["fy0fskl","f15xbau"]},brand:{Bceei9c:"fdrzuqr",De3pzq:"f1bg9a2p",sj55zd:"f1s2aq7o",g2u3we:"fgig46g",h3c5rm:["f1mxt3zg","fziff3p"],B9xav0g:"f250w3l",zhjwy3:["fziff3p","f1mxt3zg"]}},{d:[".fdrzuqr{cursor:not-allowed;}",".f1bg9a2p{background-color:var(--colorNeutralBackgroundDisabled);}",".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}",".fgig46g{border-top-color:var(--colorTransparentStrokeDisabled);}",".f1mxt3zg{border-right-color:var(--colorTransparentStrokeDisabled);}",".fziff3p{border-left-color:var(--colorTransparentStrokeDisabled);}",".f250w3l{border-bottom-color:var(--colorTransparentStrokeDisabled);}",".fhovq9v{background-color:var(--colorSubtleBackground);}",".f1jj8ep1{border-top-color:var(--colorNeutralStrokeDisabled);}",".f15xbau{border-right-color:var(--colorNeutralStrokeDisabled);}",".fy0fskl{border-left-color:var(--colorNeutralStrokeDisabled);}",".f4ikngz{border-bottom-color:var(--colorNeutralStrokeDisabled);}"]}),useInteractionTagPrimaryStyles_styles_useRootWithoutMediaStyles=(0,_styles_esm.s)({medium:{uwmqm3:["f1rtp3s9","f18k1jr3"]},small:{uwmqm3:["f15vdbe4","fwiuce9"]},"extra-small":{uwmqm3:["f15vdbe4","fwiuce9"]}},{d:[".f1rtp3s9{padding-left:7px;}",".f18k1jr3{padding-right:7px;}",".f15vdbe4{padding-left:5px;}",".fwiuce9{padding-right:5px;}"]}),useRootWithSecondaryActionStyles=(0,_styles_esm.s)({base:{B7oj6ja:["f3fg2lr","f13av6d4"],Bbmb7ep:["fzi6hpg","fyowgf4"],vrafjx:["f1n71otn","f1deefiw"],B6xbmo0:["f146y5a9","f1k2ftg"],kdpuga:["f1ndz5i7","f1co4qro"]},medium:{z189sj:["f1vdfbxk","f1f5gg8d"]},small:{z189sj:["fdw0yi8","fk8j09s"]},"extra-small":{z189sj:["fdw0yi8","fk8j09s"]}},{d:[".f3fg2lr{border-top-right-radius:var(--borderRadiusNone);}",".f13av6d4{border-top-left-radius:var(--borderRadiusNone);}",".fzi6hpg{border-bottom-right-radius:var(--borderRadiusNone);}",".fyowgf4{border-bottom-left-radius:var(--borderRadiusNone);}",".f1n71otn{border-right-style:none;}",".f1deefiw{border-left-style:none;}",".f146y5a9[data-fui-focus-visible]{border-top-right-radius:var(--borderRadiusNone);}",".f1k2ftg[data-fui-focus-visible]{border-top-left-radius:var(--borderRadiusNone);}",".f1ndz5i7[data-fui-focus-visible]{border-bottom-right-radius:var(--borderRadiusNone);}",".f1co4qro[data-fui-focus-visible]{border-bottom-left-radius:var(--borderRadiusNone);}",".f1vdfbxk{padding-right:var(--spacingHorizontalS);}",".f1f5gg8d{padding-left:var(--spacingHorizontalS);}",".fdw0yi8{padding-right:var(--spacingHorizontalSNudge);}",".fk8j09s{padding-left:var(--spacingHorizontalSNudge);}"]}),useInteractionTagPrimaryStyles_unstable=state=>{let rootRoundedBaseClassName=useInteractionTagPrimaryStyles_styles_useRootRoundedBaseClassName(),rootCircularBaseClassName=useInteractionTagPrimaryStyles_styles_useRootCircularBaseClassName(),rootStyles=useInteractionTagPrimaryStyles_styles_useRootStyles(),rootDisabledAppearances=useRootDisabledAppearances(),rootWithoutMediaStyles=useInteractionTagPrimaryStyles_styles_useRootWithoutMediaStyles(),rootWithSecondaryActionStyles=useRootWithSecondaryActionStyles(),iconStyles=useIconStyles(),mediaStyles=useMediaStyles(),primaryTextStyles=usePrimaryTextStyles(),secondaryTextBaseClassName=useSecondaryTextBaseClassName(),rootCircularContrastStyles=useRootCircularContrastStyles(),{shape,size,appearance}=state;return state.root.className=(0,mergeClasses_esm.z)(interactionTagPrimaryClassNames.root,"rounded"===shape?rootRoundedBaseClassName:rootCircularBaseClassName,"circular"===shape&&!state.hasSecondaryAction&&rootCircularContrastStyles.withoutSecondaryAction,state.disabled?rootDisabledAppearances[appearance]:rootStyles[appearance],rootStyles[size],!state.media&&!state.icon&&rootWithoutMediaStyles[size],state.hasSecondaryAction&&rootWithSecondaryActionStyles.base,state.hasSecondaryAction&&rootWithSecondaryActionStyles[size],state.root.className),state.media&&(state.media.className=(0,mergeClasses_esm.z)(interactionTagPrimaryClassNames.media,mediaStyles.base,mediaStyles[size],state.media.className)),state.icon&&(state.icon.className=(0,mergeClasses_esm.z)(interactionTagPrimaryClassNames.icon,iconStyles.base,iconStyles[size],state.icon.className)),state.primaryText&&(state.primaryText.className=(0,mergeClasses_esm.z)(interactionTagPrimaryClassNames.primaryText,primaryTextStyles.base,primaryTextStyles[size],state.secondaryText?primaryTextStyles.withSecondaryText:primaryTextStyles.withoutSecondaryText,state.primaryText.className)),state.secondaryText&&(state.secondaryText.className=(0,mergeClasses_esm.z)(interactionTagPrimaryClassNames.secondaryText,secondaryTextBaseClassName,state.secondaryText.className)),state};function useTagAvatarContextValues_unstable(state){let{avatarSize,avatarShape}=state;return{avatar:react.useMemo(()=>({size:avatarSize,shape:avatarShape}),[avatarShape,avatarSize])}}var CustomStyleHooksContext=__webpack_require__("./node_modules/@fluentui/react-shared-contexts/lib/CustomStyleHooksContext/CustomStyleHooksContext.js");let InteractionTagPrimary=react.forwardRef((props,ref)=>{let state=useInteractionTagPrimary_unstable(props,ref);return useInteractionTagPrimaryStyles_unstable(state),(0,CustomStyleHooksContext.oj)("useInteractionTagPrimaryStyles_unstable")(state),renderInteractionTagPrimary_unstable(state,useTagAvatarContextValues_unstable(state))});InteractionTagPrimary.displayName="InteractionTagPrimary"},"./node_modules/@fluentui/react-tags/lib/components/InteractionTag/InteractionTag.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{M:()=>InteractionTag});var react=__webpack_require__("./node_modules/react/index.js"),useId=__webpack_require__("./node_modules/@fluentui/react-utilities/lib/hooks/useId.js"),slot=__webpack_require__("./node_modules/@fluentui/react-utilities/lib/compose/slot.js"),getNativeElementProps=__webpack_require__("./node_modules/@fluentui/react-utilities/lib/utils/getNativeElementProps.js");let TagGroupContext=react.createContext(void 0),tagGroupContextDefaultValue={handleTagDismiss:()=>({}),size:"medium"};TagGroupContext.Provider;let useTagGroupContext_unstable=()=>{var _React_useContext;return null!==(_React_useContext=react.useContext(TagGroupContext))&&void 0!==_React_useContext?_React_useContext:tagGroupContextDefaultValue},useInteractionTag_unstable=(props,ref)=>{let{handleTagDismiss,size:contextSize}=useTagGroupContext_unstable(),id=(0,useId.Me)("fui-InteractionTag-",props.id),interactionTagPrimaryId=(0,useId.Me)("fui-InteractionTagPrimary-"),{appearance="filled",disabled=!1,shape="rounded",size=contextSize,value=id}=props;return{appearance,disabled,handleTagDismiss,interactionTagPrimaryId,shape,size,value,components:{root:"div"},root:slot.Bx((0,getNativeElementProps.n)("div",{ref,...props,id}),{elementType:"div"})}};var jsx_runtime=__webpack_require__("./node_modules/@fluentui/react-jsx-runtime/lib/jsx-runtime.js"),assertSlots=__webpack_require__("./node_modules/@fluentui/react-utilities/lib/compose/assertSlots.js"),interactionTagContext=__webpack_require__("./node_modules/@fluentui/react-tags/lib/contexts/interactionTagContext.js");let renderInteractionTag_unstable=(state,contextValues)=>((0,assertSlots.a)(state),(0,jsx_runtime.tZ)(interactionTagContext.V2,{value:contextValues.interactionTag,children:(0,jsx_runtime.tZ)(state.root,{})}));var _resetStyles_esm=__webpack_require__("./node_modules/@griffel/react/__resetStyles.esm.js"),_styles_esm=__webpack_require__("./node_modules/@griffel/react/__styles.esm.js"),mergeClasses_esm=__webpack_require__("./node_modules/@griffel/core/mergeClasses.esm.js");let useRootBaseClassName=(0,_resetStyles_esm.U)("r1y684pp",null,[".r1y684pp{display:inline-flex;align-items:center;box-sizing:border-box;width:fit-content;}"]),useRootStyles=(0,_styles_esm.s)({rounded:{Bbmb7ep:["f1aa9q02","f16jpd5f"],Beyfa6y:["f16jpd5f","f1aa9q02"],B7oj6ja:["f1jar5jt","fyu767a"],Btl43ni:["fyu767a","f1jar5jt"]},circular:{Bbmb7ep:["f8fbkgy","f1nfllo7"],Beyfa6y:["f1nfllo7","f8fbkgy"],B7oj6ja:["f1djnp8u","f1s8kh49"],Btl43ni:["f1s8kh49","f1djnp8u"]},medium:{Bqenvij:"f1d2rq10"},small:{Bqenvij:"frvgh55"},"extra-small":{Bqenvij:"fjamq6b"}},{d:[".f1aa9q02{border-bottom-right-radius:var(--borderRadiusMedium);}",".f16jpd5f{border-bottom-left-radius:var(--borderRadiusMedium);}",".f1jar5jt{border-top-right-radius:var(--borderRadiusMedium);}",".fyu767a{border-top-left-radius:var(--borderRadiusMedium);}",".f8fbkgy{border-bottom-right-radius:var(--borderRadiusCircular);}",".f1nfllo7{border-bottom-left-radius:var(--borderRadiusCircular);}",".f1djnp8u{border-top-right-radius:var(--borderRadiusCircular);}",".f1s8kh49{border-top-left-radius:var(--borderRadiusCircular);}",".f1d2rq10{height:32px;}",".frvgh55{height:24px;}",".fjamq6b{height:20px;}"]}),useInteractionTagStyles_unstable=state=>{let rootBaseClassName=useRootBaseClassName(),rootStyles=useRootStyles(),{shape,size}=state;return state.root.className=(0,mergeClasses_esm.z)("fui-InteractionTag",rootBaseClassName,rootStyles[shape],rootStyles[size],state.root.className),state};function useInteractionTagContextValues_unstable(state){let{appearance,disabled,handleTagDismiss,interactionTagPrimaryId,shape,size,value}=state;return{interactionTag:react.useMemo(()=>({appearance,disabled,handleTagDismiss,interactionTagPrimaryId,shape,size,value}),[appearance,disabled,handleTagDismiss,interactionTagPrimaryId,shape,size,value])}}var CustomStyleHooksContext=__webpack_require__("./node_modules/@fluentui/react-shared-contexts/lib/CustomStyleHooksContext/CustomStyleHooksContext.js");let InteractionTag=react.forwardRef((props,ref)=>{let state=useInteractionTag_unstable(props,ref);return useInteractionTagStyles_unstable(state),(0,CustomStyleHooksContext.oj)("useInteractionTagStyles_unstable")(state),renderInteractionTag_unstable(state,useInteractionTagContextValues_unstable(state))});InteractionTag.displayName="InteractionTag"},"./node_modules/@fluentui/react-tags/lib/contexts/interactionTagContext.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{MQ:()=>useInteractionTagContext_unstable,V2:()=>InteractionTagContextProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");let InteractionTagContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(void 0),interactionTagContextDefaultValue={appearance:"filled",disabled:!1,handleTagDismiss:()=>({}),interactionTagPrimaryId:"",shape:"rounded",size:"medium",value:""},InteractionTagContextProvider=InteractionTagContext.Provider,useInteractionTagContext_unstable=()=>{var _React_useContext;return null!==(_React_useContext=react__WEBPACK_IMPORTED_MODULE_0__.useContext(InteractionTagContext))&&void 0!==_React_useContext?_React_useContext:interactionTagContextDefaultValue}},"./node_modules/@fluentui/react-utilities/lib/compose/assertSlots.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";function assertSlots(state){}__webpack_require__.d(__webpack_exports__,{a:()=>assertSlots}),__webpack_require__("./node_modules/react/index.js")},"./node_modules/@fluentui/react-utilities/lib/compose/constants.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{A:()=>SLOT_RENDER_FUNCTION_SYMBOL,v:()=>SLOT_ELEMENT_TYPE_SYMBOL});let SLOT_RENDER_FUNCTION_SYMBOL=Symbol("fui.slotRenderFunction"),SLOT_ELEMENT_TYPE_SYMBOL=Symbol("fui.slotElementType")},"./node_modules/@fluentui/react-utilities/lib/compose/slot.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Bx:()=>always,jt:()=>optional});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_constants__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@fluentui/react-utilities/lib/compose/constants.js");function always(value,options){let{defaultProps,elementType}=options,props=resolveShorthand(value),propsWithMetadata={...defaultProps,...props,[_constants__WEBPACK_IMPORTED_MODULE_1__.v]:elementType};return props&&"function"==typeof props.children&&(propsWithMetadata[_constants__WEBPACK_IMPORTED_MODULE_1__.A]=props.children,propsWithMetadata.children=null==defaultProps?void 0:defaultProps.children),propsWithMetadata}function optional(value,options){if(null!==value&&(void 0!==value||options.renderByDefault))return always(value,options)}function resolveShorthand(value){return"string"==typeof value||"number"==typeof value||Array.isArray(value)||react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(value)?{children:value}:value}},"./node_modules/@fluentui/react-utilities/lib/hooks/useId.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Me:()=>useId});var react=__webpack_require__("./node_modules/react/index.js"),react_namespaceObject=__webpack_require__.t(react,2);let SSRContext_defaultSSRContextValue={current:0},SSRContext=react.createContext(void 0);function useSSRContext(){var _React_useContext;return null!==(_React_useContext=react.useContext(SSRContext))&&void 0!==_React_useContext?_React_useContext:SSRContext_defaultSSRContextValue}let IdPrefixContext=react.createContext(void 0);function useIdPrefix(){return react.useContext(IdPrefixContext)||""}function useId(prefix="fui-",providedId){let contextValue=useSSRContext(),idPrefix=useIdPrefix(),_useId=react_namespaceObject.useId;if(_useId){let generatedId=_useId(),escapedId=react.useMemo(()=>generatedId.replace(/:/g,""),[generatedId]);return providedId||`${idPrefix}${prefix}${escapedId}`}return react.useMemo(()=>providedId||`${idPrefix}${prefix}${++contextValue.current}`,[idPrefix,prefix,providedId,contextValue])}IdPrefixContext.Provider},"./node_modules/@fluentui/react-utilities/lib/hooks/useIsomorphicLayoutEffect.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{L:()=>useIsomorphicLayoutEffect});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");let useIsomorphicLayoutEffect=(0,__webpack_require__("./node_modules/@fluentui/react-utilities/lib/ssr/canUseDOM.js").N)()?react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect:react__WEBPACK_IMPORTED_MODULE_0__.useEffect},"./node_modules/@fluentui/react-utilities/lib/hooks/useMergedRefs.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{r:()=>useMergedRefs});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function useMergedRefs(...refs){let mergedCallback=react__WEBPACK_IMPORTED_MODULE_0__.useCallback(value=>{for(let ref of(mergedCallback.current=value,refs))"function"==typeof ref?ref(value):ref&&(ref.current=value)},[...refs]);return mergedCallback}},"./node_modules/@fluentui/react-utilities/lib/ssr/canUseDOM.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";function canUseDOM(){return"undefined"!=typeof window&&!!(window.document&&window.document.createElement)}__webpack_require__.d(__webpack_exports__,{N:()=>canUseDOM})},"./node_modules/@fluentui/react-utilities/lib/utils/getNativeElementProps.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{n:()=>getNativeElementProps,$:()=>getPartitionedNativeProps}),__webpack_require__("./node_modules/react/index.js");let toObjectMap=(...items)=>{let result={};for(let item of items)for(let key of Array.isArray(item)?item:Object.keys(item))result[key]=1;return result},baseElementEvents=toObjectMap(["onAuxClick","onAnimationEnd","onAnimationStart","onCopy","onCut","onPaste","onCompositionEnd","onCompositionStart","onCompositionUpdate","onFocus","onFocusCapture","onBlur","onBlurCapture","onChange","onInput","onSubmit","onLoad","onError","onKeyDown","onKeyDownCapture","onKeyPress","onKeyUp","onAbort","onCanPlay","onCanPlayThrough","onDurationChange","onEmptied","onEncrypted","onEnded","onLoadedData","onLoadedMetadata","onLoadStart","onPause","onPlay","onPlaying","onProgress","onRateChange","onSeeked","onSeeking","onStalled","onSuspend","onTimeUpdate","onVolumeChange","onWaiting","onClick","onClickCapture","onContextMenu","onDoubleClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onMouseDown","onMouseDownCapture","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onMouseUpCapture","onSelect","onTouchCancel","onTouchEnd","onTouchMove","onTouchStart","onScroll","onWheel","onPointerCancel","onPointerDown","onPointerEnter","onPointerLeave","onPointerMove","onPointerOut","onPointerOver","onPointerUp","onGotPointerCapture","onLostPointerCapture"]),baseElementProperties=toObjectMap(["accessKey","children","className","contentEditable","dir","draggable","hidden","htmlFor","id","lang","ref","role","style","tabIndex","title","translate","spellCheck","name"]),microdataProperties=toObjectMap(["itemID","itemProp","itemRef","itemScope","itemType"]),htmlElementProperties=toObjectMap(baseElementProperties,baseElementEvents,microdataProperties),labelProperties=toObjectMap(htmlElementProperties,["form"]),audioProperties=toObjectMap(htmlElementProperties,["height","loop","muted","preload","src","width"]),videoProperties=toObjectMap(audioProperties,["poster"]),olProperties=toObjectMap(htmlElementProperties,["start"]),liProperties=toObjectMap(htmlElementProperties,["value"]),anchorProperties=toObjectMap(htmlElementProperties,["download","href","hrefLang","media","rel","target","type"]),timeProperties=toObjectMap(htmlElementProperties,["dateTime"]),buttonProperties=toObjectMap(htmlElementProperties,["autoFocus","disabled","form","formAction","formEncType","formMethod","formNoValidate","formTarget","type","value"]),inputProperties=toObjectMap(buttonProperties,["accept","alt","autoCapitalize","autoComplete","checked","dirname","form","height","inputMode","list","max","maxLength","min","multiple","pattern","placeholder","readOnly","required","src","step","size","type","value","width"]),textAreaProperties=toObjectMap(buttonProperties,["autoCapitalize","cols","dirname","form","maxLength","placeholder","readOnly","required","rows","wrap"]),selectProperties=toObjectMap(buttonProperties,["form","multiple","required"]),optionProperties=toObjectMap(htmlElementProperties,["selected","value"]),tableProperties=toObjectMap(htmlElementProperties,["cellPadding","cellSpacing"]),thProperties=toObjectMap(htmlElementProperties,["colSpan","rowSpan","scope"]),tdProperties=toObjectMap(htmlElementProperties,["colSpan","headers","rowSpan","scope"]),colGroupProperties=toObjectMap(htmlElementProperties,["span"]),colProperties=toObjectMap(htmlElementProperties,["span"]),fieldsetProperties=toObjectMap(htmlElementProperties,["disabled","form"]),formProperties=toObjectMap(htmlElementProperties,["acceptCharset","action","encType","encType","method","noValidate","target"]),iframeProperties=toObjectMap(htmlElementProperties,["allow","allowFullScreen","allowPaymentRequest","allowTransparency","csp","height","importance","referrerPolicy","sandbox","src","srcDoc","width"]),imgProperties=toObjectMap(htmlElementProperties,["alt","crossOrigin","height","src","srcSet","useMap","width"]),dialogProperties=toObjectMap(htmlElementProperties,["open","onCancel","onClose"]);function getNativeProps(props,allowedPropNames,excludedPropNames){let isArray=Array.isArray(allowedPropNames),result={};for(let key of Object.keys(props))(!isArray&&allowedPropNames[key]||isArray&&allowedPropNames.indexOf(key)>=0||0===key.indexOf("data-")||0===key.indexOf("aria-"))&&(!excludedPropNames||(null==excludedPropNames?void 0:excludedPropNames.indexOf(key))===-1)&&(result[key]=props[key]);return result}let nativeElementMap={label:labelProperties,audio:audioProperties,video:videoProperties,ol:olProperties,li:liProperties,a:anchorProperties,button:buttonProperties,input:inputProperties,textarea:textAreaProperties,select:selectProperties,option:optionProperties,table:tableProperties,tr:htmlElementProperties,th:thProperties,td:tdProperties,colGroup:colGroupProperties,col:colProperties,fieldset:fieldsetProperties,form:formProperties,iframe:iframeProperties,img:imgProperties,time:timeProperties,dialog:dialogProperties};function getNativeElementProps(tagName,props,excludedPropNames){let allowedPropNames=tagName&&nativeElementMap[tagName]||htmlElementProperties;return allowedPropNames.as=1,getNativeProps(props,allowedPropNames,excludedPropNames)}let getPartitionedNativeProps=({primarySlotTagName,props,excludedPropNames})=>({root:{style:props.style,className:props.className},primary:getNativeElementProps(primarySlotTagName,props,[...excludedPropNames||[],"style","className"])})},"./node_modules/@fluentui/react-utilities/lib/utils/mergeCallbacks.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";function mergeCallbacks(callback1,callback2){return(...args)=>{null==callback1||callback1(...args),null==callback2||callback2(...args)}}__webpack_require__.d(__webpack_exports__,{E:()=>mergeCallbacks})},"./node_modules/@fluentui/tokens/lib/alias/darkColorPalette.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{K:()=>colorPaletteTokens,e:()=>colorStatusTokens});var _global_colorPalette__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@fluentui/tokens/lib/global/colorPalette.js"),_sharedColorNames__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@fluentui/tokens/lib/sharedColorNames.js"),_statusColorMapping__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@fluentui/tokens/lib/statusColorMapping.js");let statusColorPaletteTokens=_sharedColorNames__WEBPACK_IMPORTED_MODULE_0__.PN.reduce((acc,sharedColor)=>{let color=sharedColor.slice(0,1).toUpperCase()+sharedColor.slice(1);return Object.assign(acc,{[`colorPalette${color}Background1`]:_global_colorPalette__WEBPACK_IMPORTED_MODULE_1__.bv[sharedColor].shade40,[`colorPalette${color}Background2`]:_global_colorPalette__WEBPACK_IMPORTED_MODULE_1__.bv[sharedColor].shade30,[`colorPalette${color}Background3`]:_global_colorPalette__WEBPACK_IMPORTED_MODULE_1__.bv[sharedColor].primary,[`colorPalette${color}Foreground1`]:_global_colorPalette__WEBPACK_IMPORTED_MODULE_1__.bv[sharedColor].tint30,[`colorPalette${color}Foreground2`]:_global_colorPalette__WEBPACK_IMPORTED_MODULE_1__.bv[sharedColor].tint40,[`colorPalette${color}Foreground3`]:_global_colorPalette__WEBPACK_IMPORTED_MODULE_1__.bv[sharedColor].tint20,[`colorPalette${color}BorderActive`]:_global_colorPalette__WEBPACK_IMPORTED_MODULE_1__.bv[sharedColor].tint30,[`colorPalette${color}Border1`]:_global_colorPalette__WEBPACK_IMPORTED_MODULE_1__.bv[sharedColor].primary,[`colorPalette${color}Border2`]:_global_colorPalette__WEBPACK_IMPORTED_MODULE_1__.bv[sharedColor].tint20})},{});statusColorPaletteTokens.colorPaletteRedForeground3=_global_colorPalette__WEBPACK_IMPORTED_MODULE_1__.bv.red.tint30,statusColorPaletteTokens.colorPaletteRedBorder2=_global_colorPalette__WEBPACK_IMPORTED_MODULE_1__.bv.red.tint30,statusColorPaletteTokens.colorPaletteGreenForeground3=_global_colorPalette__WEBPACK_IMPORTED_MODULE_1__.bv.green.tint40,statusColorPaletteTokens.colorPaletteGreenBorder2=_global_colorPalette__WEBPACK_IMPORTED_MODULE_1__.bv.green.tint40,statusColorPaletteTokens.colorPaletteDarkOrangeForeground3=_global_colorPalette__WEBPACK_IMPORTED_MODULE_1__.bv.darkOrange.tint30,statusColorPaletteTokens.colorPaletteDarkOrangeBorder2=_global_colorPalette__WEBPACK_IMPORTED_MODULE_1__.bv.darkOrange.tint30,statusColorPaletteTokens.colorPaletteRedForegroundInverted=_global_colorPalette__WEBPACK_IMPORTED_MODULE_1__.bv.red.primary,statusColorPaletteTokens.colorPaletteGreenForegroundInverted=_global_colorPalette__WEBPACK_IMPORTED_MODULE_1__.bv.green.primary,statusColorPaletteTokens.colorPaletteYellowForegroundInverted=_global_colorPalette__WEBPACK_IMPORTED_MODULE_1__.bv.yellow.shade30;let personaColorPaletteTokens=_sharedColorNames__WEBPACK_IMPORTED_MODULE_0__.X.reduce((acc,sharedColor)=>{let color=sharedColor.slice(0,1).toUpperCase()+sharedColor.slice(1);return Object.assign(acc,{[`colorPalette${color}Background2`]:_global_colorPalette__WEBPACK_IMPORTED_MODULE_1__.Co[sharedColor].shade30,[`colorPalette${color}Foreground2`]:_global_colorPalette__WEBPACK_IMPORTED_MODULE_1__.Co[sharedColor].tint40,[`colorPalette${color}BorderActive`]:_global_colorPalette__WEBPACK_IMPORTED_MODULE_1__.Co[sharedColor].tint30})},{});personaColorPaletteTokens.colorPaletteDarkRedBackground2=_global_colorPalette__WEBPACK_IMPORTED_MODULE_1__.Co.darkRed.shade20,personaColorPaletteTokens.colorPalettePlumBackground2=_global_colorPalette__WEBPACK_IMPORTED_MODULE_1__.Co.plum.shade20;let colorPaletteTokens={...statusColorPaletteTokens,...personaColorPaletteTokens},colorStatusTokens=Object.entries(_statusColorMapping__WEBPACK_IMPORTED_MODULE_2__.$).reduce((acc,[statusColor,sharedColor])=>{let color=statusColor.slice(0,1).toUpperCase()+statusColor.slice(1);return Object.assign(acc,{[`colorStatus${color}Background1`]:_global_colorPalette__WEBPACK_IMPORTED_MODULE_1__.W3[sharedColor].shade40,[`colorStatus${color}Background2`]:_global_colorPalette__WEBPACK_IMPORTED_MODULE_1__.W3[sharedColor].shade30,[`colorStatus${color}Background3`]:_global_colorPalette__WEBPACK_IMPORTED_MODULE_1__.W3[sharedColor].primary,[`colorStatus${color}Foreground1`]:_global_colorPalette__WEBPACK_IMPORTED_MODULE_1__.W3[sharedColor].tint30,[`colorStatus${color}Foreground2`]:_global_colorPalette__WEBPACK_IMPORTED_MODULE_1__.W3[sharedColor].tint40,[`colorStatus${color}Foreground3`]:_global_colorPalette__WEBPACK_IMPORTED_MODULE_1__.W3[sharedColor].tint20,[`colorStatus${color}BorderActive`]:_global_colorPalette__WEBPACK_IMPORTED_MODULE_1__.W3[sharedColor].tint30,[`colorStatus${color}ForegroundInverted`]:_global_colorPalette__WEBPACK_IMPORTED_MODULE_1__.W3[sharedColor].shade10,[`colorStatus${color}Border1`]:_global_colorPalette__WEBPACK_IMPORTED_MODULE_1__.W3[sharedColor].primary,[`colorStatus${color}Border2`]:_global_colorPalette__WEBPACK_IMPORTED_MODULE_1__.W3[sharedColor].tint20})},{});colorStatusTokens.colorStatusDangerForeground3=_global_colorPalette__WEBPACK_IMPORTED_MODULE_1__.W3[_statusColorMapping__WEBPACK_IMPORTED_MODULE_2__.$.danger].tint30,colorStatusTokens.colorStatusDangerBorder2=_global_colorPalette__WEBPACK_IMPORTED_MODULE_1__.W3[_statusColorMapping__WEBPACK_IMPORTED_MODULE_2__.$.danger].tint30,colorStatusTokens.colorStatusSuccessForeground3=_global_colorPalette__WEBPACK_IMPORTED_MODULE_1__.W3[_statusColorMapping__WEBPACK_IMPORTED_MODULE_2__.$.success].tint40,colorStatusTokens.colorStatusSuccessBorder2=_global_colorPalette__WEBPACK_IMPORTED_MODULE_1__.W3[_statusColorMapping__WEBPACK_IMPORTED_MODULE_2__.$.success].tint40,colorStatusTokens.colorStatusWarningForegroundInverted=_global_colorPalette__WEBPACK_IMPORTED_MODULE_1__.W3[_statusColorMapping__WEBPACK_IMPORTED_MODULE_2__.$.warning].shade20},"./node_modules/@fluentui/tokens/lib/global/borderRadius.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{E:()=>borderRadius});let borderRadius={borderRadiusNone:"0",borderRadiusSmall:"2px",borderRadiusMedium:"4px",borderRadiusLarge:"6px",borderRadiusXLarge:"8px",borderRadiusCircular:"10000px"}},"./node_modules/@fluentui/tokens/lib/global/brandColors.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{EV:()=>brandTeams,au:()=>brandWeb});let brandWeb={10:"#061724",20:"#082338",30:"#0a2e4a",40:"#0c3b5e",50:"#0e4775",60:"#0f548c",70:"#115ea3",80:"#0f6cbd",90:"#2886de",100:"#479ef5",110:"#62abf5",120:"#77b7f7",130:"#96c6fa",140:"#b4d6fa",150:"#cfe4fa",160:"#ebf3fc"},brandTeams={10:"#2b2b40",20:"#2f2f4a",30:"#333357",40:"#383966",50:"#3d3e78",60:"#444791",70:"#4f52b2",80:"#5b5fc7",90:"#7579eb",100:"#7f85f5",110:"#9299f7",120:"#aab1fa",130:"#b6bcfa",140:"#c5cbfa",150:"#dce0fa",160:"#e8ebfa"}},"./node_modules/@fluentui/tokens/lib/global/colorPalette.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Co:()=>personaSharedColors,W3:()=>mappedStatusColors,bv:()=>statusSharedColors});var _colors__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@fluentui/tokens/lib/global/colors.js");let statusSharedColors={red:_colors__WEBPACK_IMPORTED_MODULE_0__.Q6,green:_colors__WEBPACK_IMPORTED_MODULE_0__.ek,darkOrange:_colors__WEBPACK_IMPORTED_MODULE_0__.nn,yellow:_colors__WEBPACK_IMPORTED_MODULE_0__.er,berry:_colors__WEBPACK_IMPORTED_MODULE_0__.Z1,lightGreen:_colors__WEBPACK_IMPORTED_MODULE_0__.ZE,marigold:_colors__WEBPACK_IMPORTED_MODULE_0__.vx},personaSharedColors={darkRed:_colors__WEBPACK_IMPORTED_MODULE_0__.o6,cranberry:_colors__WEBPACK_IMPORTED_MODULE_0__.o0,pumpkin:_colors__WEBPACK_IMPORTED_MODULE_0__.cE,peach:_colors__WEBPACK_IMPORTED_MODULE_0__.C2,gold:_colors__WEBPACK_IMPORTED_MODULE_0__.EV,brass:_colors__WEBPACK_IMPORTED_MODULE_0__.cB,brown:_colors__WEBPACK_IMPORTED_MODULE_0__.P_,forest:_colors__WEBPACK_IMPORTED_MODULE_0__.Ig,seafoam:_colors__WEBPACK_IMPORTED_MODULE_0__.$I,darkGreen:_colors__WEBPACK_IMPORTED_MODULE_0__.Ce,lightTeal:_colors__WEBPACK_IMPORTED_MODULE_0__.B8,teal:_colors__WEBPACK_IMPORTED_MODULE_0__.$C,steel:_colors__WEBPACK_IMPORTED_MODULE_0__.gr,blue:_colors__WEBPACK_IMPORTED_MODULE_0__.iN,royalBlue:_colors__WEBPACK_IMPORTED_MODULE_0__.VI,cornflower:_colors__WEBPACK_IMPORTED_MODULE_0__.wO,navy:_colors__WEBPACK_IMPORTED_MODULE_0__.Ih,lavender:_colors__WEBPACK_IMPORTED_MODULE_0__.N0,purple:_colors__WEBPACK_IMPORTED_MODULE_0__.jk,grape:_colors__WEBPACK_IMPORTED_MODULE_0__.pl,lilac:_colors__WEBPACK_IMPORTED_MODULE_0__.A5,pink:_colors__WEBPACK_IMPORTED_MODULE_0__.iQ,magenta:_colors__WEBPACK_IMPORTED_MODULE_0__.ym,plum:_colors__WEBPACK_IMPORTED_MODULE_0__.vd,beige:_colors__WEBPACK_IMPORTED_MODULE_0__.e9,mink:_colors__WEBPACK_IMPORTED_MODULE_0__.RR,platinum:_colors__WEBPACK_IMPORTED_MODULE_0__.Xd,anchor:_colors__WEBPACK_IMPORTED_MODULE_0__.Eu},mappedStatusColors={cranberry:_colors__WEBPACK_IMPORTED_MODULE_0__.o0,green:_colors__WEBPACK_IMPORTED_MODULE_0__.ek,orange:_colors__WEBPACK_IMPORTED_MODULE_0__.$y}},"./node_modules/@fluentui/tokens/lib/global/colors.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{$C:()=>teal,$I:()=>seafoam,$y:()=>orange,A5:()=>lilac,B0:()=>hcCanvasText,B8:()=>lightTeal,BA:()=>grey,C2:()=>peach,Ce:()=>darkGreen,EV:()=>gold,Eu:()=>anchor,Hf:()=>blackAlpha,Ig:()=>forest,Ih:()=>navy,KZ:()=>hcCanvas,N0:()=>lavender,NN:()=>hcButtonFace,NW:()=>hcButtonText,P_:()=>brown,Q6:()=>red,RR:()=>mink,Sn:()=>black,VI:()=>royalBlue,Xd:()=>platinum,Z1:()=>berry,ZE:()=>lightGreen,ag:()=>hcHighlightText,cB:()=>brass,cE:()=>pumpkin,d1:()=>grey10Alpha,dY:()=>hcHyperlink,e9:()=>beige,ek:()=>green,er:()=>yellow,es:()=>grey12Alpha,fD:()=>hcDisabled,gr:()=>steel,hu:()=>grey14Alpha,iN:()=>blue,iQ:()=>pink,ix:()=>white,jZ:()=>whiteAlpha,jk:()=>purple,nn:()=>darkOrange,o0:()=>cranberry,o6:()=>darkRed,pl:()=>grape,tX:()=>hcHighlight,vd:()=>plum,vx:()=>marigold,wO:()=>cornflower,ym:()=>magenta});let grey={2:"#050505",4:"#0a0a0a",6:"#0f0f0f",8:"#141414",10:"#1a1a1a",12:"#1f1f1f",14:"#242424",16:"#292929",18:"#2e2e2e",20:"#333333",22:"#383838",24:"#3d3d3d",26:"#424242",28:"#474747",30:"#4d4d4d",32:"#525252",34:"#575757",36:"#5c5c5c",38:"#616161",40:"#666666",42:"#6b6b6b",44:"#707070",46:"#757575",48:"#7a7a7a",50:"#808080",52:"#858585",54:"#8a8a8a",56:"#8f8f8f",58:"#949494",60:"#999999",62:"#9e9e9e",64:"#a3a3a3",66:"#a8a8a8",68:"#adadad",70:"#b3b3b3",72:"#b8b8b8",74:"#bdbdbd",76:"#c2c2c2",78:"#c7c7c7",80:"#cccccc",82:"#d1d1d1",84:"#d6d6d6",86:"#dbdbdb",88:"#e0e0e0",90:"#e6e6e6",92:"#ebebeb",94:"#f0f0f0",96:"#f5f5f5",98:"#fafafa"},whiteAlpha={5:"rgba(255, 255, 255, 0.05)",10:"rgba(255, 255, 255, 0.1)",20:"rgba(255, 255, 255, 0.2)",30:"rgba(255, 255, 255, 0.3)",40:"rgba(255, 255, 255, 0.4)",50:"rgba(255, 255, 255, 0.5)",60:"rgba(255, 255, 255, 0.6)",70:"rgba(255, 255, 255, 0.7)",80:"rgba(255, 255, 255, 0.8)",90:"rgba(255, 255, 255, 0.9)"},blackAlpha={5:"rgba(0, 0, 0, 0.05)",10:"rgba(0, 0, 0, 0.1)",20:"rgba(0, 0, 0, 0.2)",30:"rgba(0, 0, 0, 0.3)",40:"rgba(0, 0, 0, 0.4)",50:"rgba(0, 0, 0, 0.5)",60:"rgba(0, 0, 0, 0.6)",70:"rgba(0, 0, 0, 0.7)",80:"rgba(0, 0, 0, 0.8)",90:"rgba(0, 0, 0, 0.9)"},grey10Alpha={5:"rgba(26, 26, 26, 0.05)",10:"rgba(26, 26, 26, 0.1)",20:"rgba(26, 26, 26, 0.2)",30:"rgba(26, 26, 26, 0.3)",40:"rgba(26, 26, 26, 0.4)",50:"rgba(26, 26, 26, 0.5)",60:"rgba(26, 26, 26, 0.6)",70:"rgba(26, 26, 26, 0.7)",80:"rgba(26, 26, 26, 0.8)",90:"rgba(26, 26, 26, 0.9)"},grey12Alpha={5:"rgba(31, 31, 31, 0.05)",10:"rgba(31, 31, 31, 0.1)",20:"rgba(31, 31, 31, 0.2)",30:"rgba(31, 31, 31, 0.3)",40:"rgba(31, 31, 31, 0.4)",50:"rgba(31, 31, 31, 0.5)",60:"rgba(31, 31, 31, 0.6)",70:"rgba(31, 31, 31, 0.7)",80:"rgba(31, 31, 31, 0.8)",90:"rgba(31, 31, 31, 0.9)"},grey14Alpha={5:"rgba(36, 36, 36, 0.05)",10:"rgba(36, 36, 36, 0.1)",20:"rgba(36, 36, 36, 0.2)",30:"rgba(36, 36, 36, 0.3)",40:"rgba(36, 36, 36, 0.4)",50:"rgba(36, 36, 36, 0.5)",60:"rgba(36, 36, 36, 0.6)",70:"rgba(36, 36, 36, 0.7)",80:"rgba(36, 36, 36, 0.8)",90:"rgba(36, 36, 36, 0.9)"},white="#ffffff",black="#000000",hcHyperlink="#ffff00",hcHighlight="#1aebff",hcDisabled="#3ff23f",hcCanvas="#000000",hcCanvasText="#ffffff",hcHighlightText="#000000",hcButtonText="#000000",hcButtonFace="#ffffff",darkRed={shade50:"#130204",shade40:"#230308",shade30:"#420610",shade20:"#590815",shade10:"#690a19",primary:"#750b1c",tint10:"#861b2c",tint20:"#962f3f",tint30:"#ac4f5e",tint40:"#d69ca5",tint50:"#e9c7cd",tint60:"#f9f0f2"},cranberry={shade50:"#200205",shade40:"#3b0509",shade30:"#6e0811",shade20:"#960b18",shade10:"#b10e1c",primary:"#c50f1f",tint10:"#cc2635",tint20:"#d33f4c",tint30:"#dc626d",tint40:"#eeacb2",tint50:"#f6d1d5",tint60:"#fdf3f4"},red={shade50:"#210809",shade40:"#3f1011",shade30:"#751d1f",shade20:"#9f282b",shade10:"#bc2f32",primary:"#d13438",tint10:"#d7494c",tint20:"#dc5e62",tint30:"#e37d80",tint40:"#f1bbbc",tint50:"#f8dadb",tint60:"#fdf6f6"},darkOrange={shade50:"#230900",shade40:"#411200",shade30:"#7a2101",shade20:"#a62d01",shade10:"#c43501",primary:"#da3b01",tint10:"#de501c",tint20:"#e36537",tint30:"#e9835e",tint40:"#f4bfab",tint50:"#f9dcd1",tint60:"#fdf6f3"},pumpkin={shade50:"#200d03",shade40:"#3d1805",shade30:"#712d09",shade20:"#9a3d0c",shade10:"#b6480e",primary:"#ca5010",tint10:"#d06228",tint20:"#d77440",tint30:"#df8e64",tint40:"#efc4ad",tint50:"#f7dfd2",tint60:"#fdf7f4"},orange={shade50:"#271002",shade40:"#4a1e04",shade30:"#8a3707",shade20:"#bc4b09",shade10:"#de590b",primary:"#f7630c",tint10:"#f87528",tint20:"#f98845",tint30:"#faa06b",tint40:"#fdcfb4",tint50:"#fee5d7",tint60:"#fff9f5"},peach={shade50:"#291600",shade40:"#4d2a00",shade30:"#8f4e00",shade20:"#c26a00",shade10:"#e67e00",primary:"#ff8c00",tint10:"#ff9a1f",tint20:"#ffa83d",tint30:"#ffba66",tint40:"#ffddb3",tint50:"#ffedd6",tint60:"#fffaf5"},marigold={shade50:"#251a00",shade40:"#463100",shade30:"#835b00",shade20:"#b27c00",shade10:"#d39300",primary:"#eaa300",tint10:"#edad1c",tint20:"#efb839",tint30:"#f2c661",tint40:"#f9e2ae",tint50:"#fcefd3",tint60:"#fefbf4"},yellow={primary:"#fde300",shade10:"#e4cc00",shade20:"#c0ad00",shade30:"#817400",shade40:"#4c4400",shade50:"#282400",tint10:"#fde61e",tint20:"#fdea3d",tint30:"#feee66",tint40:"#fef7b2",tint50:"#fffad6",tint60:"#fffef5"},gold={shade50:"#1f1900",shade40:"#3a2f00",shade30:"#6c5700",shade20:"#937700",shade10:"#ae8c00",primary:"#c19c00",tint10:"#c8a718",tint20:"#d0b232",tint30:"#dac157",tint40:"#ecdfa5",tint50:"#f5eece",tint60:"#fdfbf2"},brass={shade50:"#181202",shade40:"#2e2103",shade30:"#553e06",shade20:"#745408",shade10:"#89640a",primary:"#986f0b",tint10:"#a47d1e",tint20:"#b18c34",tint30:"#c1a256",tint40:"#e0cea2",tint50:"#efe4cb",tint60:"#fbf8f2"},brown={shade50:"#170e07",shade40:"#2b1a0e",shade30:"#50301a",shade20:"#6c4123",shade10:"#804d29",primary:"#8e562e",tint10:"#9c663f",tint20:"#a97652",tint30:"#bb8f6f",tint40:"#ddc3b0",tint50:"#edded3",tint60:"#faf7f4"},forest={shade50:"#0c1501",shade40:"#162702",shade30:"#294903",shade20:"#376304",shade10:"#427505",primary:"#498205",tint10:"#599116",tint20:"#6ba02b",tint30:"#85b44c",tint40:"#bdd99b",tint50:"#dbebc7",tint60:"#f6faf0"},seafoam={shade50:"#002111",shade40:"#003d20",shade30:"#00723b",shade20:"#009b51",shade10:"#00b85f",primary:"#00cc6a",tint10:"#19d279",tint20:"#34d889",tint30:"#5ae0a0",tint40:"#a8f0cd",tint50:"#cff7e4",tint60:"#f3fdf8"},lightGreen={shade50:"#031a02",shade40:"#063004",shade30:"#0b5a08",shade20:"#0e7a0b",shade10:"#11910d",primary:"#13a10e",tint10:"#27ac22",tint20:"#3db838",tint30:"#5ec75a",tint40:"#a7e3a5",tint50:"#cef0cd",tint60:"#f2fbf2"},green={shade50:"#031403",shade40:"#052505",shade30:"#094509",shade20:"#0c5e0c",shade10:"#0e700e",primary:"#107c10",tint10:"#218c21",tint20:"#359b35",tint30:"#54b054",tint40:"#9fd89f",tint50:"#c9eac9",tint60:"#f1faf1"},darkGreen={shade50:"#021102",shade40:"#032003",shade30:"#063b06",shade20:"#085108",shade10:"#0a5f0a",primary:"#0b6a0b",tint10:"#1a7c1a",tint20:"#2d8e2d",tint30:"#4da64d",tint40:"#9ad29a",tint50:"#c6e7c6",tint60:"#f0f9f0"},lightTeal={shade50:"#001d1f",shade40:"#00373a",shade30:"#00666d",shade20:"#008b94",shade10:"#00a5af",primary:"#00b7c3",tint10:"#18bfca",tint20:"#32c8d1",tint30:"#58d3db",tint40:"#a6e9ed",tint50:"#cef3f5",tint60:"#f2fcfd"},teal={shade50:"#001516",shade40:"#012728",shade30:"#02494c",shade20:"#026467",shade10:"#037679",primary:"#038387",tint10:"#159195",tint20:"#2aa0a4",tint30:"#4cb4b7",tint40:"#9bd9db",tint50:"#c7ebec",tint60:"#f0fafa"},steel={shade50:"#000f12",shade40:"#001b22",shade30:"#00333f",shade20:"#004555",shade10:"#005265",primary:"#005b70",tint10:"#0f6c81",tint20:"#237d92",tint30:"#4496a9",tint40:"#94c8d4",tint50:"#c3e1e8",tint60:"#eff7f9"},blue={shade50:"#001322",shade40:"#002440",shade30:"#004377",shade20:"#005ba1",shade10:"#006cbf",primary:"#0078d4",tint10:"#1a86d9",tint20:"#3595de",tint30:"#5caae5",tint40:"#a9d3f2",tint50:"#d0e7f8",tint60:"#f3f9fd"},royalBlue={shade50:"#000c16",shade40:"#00172a",shade30:"#002c4e",shade20:"#003b6a",shade10:"#00467e",primary:"#004e8c",tint10:"#125e9a",tint20:"#286fa8",tint30:"#4a89ba",tint40:"#9abfdc",tint50:"#c7dced",tint60:"#f0f6fa"},cornflower={shade50:"#0d1126",shade40:"#182047",shade30:"#2c3c85",shade20:"#3c51b4",shade10:"#4760d5",primary:"#4f6bed",tint10:"#637cef",tint20:"#778df1",tint30:"#93a4f4",tint40:"#c8d1fa",tint50:"#e1e6fc",tint60:"#f7f9fe"},navy={shade50:"#00061d",shade40:"#000c36",shade30:"#001665",shade20:"#001e89",shade10:"#0023a2",primary:"#0027b4",tint10:"#173bbd",tint20:"#3050c6",tint30:"#546fd2",tint40:"#a3b2e8",tint50:"#ccd5f3",tint60:"#f2f4fc"},lavender={shade50:"#120f25",shade40:"#221d46",shade30:"#3f3682",shade20:"#5649b0",shade10:"#6656d1",primary:"#7160e8",tint10:"#8172eb",tint20:"#9184ee",tint30:"#a79cf1",tint40:"#d2ccf8",tint50:"#e7e4fb",tint60:"#f9f8fe"},purple={shade50:"#0f0717",shade40:"#1c0e2b",shade30:"#341a51",shade20:"#46236e",shade10:"#532982",primary:"#5c2e91",tint10:"#6b3f9e",tint20:"#7c52ab",tint30:"#9470bd",tint40:"#c6b1de",tint50:"#e0d3ed",tint60:"#f7f4fb"},grape={shade50:"#160418",shade40:"#29072e",shade30:"#4c0d55",shade20:"#671174",shade10:"#7a1589",primary:"#881798",tint10:"#952aa4",tint20:"#a33fb1",tint30:"#b55fc1",tint40:"#d9a7e0",tint50:"#eaceef",tint60:"#faf2fb"},berry={shade50:"#1f091d",shade40:"#3a1136",shade30:"#6d2064",shade20:"#932b88",shade10:"#af33a1",primary:"#c239b3",tint10:"#c94cbc",tint20:"#d161c4",tint30:"#da7ed0",tint40:"#edbbe7",tint50:"#f5daf2",tint60:"#fdf5fc"},lilac={shade50:"#1c0b1f",shade40:"#35153a",shade30:"#63276d",shade20:"#863593",shade10:"#9f3faf",primary:"#b146c2",tint10:"#ba58c9",tint20:"#c36bd1",tint30:"#cf87da",tint40:"#e6bfed",tint50:"#f2dcf5",tint60:"#fcf6fd"},pink={shade50:"#24091b",shade40:"#441232",shade30:"#80215d",shade20:"#ad2d7e",shade10:"#cd3595",primary:"#e43ba6",tint10:"#e750b0",tint20:"#ea66ba",tint30:"#ef85c8",tint40:"#f7c0e3",tint50:"#fbddf0",tint60:"#fef6fb"},magenta={shade50:"#1f0013",shade40:"#390024",shade30:"#6b0043",shade20:"#91005a",shade10:"#ac006b",primary:"#bf0077",tint10:"#c71885",tint20:"#ce3293",tint30:"#d957a8",tint40:"#eca5d1",tint50:"#f5cee6",tint60:"#fcf2f9"},plum={shade50:"#13000c",shade40:"#240017",shade30:"#43002b",shade20:"#5a003b",shade10:"#6b0045",primary:"#77004d",tint10:"#87105d",tint20:"#98246f",tint30:"#ad4589",tint40:"#d696c0",tint50:"#e9c4dc",tint60:"#faf0f6"},beige={shade50:"#141313",shade40:"#252323",shade30:"#444241",shade20:"#5d5958",shade10:"#6e6968",primary:"#7a7574",tint10:"#8a8584",tint20:"#9a9594",tint30:"#afabaa",tint40:"#d7d4d4",tint50:"#eae8e8",tint60:"#faf9f9"},mink={shade50:"#0f0e0e",shade40:"#1c1b1a",shade30:"#343231",shade20:"#474443",shade10:"#54514f",primary:"#5d5a58",tint10:"#706d6b",tint20:"#84817e",tint30:"#9e9b99",tint40:"#cecccb",tint50:"#e5e4e3",tint60:"#f8f8f8"},platinum={shade50:"#111314",shade40:"#1f2426",shade30:"#3b4447",shade20:"#505c60",shade10:"#5f6d71",primary:"#69797e",tint10:"#79898d",tint20:"#89989d",tint30:"#a0adb2",tint40:"#cdd6d8",tint50:"#e4e9ea",tint60:"#f8f9fa"},anchor={shade50:"#090a0b",shade40:"#111315",shade30:"#202427",shade20:"#2b3135",shade10:"#333a3f",primary:"#394146",tint10:"#4d565c",tint20:"#626c72",tint30:"#808a90",tint40:"#bcc3c7",tint50:"#dbdfe1",tint60:"#f6f7f8"}},"./node_modules/@fluentui/tokens/lib/global/curves.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{y:()=>curves});let curves={curveAccelerateMax:"cubic-bezier(1,0,1,1)",curveAccelerateMid:"cubic-bezier(0.7,0,1,0.5)",curveAccelerateMin:"cubic-bezier(0.8,0,1,1)",curveDecelerateMax:"cubic-bezier(0,0,0,1)",curveDecelerateMid:"cubic-bezier(0.1,0.9,0.2,1)",curveDecelerateMin:"cubic-bezier(0.33,0,0.1,1)",curveEasyEaseMax:"cubic-bezier(0.8,0,0.1,1)",curveEasyEase:"cubic-bezier(0.33,0,0.67,1)",curveLinear:"cubic-bezier(0,0,1,1)"}},"./node_modules/@fluentui/tokens/lib/global/durations.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{l:()=>durations});let durations={durationUltraFast:"50ms",durationFaster:"100ms",durationFast:"150ms",durationNormal:"200ms",durationGentle:"250ms",durationSlow:"300ms",durationSlower:"400ms",durationUltraSlow:"500ms"}},"./node_modules/@fluentui/tokens/lib/global/fonts.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{CH:()=>fontSizes,Vl:()=>fontFamilies,tO:()=>lineHeights,vC:()=>fontWeights});let fontSizes={fontSizeBase100:"10px",fontSizeBase200:"12px",fontSizeBase300:"14px",fontSizeBase400:"16px",fontSizeBase500:"20px",fontSizeBase600:"24px",fontSizeHero700:"28px",fontSizeHero800:"32px",fontSizeHero900:"40px",fontSizeHero1000:"68px"},lineHeights={lineHeightBase100:"14px",lineHeightBase200:"16px",lineHeightBase300:"20px",lineHeightBase400:"22px",lineHeightBase500:"28px",lineHeightBase600:"32px",lineHeightHero700:"36px",lineHeightHero800:"40px",lineHeightHero900:"52px",lineHeightHero1000:"92px"},fontWeights={fontWeightRegular:400,fontWeightMedium:500,fontWeightSemibold:600,fontWeightBold:700},fontFamilies={fontFamilyBase:"'Segoe UI', 'Segoe UI Web (West European)', -apple-system, BlinkMacSystemFont, Roboto, 'Helvetica Neue', sans-serif",fontFamilyMonospace:"Consolas, 'Courier New', Courier, monospace",fontFamilyNumeric:"Bahnschrift, 'Segoe UI', 'Segoe UI Web (West European)', -apple-system, BlinkMacSystemFont, Roboto, 'Helvetica Neue', sans-serif"}},"./node_modules/@fluentui/tokens/lib/global/spacings.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{e:()=>verticalSpacings,l:()=>horizontalSpacings});let spacings={none:"0",xxs:"2px",xs:"4px",sNudge:"6px",s:"8px",mNudge:"10px",m:"12px",l:"16px",xl:"20px",xxl:"24px",xxxl:"32px"},horizontalSpacings={spacingHorizontalNone:spacings.none,spacingHorizontalXXS:spacings.xxs,spacingHorizontalXS:spacings.xs,spacingHorizontalSNudge:spacings.sNudge,spacingHorizontalS:spacings.s,spacingHorizontalMNudge:spacings.mNudge,spacingHorizontalM:spacings.m,spacingHorizontalL:spacings.l,spacingHorizontalXL:spacings.xl,spacingHorizontalXXL:spacings.xxl,spacingHorizontalXXXL:spacings.xxxl},verticalSpacings={spacingVerticalNone:spacings.none,spacingVerticalXXS:spacings.xxs,spacingVerticalXS:spacings.xs,spacingVerticalSNudge:spacings.sNudge,spacingVerticalS:spacings.s,spacingVerticalMNudge:spacings.mNudge,spacingVerticalM:spacings.m,spacingVerticalL:spacings.l,spacingVerticalXL:spacings.xl,spacingVerticalXXL:spacings.xxl,spacingVerticalXXXL:spacings.xxxl}},"./node_modules/@fluentui/tokens/lib/global/strokeWidths.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{G:()=>strokeWidths});let strokeWidths={strokeWidthThin:"1px",strokeWidthThick:"2px",strokeWidthThicker:"3px",strokeWidthThickest:"4px"}},"./node_modules/@fluentui/tokens/lib/sharedColorNames.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{PN:()=>statusSharedColorNames,X:()=>personaSharedColorNames});let statusSharedColorNames=["red","green","darkOrange","yellow","berry","lightGreen","marigold"],personaSharedColorNames=["darkRed","cranberry","pumpkin","peach","gold","brass","brown","forest","seafoam","darkGreen","lightTeal","teal","steel","blue","royalBlue","cornflower","navy","lavender","purple","grape","lilac","pink","magenta","plum","beige","mink","platinum","anchor"]},"./node_modules/@fluentui/tokens/lib/statusColorMapping.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{$:()=>statusColorMapping});let statusColorMapping={success:"green",warning:"orange",danger:"cranberry"}},"./node_modules/@fluentui/tokens/lib/themes/teams/darkTheme.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{$:()=>teamsDarkTheme});var darkColorPalette=__webpack_require__("./node_modules/@fluentui/tokens/lib/alias/darkColorPalette.js"),colors=__webpack_require__("./node_modules/@fluentui/tokens/lib/global/colors.js");let generateColorTokens=brand=>({colorNeutralForeground1:colors.ix,colorNeutralForeground1Hover:colors.ix,colorNeutralForeground1Pressed:colors.ix,colorNeutralForeground1Selected:colors.ix,colorNeutralForeground2:colors.BA[84],colorNeutralForeground2Hover:colors.ix,colorNeutralForeground2Pressed:colors.ix,colorNeutralForeground2Selected:colors.ix,colorNeutralForeground2BrandHover:brand[100],colorNeutralForeground2BrandPressed:brand[90],colorNeutralForeground2BrandSelected:brand[100],colorNeutralForeground3:colors.BA[68],colorNeutralForeground3Hover:colors.BA[84],colorNeutralForeground3Pressed:colors.BA[84],colorNeutralForeground3Selected:colors.BA[84],colorNeutralForeground3BrandHover:brand[100],colorNeutralForeground3BrandPressed:brand[90],colorNeutralForeground3BrandSelected:brand[100],colorNeutralForeground4:colors.BA[60],colorNeutralForegroundDisabled:colors.BA[36],colorNeutralForegroundInvertedDisabled:colors.jZ[40],colorBrandForegroundLink:brand[100],colorBrandForegroundLinkHover:brand[110],colorBrandForegroundLinkPressed:brand[90],colorBrandForegroundLinkSelected:brand[100],colorNeutralForeground2Link:colors.BA[84],colorNeutralForeground2LinkHover:colors.ix,colorNeutralForeground2LinkPressed:colors.ix,colorNeutralForeground2LinkSelected:colors.ix,colorCompoundBrandForeground1:brand[100],colorCompoundBrandForeground1Hover:brand[110],colorCompoundBrandForeground1Pressed:brand[90],colorBrandForeground1:brand[100],colorBrandForeground2:brand[120],colorBrandForeground2Hover:brand[130],colorBrandForeground2Pressed:brand[160],colorNeutralForeground1Static:colors.BA[14],colorNeutralForegroundStaticInverted:colors.ix,colorNeutralForegroundInverted:colors.BA[14],colorNeutralForegroundInvertedHover:colors.BA[14],colorNeutralForegroundInvertedPressed:colors.BA[14],colorNeutralForegroundInvertedSelected:colors.BA[14],colorNeutralForegroundInverted2:colors.BA[14],colorNeutralForegroundOnBrand:colors.ix,colorNeutralForegroundInvertedLink:colors.ix,colorNeutralForegroundInvertedLinkHover:colors.ix,colorNeutralForegroundInvertedLinkPressed:colors.ix,colorNeutralForegroundInvertedLinkSelected:colors.ix,colorBrandForegroundInverted:brand[80],colorBrandForegroundInvertedHover:brand[70],colorBrandForegroundInvertedPressed:brand[60],colorBrandForegroundOnLight:brand[80],colorBrandForegroundOnLightHover:brand[70],colorBrandForegroundOnLightPressed:brand[50],colorBrandForegroundOnLightSelected:brand[60],colorNeutralBackground1:colors.BA[16],colorNeutralBackground1Hover:colors.BA[24],colorNeutralBackground1Pressed:colors.BA[12],colorNeutralBackground1Selected:colors.BA[22],colorNeutralBackground2:colors.BA[14],colorNeutralBackground2Hover:colors.BA[22],colorNeutralBackground2Pressed:colors.BA[10],colorNeutralBackground2Selected:colors.BA[20],colorNeutralBackground3:colors.BA[12],colorNeutralBackground3Hover:colors.BA[20],colorNeutralBackground3Pressed:colors.BA[8],colorNeutralBackground3Selected:colors.BA[18],colorNeutralBackground4:colors.BA[8],colorNeutralBackground4Hover:colors.BA[16],colorNeutralBackground4Pressed:colors.BA[4],colorNeutralBackground4Selected:colors.BA[14],colorNeutralBackground5:colors.BA[4],colorNeutralBackground5Hover:colors.BA[12],colorNeutralBackground5Pressed:colors.Sn,colorNeutralBackground5Selected:colors.BA[10],colorNeutralBackground6:colors.BA[20],colorNeutralBackgroundInverted:colors.ix,colorNeutralBackgroundStatic:colors.BA[24],colorNeutralBackgroundAlpha:colors.d1[50],colorNeutralBackgroundAlpha2:colors.es[70],colorSubtleBackground:"transparent",colorSubtleBackgroundHover:colors.BA[22],colorSubtleBackgroundPressed:colors.BA[18],colorSubtleBackgroundSelected:colors.BA[20],colorSubtleBackgroundLightAlphaHover:colors.hu[80],colorSubtleBackgroundLightAlphaPressed:colors.hu[50],colorSubtleBackgroundLightAlphaSelected:"transparent",colorSubtleBackgroundInverted:"transparent",colorSubtleBackgroundInvertedHover:colors.Hf[10],colorSubtleBackgroundInvertedPressed:colors.Hf[30],colorSubtleBackgroundInvertedSelected:colors.Hf[20],colorTransparentBackground:"transparent",colorTransparentBackgroundHover:"transparent",colorTransparentBackgroundPressed:"transparent",colorTransparentBackgroundSelected:"transparent",colorNeutralBackgroundDisabled:colors.BA[8],colorNeutralBackgroundInvertedDisabled:colors.jZ[10],colorNeutralStencil1:colors.BA[34],colorNeutralStencil2:colors.BA[20],colorNeutralStencil1Alpha:colors.jZ[10],colorNeutralStencil2Alpha:colors.jZ[5],colorBackgroundOverlay:colors.Hf[50],colorScrollbarOverlay:colors.jZ[60],colorBrandBackground:brand[70],colorBrandBackgroundHover:brand[80],colorBrandBackgroundPressed:brand[40],colorBrandBackgroundSelected:brand[60],colorCompoundBrandBackground:brand[100],colorCompoundBrandBackgroundHover:brand[110],colorCompoundBrandBackgroundPressed:brand[90],colorBrandBackgroundStatic:brand[80],colorBrandBackground2:brand[20],colorBrandBackground2Hover:brand[40],colorBrandBackground2Pressed:brand[10],colorBrandBackgroundInverted:colors.ix,colorBrandBackgroundInvertedHover:brand[160],colorBrandBackgroundInvertedPressed:brand[140],colorBrandBackgroundInvertedSelected:brand[150],colorNeutralStrokeAccessible:colors.BA[68],colorNeutralStrokeAccessibleHover:colors.BA[74],colorNeutralStrokeAccessiblePressed:colors.BA[70],colorNeutralStrokeAccessibleSelected:brand[100],colorNeutralStroke1:colors.BA[40],colorNeutralStroke1Hover:colors.BA[46],colorNeutralStroke1Pressed:colors.BA[42],colorNeutralStroke1Selected:colors.BA[44],colorNeutralStroke2:colors.BA[32],colorNeutralStroke3:colors.BA[24],colorNeutralStrokeSubtle:colors.BA[4],colorNeutralStrokeOnBrand:colors.BA[16],colorNeutralStrokeOnBrand2:colors.ix,colorNeutralStrokeOnBrand2Hover:colors.ix,colorNeutralStrokeOnBrand2Pressed:colors.ix,colorNeutralStrokeOnBrand2Selected:colors.ix,colorBrandStroke1:brand[100],colorBrandStroke2:brand[50],colorBrandStroke2Hover:brand[50],colorBrandStroke2Pressed:brand[30],colorBrandStroke2Contrast:brand[50],colorCompoundBrandStroke:brand[90],colorCompoundBrandStrokeHover:brand[100],colorCompoundBrandStrokePressed:brand[80],colorNeutralStrokeDisabled:colors.BA[26],colorNeutralStrokeInvertedDisabled:colors.jZ[40],colorTransparentStroke:"transparent",colorTransparentStrokeInteractive:"transparent",colorTransparentStrokeDisabled:"transparent",colorNeutralStrokeAlpha:colors.jZ[10],colorNeutralStrokeAlpha2:colors.jZ[20],colorStrokeFocus1:colors.Sn,colorStrokeFocus2:colors.ix,colorNeutralShadowAmbient:"rgba(0,0,0,0.24)",colorNeutralShadowKey:"rgba(0,0,0,0.28)",colorNeutralShadowAmbientLighter:"rgba(0,0,0,0.12)",colorNeutralShadowKeyLighter:"rgba(0,0,0,0.14)",colorNeutralShadowAmbientDarker:"rgba(0,0,0,0.40)",colorNeutralShadowKeyDarker:"rgba(0,0,0,0.48)",colorBrandShadowAmbient:"rgba(0,0,0,0.30)",colorBrandShadowKey:"rgba(0,0,0,0.25)"});var borderRadius=__webpack_require__("./node_modules/@fluentui/tokens/lib/global/borderRadius.js"),fonts=__webpack_require__("./node_modules/@fluentui/tokens/lib/global/fonts.js"),strokeWidths=__webpack_require__("./node_modules/@fluentui/tokens/lib/global/strokeWidths.js"),shadows=__webpack_require__("./node_modules/@fluentui/tokens/lib/utils/shadows.js"),durations=__webpack_require__("./node_modules/@fluentui/tokens/lib/global/durations.js"),curves=__webpack_require__("./node_modules/@fluentui/tokens/lib/global/curves.js"),spacings=__webpack_require__("./node_modules/@fluentui/tokens/lib/global/spacings.js");let teamsDarkTheme=(brand=>{let colorTokens=generateColorTokens(brand);return{...borderRadius.E,...fonts.CH,...fonts.tO,...fonts.Vl,...fonts.vC,...strokeWidths.G,...spacings.l,...spacings.e,...durations.l,...curves.y,...colorTokens,...darkColorPalette.K,...darkColorPalette.e,...(0,shadows.T)(colorTokens.colorNeutralShadowAmbient,colorTokens.colorNeutralShadowKey),...(0,shadows.T)(colorTokens.colorBrandShadowAmbient,colorTokens.colorBrandShadowKey,"Brand")}})(__webpack_require__("./node_modules/@fluentui/tokens/lib/global/brandColors.js").EV)},"./node_modules/@fluentui/tokens/lib/themes/teams/highContrastTheme.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{$:()=>teamsHighContrastTheme});var colors=__webpack_require__("./node_modules/@fluentui/tokens/lib/global/colors.js"),sharedColorNames=__webpack_require__("./node_modules/@fluentui/tokens/lib/sharedColorNames.js"),statusColorMapping=__webpack_require__("./node_modules/@fluentui/tokens/lib/statusColorMapping.js");let statusColorPaletteTokens=sharedColorNames.PN.reduce((acc,sharedColor)=>{let color=sharedColor.slice(0,1).toUpperCase()+sharedColor.slice(1);return Object.assign(acc,{[`colorPalette${color}Background1`]:colors.KZ,[`colorPalette${color}Background2`]:colors.KZ,[`colorPalette${color}Background3`]:colors.B0,[`colorPalette${color}Foreground1`]:colors.B0,[`colorPalette${color}Foreground2`]:colors.B0,[`colorPalette${color}Foreground3`]:colors.B0,[`colorPalette${color}BorderActive`]:colors.tX,[`colorPalette${color}Border1`]:colors.B0,[`colorPalette${color}Border2`]:colors.B0})},{});statusColorPaletteTokens.colorPaletteRedForegroundInverted=colors.B0,statusColorPaletteTokens.colorPaletteGreenForegroundInverted=colors.B0,statusColorPaletteTokens.colorPaletteYellowForegroundInverted=colors.B0;let personaColorPaletteTokens=sharedColorNames.X.reduce((acc,sharedColor)=>{let color=sharedColor.slice(0,1).toUpperCase()+sharedColor.slice(1);return Object.assign(acc,{[`colorPalette${color}Background2`]:colors.KZ,[`colorPalette${color}Foreground2`]:colors.B0,[`colorPalette${color}BorderActive`]:colors.tX})},{}),colorPaletteTokens={...statusColorPaletteTokens,...personaColorPaletteTokens},colorStatusTokens=Object.entries(statusColorMapping.$).reduce((acc,[statusColor,sharedColor])=>{let color=statusColor.slice(0,1).toUpperCase()+statusColor.slice(1);return Object.assign(acc,{[`colorStatus${color}Background1`]:colors.KZ,[`colorStatus${color}Background2`]:colors.KZ,[`colorStatus${color}Background3`]:colors.B0,[`colorStatus${color}Foreground1`]:colors.B0,[`colorStatus${color}Foreground2`]:colors.B0,[`colorStatus${color}Foreground3`]:colors.B0,[`colorStatus${color}BorderActive`]:colors.tX,[`colorStatus${color}ForegroundInverted`]:colors.B0,[`colorStatus${color}Border1`]:colors.B0,[`colorStatus${color}Border2`]:colors.B0})},{}),generateColorTokens=()=>({colorNeutralForeground1:colors.B0,colorNeutralForeground1Hover:colors.ag,colorNeutralForeground1Pressed:colors.ag,colorNeutralForeground1Selected:colors.ag,colorNeutralForeground2:colors.B0,colorNeutralForeground2Hover:colors.ag,colorNeutralForeground2Pressed:colors.ag,colorNeutralForeground2Selected:colors.ag,colorNeutralForeground2BrandHover:colors.ag,colorNeutralForeground2BrandPressed:colors.ag,colorNeutralForeground2BrandSelected:colors.ag,colorNeutralForeground3:colors.B0,colorNeutralForeground3Hover:colors.ag,colorNeutralForeground3Pressed:colors.ag,colorNeutralForeground3Selected:colors.ag,colorNeutralForeground3BrandHover:colors.ag,colorNeutralForeground3BrandPressed:colors.ag,colorNeutralForeground3BrandSelected:colors.ag,colorNeutralForeground4:colors.B0,colorNeutralForegroundDisabled:colors.fD,colorNeutralForegroundInvertedDisabled:colors.fD,colorBrandForegroundLink:colors.dY,colorBrandForegroundLinkHover:colors.dY,colorBrandForegroundLinkPressed:colors.dY,colorBrandForegroundLinkSelected:colors.dY,colorNeutralForeground2Link:colors.dY,colorNeutralForeground2LinkHover:colors.dY,colorNeutralForeground2LinkPressed:colors.dY,colorNeutralForeground2LinkSelected:colors.dY,colorCompoundBrandForeground1:colors.tX,colorCompoundBrandForeground1Hover:colors.tX,colorCompoundBrandForeground1Pressed:colors.tX,colorBrandForeground1:colors.B0,colorBrandForeground2:colors.B0,colorBrandForeground2Hover:colors.B0,colorBrandForeground2Pressed:colors.B0,colorNeutralForeground1Static:colors.KZ,colorNeutralForegroundStaticInverted:colors.B0,colorNeutralForegroundInverted:colors.ag,colorNeutralForegroundInvertedHover:colors.ag,colorNeutralForegroundInvertedPressed:colors.ag,colorNeutralForegroundInvertedSelected:colors.ag,colorNeutralForegroundInverted2:colors.B0,colorNeutralForegroundOnBrand:colors.NW,colorNeutralForegroundInvertedLink:colors.dY,colorNeutralForegroundInvertedLinkHover:colors.dY,colorNeutralForegroundInvertedLinkPressed:colors.dY,colorNeutralForegroundInvertedLinkSelected:colors.dY,colorBrandForegroundInverted:colors.B0,colorBrandForegroundInvertedHover:colors.ag,colorBrandForegroundInvertedPressed:colors.ag,colorBrandForegroundOnLight:colors.NW,colorBrandForegroundOnLightHover:colors.ag,colorBrandForegroundOnLightPressed:colors.ag,colorBrandForegroundOnLightSelected:colors.ag,colorNeutralBackground1:colors.KZ,colorNeutralBackground1Hover:colors.tX,colorNeutralBackground1Pressed:colors.tX,colorNeutralBackground1Selected:colors.tX,colorNeutralBackground2:colors.KZ,colorNeutralBackground2Hover:colors.tX,colorNeutralBackground2Pressed:colors.tX,colorNeutralBackground2Selected:colors.tX,colorNeutralBackground3:colors.KZ,colorNeutralBackground3Hover:colors.tX,colorNeutralBackground3Pressed:colors.tX,colorNeutralBackground3Selected:colors.tX,colorNeutralBackground4:colors.KZ,colorNeutralBackground4Hover:colors.tX,colorNeutralBackground4Pressed:colors.tX,colorNeutralBackground4Selected:colors.tX,colorNeutralBackground5:colors.KZ,colorNeutralBackground5Hover:colors.tX,colorNeutralBackground5Pressed:colors.tX,colorNeutralBackground5Selected:colors.tX,colorNeutralBackground6:colors.KZ,colorNeutralBackgroundInverted:colors.KZ,colorNeutralBackgroundStatic:colors.KZ,colorNeutralBackgroundAlpha:colors.KZ,colorNeutralBackgroundAlpha2:colors.KZ,colorSubtleBackground:"transparent",colorSubtleBackgroundHover:colors.tX,colorSubtleBackgroundPressed:colors.tX,colorSubtleBackgroundSelected:colors.tX,colorSubtleBackgroundLightAlphaHover:colors.tX,colorSubtleBackgroundLightAlphaPressed:colors.tX,colorSubtleBackgroundLightAlphaSelected:colors.tX,colorSubtleBackgroundInverted:"transparent",colorSubtleBackgroundInvertedHover:colors.tX,colorSubtleBackgroundInvertedPressed:colors.tX,colorSubtleBackgroundInvertedSelected:colors.tX,colorTransparentBackground:"transparent",colorTransparentBackgroundHover:colors.tX,colorTransparentBackgroundPressed:colors.tX,colorTransparentBackgroundSelected:colors.tX,colorNeutralBackgroundDisabled:colors.KZ,colorNeutralBackgroundInvertedDisabled:colors.KZ,colorNeutralStencil1:colors.B0,colorNeutralStencil2:colors.B0,colorNeutralStencil1Alpha:colors.B0,colorNeutralStencil2Alpha:colors.B0,colorBackgroundOverlay:colors.Hf[50],colorScrollbarOverlay:colors.NN,colorBrandBackground:colors.NN,colorBrandBackgroundHover:colors.tX,colorBrandBackgroundPressed:colors.tX,colorBrandBackgroundSelected:colors.tX,colorCompoundBrandBackground:colors.tX,colorCompoundBrandBackgroundHover:colors.tX,colorCompoundBrandBackgroundPressed:colors.tX,colorBrandBackgroundStatic:colors.KZ,colorBrandBackground2:colors.KZ,colorBrandBackground2Hover:colors.KZ,colorBrandBackground2Pressed:colors.KZ,colorBrandBackgroundInverted:colors.NN,colorBrandBackgroundInvertedHover:colors.tX,colorBrandBackgroundInvertedPressed:colors.tX,colorBrandBackgroundInvertedSelected:colors.tX,colorNeutralStrokeAccessible:colors.B0,colorNeutralStrokeAccessibleHover:colors.tX,colorNeutralStrokeAccessiblePressed:colors.tX,colorNeutralStrokeAccessibleSelected:colors.tX,colorNeutralStroke1:colors.B0,colorNeutralStroke1Hover:colors.tX,colorNeutralStroke1Pressed:colors.tX,colorNeutralStroke1Selected:colors.tX,colorNeutralStroke2:colors.B0,colorNeutralStroke3:colors.B0,colorNeutralStrokeSubtle:colors.B0,colorNeutralStrokeOnBrand:colors.KZ,colorNeutralStrokeOnBrand2:colors.B0,colorNeutralStrokeOnBrand2Hover:colors.B0,colorNeutralStrokeOnBrand2Pressed:colors.B0,colorNeutralStrokeOnBrand2Selected:colors.B0,colorBrandStroke1:colors.B0,colorBrandStroke2:colors.B0,colorBrandStroke2Hover:colors.tX,colorBrandStroke2Pressed:colors.tX,colorBrandStroke2Contrast:colors.KZ,colorCompoundBrandStroke:colors.tX,colorCompoundBrandStrokeHover:colors.tX,colorCompoundBrandStrokePressed:colors.tX,colorNeutralStrokeDisabled:colors.fD,colorNeutralStrokeInvertedDisabled:colors.fD,colorTransparentStroke:colors.B0,colorTransparentStrokeInteractive:colors.tX,colorTransparentStrokeDisabled:colors.fD,colorNeutralStrokeAlpha:colors.B0,colorNeutralStrokeAlpha2:colors.KZ,colorStrokeFocus1:colors.KZ,colorStrokeFocus2:colors.tX,colorNeutralShadowAmbient:"rgba(0,0,0,0.24)",colorNeutralShadowKey:"rgba(0,0,0,0.28)",colorNeutralShadowAmbientLighter:"rgba(0,0,0,0.12)",colorNeutralShadowKeyLighter:"rgba(0,0,0,0.14)",colorNeutralShadowAmbientDarker:"rgba(0,0,0,0.40)",colorNeutralShadowKeyDarker:"rgba(0,0,0,0.48)",colorBrandShadowAmbient:"rgba(0,0,0,0.30)",colorBrandShadowKey:"rgba(0,0,0,0.25)"});var borderRadius=__webpack_require__("./node_modules/@fluentui/tokens/lib/global/borderRadius.js"),fonts=__webpack_require__("./node_modules/@fluentui/tokens/lib/global/fonts.js"),strokeWidths=__webpack_require__("./node_modules/@fluentui/tokens/lib/global/strokeWidths.js"),shadows=__webpack_require__("./node_modules/@fluentui/tokens/lib/utils/shadows.js"),durations=__webpack_require__("./node_modules/@fluentui/tokens/lib/global/durations.js"),curves=__webpack_require__("./node_modules/@fluentui/tokens/lib/global/curves.js"),spacings=__webpack_require__("./node_modules/@fluentui/tokens/lib/global/spacings.js");let teamsHighContrastTheme=(()=>{let colorTokens=generateColorTokens();return{...borderRadius.E,...fonts.CH,...fonts.tO,...fonts.Vl,...fonts.vC,...strokeWidths.G,...spacings.l,...spacings.e,...durations.l,...curves.y,...colorTokens,...colorPaletteTokens,...colorStatusTokens,...(0,shadows.T)(colorTokens.colorNeutralShadowAmbient,colorTokens.colorNeutralShadowKey),...(0,shadows.T)(colorTokens.colorBrandShadowAmbient,colorTokens.colorBrandShadowKey,"Brand")}})()},"./node_modules/@fluentui/tokens/lib/themes/teams/lightTheme.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Y:()=>teamsLightTheme});var _utils_createLightTheme__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@fluentui/tokens/lib/utils/createLightTheme.js"),_global_brandColors__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@fluentui/tokens/lib/global/brandColors.js");let teamsLightTheme=(0,_utils_createLightTheme__WEBPACK_IMPORTED_MODULE_0__.f)(_global_brandColors__WEBPACK_IMPORTED_MODULE_1__.EV)},"./node_modules/@fluentui/tokens/lib/themes/web/darkTheme.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{_:()=>webDarkTheme});var darkColorPalette=__webpack_require__("./node_modules/@fluentui/tokens/lib/alias/darkColorPalette.js"),colors=__webpack_require__("./node_modules/@fluentui/tokens/lib/global/colors.js");let generateColorTokens=brand=>({colorNeutralForeground1:colors.ix,colorNeutralForeground1Hover:colors.ix,colorNeutralForeground1Pressed:colors.ix,colorNeutralForeground1Selected:colors.ix,colorNeutralForeground2:colors.BA[84],colorNeutralForeground2Hover:colors.ix,colorNeutralForeground2Pressed:colors.ix,colorNeutralForeground2Selected:colors.ix,colorNeutralForeground2BrandHover:brand[100],colorNeutralForeground2BrandPressed:brand[90],colorNeutralForeground2BrandSelected:brand[100],colorNeutralForeground3:colors.BA[68],colorNeutralForeground3Hover:colors.BA[84],colorNeutralForeground3Pressed:colors.BA[84],colorNeutralForeground3Selected:colors.BA[84],colorNeutralForeground3BrandHover:brand[100],colorNeutralForeground3BrandPressed:brand[90],colorNeutralForeground3BrandSelected:brand[100],colorNeutralForeground4:colors.BA[60],colorNeutralForegroundDisabled:colors.BA[36],colorNeutralForegroundInvertedDisabled:colors.jZ[40],colorBrandForegroundLink:brand[100],colorBrandForegroundLinkHover:brand[110],colorBrandForegroundLinkPressed:brand[90],colorBrandForegroundLinkSelected:brand[100],colorNeutralForeground2Link:colors.BA[84],colorNeutralForeground2LinkHover:colors.ix,colorNeutralForeground2LinkPressed:colors.ix,colorNeutralForeground2LinkSelected:colors.ix,colorCompoundBrandForeground1:brand[100],colorCompoundBrandForeground1Hover:brand[110],colorCompoundBrandForeground1Pressed:brand[90],colorBrandForeground1:brand[100],colorBrandForeground2:brand[110],colorBrandForeground2Hover:brand[130],colorBrandForeground2Pressed:brand[160],colorNeutralForeground1Static:colors.BA[14],colorNeutralForegroundStaticInverted:colors.ix,colorNeutralForegroundInverted:colors.BA[14],colorNeutralForegroundInvertedHover:colors.BA[14],colorNeutralForegroundInvertedPressed:colors.BA[14],colorNeutralForegroundInvertedSelected:colors.BA[14],colorNeutralForegroundInverted2:colors.BA[14],colorNeutralForegroundOnBrand:colors.ix,colorNeutralForegroundInvertedLink:colors.ix,colorNeutralForegroundInvertedLinkHover:colors.ix,colorNeutralForegroundInvertedLinkPressed:colors.ix,colorNeutralForegroundInvertedLinkSelected:colors.ix,colorBrandForegroundInverted:brand[80],colorBrandForegroundInvertedHover:brand[70],colorBrandForegroundInvertedPressed:brand[60],colorBrandForegroundOnLight:brand[80],colorBrandForegroundOnLightHover:brand[70],colorBrandForegroundOnLightPressed:brand[50],colorBrandForegroundOnLightSelected:brand[60],colorNeutralBackground1:colors.BA[16],colorNeutralBackground1Hover:colors.BA[24],colorNeutralBackground1Pressed:colors.BA[12],colorNeutralBackground1Selected:colors.BA[22],colorNeutralBackground2:colors.BA[12],colorNeutralBackground2Hover:colors.BA[20],colorNeutralBackground2Pressed:colors.BA[8],colorNeutralBackground2Selected:colors.BA[18],colorNeutralBackground3:colors.BA[8],colorNeutralBackground3Hover:colors.BA[16],colorNeutralBackground3Pressed:colors.BA[4],colorNeutralBackground3Selected:colors.BA[14],colorNeutralBackground4:colors.BA[4],colorNeutralBackground4Hover:colors.BA[12],colorNeutralBackground4Pressed:colors.Sn,colorNeutralBackground4Selected:colors.BA[10],colorNeutralBackground5:colors.Sn,colorNeutralBackground5Hover:colors.BA[8],colorNeutralBackground5Pressed:colors.BA[2],colorNeutralBackground5Selected:colors.BA[6],colorNeutralBackground6:colors.BA[20],colorNeutralBackgroundInverted:colors.ix,colorNeutralBackgroundStatic:colors.BA[24],colorNeutralBackgroundAlpha:colors.d1[50],colorNeutralBackgroundAlpha2:colors.es[70],colorSubtleBackground:"transparent",colorSubtleBackgroundHover:colors.BA[22],colorSubtleBackgroundPressed:colors.BA[18],colorSubtleBackgroundSelected:colors.BA[20],colorSubtleBackgroundLightAlphaHover:colors.hu[80],colorSubtleBackgroundLightAlphaPressed:colors.hu[50],colorSubtleBackgroundLightAlphaSelected:"transparent",colorSubtleBackgroundInverted:"transparent",colorSubtleBackgroundInvertedHover:colors.Hf[10],colorSubtleBackgroundInvertedPressed:colors.Hf[30],colorSubtleBackgroundInvertedSelected:colors.Hf[20],colorTransparentBackground:"transparent",colorTransparentBackgroundHover:"transparent",colorTransparentBackgroundPressed:"transparent",colorTransparentBackgroundSelected:"transparent",colorNeutralBackgroundDisabled:colors.BA[8],colorNeutralBackgroundInvertedDisabled:colors.jZ[10],colorNeutralStencil1:colors.BA[34],colorNeutralStencil2:colors.BA[20],colorNeutralStencil1Alpha:colors.jZ[10],colorNeutralStencil2Alpha:colors.jZ[5],colorBackgroundOverlay:colors.Hf[50],colorScrollbarOverlay:colors.jZ[60],colorBrandBackground:brand[70],colorBrandBackgroundHover:brand[80],colorBrandBackgroundPressed:brand[40],colorBrandBackgroundSelected:brand[60],colorCompoundBrandBackground:brand[100],colorCompoundBrandBackgroundHover:brand[110],colorCompoundBrandBackgroundPressed:brand[90],colorBrandBackgroundStatic:brand[80],colorBrandBackground2:brand[20],colorBrandBackground2Hover:brand[40],colorBrandBackground2Pressed:brand[10],colorBrandBackgroundInverted:colors.ix,colorBrandBackgroundInvertedHover:brand[160],colorBrandBackgroundInvertedPressed:brand[140],colorBrandBackgroundInvertedSelected:brand[150],colorNeutralStrokeAccessible:colors.BA[68],colorNeutralStrokeAccessibleHover:colors.BA[74],colorNeutralStrokeAccessiblePressed:colors.BA[70],colorNeutralStrokeAccessibleSelected:brand[100],colorNeutralStroke1:colors.BA[40],colorNeutralStroke1Hover:colors.BA[46],colorNeutralStroke1Pressed:colors.BA[42],colorNeutralStroke1Selected:colors.BA[44],colorNeutralStroke2:colors.BA[32],colorNeutralStroke3:colors.BA[24],colorNeutralStrokeSubtle:colors.BA[4],colorNeutralStrokeOnBrand:colors.BA[16],colorNeutralStrokeOnBrand2:colors.ix,colorNeutralStrokeOnBrand2Hover:colors.ix,colorNeutralStrokeOnBrand2Pressed:colors.ix,colorNeutralStrokeOnBrand2Selected:colors.ix,colorBrandStroke1:brand[100],colorBrandStroke2:brand[50],colorBrandStroke2Hover:brand[50],colorBrandStroke2Pressed:brand[30],colorBrandStroke2Contrast:brand[50],colorCompoundBrandStroke:brand[100],colorCompoundBrandStrokeHover:brand[110],colorCompoundBrandStrokePressed:brand[90],colorNeutralStrokeDisabled:colors.BA[26],colorNeutralStrokeInvertedDisabled:colors.jZ[40],colorTransparentStroke:"transparent",colorTransparentStrokeInteractive:"transparent",colorTransparentStrokeDisabled:"transparent",colorNeutralStrokeAlpha:colors.jZ[10],colorNeutralStrokeAlpha2:colors.jZ[20],colorStrokeFocus1:colors.Sn,colorStrokeFocus2:colors.ix,colorNeutralShadowAmbient:"rgba(0,0,0,0.24)",colorNeutralShadowKey:"rgba(0,0,0,0.28)",colorNeutralShadowAmbientLighter:"rgba(0,0,0,0.12)",colorNeutralShadowKeyLighter:"rgba(0,0,0,0.14)",colorNeutralShadowAmbientDarker:"rgba(0,0,0,0.40)",colorNeutralShadowKeyDarker:"rgba(0,0,0,0.48)",colorBrandShadowAmbient:"rgba(0,0,0,0.30)",colorBrandShadowKey:"rgba(0,0,0,0.25)"});var borderRadius=__webpack_require__("./node_modules/@fluentui/tokens/lib/global/borderRadius.js"),fonts=__webpack_require__("./node_modules/@fluentui/tokens/lib/global/fonts.js"),strokeWidths=__webpack_require__("./node_modules/@fluentui/tokens/lib/global/strokeWidths.js"),shadows=__webpack_require__("./node_modules/@fluentui/tokens/lib/utils/shadows.js"),durations=__webpack_require__("./node_modules/@fluentui/tokens/lib/global/durations.js"),curves=__webpack_require__("./node_modules/@fluentui/tokens/lib/global/curves.js"),spacings=__webpack_require__("./node_modules/@fluentui/tokens/lib/global/spacings.js");let webDarkTheme=(brand=>{let colorTokens=generateColorTokens(brand);return{...borderRadius.E,...fonts.CH,...fonts.tO,...fonts.Vl,...fonts.vC,...strokeWidths.G,...spacings.l,...spacings.e,...durations.l,...curves.y,...colorTokens,...darkColorPalette.K,...darkColorPalette.e,...(0,shadows.T)(colorTokens.colorNeutralShadowAmbient,colorTokens.colorNeutralShadowKey),...(0,shadows.T)(colorTokens.colorBrandShadowAmbient,colorTokens.colorBrandShadowKey,"Brand")}})(__webpack_require__("./node_modules/@fluentui/tokens/lib/global/brandColors.js").au)},"./node_modules/@fluentui/tokens/lib/themes/web/lightTheme.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{w:()=>webLightTheme});var _utils_createLightTheme__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@fluentui/tokens/lib/utils/createLightTheme.js"),_global_brandColors__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@fluentui/tokens/lib/global/brandColors.js");let webLightTheme=(0,_utils_createLightTheme__WEBPACK_IMPORTED_MODULE_0__.f)(_global_brandColors__WEBPACK_IMPORTED_MODULE_1__.au)},"./node_modules/@fluentui/tokens/lib/utils/createLightTheme.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{f:()=>createLightTheme});var colorPalette=__webpack_require__("./node_modules/@fluentui/tokens/lib/global/colorPalette.js"),sharedColorNames=__webpack_require__("./node_modules/@fluentui/tokens/lib/sharedColorNames.js"),statusColorMapping=__webpack_require__("./node_modules/@fluentui/tokens/lib/statusColorMapping.js");let statusColorPaletteTokens=sharedColorNames.PN.reduce((acc,sharedColor)=>{let color=sharedColor.slice(0,1).toUpperCase()+sharedColor.slice(1);return Object.assign(acc,{[`colorPalette${color}Background1`]:colorPalette.bv[sharedColor].tint60,[`colorPalette${color}Background2`]:colorPalette.bv[sharedColor].tint40,[`colorPalette${color}Background3`]:colorPalette.bv[sharedColor].primary,[`colorPalette${color}Foreground1`]:colorPalette.bv[sharedColor].shade10,[`colorPalette${color}Foreground2`]:colorPalette.bv[sharedColor].shade30,[`colorPalette${color}Foreground3`]:colorPalette.bv[sharedColor].primary,[`colorPalette${color}BorderActive`]:colorPalette.bv[sharedColor].primary,[`colorPalette${color}Border1`]:colorPalette.bv[sharedColor].tint40,[`colorPalette${color}Border2`]:colorPalette.bv[sharedColor].primary})},{});statusColorPaletteTokens.colorPaletteYellowForeground1=colorPalette.bv.yellow.shade30,statusColorPaletteTokens.colorPaletteRedForegroundInverted=colorPalette.bv.red.tint20,statusColorPaletteTokens.colorPaletteGreenForegroundInverted=colorPalette.bv.green.tint20,statusColorPaletteTokens.colorPaletteYellowForegroundInverted=colorPalette.bv.yellow.tint40;let personaColorPaletteTokens=sharedColorNames.X.reduce((acc,sharedColor)=>{let color=sharedColor.slice(0,1).toUpperCase()+sharedColor.slice(1);return Object.assign(acc,{[`colorPalette${color}Background2`]:colorPalette.Co[sharedColor].tint40,[`colorPalette${color}Foreground2`]:colorPalette.Co[sharedColor].shade30,[`colorPalette${color}BorderActive`]:colorPalette.Co[sharedColor].primary})},{}),colorPaletteTokens={...statusColorPaletteTokens,...personaColorPaletteTokens},colorStatusTokens=Object.entries(statusColorMapping.$).reduce((acc,[statusColor,sharedColor])=>{let color=statusColor.slice(0,1).toUpperCase()+statusColor.slice(1);return Object.assign(acc,{[`colorStatus${color}Background1`]:colorPalette.W3[sharedColor].tint60,[`colorStatus${color}Background2`]:colorPalette.W3[sharedColor].tint40,[`colorStatus${color}Background3`]:colorPalette.W3[sharedColor].primary,[`colorStatus${color}Foreground1`]:colorPalette.W3[sharedColor].shade10,[`colorStatus${color}Foreground2`]:colorPalette.W3[sharedColor].shade30,[`colorStatus${color}Foreground3`]:colorPalette.W3[sharedColor].primary,[`colorStatus${color}ForegroundInverted`]:colorPalette.W3[sharedColor].tint30,[`colorStatus${color}BorderActive`]:colorPalette.W3[sharedColor].primary,[`colorStatus${color}Border1`]:colorPalette.W3[sharedColor].tint40,[`colorStatus${color}Border2`]:colorPalette.W3[sharedColor].primary})},{});colorStatusTokens.colorStatusWarningForeground1=colorPalette.W3[statusColorMapping.$.warning].shade20,colorStatusTokens.colorStatusWarningForeground3=colorPalette.W3[statusColorMapping.$.warning].shade20,colorStatusTokens.colorStatusWarningBorder2=colorPalette.W3[statusColorMapping.$.warning].shade20;var colors=__webpack_require__("./node_modules/@fluentui/tokens/lib/global/colors.js");let generateColorTokens=brand=>({colorNeutralForeground1:colors.BA[14],colorNeutralForeground1Hover:colors.BA[14],colorNeutralForeground1Pressed:colors.BA[14],colorNeutralForeground1Selected:colors.BA[14],colorNeutralForeground2:colors.BA[26],colorNeutralForeground2Hover:colors.BA[14],colorNeutralForeground2Pressed:colors.BA[14],colorNeutralForeground2Selected:colors.BA[14],colorNeutralForeground2BrandHover:brand[80],colorNeutralForeground2BrandPressed:brand[70],colorNeutralForeground2BrandSelected:brand[80],colorNeutralForeground3:colors.BA[38],colorNeutralForeground3Hover:colors.BA[26],colorNeutralForeground3Pressed:colors.BA[26],colorNeutralForeground3Selected:colors.BA[26],colorNeutralForeground3BrandHover:brand[80],colorNeutralForeground3BrandPressed:brand[70],colorNeutralForeground3BrandSelected:brand[80],colorNeutralForeground4:colors.BA[44],colorNeutralForegroundDisabled:colors.BA[74],colorNeutralForegroundInvertedDisabled:colors.jZ[40],colorBrandForegroundLink:brand[70],colorBrandForegroundLinkHover:brand[60],colorBrandForegroundLinkPressed:brand[40],colorBrandForegroundLinkSelected:brand[70],colorNeutralForeground2Link:colors.BA[26],colorNeutralForeground2LinkHover:colors.BA[14],colorNeutralForeground2LinkPressed:colors.BA[14],colorNeutralForeground2LinkSelected:colors.BA[14],colorCompoundBrandForeground1:brand[80],colorCompoundBrandForeground1Hover:brand[70],colorCompoundBrandForeground1Pressed:brand[60],colorBrandForeground1:brand[80],colorBrandForeground2:brand[70],colorBrandForeground2Hover:brand[60],colorBrandForeground2Pressed:brand[30],colorNeutralForeground1Static:colors.BA[14],colorNeutralForegroundStaticInverted:colors.ix,colorNeutralForegroundInverted:colors.ix,colorNeutralForegroundInvertedHover:colors.ix,colorNeutralForegroundInvertedPressed:colors.ix,colorNeutralForegroundInvertedSelected:colors.ix,colorNeutralForegroundInverted2:colors.ix,colorNeutralForegroundOnBrand:colors.ix,colorNeutralForegroundInvertedLink:colors.ix,colorNeutralForegroundInvertedLinkHover:colors.ix,colorNeutralForegroundInvertedLinkPressed:colors.ix,colorNeutralForegroundInvertedLinkSelected:colors.ix,colorBrandForegroundInverted:brand[100],colorBrandForegroundInvertedHover:brand[110],colorBrandForegroundInvertedPressed:brand[100],colorBrandForegroundOnLight:brand[80],colorBrandForegroundOnLightHover:brand[70],colorBrandForegroundOnLightPressed:brand[50],colorBrandForegroundOnLightSelected:brand[60],colorNeutralBackground1:colors.ix,colorNeutralBackground1Hover:colors.BA[96],colorNeutralBackground1Pressed:colors.BA[88],colorNeutralBackground1Selected:colors.BA[92],colorNeutralBackground2:colors.BA[98],colorNeutralBackground2Hover:colors.BA[94],colorNeutralBackground2Pressed:colors.BA[86],colorNeutralBackground2Selected:colors.BA[90],colorNeutralBackground3:colors.BA[96],colorNeutralBackground3Hover:colors.BA[92],colorNeutralBackground3Pressed:colors.BA[84],colorNeutralBackground3Selected:colors.BA[88],colorNeutralBackground4:colors.BA[94],colorNeutralBackground4Hover:colors.BA[98],colorNeutralBackground4Pressed:colors.BA[96],colorNeutralBackground4Selected:colors.ix,colorNeutralBackground5:colors.BA[92],colorNeutralBackground5Hover:colors.BA[96],colorNeutralBackground5Pressed:colors.BA[94],colorNeutralBackground5Selected:colors.BA[98],colorNeutralBackground6:colors.BA[90],colorNeutralBackgroundInverted:colors.BA[16],colorNeutralBackgroundStatic:colors.BA[20],colorNeutralBackgroundAlpha:colors.jZ[50],colorNeutralBackgroundAlpha2:colors.jZ[80],colorSubtleBackground:"transparent",colorSubtleBackgroundHover:colors.BA[96],colorSubtleBackgroundPressed:colors.BA[88],colorSubtleBackgroundSelected:colors.BA[92],colorSubtleBackgroundLightAlphaHover:colors.jZ[70],colorSubtleBackgroundLightAlphaPressed:colors.jZ[50],colorSubtleBackgroundLightAlphaSelected:"transparent",colorSubtleBackgroundInverted:"transparent",colorSubtleBackgroundInvertedHover:colors.Hf[10],colorSubtleBackgroundInvertedPressed:colors.Hf[30],colorSubtleBackgroundInvertedSelected:colors.Hf[20],colorTransparentBackground:"transparent",colorTransparentBackgroundHover:"transparent",colorTransparentBackgroundPressed:"transparent",colorTransparentBackgroundSelected:"transparent",colorNeutralBackgroundDisabled:colors.BA[94],colorNeutralBackgroundInvertedDisabled:colors.jZ[10],colorNeutralStencil1:colors.BA[90],colorNeutralStencil2:colors.BA[98],colorNeutralStencil1Alpha:colors.Hf[10],colorNeutralStencil2Alpha:colors.Hf[5],colorBackgroundOverlay:colors.Hf[40],colorScrollbarOverlay:colors.Hf[50],colorBrandBackground:brand[80],colorBrandBackgroundHover:brand[70],colorBrandBackgroundPressed:brand[40],colorBrandBackgroundSelected:brand[60],colorCompoundBrandBackground:brand[80],colorCompoundBrandBackgroundHover:brand[70],colorCompoundBrandBackgroundPressed:brand[60],colorBrandBackgroundStatic:brand[80],colorBrandBackground2:brand[160],colorBrandBackground2Hover:brand[150],colorBrandBackground2Pressed:brand[130],colorBrandBackgroundInverted:colors.ix,colorBrandBackgroundInvertedHover:brand[160],colorBrandBackgroundInvertedPressed:brand[140],colorBrandBackgroundInvertedSelected:brand[150],colorNeutralStrokeAccessible:colors.BA[38],colorNeutralStrokeAccessibleHover:colors.BA[34],colorNeutralStrokeAccessiblePressed:colors.BA[30],colorNeutralStrokeAccessibleSelected:brand[80],colorNeutralStroke1:colors.BA[82],colorNeutralStroke1Hover:colors.BA[78],colorNeutralStroke1Pressed:colors.BA[70],colorNeutralStroke1Selected:colors.BA[74],colorNeutralStroke2:colors.BA[88],colorNeutralStroke3:colors.BA[94],colorNeutralStrokeSubtle:colors.BA[88],colorNeutralStrokeOnBrand:colors.ix,colorNeutralStrokeOnBrand2:colors.ix,colorNeutralStrokeOnBrand2Hover:colors.ix,colorNeutralStrokeOnBrand2Pressed:colors.ix,colorNeutralStrokeOnBrand2Selected:colors.ix,colorBrandStroke1:brand[80],colorBrandStroke2:brand[140],colorBrandStroke2Hover:brand[120],colorBrandStroke2Pressed:brand[80],colorBrandStroke2Contrast:brand[140],colorCompoundBrandStroke:brand[80],colorCompoundBrandStrokeHover:brand[70],colorCompoundBrandStrokePressed:brand[60],colorNeutralStrokeDisabled:colors.BA[88],colorNeutralStrokeInvertedDisabled:colors.jZ[40],colorTransparentStroke:"transparent",colorTransparentStrokeInteractive:"transparent",colorTransparentStrokeDisabled:"transparent",colorNeutralStrokeAlpha:colors.Hf[5],colorNeutralStrokeAlpha2:colors.jZ[20],colorStrokeFocus1:colors.ix,colorStrokeFocus2:colors.Sn,colorNeutralShadowAmbient:"rgba(0,0,0,0.12)",colorNeutralShadowKey:"rgba(0,0,0,0.14)",colorNeutralShadowAmbientLighter:"rgba(0,0,0,0.06)",colorNeutralShadowKeyLighter:"rgba(0,0,0,0.07)",colorNeutralShadowAmbientDarker:"rgba(0,0,0,0.20)",colorNeutralShadowKeyDarker:"rgba(0,0,0,0.24)",colorBrandShadowAmbient:"rgba(0,0,0,0.30)",colorBrandShadowKey:"rgba(0,0,0,0.25)"});var borderRadius=__webpack_require__("./node_modules/@fluentui/tokens/lib/global/borderRadius.js"),fonts=__webpack_require__("./node_modules/@fluentui/tokens/lib/global/fonts.js"),strokeWidths=__webpack_require__("./node_modules/@fluentui/tokens/lib/global/strokeWidths.js"),shadows=__webpack_require__("./node_modules/@fluentui/tokens/lib/utils/shadows.js"),durations=__webpack_require__("./node_modules/@fluentui/tokens/lib/global/durations.js"),curves=__webpack_require__("./node_modules/@fluentui/tokens/lib/global/curves.js"),spacings=__webpack_require__("./node_modules/@fluentui/tokens/lib/global/spacings.js");let createLightTheme=brand=>{let colorTokens=generateColorTokens(brand);return{...borderRadius.E,...fonts.CH,...fonts.tO,...fonts.Vl,...fonts.vC,...strokeWidths.G,...spacings.l,...spacings.e,...durations.l,...curves.y,...colorTokens,...colorPaletteTokens,...colorStatusTokens,...(0,shadows.T)(colorTokens.colorNeutralShadowAmbient,colorTokens.colorNeutralShadowKey),...(0,shadows.T)(colorTokens.colorBrandShadowAmbient,colorTokens.colorBrandShadowKey,"Brand")}}},"./node_modules/@fluentui/tokens/lib/utils/shadows.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";function createShadowTokens(ambientColor,keyColor,tokenSuffix=""){return{[`shadow2${tokenSuffix}`]:`0 0 2px ${ambientColor}, 0 1px 2px ${keyColor}`,[`shadow4${tokenSuffix}`]:`0 0 2px ${ambientColor}, 0 2px 4px ${keyColor}`,[`shadow8${tokenSuffix}`]:`0 0 2px ${ambientColor}, 0 4px 8px ${keyColor}`,[`shadow16${tokenSuffix}`]:`0 0 2px ${ambientColor}, 0 8px 16px ${keyColor}`,[`shadow28${tokenSuffix}`]:`0 0 8px ${ambientColor}, 0 14px 28px ${keyColor}`,[`shadow64${tokenSuffix}`]:`0 0 8px ${ambientColor}, 0 32px 64px ${keyColor}`}}__webpack_require__.d(__webpack_exports__,{T:()=>createShadowTokens})},"./node_modules/@griffel/core/__styles.esm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{s:()=>__styles});var _insertionFactory_esm_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@griffel/core/insertionFactory.esm.js"),_runtime_reduceToClassNameForSlots_esm_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@griffel/core/runtime/reduceToClassNameForSlots.esm.js");function __styles(classesMapBySlot,cssRules,factory=_insertionFactory_esm_js__WEBPACK_IMPORTED_MODULE_0__.F){let insertStyles=factory(),ltrClassNamesForSlots=null,rtlClassNamesForSlots=null;return function computeClasses(options){let{dir,renderer}=options,isLTR="ltr"===dir;return isLTR?null===ltrClassNamesForSlots&&(ltrClassNamesForSlots=(0,_runtime_reduceToClassNameForSlots_esm_js__WEBPACK_IMPORTED_MODULE_1__.V)(classesMapBySlot,dir)):null===rtlClassNamesForSlots&&(rtlClassNamesForSlots=(0,_runtime_reduceToClassNameForSlots_esm_js__WEBPACK_IMPORTED_MODULE_1__.V)(classesMapBySlot,dir)),insertStyles(renderer,cssRules),isLTR?ltrClassNamesForSlots:rtlClassNamesForSlots}}},"./node_modules/@griffel/core/constants.esm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{$Q:()=>DATA_BUCKET_ATTR,C_:()=>UNSUPPORTED_CSS_PROPERTIES,Hf:()=>HASH_PREFIX,JM:()=>LOOKUP_DEFINITIONS_INDEX,M_:()=>DEBUG_SEQUENCE_SEPARATOR,Qz:()=>SEQUENCE_PREFIX,de:()=>LOOKUP_DIR_INDEX,gk:()=>SEQUENCE_HASH_LENGTH,jD:()=>SEQUENCE_SIZE,xR:()=>DEFINITION_LOOKUP_TABLE});let __GLOBAL__="undefined"==typeof window?__webpack_require__.g:window,__NAMESPACE_PREFIX__="@griffel/",DEFINITION_LOOKUP_TABLE=function getGlobalVar(name,defaultValue){return __GLOBAL__[Symbol.for(__NAMESPACE_PREFIX__+name)]||(__GLOBAL__[Symbol.for(__NAMESPACE_PREFIX__+name)]=defaultValue),__GLOBAL__[Symbol.for(__NAMESPACE_PREFIX__+name)]}("DEFINITION_LOOKUP_TABLE",{}),DATA_BUCKET_ATTR="data-make-styles-bucket",HASH_PREFIX="f",SEQUENCE_HASH_LENGTH=7,SEQUENCE_PREFIX="___",DEBUG_SEQUENCE_SEPARATOR="_",SEQUENCE_SIZE=SEQUENCE_PREFIX.length+7,LOOKUP_DEFINITIONS_INDEX=0,LOOKUP_DIR_INDEX=1,UNSUPPORTED_CSS_PROPERTIES={all:1,animation:1,background:1,backgroundPosition:1,border:1,borderBlock:1,borderBlockEnd:1,borderBlockStart:1,borderBottom:1,borderColor:1,borderImage:1,borderInline:1,borderInlineEnd:1,borderInlineStart:1,borderLeft:1,borderRadius:1,borderRight:1,borderStyle:1,borderTop:1,borderWidth:1,caret:1,columns:1,columnRule:1,containIntrinsicSize:1,container:1,flex:1,flexFlow:1,font:1,gap:1,grid:1,gridArea:1,gridColumn:1,gridRow:1,gridTemplate:1,inset:1,insetBlock:1,insetInline:1,lineClamp:1,listStyle:1,margin:1,marginBlock:1,marginInline:1,mask:1,maskBorder:1,motion:1,offset:1,outline:1,overflow:1,overscrollBehavior:1,padding:1,paddingBlock:1,paddingInline:1,placeItems:1,placeContent:1,placeSelf:1,scrollMargin:1,scrollMarginBlock:1,scrollMarginInline:1,scrollPadding:1,scrollPaddingBlock:1,scrollPaddingInline:1,scrollSnapMargin:1,scrollTimeline:1,textDecoration:1,textEmphasis:1,transition:1}},"./node_modules/@griffel/core/insertionFactory.esm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{F:()=>insertionFactory});let insertionFactory=()=>{let insertionCache={};return function insertStyles(renderer,cssRules){void 0===insertionCache[renderer.id]&&(renderer.insertCSSRules(cssRules),insertionCache[renderer.id]=!0)}}},"./node_modules/@griffel/core/mergeClasses.esm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{z:()=>mergeClasses});var _constants_esm_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@griffel/core/constants.esm.js"),_runtime_utils_hashSequence_esm_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@griffel/core/runtime/utils/hashSequence.esm.js"),_runtime_reduceToClassNameForSlots_esm_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@griffel/core/runtime/reduceToClassNameForSlots.esm.js");let mergeClassesCachedResults={};function mergeClasses(){let dir=null,resultClassName="",sequenceMatch="",sequencesIds=Array(arguments.length);for(let i=0;i<arguments.length;i++){let className=arguments[i];if("string"==typeof className&&""!==className){let sequenceIndex=className.indexOf(_constants_esm_js__WEBPACK_IMPORTED_MODULE_0__.Qz);if(-1===sequenceIndex)resultClassName+=className+" ";else{let sequenceId=className.substr(sequenceIndex,_constants_esm_js__WEBPACK_IMPORTED_MODULE_0__.jD);sequenceIndex>0&&(resultClassName+=className.slice(0,sequenceIndex)),sequenceMatch+=sequenceId,sequencesIds[i]=sequenceId}}}if(""===sequenceMatch)return resultClassName.slice(0,-1);let mergeClassesResult=mergeClassesCachedResults[sequenceMatch];if(void 0!==mergeClassesResult)return resultClassName+mergeClassesResult;let sequenceMappings=[];for(let i=0;i<arguments.length;i++){let sequenceId=sequencesIds[i];if(sequenceId){let sequenceMapping=_constants_esm_js__WEBPACK_IMPORTED_MODULE_0__.xR[sequenceId];sequenceMapping&&(sequenceMappings.push(sequenceMapping[_constants_esm_js__WEBPACK_IMPORTED_MODULE_0__.JM]),dir=sequenceMapping[_constants_esm_js__WEBPACK_IMPORTED_MODULE_0__.de])}}let resultDefinitions=Object.assign.apply(Object,[{}].concat(sequenceMappings)),atomicClassNames=(0,_runtime_reduceToClassNameForSlots_esm_js__WEBPACK_IMPORTED_MODULE_1__.w)(resultDefinitions,dir),newSequenceHash=(0,_runtime_utils_hashSequence_esm_js__WEBPACK_IMPORTED_MODULE_2__.m)(atomicClassNames,dir,sequencesIds);return atomicClassNames=newSequenceHash+" "+atomicClassNames,mergeClassesCachedResults[sequenceMatch]=atomicClassNames,_constants_esm_js__WEBPACK_IMPORTED_MODULE_0__.xR[newSequenceHash]=[resultDefinitions,dir],resultClassName+atomicClassNames}},"./node_modules/@griffel/core/runtime/reduceToClassNameForSlots.esm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{V:()=>reduceToClassNameForSlots,w:()=>reduceToClassName});var _constants_esm_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@griffel/core/constants.esm.js"),_utils_hashSequence_esm_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@griffel/core/runtime/utils/hashSequence.esm.js");function reduceToClassName(classMap,dir){let className="";for(let propertyHash in classMap){let classNameMapping=classMap[propertyHash];if(classNameMapping){let hasRTLClassName=Array.isArray(classNameMapping);"rtl"===dir?className+=(hasRTLClassName?classNameMapping[1]:classNameMapping)+" ":className+=(hasRTLClassName?classNameMapping[0]:classNameMapping)+" "}}return className.slice(0,-1)}function reduceToClassNameForSlots(classesMapBySlot,dir){let classNamesForSlots={};for(let slotName in classesMapBySlot){let slotClasses=reduceToClassName(classesMapBySlot[slotName],dir);if(""===slotClasses){classNamesForSlots[slotName]="";continue}let sequenceHash=(0,_utils_hashSequence_esm_js__WEBPACK_IMPORTED_MODULE_0__.m)(slotClasses,dir),resultSlotClasses=sequenceHash+" "+slotClasses;_constants_esm_js__WEBPACK_IMPORTED_MODULE_1__.xR[sequenceHash]=[classesMapBySlot[slotName],dir],classNamesForSlots[slotName]=resultSlotClasses}return classNamesForSlots}},"./node_modules/@griffel/core/runtime/utils/hashSequence.esm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{m:()=>hashSequence});var _emotion_hash__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@emotion/hash/dist/emotion-hash.esm.js"),_constants_esm_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@griffel/core/constants.esm.js");function padEndHash(value){let hashLength=value.length;if(hashLength===_constants_esm_js__WEBPACK_IMPORTED_MODULE_0__.gk)return value;for(let i=hashLength;i<_constants_esm_js__WEBPACK_IMPORTED_MODULE_0__.gk;i++)value+="0";return value}function hashSequence(classes,dir,sequenceIds=[]){return _constants_esm_js__WEBPACK_IMPORTED_MODULE_0__.Qz+padEndHash((0,_emotion_hash__WEBPACK_IMPORTED_MODULE_1__.Z)(classes+dir))}},"./node_modules/@griffel/react/RendererContext.esm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";function normalizeCSSBucketEntry(entry){return Array.isArray(entry)?entry:[entry]}__webpack_require__.d(__webpack_exports__,{a:()=>useRenderer});var constants_esm=__webpack_require__("./node_modules/@griffel/core/constants.esm.js");function createIsomorphicStyleSheet(styleElement,bucketName,elementAttributes){let __cssRulesForSSR=[];if(elementAttributes[constants_esm.$Q]=bucketName,styleElement)for(let attrName in elementAttributes)styleElement.setAttribute(attrName,elementAttributes[attrName]);return{elementAttributes,insertRule:function insertRule(rule){return(null==styleElement?void 0:styleElement.sheet)?styleElement.sheet.insertRule(rule,styleElement.sheet.cssRules.length):__cssRulesForSSR.push(rule)},element:styleElement,bucketName,cssRules:()=>(null==styleElement?void 0:styleElement.sheet)?Array.from(styleElement.sheet.cssRules).map(cssRule=>cssRule.cssText):__cssRulesForSSR}}let styleBucketOrderingMap=["r","d","l","v","w","f","i","h","a","s","k","t","m","c"].reduce((acc,cur,j)=>(acc[cur]=j,acc),{});function getStyleSheetForBucket(bucketName,targetDocument,insertionPoint,renderer,metadata={}){let isMediaBucket="m"===bucketName,stylesheetKey=isMediaBucket?bucketName+metadata.m:bucketName;if(!renderer.stylesheets[stylesheetKey]){let tag=targetDocument&&targetDocument.createElement("style"),stylesheet=createIsomorphicStyleSheet(tag,bucketName,{...renderer.styleElementAttributes,...isMediaBucket&&{media:metadata.m}});renderer.stylesheets[stylesheetKey]=stylesheet,targetDocument&&tag&&targetDocument.head.insertBefore(tag,findInsertionPoint(targetDocument,insertionPoint,bucketName,renderer,metadata))}return renderer.stylesheets[stylesheetKey]}function findInsertionPoint(targetDocument,insertionPoint,targetBucket,renderer,metadata){let targetOrder=styleBucketOrderingMap[targetBucket],comparer=el=>targetOrder-styleBucketOrderingMap[el.getAttribute(constants_esm.$Q)],styleElements=targetDocument.head.querySelectorAll(`[${constants_esm.$Q}]`);if("m"===targetBucket&&metadata){let mediaElements=targetDocument.head.querySelectorAll(`[${constants_esm.$Q}="${targetBucket}"]`);mediaElements.length&&(styleElements=mediaElements,comparer=el=>renderer.compareMediaQueries(metadata.m,el.media))}let length=styleElements.length,index=length-1;for(;index>=0;){let styleElement=styleElements.item(index);if(comparer(styleElement)>0)return styleElement.nextSibling;index--}return length>0?styleElements.item(0):insertionPoint?insertionPoint.nextSibling:null}function safeInsertRule(sheet,ruleCSS){try{sheet.insertRule(ruleCSS)}catch(e){}}let lastIndex=0,defaultCompareMediaQueries=(a,b)=>a<b?-1:a>b?1:0;function createDOMRenderer(targetDocument="undefined"==typeof document?void 0:document,options={}){let{unstable_filterCSSRule,insertionPoint,styleElementAttributes,compareMediaQueries=defaultCompareMediaQueries}=options,renderer={insertionCache:{},stylesheets:{},styleElementAttributes:Object.freeze(styleElementAttributes),compareMediaQueries,id:`d${lastIndex++}`,insertCSSRules(cssRules){for(let styleBucketName in cssRules){let cssRulesForBucket=cssRules[styleBucketName];for(let i=0,l=cssRulesForBucket.length;i<l;i++){let[ruleCSS,metadata]=normalizeCSSBucketEntry(cssRulesForBucket[i]),sheet=getStyleSheetForBucket(styleBucketName,targetDocument,insertionPoint||null,renderer,metadata);!renderer.insertionCache[ruleCSS]&&(renderer.insertionCache[ruleCSS]=styleBucketName,unstable_filterCSSRule?unstable_filterCSSRule(ruleCSS)&&safeInsertRule(sheet,ruleCSS):safeInsertRule(sheet,ruleCSS))}}}};return renderer}var react=__webpack_require__("./node_modules/react/index.js");let RendererContext=react.createContext(createDOMRenderer());function useRenderer(){return react.useContext(RendererContext)}},"./node_modules/@griffel/react/TextDirectionContext.esm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{n:()=>TextDirectionProvider,s:()=>useTextDirection});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");let TextDirectionContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext("ltr"),TextDirectionProvider=({children,dir})=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(TextDirectionContext.Provider,{value:dir},children);function useTextDirection(){return react__WEBPACK_IMPORTED_MODULE_0__.useContext(TextDirectionContext)}},"./node_modules/@griffel/react/__resetStyles.esm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{U:()=>_resetStyles_esm_resetStyles});var insertionFactory_esm=__webpack_require__("./node_modules/@griffel/core/insertionFactory.esm.js");function __resetStyles(ltrClassName,rtlClassName,cssRules,factory=insertionFactory_esm.F){let insertStyles=factory();return function computeClassName(options){let{dir,renderer}=options;return insertStyles(renderer,Array.isArray(cssRules)?{r:cssRules}:cssRules),"ltr"===dir?ltrClassName:rtlClassName||ltrClassName}}var react_insertionFactory_esm=__webpack_require__("./node_modules/@griffel/react/insertionFactory.esm.js"),RendererContext_esm=__webpack_require__("./node_modules/@griffel/react/RendererContext.esm.js"),TextDirectionContext_esm=__webpack_require__("./node_modules/@griffel/react/TextDirectionContext.esm.js");function _resetStyles_esm_resetStyles(ltrClassName,rtlClassName,cssRules){let getStyles=__resetStyles(ltrClassName,rtlClassName,cssRules,react_insertionFactory_esm.F);return function useClasses(){return getStyles({dir:(0,TextDirectionContext_esm.s)(),renderer:(0,RendererContext_esm.a)()})}}},"./node_modules/@griffel/react/__styles.esm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{s:()=>__styles});var _griffel_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@griffel/core/__styles.esm.js"),_insertionFactory_esm_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@griffel/react/insertionFactory.esm.js"),_RendererContext_esm_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@griffel/react/RendererContext.esm.js"),_TextDirectionContext_esm_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@griffel/react/TextDirectionContext.esm.js");function __styles(classesMapBySlot,cssRules){let getStyles=(0,_griffel_core__WEBPACK_IMPORTED_MODULE_0__.s)(classesMapBySlot,cssRules,_insertionFactory_esm_js__WEBPACK_IMPORTED_MODULE_1__.F);return function useClasses(){return getStyles({dir:(0,_TextDirectionContext_esm_js__WEBPACK_IMPORTED_MODULE_2__.s)(),renderer:(0,_RendererContext_esm_js__WEBPACK_IMPORTED_MODULE_3__.a)()})}}},"./node_modules/@griffel/react/insertionFactory.esm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";function canUseDOM(){return"undefined"!=typeof window&&!!(window.document&&window.document.createElement)}__webpack_require__.d(__webpack_exports__,{F:()=>insertionFactory});var react=__webpack_require__("./node_modules/react/index.js"),react_namespaceObject=__webpack_require__.t(react,2);let useInsertionEffect=react_namespaceObject.useInsertionEffect?react_namespaceObject.useInsertionEffect:void 0,insertionFactory=()=>{let insertionCache={};return function insert(renderer,cssRules){if(useInsertionEffect&&canUseDOM()){useInsertionEffect(()=>{renderer.insertCSSRules(cssRules)},[renderer,cssRules]);return}void 0===insertionCache[renderer.id]&&(renderer.insertCSSRules(cssRules),insertionCache[renderer.id]=!0)}}},"./node_modules/@griffel/react/makeStyles.esm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>makeStyles_esm_makeStyles});var insertionFactory_esm=__webpack_require__("./node_modules/@griffel/core/insertionFactory.esm.js"),emotion_hash_esm=__webpack_require__("./node_modules/@emotion/hash/dist/emotion-hash.esm.js");function arrayToObject(array){return array.reduce(function(obj,_ref){var prop1=_ref[0],prop2=_ref[1];return obj[prop1]=prop2,obj[prop2]=prop1,obj},{})}function isBoolean(val){return"boolean"==typeof val}function isFunction(val){return"function"==typeof val}function isNumber(val){return"number"==typeof val}function isNullOrUndefined(val){return null==val}function isObject(val){return val&&"object"==typeof val}function isString(val){return"string"==typeof val}function includes(inclusive,inclusee){return -1!==inclusive.indexOf(inclusee)}function flipSign(value){return 0===parseFloat(value)?value:"-"===value[0]?value.slice(1):"-"+value}function flipTransformSign(match,prefix,offset,suffix){return prefix+flipSign(offset)+suffix}function calculateNewBackgroundPosition(value){var idx=value.indexOf(".");if(-1===idx)value=100-parseFloat(value)+"%";else{var len=value.length-idx-2;value=(value=100-parseFloat(value)).toFixed(len)+"%"}return value}function getValuesAsList(value){return value.replace(/ +/g," ").split(" ").map(function(i){return i.trim()}).filter(Boolean).reduce(function(_ref2,item){var list=_ref2.list,state=_ref2.state,openParansCount=(item.match(/\(/g)||[]).length,closedParansCount=(item.match(/\)/g)||[]).length;return state.parensDepth>0?list[list.length-1]=list[list.length-1]+" "+item:list.push(item),state.parensDepth+=openParansCount-closedParansCount,{list:list,state:state}},{list:[],state:{parensDepth:0}}).list}function handleQuartetValues(value){var splitValues=getValuesAsList(value);if(splitValues.length<=3||splitValues.length>4)return value;var top=splitValues[0],right=splitValues[1],bottom=splitValues[2];return[top,splitValues[3],bottom,right].join(" ")}function canConvertValue(value){return!isBoolean(value)&&!isNullOrUndefined(value)}function splitShadow(value){for(var shadows=[],start=0,end=0,rgba=!1;end<value.length;)rgba||","!==value[end]?("("===value[end]?rgba=!0:")"===value[end]&&(rgba=!1),end++):(shadows.push(value.substring(start,end).trim()),start=++end);return start!=end&&shadows.push(value.substring(start,end+1)),shadows}var propertyValueConverters={padding:function padding(_ref){var value=_ref.value;return isNumber(value)?value:handleQuartetValues(value)},textShadow:function textShadow(_ref2){return splitShadow(_ref2.value).map(function(shadow){return shadow.replace(/(^|\s)(-*)([.|\d]+)/,function(match,whiteSpace,negative,number){return"0"===number?match:""+whiteSpace+(""===negative?"-":"")+number})}).join(",")},borderColor:function borderColor(_ref3){return handleQuartetValues(_ref3.value)},borderRadius:function borderRadius(_ref4){var value=_ref4.value;if(isNumber(value))return value;if(includes(value,"/")){var _value$split=value.split("/"),radius1=_value$split[0],radius2=_value$split[1];return propertyValueConverters.borderRadius({value:radius1.trim()})+" / "+propertyValueConverters.borderRadius({value:radius2.trim()})}var splitValues=getValuesAsList(value);switch(splitValues.length){case 2:return splitValues.reverse().join(" ");case 4:var topLeft=splitValues[0],topRight=splitValues[1],bottomRight=splitValues[2];return[topRight,topLeft,splitValues[3],bottomRight].join(" ");default:return value}},background:function background(_ref5){var value=_ref5.value,valuesToConvert=_ref5.valuesToConvert,isRtl=_ref5.isRtl,bgImgDirectionRegex=_ref5.bgImgDirectionRegex,bgPosDirectionRegex=_ref5.bgPosDirectionRegex;if(isNumber(value))return value;var backgroundPositionValue=value.replace(/(url\(.*?\))|(rgba?\(.*?\))|(hsl\(.*?\))|(#[a-fA-F0-9]+)|((^| )(\D)+( |$))/g,"").trim();return value=value.replace(backgroundPositionValue,propertyValueConverters.backgroundPosition({value:backgroundPositionValue,valuesToConvert:valuesToConvert,isRtl:isRtl,bgPosDirectionRegex:bgPosDirectionRegex})),propertyValueConverters.backgroundImage({value:value,valuesToConvert:valuesToConvert,bgImgDirectionRegex:bgImgDirectionRegex})},backgroundImage:function backgroundImage(_ref6){var value=_ref6.value,valuesToConvert=_ref6.valuesToConvert,bgImgDirectionRegex=_ref6.bgImgDirectionRegex;return includes(value,"url(")||includes(value,"linear-gradient(")?value.replace(bgImgDirectionRegex,function(match,g1,group2){return match.replace(group2,valuesToConvert[group2])}):value},backgroundPosition:function backgroundPosition(_ref7){var value=_ref7.value,valuesToConvert=_ref7.valuesToConvert,isRtl=_ref7.isRtl,bgPosDirectionRegex=_ref7.bgPosDirectionRegex;return value.replace(isRtl?/^((-|\d|\.)+%)/:null,function(match,group){return calculateNewBackgroundPosition(group)}).replace(bgPosDirectionRegex,function(match){return valuesToConvert[match]})},backgroundPositionX:function backgroundPositionX(_ref8){var value=_ref8.value,valuesToConvert=_ref8.valuesToConvert,isRtl=_ref8.isRtl,bgPosDirectionRegex=_ref8.bgPosDirectionRegex;return isNumber(value)?value:propertyValueConverters.backgroundPosition({value:value,valuesToConvert:valuesToConvert,isRtl:isRtl,bgPosDirectionRegex:bgPosDirectionRegex})},transition:function transition(_ref9){var value=_ref9.value,propertiesToConvert=_ref9.propertiesToConvert;return value.split(/,\s*/g).map(function(transition){var values=transition.split(" ");return values[0]=propertiesToConvert[values[0]]||values[0],values.join(" ")}).join(", ")},transitionProperty:function transitionProperty(_ref10){var value=_ref10.value,propertiesToConvert=_ref10.propertiesToConvert;return value.split(/,\s*/g).map(function(prop){return propertiesToConvert[prop]||prop}).join(", ")},transform:function transform(_ref11){var value=_ref11.value,nonAsciiPattern="[^\\u0020-\\u007e]",escapePattern="(?:(?:(?:\\[0-9a-f]{1,6})(?:\\r\\n|\\s)?)|\\\\[^\\r\\n\\f0-9a-f])",signedQuantPattern="((?:-?"+("(?:[0-9]*\\.[0-9]+|[0-9]+)(?:\\s*(?:em|ex|px|cm|mm|in|pt|pc|deg|rad|grad|ms|s|hz|khz|%)|"+("-?(?:[_a-z]|"+nonAsciiPattern+"|"+escapePattern+")"+("(?:[_a-z0-9-]|"+nonAsciiPattern)+"|")+escapePattern)+")*)?)|(?:inherit|auto))",translateXRegExp=RegExp("(translateX\\s*\\(\\s*)"+signedQuantPattern+"(\\s*\\))","gi"),translateRegExp=RegExp("(translate\\s*\\(\\s*)"+signedQuantPattern+"((?:\\s*,\\s*"+signedQuantPattern+"){0,1}\\s*\\))","gi"),translate3dRegExp=RegExp("(translate3d\\s*\\(\\s*)"+signedQuantPattern+"((?:\\s*,\\s*"+signedQuantPattern+"){0,2}\\s*\\))","gi"),rotateRegExp=RegExp("(rotate[ZY]?\\s*\\(\\s*)"+signedQuantPattern+"(\\s*\\))","gi");return value.replace(translateXRegExp,flipTransformSign).replace(translateRegExp,flipTransformSign).replace(translate3dRegExp,flipTransformSign).replace(rotateRegExp,flipTransformSign)}};propertyValueConverters.objectPosition=propertyValueConverters.backgroundPosition,propertyValueConverters.margin=propertyValueConverters.padding,propertyValueConverters.borderWidth=propertyValueConverters.padding,propertyValueConverters.boxShadow=propertyValueConverters.textShadow,propertyValueConverters.webkitBoxShadow=propertyValueConverters.boxShadow,propertyValueConverters.mozBoxShadow=propertyValueConverters.boxShadow,propertyValueConverters.WebkitBoxShadow=propertyValueConverters.boxShadow,propertyValueConverters.MozBoxShadow=propertyValueConverters.boxShadow,propertyValueConverters.borderStyle=propertyValueConverters.borderColor,propertyValueConverters.webkitTransform=propertyValueConverters.transform,propertyValueConverters.mozTransform=propertyValueConverters.transform,propertyValueConverters.WebkitTransform=propertyValueConverters.transform,propertyValueConverters.MozTransform=propertyValueConverters.transform,propertyValueConverters.transformOrigin=propertyValueConverters.backgroundPosition,propertyValueConverters.webkitTransformOrigin=propertyValueConverters.transformOrigin,propertyValueConverters.mozTransformOrigin=propertyValueConverters.transformOrigin,propertyValueConverters.WebkitTransformOrigin=propertyValueConverters.transformOrigin,propertyValueConverters.MozTransformOrigin=propertyValueConverters.transformOrigin,propertyValueConverters.webkitTransition=propertyValueConverters.transition,propertyValueConverters.mozTransition=propertyValueConverters.transition,propertyValueConverters.WebkitTransition=propertyValueConverters.transition,propertyValueConverters.MozTransition=propertyValueConverters.transition,propertyValueConverters.webkitTransitionProperty=propertyValueConverters.transitionProperty,propertyValueConverters.mozTransitionProperty=propertyValueConverters.transitionProperty,propertyValueConverters.WebkitTransitionProperty=propertyValueConverters.transitionProperty,propertyValueConverters.MozTransitionProperty=propertyValueConverters.transitionProperty,propertyValueConverters["text-shadow"]=propertyValueConverters.textShadow,propertyValueConverters["border-color"]=propertyValueConverters.borderColor,propertyValueConverters["border-radius"]=propertyValueConverters.borderRadius,propertyValueConverters["background-image"]=propertyValueConverters.backgroundImage,propertyValueConverters["background-position"]=propertyValueConverters.backgroundPosition,propertyValueConverters["background-position-x"]=propertyValueConverters.backgroundPositionX,propertyValueConverters["object-position"]=propertyValueConverters.objectPosition,propertyValueConverters["border-width"]=propertyValueConverters.padding,propertyValueConverters["box-shadow"]=propertyValueConverters.textShadow,propertyValueConverters["-webkit-box-shadow"]=propertyValueConverters.textShadow,propertyValueConverters["-moz-box-shadow"]=propertyValueConverters.textShadow,propertyValueConverters["border-style"]=propertyValueConverters.borderColor,propertyValueConverters["-webkit-transform"]=propertyValueConverters.transform,propertyValueConverters["-moz-transform"]=propertyValueConverters.transform,propertyValueConverters["transform-origin"]=propertyValueConverters.transformOrigin,propertyValueConverters["-webkit-transform-origin"]=propertyValueConverters.transformOrigin,propertyValueConverters["-moz-transform-origin"]=propertyValueConverters.transformOrigin,propertyValueConverters["-webkit-transition"]=propertyValueConverters.transition,propertyValueConverters["-moz-transition"]=propertyValueConverters.transition,propertyValueConverters["transition-property"]=propertyValueConverters.transitionProperty,propertyValueConverters["-webkit-transition-property"]=propertyValueConverters.transitionProperty,propertyValueConverters["-moz-transition-property"]=propertyValueConverters.transitionProperty;var propertiesToConvert=arrayToObject([["paddingLeft","paddingRight"],["marginLeft","marginRight"],["left","right"],["borderLeft","borderRight"],["borderLeftColor","borderRightColor"],["borderLeftStyle","borderRightStyle"],["borderLeftWidth","borderRightWidth"],["borderTopLeftRadius","borderTopRightRadius"],["borderBottomLeftRadius","borderBottomRightRadius"],["padding-left","padding-right"],["margin-left","margin-right"],["border-left","border-right"],["border-left-color","border-right-color"],["border-left-style","border-right-style"],["border-left-width","border-right-width"],["border-top-left-radius","border-top-right-radius"],["border-bottom-left-radius","border-bottom-right-radius"]]),propsToIgnore=["content"],valuesToConvert=arrayToObject([["ltr","rtl"],["left","right"],["w-resize","e-resize"],["sw-resize","se-resize"],["nw-resize","ne-resize"]]),bgImgDirectionRegex=RegExp("(^|\\W|_)((ltr)|(rtl)|(left)|(right))(\\W|_|$)","g"),bgPosDirectionRegex=RegExp("(left)|(right)");function convert(object){return Object.keys(object).reduce(function(newObj,originalKey){var originalValue=object[originalKey];if(isString(originalValue)&&(originalValue=originalValue.trim()),includes(propsToIgnore,originalKey))return newObj[originalKey]=originalValue,newObj;var _convertProperty=convertProperty(originalKey,originalValue),key=_convertProperty.key,value=_convertProperty.value;return newObj[key]=value,newObj},Array.isArray(object)?[]:{})}function convertProperty(originalKey,originalValue){var isNoFlip=/\/\*\s?@noflip\s?\*\//.test(originalValue),key=isNoFlip?originalKey:getPropertyDoppelganger(originalKey),value=isNoFlip?originalValue:getValueDoppelganger(key,originalValue);return{key:key,value:value}}function getPropertyDoppelganger(property){return propertiesToConvert[property]||property}function getValueDoppelganger(key,originalValue){if(!canConvertValue(originalValue))return originalValue;if(isObject(originalValue))return convert(originalValue);var newValue,isNum=isNumber(originalValue),isFunc=isFunction(originalValue),importantlessValue=isNum||isFunc?originalValue:originalValue.replace(/ !important.*?$/,""),isImportant=!isNum&&importantlessValue.length!==originalValue.length,valueConverter=propertyValueConverters[key];return(newValue=valueConverter?valueConverter({value:importantlessValue,valuesToConvert:valuesToConvert,propertiesToConvert:propertiesToConvert,isRtl:!0,bgImgDirectionRegex:bgImgDirectionRegex,bgPosDirectionRegex:bgPosDirectionRegex}):valuesToConvert[importantlessValue]||importantlessValue,isImportant)?newValue+" !important":newValue}var constants_esm=__webpack_require__("./node_modules/@griffel/core/constants.esm.js");let uppercasePattern=/[A-Z]/g,msPattern=/^ms-/,cache={};function toHyphenLower(match){return"-"+match.toLowerCase()}function hyphenateProperty(name){if(Object.prototype.hasOwnProperty.call(cache,name))return cache[name];if("--"===name.substr(0,2))return name;let hName=name.replace(uppercasePattern,toHyphenLower);return cache[name]=msPattern.test(hName)?"-"+hName:hName}function normalizeNestedProperty(nestedProperty){return"&"===nestedProperty.charAt(0)?nestedProperty.slice(1):nestedProperty}var Enum_MS="-ms-",Enum_MOZ="-moz-",Enum_WEBKIT="-webkit-",COMMENT="comm",Enum_RULESET="rule",Enum_DECLARATION="decl",LAYER="@layer",abs=Math.abs,from=String.fromCharCode,Utility_assign=Object.assign;function hash(value,length){return 45^Utility_charat(value,0)?(((length<<2^Utility_charat(value,0))<<2^Utility_charat(value,1))<<2^Utility_charat(value,2))<<2^Utility_charat(value,3):0}function Utility_match(value,pattern){return(value=pattern.exec(value))?value[0]:value}function Utility_replace(value,pattern,replacement){return value.replace(pattern,replacement)}function Utility_charat(value,index){return 0|value.charCodeAt(index)}function Utility_substr(value,begin,end){return value.slice(begin,end)}function Utility_strlen(value){return value.length}function Utility_append(value,array){return array.push(value),value}function Utility_combine(array,callback){return array.map(callback).join("")}function Serializer_serialize(children,callback){for(var output="",i=0;i<children.length;i++)output+=callback(children[i],i,children,callback)||"";return output}function stringify(element,index,children,callback){switch(element.type){case LAYER:if(element.children.length)break;case"@import":case Enum_DECLARATION:return element.return=element.return||element.value;case COMMENT:return"";case"@keyframes":return element.return=element.value+"{"+Serializer_serialize(element.children,callback)+"}";case Enum_RULESET:if(!Utility_strlen(element.value=element.props.join(",")))return""}return Utility_strlen(children=Serializer_serialize(element.children,callback))?element.return=element.value+"{"+children+"}":""}var line=1,column=1,Tokenizer_length=0,position=0,character=0,characters="";function node(value,root,parent,type,props,children,length,siblings){return{value:value,root:root,parent:parent,type:type,props:props,children:children,line:line,column:column,length:length,return:"",siblings:siblings}}function Tokenizer_copy(root,props){return Utility_assign(node("",null,null,"",null,null,0,root.siblings),root,{length:-root.length},props)}function Tokenizer_char(){return character}function prev(){return character=position>0?Utility_charat(characters,--position):0,column--,10===character&&(column=1,line--),character}function next(){return character=position<Tokenizer_length?Utility_charat(characters,position++):0,column++,10===character&&(column=1,line++),character}function peek(){return Utility_charat(characters,position)}function token(type){switch(type){case 0:case 9:case 10:case 13:case 32:return 5;case 33:case 43:case 44:case 47:case 62:case 64:case 126:case 59:case 123:case 125:return 4;case 58:return 3;case 34:case 39:case 40:case 91:return 2;case 41:case 93:return 1}return 0}function alloc(value){return line=column=1,Tokenizer_length=Utility_strlen(characters=value),position=0,[]}function delimit(type){var begin,end;return(begin=position-1,end=delimiter(91===type?type+2:40===type?type+1:type),Utility_substr(characters,begin,end)).trim()}function Tokenizer_tokenize(value){var value1;return value1=tokenizer(alloc(value)),characters="",value1}function whitespace(type){for(;character=peek();)if(character<33)next();else break;return token(type)>2||token(character)>3?"":" "}function tokenizer(children){for(;next();)switch(token(character)){case 0:Utility_append(identifier(position-1),children);break;case 2:Utility_append(delimit(character),children);break;default:Utility_append(from(character),children)}return children}function escaping(index,count){for(var end;--count&&next()&&!(character<48)&&!(character>102)&&(!(character>57)||!(character<65))&&(!(character>70)||!(character<97)););return end=position+(count<6&&32==peek()&&32==next()),Utility_substr(characters,index,end)}function delimiter(type){for(;next();)switch(character){case type:return position;case 34:case 39:34!==type&&39!==type&&delimiter(character);break;case 40:41===type&&delimiter(type);break;case 92:next()}return position}function commenter(type,index){for(;next();)if(type+character===57)break;else if(type+character===84&&47===peek())break;return"/*"+Utility_substr(characters,index,position-1)+"*"+from(47===type?type:next())}function identifier(index){for(;!token(peek());)next();return Utility_substr(characters,index,position)}function compile(value){var value1;return value1=parse("",null,null,null,[""],value=alloc(value),0,[0],value),characters="",value1}function parse(value,root,parent,rule,rules,rulesets,pseudo,points,declarations){for(var index=0,offset=0,length=pseudo,atrule=0,property=0,previous=0,variable=1,scanning=1,ampersand=1,character=0,type="",props=rules,children=rulesets,reference=rule,characters=type;scanning;)switch(previous=character,character=next()){case 40:if(108!=previous&&58==Utility_charat(characters,length-1)){-1!=(characters+=Utility_replace(delimit(character),"&","&\f")).indexOf("&\f")&&(ampersand=-1);break}case 34:case 39:case 91:characters+=delimit(character);break;case 9:case 10:case 13:case 32:characters+=whitespace(previous);break;case 92:characters+=escaping(position-1,7);continue;case 47:switch(peek()){case 42:case 47:Utility_append(comment(commenter(next(),position),root,parent,declarations),declarations);break;default:characters+="/"}break;case 123*variable:points[index++]=Utility_strlen(characters)*ampersand;case 125*variable:case 59:case 0:switch(character){case 0:case 125:scanning=0;case 59+offset:-1==ampersand&&(characters=Utility_replace(characters,/\f/g,"")),property>0&&Utility_strlen(characters)-length&&Utility_append(property>32?declaration(characters+";",rule,parent,length-1,declarations):declaration(Utility_replace(characters," ","")+";",rule,parent,length-2,declarations),declarations);break;case 59:characters+=";";default:if(Utility_append(reference=ruleset(characters,root,parent,index,offset,rules,points,type,props=[],children=[],length,rulesets),rulesets),123===character){if(0===offset)parse(characters,root,reference,reference,props,rulesets,length,points,children);else switch(99===atrule&&110===Utility_charat(characters,3)?100:atrule){case 100:case 108:case 109:case 115:parse(value,reference,reference,rule&&Utility_append(ruleset(value,reference,reference,0,0,rules,points,type,rules,props=[],length,children),children),rules,children,length,points,rule?props:children);break;default:parse(characters,reference,reference,reference,[""],children,0,points,children)}}}index=offset=property=0,variable=ampersand=1,type=characters="",length=pseudo;break;case 58:length=1+Utility_strlen(characters),property=previous;default:if(variable<1){if(123==character)--variable;else if(125==character&&0==variable++&&125==prev())continue}switch(characters+=from(character),character*variable){case 38:ampersand=offset>0?1:(characters+="\f",-1);break;case 44:points[index++]=(Utility_strlen(characters)-1)*ampersand,ampersand=1;break;case 64:45===peek()&&(characters+=delimit(next())),atrule=peek(),offset=length=Utility_strlen(type=characters+=identifier(position)),character++;break;case 45:45===previous&&2==Utility_strlen(characters)&&(variable=0)}}return rulesets}function ruleset(value,root,parent,index,offset,rules,points,type,props,children,length,siblings){for(var post=offset-1,rule=0===offset?rules:[""],size=rule.length,i=0,j=0,k=0;i<index;++i)for(var x=0,y=Utility_substr(value,post+1,post=abs(j=points[i])),z=value;x<size;++x)(z=(j>0?rule[x]+" "+y:Utility_replace(y,/&\f/g,rule[x])).trim())&&(props[k++]=z);return node(value,root,parent,0===offset?Enum_RULESET:type,props,children,length,siblings)}function comment(value,root,parent,siblings){return node(value,root,parent,COMMENT,from(Tokenizer_char()),Utility_substr(value,2,-2),0,siblings)}function declaration(value,root,parent,length,siblings){return node(value,root,parent,Enum_DECLARATION,Utility_substr(value,0,length),Utility_substr(value,length+1,-1),length,siblings)}function middleware(collection){var length=collection.length;return function(element,index,children,callback){for(var output="",i=0;i<length;i++)output+=collection[i](element,index,children,callback)||"";return output}}function rulesheet(callback){return function(element){!element.root&&(element=element.return)&&callback(element)}}let globalPlugin=element=>{element.type===Enum_RULESET&&"string"!=typeof element.props&&(element.props=element.props.map(value=>-1===value.indexOf(":global(")?value:Tokenizer_tokenize(value).reduce((acc,value,index,children)=>{if(""===value)return acc;if(":"===value&&"global"===children[index+1]){let selector=children[index+2].slice(1,-1)+" ";return acc.unshift(selector),children[index+1]="",children[index+2]="",acc}return acc.push(value),acc},[]).join("")))};function prefixerPlugin_esm_prefix(value,length,children){switch(hash(value,length)){case 5103:return Enum_WEBKIT+"print-"+value+value;case 3191:case 6645:case 3005:case 6391:case 5879:case 5623:case 6135:case 4599:case 4855:return Enum_WEBKIT+value+value;case 4789:return Enum_MOZ+value+value;case 5349:case 4246:case 6968:return Enum_WEBKIT+value+Enum_MOZ+value+Enum_MS+value+value;case 6187:if(!Utility_match(value,/grab/))return Utility_replace(Utility_replace(Utility_replace(value,/(zoom-|grab)/,Enum_WEBKIT+"$1"),/(image-set)/,Enum_WEBKIT+"$1"),value,"")+value;case 5495:case 3959:return Utility_replace(value,/(image-set\([^]*)/,Enum_WEBKIT+"$1$`$1");case 4095:case 3583:case 4068:case 2532:return Utility_replace(value,/(.+)-inline(.+)/,Enum_WEBKIT+"$1$2")+value;case 8116:case 7059:case 5753:case 5535:case 5445:case 5701:case 4933:case 4677:case 5533:case 5789:case 5021:case 4765:if(Utility_strlen(value)-1-length>6)switch(Utility_charat(value,length+1)){case 102:if(108===Utility_charat(value,length+3))return Utility_replace(value,/(.+:)(.+)-([^]+)/,"$1"+Enum_WEBKIT+"$2-$3$1"+Enum_MOZ+(108==Utility_charat(value,length+3)?"$3":"$2-$3"))+value;case 115:return~value.indexOf("stretch")?prefixerPlugin_esm_prefix(Utility_replace(value,"stretch","fill-available"),length)+value:value}}return value}function prefixerPlugin(element,index,children,callback){if(element.length>-1&&!element.return)switch(element.type){case Enum_DECLARATION:element.return=prefixerPlugin_esm_prefix(element.value,element.length);break;case Enum_RULESET:if(element.length)return Utility_combine(element.props,function(value){switch(Utility_match(value,/(::plac\w+|:read-\w+)/)){case":read-only":case":read-write":return Serializer_serialize([Tokenizer_copy(element,{props:[Utility_replace(value,/:(read-\w+)/,":"+Enum_MOZ+"$1")]})],callback);case"::placeholder":return Serializer_serialize([Tokenizer_copy(element,{props:[Utility_replace(value,/:(plac\w+)/,":"+Enum_WEBKIT+"input-$1")]}),Tokenizer_copy(element,{props:[Utility_replace(value,/:(plac\w+)/,":"+Enum_MOZ+"$1")]}),Tokenizer_copy(element,{props:[Utility_replace(value,/:(plac\w+)/,Enum_MS+"input-$1")]})],callback)}return""})}}function isAtRuleElement(element){switch(element.type){case"@container":case"@media":case"@supports":case LAYER:return!0}return!1}let sortClassesInAtRulesPlugin=element=>{isAtRuleElement(element)&&Array.isArray(element.children)&&element.children.sort((a,b)=>a.props[0]>b.props[0]?1:-1)};function noop(){}function compileCSSRules(cssRules,sortClassesInAtRules){let rules=[];return Serializer_serialize(compile(cssRules),middleware([globalPlugin,sortClassesInAtRules?sortClassesInAtRulesPlugin:noop,prefixerPlugin,stringify,rulesheet(rule=>rules.push(rule))])),rules}let PSEUDO_SELECTOR_REGEX=/,( *[^ &])/g;function normalizePseudoSelector(pseudoSelector){return"&"+normalizeNestedProperty(pseudoSelector.replace(PSEUDO_SELECTOR_REGEX,",&$1"))}function createCSSRule(classNameSelector,cssDeclaration,pseudos){let cssRule=cssDeclaration;return pseudos.length>0&&(cssRule=pseudos.reduceRight((acc,selector)=>`${normalizePseudoSelector(selector)} { ${acc} }`,cssDeclaration)),`${classNameSelector}{${cssRule}}`}function compileAtomicCSSRule(options){let{className,media,layer,selectors,support,property,rtlClassName,rtlProperty,rtlValue,value,container}=options,cssRule=createCSSRule(`.${className}`,Array.isArray(value)?`${value.map(v=>`${hyphenateProperty(property)}: ${v}`).join(";")};`:`${hyphenateProperty(property)}: ${value};`,selectors);return rtlProperty&&rtlClassName&&(cssRule+=createCSSRule(`.${rtlClassName}`,Array.isArray(rtlValue)?`${rtlValue.map(v=>`${hyphenateProperty(rtlProperty)}: ${v}`).join(";")};`:`${hyphenateProperty(rtlProperty)}: ${rtlValue};`,selectors)),media&&(cssRule=`@media ${media} { ${cssRule} }`),layer&&(cssRule=`@layer ${layer} { ${cssRule} }`),support&&(cssRule=`@supports ${support} { ${cssRule} }`),container&&(cssRule=`@container ${container} { ${cssRule} }`),compileCSSRules(cssRule,!0)}function cssifyObject(style){let css="";for(let property in style){let value=style[property];("string"==typeof value||"number"==typeof value)&&(css+=hyphenateProperty(property)+":"+value+";")}return css}function compileKeyframeRule(keyframeObject){let css="";for(let percentage in keyframeObject)css+=`${percentage}{${cssifyObject(keyframeObject[percentage])}}`;return css}function compileKeyframesCSS(keyframeName,keyframeCSS){let rules=[];return Serializer_serialize(compile(`@keyframes ${keyframeName} {${keyframeCSS}}`),middleware([stringify,prefixerPlugin,rulesheet(rule=>rules.push(rule))])),rules}function generateCombinedQuery(currentMediaQuery,nestedMediaQuery){return 0===currentMediaQuery.length?nestedMediaQuery:`${currentMediaQuery} and ${nestedMediaQuery}`}function isMediaQuerySelector(property){return"@media"===property.substr(0,6)}function isLayerSelector(property){return"@layer"===property.substr(0,6)}let regex=/^(:|\[|>|&)/;function isNestedSelector(property){return regex.test(property)}function isSupportQuerySelector(property){return"@supports"===property.substr(0,9)}function isContainerQuerySelector(property){return"@container"===property.substring(0,10)}function isObject_esm_isObject(val){return null!=val&&"object"==typeof val&&!1===Array.isArray(val)}let pseudosMap={"us-w":"w","us-v":"i",nk:"l",si:"v",cu:"f",ve:"h",ti:"a"};function getStyleBucketName(selectors,layer,media,support,container){if(media)return"m";if(layer||support)return"t";if(container)return"c";if(selectors.length>0){let normalizedPseudo=selectors[0].trim();if(58===normalizedPseudo.charCodeAt(0))return pseudosMap[normalizedPseudo.slice(4,8)]||pseudosMap[normalizedPseudo.slice(3,5)]||"d"}return"d"}function hashClassName({container,media,layer,property,selector,support,value}){let classNameHash=(0,emotion_hash_esm.Z)(selector+container+media+layer+support+property+value.trim());return constants_esm.Hf+classNameHash}function hashPropertyKey(selector,container,media,support,property){let hashedKey=(0,emotion_hash_esm.Z)(selector+container+media+support+property),firstCharCode=hashedKey.charCodeAt(0);return firstCharCode>=48&&firstCharCode<=57?String.fromCharCode(firstCharCode+17)+hashedKey.slice(1):hashedKey}function trimSelector(selector){return selector.replace(/>\s+/g,">")}function warnAboutUnresolvedRule(property,value){let ruleText=JSON.stringify(value,null,2),message=["@griffel/react: A rule was not resolved to CSS properly. Please check your `makeStyles` or `makeResetStyles` calls for following:"," ".repeat(2)+"makeStyles({"," ".repeat(4)+"[slot]: {"," ".repeat(6)+`"${property}": ${ruleText.split("\n").map((l,n)=>" ".repeat(0===n?0:6)+l).join("\n")}`," ".repeat(4)+"}"," ".repeat(2)+"})",""];-1===property.indexOf("&")?(message.push("It looks that you're are using a nested selector, but it is missing an ampersand placeholder where the generated class name should be injected."),message.push(`Try to update a property to include it i.e "${property}" => "&${property}".`)):(message.push(""),message.push("If it's not obvious what triggers a problem, please report an issue at https://github.com/microsoft/griffel/issues")),message.join("\n")}function warnAboutUnsupportedProperties(property,value){[`@griffel/react: You are using unsupported shorthand CSS property "${property}". Please check your "makeStyles" calls, there *should not* be following:`," ".repeat(2)+"makeStyles({"," ".repeat(4)+`[slot]: { ${property}: "${value}" }`," ".repeat(2)+"})","","Learn why CSS shorthands are not supported: https://aka.ms/griffel-css-shorthands"].join("\n")}function pushToCSSRules(cssRulesByBucket,styleBucketName,ltrCSS,rtlCSS,media){var _a,metadata,metadata1;let metadata2;"m"===styleBucketName&&media&&(metadata2={m:media}),null!==(_a=cssRulesByBucket[styleBucketName])&&void 0!==_a||(cssRulesByBucket[styleBucketName]=[]),ltrCSS&&cssRulesByBucket[styleBucketName].push((metadata=metadata2)?[ltrCSS,metadata]:ltrCSS),rtlCSS&&cssRulesByBucket[styleBucketName].push((metadata1=metadata2)?[rtlCSS,metadata1]:rtlCSS)}function resolveStyleRules(styles,selectors=[],media="",layer="",support="",container="",cssClassesMap={},cssRulesByBucket={},rtlValue){for(let property in styles){if(constants_esm.C_.hasOwnProperty(property)){warnAboutUnsupportedProperties(property,styles[property]);continue}let value=styles[property];if(null!=value){if("string"==typeof value||"number"==typeof value){let selector=trimSelector(selectors.join("")),key=hashPropertyKey(selector,container,media,support,property),className=hashClassName({container,media,layer,value:value.toString(),support,selector,property}),rtlDefinition=rtlValue&&{key:property,value:rtlValue}||convertProperty(property,value),flippedInRtl=rtlDefinition.key!==property||rtlDefinition.value!==value,rtlClassName=flippedInRtl?hashClassName({container,value:rtlDefinition.value.toString(),property:rtlDefinition.key,selector,media,layer,support}):void 0,rtlCompileOptions=flippedInRtl?{rtlClassName,rtlProperty:rtlDefinition.key,rtlValue:rtlDefinition.value}:void 0,styleBucketName=getStyleBucketName(selectors,layer,media,support,container),[ltrCSS,rtlCSS]=compileAtomicCSSRule({className,media,layer,selectors,property,support,container,value,...rtlCompileOptions});cssClassesMap[key]=rtlClassName?[className,rtlClassName]:className,pushToCSSRules(cssRulesByBucket,styleBucketName,ltrCSS,rtlCSS,media)}else if("animationName"===property){let animationNameValue=Array.isArray(value)?value:[value],animationNames=[],rtlAnimationNames=[];for(let keyframeObject of animationNameValue){let rtlAnimationName;let keyframeCSS=compileKeyframeRule(keyframeObject),rtlKeyframeCSS=compileKeyframeRule(convert(keyframeObject)),animationName=constants_esm.Hf+(0,emotion_hash_esm.Z)(keyframeCSS),keyframeRules=compileKeyframesCSS(animationName,keyframeCSS),rtlKeyframeRules=[];keyframeCSS===rtlKeyframeCSS?rtlAnimationName=animationName:rtlKeyframeRules=compileKeyframesCSS(rtlAnimationName=constants_esm.Hf+(0,emotion_hash_esm.Z)(rtlKeyframeCSS),rtlKeyframeCSS);for(let i=0;i<keyframeRules.length;i++)pushToCSSRules(cssRulesByBucket,"k",keyframeRules[i],rtlKeyframeRules[i],media);animationNames.push(animationName),rtlAnimationNames.push(rtlAnimationName)}resolveStyleRules({animationName:animationNames.join(", ")},selectors,media,layer,support,container,cssClassesMap,cssRulesByBucket,rtlAnimationNames.join(", "))}else if(Array.isArray(value)){if(0===value.length)continue;let selector=trimSelector(selectors.join("")),key=hashPropertyKey(selector,container,media,support,property),className=hashClassName({container,media,layer,value:value.map(v=>(null!=v?v:"").toString()).join(";"),support,selector,property}),rtlDefinitions=value.map(v=>convertProperty(property,v));if(rtlDefinitions.some(v=>v.key!==rtlDefinitions[0].key))continue;let flippedInRtl=rtlDefinitions[0].key!==property||rtlDefinitions.some((v,i)=>v.value!==value[i]),rtlClassName=flippedInRtl?hashClassName({container,value:rtlDefinitions.map(v=>{var _a;return(null!==(_a=null==v?void 0:v.value)&&void 0!==_a?_a:"").toString()}).join(";"),property:rtlDefinitions[0].key,selector,layer,media,support}):void 0,rtlCompileOptions=flippedInRtl?{rtlClassName,rtlProperty:rtlDefinitions[0].key,rtlValue:rtlDefinitions.map(d=>d.value)}:void 0,styleBucketName=getStyleBucketName(selectors,layer,media,support,container),[ltrCSS,rtlCSS]=compileAtomicCSSRule({className,media,layer,selectors,property,support,container,value:value,...rtlCompileOptions});cssClassesMap[key]=rtlClassName?[className,rtlClassName]:className,pushToCSSRules(cssRulesByBucket,styleBucketName,ltrCSS,rtlCSS,media)}else isObject_esm_isObject(value)&&(isNestedSelector(property)?resolveStyleRules(value,selectors.concat(normalizeNestedProperty(property)),media,layer,support,container,cssClassesMap,cssRulesByBucket):isMediaQuerySelector(property)?resolveStyleRules(value,selectors,generateCombinedQuery(media,property.slice(6).trim()),layer,support,container,cssClassesMap,cssRulesByBucket):isLayerSelector(property)?resolveStyleRules(value,selectors,media,(layer?`${layer}.`:"")+property.slice(6).trim(),support,container,cssClassesMap,cssRulesByBucket):isSupportQuerySelector(property)?resolveStyleRules(value,selectors,media,layer,generateCombinedQuery(support,property.slice(9).trim()),container,cssClassesMap,cssRulesByBucket):isContainerQuerySelector(property)?resolveStyleRules(value,selectors,media,layer,support,property.slice(10).trim(),cssClassesMap,cssRulesByBucket):warnAboutUnresolvedRule(property,value))}}return[cssClassesMap,cssRulesByBucket]}function resolveStyleRulesForSlots(stylesBySlots){let classesMapBySlot={},cssRules={};for(let slotName in stylesBySlots){let[cssClassMap,cssRulesByBucket]=resolveStyleRules(stylesBySlots[slotName]);classesMapBySlot[slotName]=cssClassMap,Object.keys(cssRulesByBucket).forEach(styleBucketName=>{cssRules[styleBucketName]=(cssRules[styleBucketName]||[]).concat(cssRulesByBucket[styleBucketName])})}return[classesMapBySlot,cssRules]}var reduceToClassNameForSlots_esm=__webpack_require__("./node_modules/@griffel/core/runtime/reduceToClassNameForSlots.esm.js");function makeStyles(stylesBySlots,factory=insertionFactory_esm.F){let insertStyles=factory(),classesMapBySlot=null,cssRules=null,ltrClassNamesForSlots=null,rtlClassNamesForSlots=null;return function computeClasses(options){let{dir,renderer}=options;null===classesMapBySlot&&([classesMapBySlot,cssRules]=resolveStyleRulesForSlots(stylesBySlots));let isLTR="ltr"===dir;return isLTR?null===ltrClassNamesForSlots&&(ltrClassNamesForSlots=(0,reduceToClassNameForSlots_esm.V)(classesMapBySlot,dir)):null===rtlClassNamesForSlots&&(rtlClassNamesForSlots=(0,reduceToClassNameForSlots_esm.V)(classesMapBySlot,dir)),insertStyles(renderer,cssRules),isLTR?ltrClassNamesForSlots:rtlClassNamesForSlots}}var react_insertionFactory_esm=__webpack_require__("./node_modules/@griffel/react/insertionFactory.esm.js"),RendererContext_esm=__webpack_require__("./node_modules/@griffel/react/RendererContext.esm.js"),TextDirectionContext_esm=__webpack_require__("./node_modules/@griffel/react/TextDirectionContext.esm.js");function makeStyles_esm_makeStyles(stylesBySlots){let getStyles=makeStyles(stylesBySlots,react_insertionFactory_esm.F);return function useClasses(){return getStyles({dir:(0,TextDirectionContext_esm.s)(),renderer:(0,RendererContext_esm.a)()})}}},"./node_modules/@shko.online/componentframework-mock/lib/esm/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";let sinon;__webpack_require__.d(__webpack_exports__,{tg:()=>ComponentFrameworkMockGenerator,UT:()=>EnumPropertyMock,g1:()=>StringPropertyMock});var process=__webpack_require__("./node_modules/process/browser.js");(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){if(!f&&__webpack_require__("./node_modules/sinon/pkg sync recursive"))return require(i,!0);if(u)return u(i,!0);var a=Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){return o(e[i][1][r]||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=void 0,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require1,module,exports){sinon=require1("./sinon")},{"./sinon":2}],2:[function(require1,module,exports){var behavior=require1("./sinon/behavior"),createSandbox=require1("./sinon/create-sandbox"),extend=require1("./sinon/util/core/extend"),fakeTimers=require1("./sinon/util/fake-timers"),format=require1("./sinon/util/core/format"),nise=require1("nise"),Sandbox=require1("./sinon/sandbox"),stub=require1("./sinon/stub"),promise=require1("./sinon/promise"),apiMethods={createSandbox:createSandbox,assert:require1("./sinon/assert"),match:require1("@sinonjs/samsam").createMatcher,restoreObject:require1("./sinon/restore-object"),expectation:require1("./sinon/mock-expectation"),defaultConfig:require1("./sinon/util/core/default-config"),setFormatter:format.setFormatter,timers:fakeTimers.timers,xhr:nise.fakeXhr.xhr,FakeXMLHttpRequest:nise.fakeXhr.FakeXMLHttpRequest,fakeServer:nise.fakeServer,fakeServerWithClock:nise.fakeServerWithClock,createFakeServer:nise.fakeServer.create.bind(nise.fakeServer),createFakeServerWithClock:nise.fakeServerWithClock.create.bind(nise.fakeServerWithClock),addBehavior:function(name,fn){behavior.addBehavior(stub,name,fn)},promise:promise},api=extend(new Sandbox,apiMethods);module.exports=api},{"./sinon/assert":3,"./sinon/behavior":4,"./sinon/create-sandbox":7,"./sinon/mock-expectation":10,"./sinon/promise":12,"./sinon/restore-object":17,"./sinon/sandbox":18,"./sinon/stub":21,"./sinon/util/core/default-config":23,"./sinon/util/core/extend":25,"./sinon/util/core/format":26,"./sinon/util/fake-timers":40,"@sinonjs/samsam":106,nise:127}],3:[function(require1,module,exports){var arrayProto=require1("@sinonjs/commons").prototypes.array,calledInOrder=require1("@sinonjs/commons").calledInOrder,createMatcher=require1("@sinonjs/samsam").createMatcher,orderByFirstCall=require1("@sinonjs/commons").orderByFirstCall,timesInWords=require1("./util/core/times-in-words"),format=require1("./util/core/format"),stringSlice=require1("@sinonjs/commons").prototypes.string.slice,globalObject=require1("@sinonjs/commons").global,arraySlice=arrayProto.slice,concat=arrayProto.concat,forEach=arrayProto.forEach,join=arrayProto.join,splice=arrayProto.splice;function createAssertObject(){var assert;function verifyIsStub(){var args=arraySlice(arguments);forEach(args,function(method){method||assert.fail("fake is not a spy"),method.proxy&&method.proxy.isSinonProxy?verifyIsStub(method.proxy):("function"!=typeof method&&assert.fail(`${method} is not a function`),"function"!=typeof method.getCall&&assert.fail(`${method} is not stubbed`))})}function verifyIsValidAssertion(assertionMethod,assertionArgs){switch(assertionMethod){case"notCalled":case"called":case"calledOnce":case"calledTwice":case"calledThrice":0!==assertionArgs.length&&assert.fail(`${assertionMethod} takes 1 argument but was called with ${assertionArgs.length+1} arguments`)}}function failAssertion(object,msg){var obj=object||globalObject;(obj.fail||assert.fail).call(obj,msg)}function mirrorPropAsAssertion(name,method,message){var msg=message,meth=method;2==arguments.length&&(msg=method,meth=name),assert[name]=function(fake){verifyIsStub(fake);var args=arraySlice(arguments,1);verifyIsValidAssertion(name,args),("function"==typeof meth?meth(fake):"function"==typeof fake[meth]?fake[meth].apply(fake,args):fake[meth])?assert.pass(name):failAssertion(this,(fake.printf||fake.proxy.printf).apply(fake,concat([msg],args)))}}function exposedName(prefix,prop){return!prefix||/^fail/.test(prop)?prop:prefix+stringSlice(prop,0,1).toUpperCase()+stringSlice(prop,1)}return assert={failException:"AssertError",fail:function fail(message){var error=Error(message);throw error.name=this.failException||assert.failException,error},pass:function pass(){},callOrder:function assertCallOrder(){verifyIsStub.apply(null,arguments);var expected="",actual="";if(calledInOrder(arguments))assert.pass("callOrder");else{try{expected=join(arguments,", ");for(var calls=arraySlice(arguments),i=calls.length;i;)calls[--i].called||splice(calls,i,1);actual=join(orderByFirstCall(calls),", ")}catch(e){}failAssertion(this,`expected ${expected} to be called in order but were called as ${actual}`)}},callCount:function assertCallCount(method,count){var msg;verifyIsStub(method),"number"!=typeof count?failAssertion(this,msg=`expected ${format(count)} to be a number but was of type ${typeof count}`):method.callCount!==count?(msg=`expected %n to be called ${timesInWords(count)} but was called %c%C`,failAssertion(this,method.printf(msg))):assert.pass("callCount")},expose:function expose(target,options){if(!target)throw TypeError("target is null or undefined");var o=options||{},prefix=void 0===o.prefix&&"assert"||o.prefix,includeFail=void 0===o.includeFail||!!o.includeFail,instance=this;return forEach(Object.keys(instance),function(method){"expose"!==method&&(includeFail||!/^(fail)/.test(method))&&(target[exposedName(prefix,method)]=instance[method])}),target},match:function match(actual,expectation){createMatcher(expectation).test(actual)?assert.pass("match"):failAssertion(this,join(["expected value to match",`    expected = ${format(expectation)}`,`    actual = ${format(actual)}`],"\n"))}},mirrorPropAsAssertion("called","expected %n to have been called at least once but was never called"),mirrorPropAsAssertion("notCalled",function(spy){return!spy.called},"expected %n to not have been called but was called %c%C"),mirrorPropAsAssertion("calledOnce","expected %n to be called once but was called %c%C"),mirrorPropAsAssertion("calledTwice","expected %n to be called twice but was called %c%C"),mirrorPropAsAssertion("calledThrice","expected %n to be called thrice but was called %c%C"),mirrorPropAsAssertion("calledOn","expected %n to be called with %1 as this but was called with %t"),mirrorPropAsAssertion("alwaysCalledOn","expected %n to always be called with %1 as this but was called with %t"),mirrorPropAsAssertion("calledWithNew","expected %n to be called with new"),mirrorPropAsAssertion("alwaysCalledWithNew","expected %n to always be called with new"),mirrorPropAsAssertion("calledWith","expected %n to be called with arguments %D"),mirrorPropAsAssertion("calledWithMatch","expected %n to be called with match %D"),mirrorPropAsAssertion("alwaysCalledWith","expected %n to always be called with arguments %D"),mirrorPropAsAssertion("alwaysCalledWithMatch","expected %n to always be called with match %D"),mirrorPropAsAssertion("calledWithExactly","expected %n to be called with exact arguments %D"),mirrorPropAsAssertion("calledOnceWithExactly","expected %n to be called once and with exact arguments %D"),mirrorPropAsAssertion("calledOnceWithMatch","expected %n to be called once and with match %D"),mirrorPropAsAssertion("alwaysCalledWithExactly","expected %n to always be called with exact arguments %D"),mirrorPropAsAssertion("neverCalledWith","expected %n to never be called with arguments %*%C"),mirrorPropAsAssertion("neverCalledWithMatch","expected %n to never be called with match %*%C"),mirrorPropAsAssertion("threw","%n did not throw exception%C"),mirrorPropAsAssertion("alwaysThrew","%n did not always throw exception%C"),assert}module.exports=createAssertObject(),module.exports.createAssertObject=createAssertObject},{"./util/core/format":26,"./util/core/times-in-words":35,"@sinonjs/commons":47,"@sinonjs/samsam":106}],4:[function(require1,module,exports){var arrayProto=require1("@sinonjs/commons").prototypes.array,extend=require1("./util/core/extend"),functionName=require1("@sinonjs/commons").functionName,nextTick=require1("./util/core/next-tick"),valueToString=require1("@sinonjs/commons").valueToString,exportAsyncBehaviors=require1("./util/core/export-async-behaviors"),concat=arrayProto.concat,join=arrayProto.join,reverse=arrayProto.reverse,slice=arrayProto.slice;function getCallback(behavior,args){var argumentList,callArgAt=behavior.callArgAt;if(callArgAt>=0)return args[callArgAt];-1===callArgAt&&(argumentList=args),-2===callArgAt&&(argumentList=reverse(slice(args)));for(var callArgProp=behavior.callArgProp,i=0,l=argumentList.length;i<l;++i){if(!callArgProp&&"function"==typeof argumentList[i])return argumentList[i];if(callArgProp&&argumentList[i]&&"function"==typeof argumentList[i][callArgProp])return argumentList[i][callArgProp]}return null}function getCallbackError(behavior,func,args){if(behavior.callArgAt<0){var msg;return msg=behavior.callArgProp?`${functionName(behavior.stub)} expected to yield to '${valueToString(behavior.callArgProp)}', but no object with such a property was passed.`:`${functionName(behavior.stub)} expected to yield, but no callback was passed.`,args.length>0&&(msg+=` Received [${join(args,", ")}]`),msg}return`argument at index ${behavior.callArgAt} is not a function: ${func}`}function ensureArgs(name,behavior,args){var index=behavior[name.replace(/sArg/,"ArgAt")];if(index>=args.length)throw TypeError(`${name} failed: ${index+1} arguments required but only ${args.length} present`)}function callCallback(behavior,args){if("number"==typeof behavior.callArgAt){ensureArgs("callsArg",behavior,args);var func=getCallback(behavior,args);if("function"!=typeof func)throw TypeError(getCallbackError(behavior,func,args));if(!behavior.callbackAsync)return func.apply(behavior.callbackContext,behavior.callbackArguments);nextTick(function(){func.apply(behavior.callbackContext,behavior.callbackArguments)})}}var proto={create:function create(stub){var behavior=extend({},proto);return delete behavior.create,delete behavior.addBehavior,delete behavior.createBehavior,behavior.stub=stub,stub.defaultBehavior&&stub.defaultBehavior.promiseLibrary&&(behavior.promiseLibrary=stub.defaultBehavior.promiseLibrary),behavior},isPresent:function isPresent(){return"number"==typeof this.callArgAt||this.exception||this.exceptionCreator||"number"==typeof this.returnArgAt||this.returnThis||"number"==typeof this.resolveArgAt||this.resolveThis||"number"==typeof this.throwArgAt||this.fakeFn||this.returnValueDefined},invoke:function invoke(context,args){var returnValue=callCallback(this,args);if(this.exception)throw this.exception;if(this.exceptionCreator)throw this.exception=this.exceptionCreator(),this.exceptionCreator=void 0,this.exception;if("number"==typeof this.returnArgAt)return ensureArgs("returnsArg",this,args),args[this.returnArgAt];if(this.returnThis)return context;if("number"==typeof this.throwArgAt)throw ensureArgs("throwsArg",this,args),args[this.throwArgAt];if(this.fakeFn)return this.fakeFn.apply(context,args);if("number"==typeof this.resolveArgAt)return ensureArgs("resolvesArg",this,args),(this.promiseLibrary||Promise).resolve(args[this.resolveArgAt]);else if(this.resolveThis)return(this.promiseLibrary||Promise).resolve(context);else if(this.resolve)return(this.promiseLibrary||Promise).resolve(this.returnValue);else if(this.reject)return(this.promiseLibrary||Promise).reject(this.returnValue);else if(this.callsThrough)return this.effectiveWrappedMethod().apply(context,args);else if(this.callsThroughWithNew){var WrappedClass=this.effectiveWrappedMethod(),argsArray=slice(args);return new(WrappedClass.bind.apply(WrappedClass,concat([null],argsArray)))}else if(void 0!==this.returnValue);else if("number"==typeof this.callArgAt)return returnValue;return this.returnValue},effectiveWrappedMethod:function effectiveWrappedMethod(){for(var stubb=this.stub;stubb;stubb=stubb.parent)if(stubb.wrappedMethod)return stubb.wrappedMethod;throw Error("Unable to find wrapped method")},onCall:function onCall(index){return this.stub.onCall(index)},onFirstCall:function onFirstCall(){return this.stub.onFirstCall()},onSecondCall:function onSecondCall(){return this.stub.onSecondCall()},onThirdCall:function onThirdCall(){return this.stub.onThirdCall()},withArgs:function withArgs(){throw Error('Defining a stub by invoking "stub.onCall(...).withArgs(...)" is not supported. Use "stub.withArgs(...).onCall(...)" to define sequential behavior for calls with certain arguments.')}};function createBehavior(behaviorMethod){return function(){return this.defaultBehavior=this.defaultBehavior||proto.create(this),this.defaultBehavior[behaviorMethod].apply(this.defaultBehavior,arguments),this}}function addBehavior(stub,name,fn){proto[name]=function(){return fn.apply(this,concat([this],slice(arguments))),this.stub||this},stub[name]=createBehavior(name)}proto.addBehavior=addBehavior,proto.createBehavior=createBehavior;var asyncBehaviors=exportAsyncBehaviors(proto);module.exports=extend.nonEnum({},proto,asyncBehaviors)},{"./util/core/export-async-behaviors":24,"./util/core/extend":25,"./util/core/next-tick":34,"@sinonjs/commons":47}],5:[function(require1,module,exports){var walk=require1("./util/core/walk"),getPropertyDescriptor=require1("./util/core/get-property-descriptor"),hasOwnProperty=require1("@sinonjs/commons").prototypes.object.hasOwnProperty,push=require1("@sinonjs/commons").prototypes.array.push;function collectMethod(methods,object,prop,propOwner){"function"==typeof getPropertyDescriptor(propOwner,prop).value&&hasOwnProperty(object,prop)&&push(methods,object[prop])}function collectOwnMethods(object){var methods=[];return walk(object,collectMethod.bind(null,methods,object)),methods}module.exports=collectOwnMethods},{"./util/core/get-property-descriptor":29,"./util/core/walk":38,"@sinonjs/commons":47}],6:[function(require1,module,exports){var supportsColor=require1("supports-color");function colorize(str,color){return!1===supportsColor.stdout?str:`\x1b[${color}m${str}\x1b[0m`}exports.red=function(str){return colorize(str,31)},exports.green=function(str){return colorize(str,32)},exports.cyan=function(str){return colorize(str,96)},exports.white=function(str){return colorize(str,39)},exports.bold=function(str){return colorize(str,1)}},{"supports-color":150}],7:[function(require1,module,exports){var arrayProto=require1("@sinonjs/commons").prototypes.array,Sandbox=require1("./sandbox"),forEach=arrayProto.forEach,push=arrayProto.push;function prepareSandboxFromConfig(config){var sandbox=new Sandbox;return config.useFakeServer&&("object"==typeof config.useFakeServer&&(sandbox.serverPrototype=config.useFakeServer),sandbox.useFakeServer()),config.useFakeTimers&&("object"==typeof config.useFakeTimers?sandbox.useFakeTimers(config.useFakeTimers):sandbox.useFakeTimers()),sandbox}function exposeValue(sandbox,config,key,value){value&&(!config.injectInto||key in config.injectInto?push(sandbox.args,value):(config.injectInto[key]=value,push(sandbox.injectedKeys,key)))}function createSandbox(config){if(!config)return new Sandbox;var configuredSandbox=prepareSandboxFromConfig(config);configuredSandbox.args=configuredSandbox.args||[],configuredSandbox.injectedKeys=[],configuredSandbox.injectInto=config.injectInto;var exposed=configuredSandbox.inject({});return config.properties?forEach(config.properties,function(prop){var value=exposed[prop]||"sandbox"===prop&&configuredSandbox;exposeValue(configuredSandbox,config,prop,value)}):exposeValue(configuredSandbox,config,"sandbox"),configuredSandbox}module.exports=createSandbox},{"./sandbox":18,"@sinonjs/commons":47}],8:[function(require1,module,exports){var arrayProto=require1("@sinonjs/commons").prototypes.array,isPropertyConfigurable=require1("./util/core/is-property-configurable"),exportAsyncBehaviors=require1("./util/core/export-async-behaviors"),extend=require1("./util/core/extend"),slice=arrayProto.slice;function throwsException(fake,error,message){"function"==typeof error?fake.exceptionCreator=error:"string"==typeof error?fake.exceptionCreator=function(){var newException=Error(message||"");return newException.name=error,newException}:error?fake.exception=error:fake.exceptionCreator=function(){return Error("Error")}}var defaultBehaviors={callsFake:function callsFake(fake,fn){fake.fakeFn=fn},callsArg:function callsArg(fake,index){if("number"!=typeof index)throw TypeError("argument index is not number");fake.callArgAt=index,fake.callbackArguments=[],fake.callbackContext=void 0,fake.callArgProp=void 0,fake.callbackAsync=!1},callsArgOn:function callsArgOn(fake,index,context){if("number"!=typeof index)throw TypeError("argument index is not number");fake.callArgAt=index,fake.callbackArguments=[],fake.callbackContext=context,fake.callArgProp=void 0,fake.callbackAsync=!1},callsArgWith:function callsArgWith(fake,index){if("number"!=typeof index)throw TypeError("argument index is not number");fake.callArgAt=index,fake.callbackArguments=slice(arguments,2),fake.callbackContext=void 0,fake.callArgProp=void 0,fake.callbackAsync=!1},callsArgOnWith:function callsArgWith(fake,index,context){if("number"!=typeof index)throw TypeError("argument index is not number");fake.callArgAt=index,fake.callbackArguments=slice(arguments,3),fake.callbackContext=context,fake.callArgProp=void 0,fake.callbackAsync=!1},usingPromise:function usingPromise(fake,promiseLibrary){fake.promiseLibrary=promiseLibrary},yields:function(fake){fake.callArgAt=-1,fake.callbackArguments=slice(arguments,1),fake.callbackContext=void 0,fake.callArgProp=void 0,fake.callbackAsync=!1,fake.fakeFn=void 0},yieldsRight:function(fake){fake.callArgAt=-2,fake.callbackArguments=slice(arguments,1),fake.callbackContext=void 0,fake.callArgProp=void 0,fake.callbackAsync=!1,fake.fakeFn=void 0},yieldsOn:function(fake,context){fake.callArgAt=-1,fake.callbackArguments=slice(arguments,2),fake.callbackContext=context,fake.callArgProp=void 0,fake.callbackAsync=!1,fake.fakeFn=void 0},yieldsTo:function(fake,prop){fake.callArgAt=-1,fake.callbackArguments=slice(arguments,2),fake.callbackContext=void 0,fake.callArgProp=prop,fake.callbackAsync=!1,fake.fakeFn=void 0},yieldsToOn:function(fake,prop,context){fake.callArgAt=-1,fake.callbackArguments=slice(arguments,3),fake.callbackContext=context,fake.callArgProp=prop,fake.callbackAsync=!1,fake.fakeFn=void 0},throws:throwsException,throwsException:throwsException,returns:function returns(fake,value){fake.returnValue=value,fake.resolve=!1,fake.reject=!1,fake.returnValueDefined=!0,fake.exception=void 0,fake.exceptionCreator=void 0,fake.fakeFn=void 0},returnsArg:function returnsArg(fake,index){if("number"!=typeof index)throw TypeError("argument index is not number");fake.returnArgAt=index},throwsArg:function throwsArg(fake,index){if("number"!=typeof index)throw TypeError("argument index is not number");fake.throwArgAt=index},returnsThis:function returnsThis(fake){fake.returnThis=!0},resolves:function resolves(fake,value){fake.returnValue=value,fake.resolve=!0,fake.resolveThis=!1,fake.reject=!1,fake.returnValueDefined=!0,fake.exception=void 0,fake.exceptionCreator=void 0,fake.fakeFn=void 0},resolvesArg:function resolvesArg(fake,index){if("number"!=typeof index)throw TypeError("argument index is not number");fake.resolveArgAt=index,fake.returnValue=void 0,fake.resolve=!0,fake.resolveThis=!1,fake.reject=!1,fake.returnValueDefined=!1,fake.exception=void 0,fake.exceptionCreator=void 0,fake.fakeFn=void 0},rejects:function rejects(fake,error,message){var reason;return"string"==typeof error?(reason=Error(message||"")).name=error:reason=error||Error("Error"),fake.returnValue=reason,fake.resolve=!1,fake.resolveThis=!1,fake.reject=!0,fake.returnValueDefined=!0,fake.exception=void 0,fake.exceptionCreator=void 0,fake.fakeFn=void 0,fake},resolvesThis:function resolvesThis(fake){fake.returnValue=void 0,fake.resolve=!1,fake.resolveThis=!0,fake.reject=!1,fake.returnValueDefined=!1,fake.exception=void 0,fake.exceptionCreator=void 0,fake.fakeFn=void 0},callThrough:function callThrough(fake){fake.callsThrough=!0},callThroughWithNew:function callThroughWithNew(fake){fake.callsThroughWithNew=!0},get:function get(fake,getterFunction){var rootStub=fake.stub||fake;return Object.defineProperty(rootStub.rootObj,rootStub.propName,{get:getterFunction,configurable:isPropertyConfigurable(rootStub.rootObj,rootStub.propName)}),fake},set:function set(fake,setterFunction){var rootStub=fake.stub||fake;return Object.defineProperty(rootStub.rootObj,rootStub.propName,{set:setterFunction,configurable:isPropertyConfigurable(rootStub.rootObj,rootStub.propName)}),fake},value:function value(fake,newVal){var rootStub=fake.stub||fake;return Object.defineProperty(rootStub.rootObj,rootStub.propName,{value:newVal,enumerable:!0,writable:!0,configurable:rootStub.shadowsPropOnPrototype||isPropertyConfigurable(rootStub.rootObj,rootStub.propName)}),fake}},asyncBehaviors=exportAsyncBehaviors(defaultBehaviors);module.exports=extend({},defaultBehaviors,asyncBehaviors)},{"./util/core/export-async-behaviors":24,"./util/core/extend":25,"./util/core/is-property-configurable":32,"@sinonjs/commons":47}],9:[function(require1,module,exports){var arrayProto=require1("@sinonjs/commons").prototypes.array,createProxy=require1("./proxy"),nextTick=require1("./util/core/next-tick"),slice=arrayProto.slice,promiseLib=Promise;function fake(f){if(arguments.length>0&&"function"!=typeof f)throw TypeError("Expected f argument to be a Function");return wrapFunc(f)}module.exports=fake,fake.returns=function returns(value){return wrapFunc(function f(){return value})},fake.throws=function throws(value){return wrapFunc(function f(){throw getError(value)})},fake.resolves=function resolves(value){return wrapFunc(function f(){return promiseLib.resolve(value)})},fake.rejects=function rejects(value){return wrapFunc(function f(){return promiseLib.reject(getError(value))})},fake.usingPromise=function usingPromise(promiseLibrary){return promiseLib=promiseLibrary,fake},fake.yields=function yields(){var values=slice(arguments);return wrapFunc(function f(){var callback=arguments[arguments.length-1];if("function"!=typeof callback)throw TypeError("Expected last argument to be a function");callback.apply(null,values)})},fake.yieldsAsync=function yieldsAsync(){var values=slice(arguments);return wrapFunc(function f(){var callback=arguments[arguments.length-1];if("function"!=typeof callback)throw TypeError("Expected last argument to be a function");nextTick(function(){callback.apply(null,values)})})};var uuid=0;function wrapFunc(f){var proxy,fakeInstance=function(){arguments.length>0&&(firstArg=arguments[0],lastArg=arguments[arguments.length-1]);var firstArg,lastArg,callback=lastArg&&"function"==typeof lastArg?lastArg:void 0;return proxy.firstArg=firstArg,proxy.lastArg=lastArg,proxy.callback=callback,f&&f.apply(this,arguments)};return(proxy=createProxy(fakeInstance,f||fakeInstance)).displayName="fake",proxy.id=`fake#${uuid++}`,proxy}function getError(value){return value instanceof Error?value:Error(value)}},{"./proxy":16,"./util/core/next-tick":34,"@sinonjs/commons":47}],10:[function(require1,module,exports){var arrayProto=require1("@sinonjs/commons").prototypes.array,proxyInvoke=require1("./proxy-invoke"),proxyCallToString=require1("./proxy-call").toString,timesInWords=require1("./util/core/times-in-words"),extend=require1("./util/core/extend"),match=require1("@sinonjs/samsam").createMatcher,stub=require1("./stub"),assert=require1("./assert"),deepEqual=require1("@sinonjs/samsam").deepEqual,format=require1("./util/core/format"),valueToString=require1("@sinonjs/commons").valueToString,every=arrayProto.every,forEach=arrayProto.forEach,push=arrayProto.push,slice=arrayProto.slice;function callCountInWords(callCount){return 0===callCount?"never called":`called ${timesInWords(callCount)}`}function expectedCallCountInWords(expectation){var min=expectation.minCalls,max=expectation.maxCalls;if("number"==typeof min&&"number"==typeof max){var str=timesInWords(min);return min!==max&&(str=`at least ${str} and at most ${timesInWords(max)}`),str}return"number"==typeof min?`at least ${timesInWords(min)}`:`at most ${timesInWords(max)}`}function receivedMinCalls(expectation){return"number"!=typeof expectation.minCalls||expectation.callCount>=expectation.minCalls}function receivedMaxCalls(expectation){return"number"==typeof expectation.maxCalls&&expectation.callCount===expectation.maxCalls}function verifyMatcher(possibleMatcher,arg){return match.isMatcher(possibleMatcher)&&possibleMatcher.test(arg)||!0}var mockExpectation={minCalls:1,maxCalls:1,create:function create(methodName){var expectation=extend.nonEnum(stub(),mockExpectation);return delete expectation.create,expectation.method=methodName,expectation},invoke:function invoke(func,thisValue,args){return this.verifyCallAllowed(thisValue,args),proxyInvoke.apply(this,arguments)},atLeast:function atLeast(num){if("number"!=typeof num)throw TypeError(`'${valueToString(num)}' is not number`);return this.limitsSet||(this.maxCalls=null,this.limitsSet=!0),this.minCalls=num,this},atMost:function atMost(num){if("number"!=typeof num)throw TypeError(`'${valueToString(num)}' is not number`);return this.limitsSet||(this.minCalls=null,this.limitsSet=!0),this.maxCalls=num,this},never:function never(){return this.exactly(0)},once:function once(){return this.exactly(1)},twice:function twice(){return this.exactly(2)},thrice:function thrice(){return this.exactly(3)},exactly:function exactly(num){if("number"!=typeof num)throw TypeError(`'${valueToString(num)}' is not a number`);return this.atLeast(num),this.atMost(num)},met:function met(){return!this.failed&&receivedMinCalls(this)},verifyCallAllowed:function verifyCallAllowed(thisValue,args){var expectedArguments=this.expectedArguments;receivedMaxCalls(this)&&(this.failed=!0,mockExpectation.fail(`${this.method} already called ${timesInWords(this.maxCalls)}`)),"expectedThis"in this&&this.expectedThis!==thisValue&&mockExpectation.fail(`${this.method} called with ${valueToString(thisValue)} as thisValue, expected ${valueToString(this.expectedThis)}`),"expectedArguments"in this&&(args||mockExpectation.fail(`${this.method} received no arguments, expected ${format(expectedArguments)}`),args.length<expectedArguments.length&&mockExpectation.fail(`${this.method} received too few arguments (${format(args)}), expected ${format(expectedArguments)}`),this.expectsExactArgCount&&args.length!==expectedArguments.length&&mockExpectation.fail(`${this.method} received too many arguments (${format(args)}), expected ${format(expectedArguments)}`),forEach(expectedArguments,function(expectedArgument,i){verifyMatcher(expectedArgument,args[i])||mockExpectation.fail(`${this.method} received wrong arguments ${format(args)}, didn't match ${String(expectedArguments)}`),deepEqual(args[i],expectedArgument)||mockExpectation.fail(`${this.method} received wrong arguments ${format(args)}, expected ${format(expectedArguments)}`)},this))},allowsCall:function allowsCall(thisValue,args){var expectedArguments=this.expectedArguments;if(this.met()&&receivedMaxCalls(this)||"expectedThis"in this&&this.expectedThis!==thisValue)return!1;if(!("expectedArguments"in this))return!0;var _args=args||[];return!(_args.length<expectedArguments.length)&&(!this.expectsExactArgCount||_args.length===expectedArguments.length)&&every(expectedArguments,function(expectedArgument,i){return!!(verifyMatcher(expectedArgument,_args[i])&&deepEqual(_args[i],expectedArgument))})},withArgs:function withArgs(){return this.expectedArguments=slice(arguments),this},withExactArgs:function withExactArgs(){return this.withArgs.apply(this,arguments),this.expectsExactArgCount=!0,this},on:function on(thisValue){return this.expectedThis=thisValue,this},toString:function(){var args=slice(this.expectedArguments||[]);this.expectsExactArgCount||push(args,"[...]");var callStr=proxyCallToString.call({proxy:this.method||"anonymous mock expectation",args:args}),message=`${callStr.replace(", [...","[, ...")} ${expectedCallCountInWords(this)}`;return this.met()?`Expectation met: ${message}`:`Expected ${message} (${callCountInWords(this.callCount)})`},verify:function verify(){return this.met()?mockExpectation.pass(String(this)):mockExpectation.fail(String(this)),!0},pass:function pass(message){assert.pass(message)},fail:function fail(message){var exception=Error(message);throw exception.name="ExpectationError",exception}};module.exports=mockExpectation},{"./assert":3,"./proxy-call":14,"./proxy-invoke":15,"./stub":21,"./util/core/extend":25,"./util/core/format":26,"./util/core/times-in-words":35,"@sinonjs/commons":47,"@sinonjs/samsam":106}],11:[function(require1,module,exports){var arrayProto=require1("@sinonjs/commons").prototypes.array,mockExpectation=require1("./mock-expectation"),proxyCallToString=require1("./proxy-call").toString,extend=require1("./util/core/extend"),deepEqual=require1("@sinonjs/samsam").deepEqual,wrapMethod=require1("./util/core/wrap-method"),usePromiseLibrary=require1("./util/core/use-promise-library"),concat=arrayProto.concat,filter=arrayProto.filter,forEach=arrayProto.forEach,every=arrayProto.every,join=arrayProto.join,push=arrayProto.push,slice=arrayProto.slice,unshift=arrayProto.unshift;function mock(object){return object&&"string"!=typeof object?mock.create(object):mockExpectation.create(object||"Anonymous mock")}function arrayEquals(arr1,arr2,compareLength){return(!compareLength||arr1.length===arr2.length)&&every(arr1,function(element,i){return deepEqual(arr2[i],element)})}extend(mock,{create:function create(object){if(!object)throw TypeError("object is null");var mockObject=extend.nonEnum({},mock,{object:object});return delete mockObject.create,mockObject},expects:function expects(method){if(!method)throw TypeError("method is falsy");if(this.expectations||(this.expectations={},this.proxies=[],this.failures=[]),!this.expectations[method]){this.expectations[method]=[];var mockObject=this;wrapMethod(this.object,method,function(){return mockObject.invokeMethod(method,this,arguments)}),push(this.proxies,method)}var expectation=mockExpectation.create(method);return expectation.wrappedMethod=this.object[method].wrappedMethod,push(this.expectations[method],expectation),usePromiseLibrary(this.promiseLibrary,expectation),expectation},restore:function restore(){var object=this.object;forEach(this.proxies||[],function(proxy){"function"==typeof object[proxy].restore&&object[proxy].restore()})},verify:function verify(){var expectations=this.expectations||{},messages=this.failures?slice(this.failures):[],met=[];return forEach(this.proxies||[],function(proxy){forEach(expectations[proxy]||[],function(expectation){expectation.met()?push(met,String(expectation)):push(messages,String(expectation))})}),this.restore(),messages.length>0?mockExpectation.fail(join(concat(messages,met),"\n")):met.length>0&&mockExpectation.pass(join(concat(messages,met),"\n")),!0},usingPromise:function usingPromise(promiseLibrary){return this.promiseLibrary=promiseLibrary,this},invokeMethod:function invokeMethod(method,thisValue,args){var available,expectations=this.expectations&&this.expectations[method]?this.expectations[method]:[],currentArgs=args||[],expectationsWithMatchingArgs=filter(expectations,function(expectation){return arrayEquals(expectation.expectedArguments||[],currentArgs,expectation.expectsExactArgCount)}),expectationsToApply=filter(expectationsWithMatchingArgs,function(expectation){return!expectation.met()&&expectation.allowsCall(thisValue,args)});if(expectationsToApply.length>0)return expectationsToApply[0].apply(thisValue,args);var messages=[],exhausted=0;if(forEach(expectationsWithMatchingArgs,function(expectation){expectation.allowsCall(thisValue,args)?available=available||expectation:exhausted+=1}),available&&0===exhausted)return available.apply(thisValue,args);forEach(expectations,function(expectation){push(messages,`    ${String(expectation)}`)}),unshift(messages,`Unexpected call: ${proxyCallToString.call({proxy:method,args:args})}`);var err=Error();if(!err.stack)try{throw err}catch(e){}push(this.failures,`Unexpected call: ${proxyCallToString.call({proxy:method,args:args,stack:err.stack})}`),mockExpectation.fail(join(messages,"\n"))}}),module.exports=mock},{"./mock-expectation":10,"./proxy-call":14,"./util/core/extend":25,"./util/core/use-promise-library":36,"./util/core/wrap-method":39,"@sinonjs/commons":47,"@sinonjs/samsam":106}],12:[function(require1,module,exports){var fake=require1("./fake"),isRestorable=require1("./util/core/is-restorable"),STATUS_PENDING="pending",STATUS_RESOLVED="resolved",STATUS_REJECTED="rejected";function getFakeExecutor(executor){return isRestorable(executor)?executor:executor?fake(executor):fake()}function promise(executor){var fakeExecutor=getFakeExecutor(executor),sinonPromise=new Promise(fakeExecutor);function finalize(status,value,callback){if(sinonPromise.status!==STATUS_PENDING)throw Error(`Promise already ${sinonPromise.status}`);sinonPromise.status=status,callback(value)}return sinonPromise.status=STATUS_PENDING,sinonPromise.then(function(value){sinonPromise.status=STATUS_RESOLVED,sinonPromise.resolvedValue=value}).catch(function(reason){sinonPromise.status=STATUS_REJECTED,sinonPromise.rejectedValue=reason}),sinonPromise.resolve=function(value){return finalize(STATUS_RESOLVED,value,fakeExecutor.firstCall.args[0]),sinonPromise},sinonPromise.reject=function(reason){return finalize(STATUS_REJECTED,reason,fakeExecutor.firstCall.args[1]),new Promise(function(resolve){sinonPromise.catch(()=>resolve())})},sinonPromise}module.exports=promise},{"./fake":9,"./util/core/is-restorable":33}],13:[function(require1,module,exports){var push=require1("@sinonjs/commons").prototypes.array.push;exports.incrementCallCount=function incrementCallCount(proxy){proxy.called=!0,proxy.callCount+=1,proxy.notCalled=!1,proxy.calledOnce=1===proxy.callCount,proxy.calledTwice=2===proxy.callCount,proxy.calledThrice=3===proxy.callCount},exports.createCallProperties=function createCallProperties(proxy){proxy.firstCall=proxy.getCall(0),proxy.secondCall=proxy.getCall(1),proxy.thirdCall=proxy.getCall(2),proxy.lastCall=proxy.getCall(proxy.callCount-1)},exports.delegateToCalls=function delegateToCalls(proxy,method,matchAny,actual,returnsValues,notCalled,totalCallCount){proxy[method]=function(){if(!this.called)return!!notCalled&&notCalled.apply(this,arguments);if(void 0!==totalCallCount&&this.callCount!==totalCallCount)return!1;for(var currentCall,matches=0,returnValues=[],i=0,l=this.callCount;i<l;i+=1){var returnValue=(currentCall=this.getCall(i))[actual||method].apply(currentCall,arguments);if(push(returnValues,returnValue),returnValue&&(matches+=1,matchAny))return!0}return returnsValues?returnValues:matches===this.callCount}}},{"@sinonjs/commons":47}],14:[function(require1,module,exports){var arrayProto=require1("@sinonjs/commons").prototypes.array,match=require1("@sinonjs/samsam").createMatcher,deepEqual=require1("@sinonjs/samsam").deepEqual,functionName=require1("@sinonjs/commons").functionName,sinonFormat=require1("./util/core/format"),valueToString=require1("@sinonjs/commons").valueToString,concat=arrayProto.concat,filter=arrayProto.filter,join=arrayProto.join,map=arrayProto.map,reduce=arrayProto.reduce,slice=arrayProto.slice;function throwYieldError(proxy,text,args){var msg=functionName(proxy)+text;throw args.length&&(msg+=` Received [${join(slice(args),", ")}]`),Error(msg)}var callProto={calledOn:function calledOn(thisValue){return match.isMatcher(thisValue)?thisValue.test(this.thisValue):this.thisValue===thisValue},calledWith:function calledWith(){var self1=this,calledWithArgs=slice(arguments);return!(calledWithArgs.length>self1.args.length)&&reduce(calledWithArgs,function(prev,arg,i){return prev&&deepEqual(self1.args[i],arg)},!0)},calledWithMatch:function calledWithMatch(){var self1=this,calledWithMatchArgs=slice(arguments);return!(calledWithMatchArgs.length>self1.args.length)&&reduce(calledWithMatchArgs,function(prev,expectation,i){var actual=self1.args[i];return prev&&match(expectation).test(actual)},!0)},calledWithExactly:function calledWithExactly(){return arguments.length===this.args.length&&this.calledWith.apply(this,arguments)},notCalledWith:function notCalledWith(){return!this.calledWith.apply(this,arguments)},notCalledWithMatch:function notCalledWithMatch(){return!this.calledWithMatch.apply(this,arguments)},returned:function returned(value){return deepEqual(this.returnValue,value)},threw:function threw(error){return void 0!==error&&this.exception?this.exception===error||this.exception.name===error:!!this.exception},calledWithNew:function calledWithNew(){return this.proxy.prototype&&this.thisValue instanceof this.proxy},calledBefore:function(other){return this.callId<other.callId},calledAfter:function(other){return this.callId>other.callId},calledImmediatelyBefore:function(other){return this.callId===other.callId-1},calledImmediatelyAfter:function(other){return this.callId===other.callId+1},callArg:function(pos){return this.ensureArgIsAFunction(pos),this.args[pos]()},callArgOn:function(pos,thisValue){return this.ensureArgIsAFunction(pos),this.args[pos].apply(thisValue)},callArgWith:function(pos){return this.callArgOnWith.apply(this,concat([pos,null],slice(arguments,1)))},callArgOnWith:function(pos,thisValue){this.ensureArgIsAFunction(pos);var args=slice(arguments,2);return this.args[pos].apply(thisValue,args)},throwArg:function(pos){if(pos>this.args.length)throw TypeError(`Not enough arguments: ${pos} required but only ${this.args.length} present`);throw this.args[pos]},yield:function(){return this.yieldOn.apply(this,concat([null],slice(arguments,0)))},yieldOn:function(thisValue){var args=slice(this.args),yieldFn=filter(args,function(arg){return"function"==typeof arg})[0];return yieldFn||throwYieldError(this.proxy," cannot yield since no callback was passed.",args),yieldFn.apply(thisValue,slice(arguments,1))},yieldTo:function(prop){return this.yieldToOn.apply(this,concat([prop,null],slice(arguments,1)))},yieldToOn:function(prop,thisValue){var args=slice(this.args),yieldArg=filter(args,function(arg){return arg&&"function"==typeof arg[prop]})[0],yieldFn=yieldArg&&yieldArg[prop];return yieldFn||throwYieldError(this.proxy,` cannot yield to '${valueToString(prop)}' since no callback was passed.`,args),yieldFn.apply(thisValue,slice(arguments,2))},toString:function(){var formattedArgs,callStr=this.proxy?`${String(this.proxy)}(`:"";return this.args?(formattedArgs=map(this.args,function(arg){return sinonFormat(arg)}),callStr=`${callStr+join(formattedArgs,", ")})`,void 0!==this.returnValue&&(callStr+=` => ${sinonFormat(this.returnValue)}`),this.exception&&(callStr+=` !${this.exception.name}`,this.exception.message&&(callStr+=`(${this.exception.message})`)),this.stack&&(callStr+=(this.stack.split("\n")[3]||"unknown").replace(/^\s*(?:at\s+|@)?/," at ")),callStr):":("},ensureArgIsAFunction:function(pos){if("function"!=typeof this.args[pos])throw TypeError(`Expected argument at position ${pos} to be a Function, but was ${typeof this.args[pos]}`)}};function createProxyCall(proxy,thisValue,args,returnValue,exception,id,errorWithCallStack){if("number"!=typeof id)throw TypeError("Call id is not a number");args.length>0&&(firstArg=args[0],lastArg=args[args.length-1]);var firstArg,lastArg,proxyCall=Object.create(callProto),callback=lastArg&&"function"==typeof lastArg?lastArg:void 0;return proxyCall.proxy=proxy,proxyCall.thisValue=thisValue,proxyCall.args=args,proxyCall.firstArg=firstArg,proxyCall.lastArg=lastArg,proxyCall.callback=callback,proxyCall.returnValue=returnValue,proxyCall.exception=exception,proxyCall.callId=id,proxyCall.errorWithCallStack=errorWithCallStack,proxyCall}Object.defineProperty(callProto,"stack",{enumerable:!0,configurable:!0,get:function(){return this.errorWithCallStack&&this.errorWithCallStack.stack||""}}),callProto.invokeCallback=callProto.yield,createProxyCall.toString=callProto.toString,module.exports=createProxyCall},{"./util/core/format":26,"@sinonjs/commons":47,"@sinonjs/samsam":106}],15:[function(require1,module,exports){var arrayProto=require1("@sinonjs/commons").prototypes.array,proxyCallUtil=require1("./proxy-call-util"),push=arrayProto.push,forEach=arrayProto.forEach,concat=arrayProto.concat,ErrorConstructor=Error.prototype.constructor,bind=Function.prototype.bind,callId=0;module.exports=function invoke(func,thisValue,args){var exception,returnValue,matchings=this.matchingFakes(args),currentCallId=callId++;proxyCallUtil.incrementCallCount(this),push(this.thisValues,thisValue),push(this.args,args),push(this.callIds,currentCallId),forEach(matchings,function(matching){proxyCallUtil.incrementCallCount(matching),push(matching.thisValues,thisValue),push(matching.args,args),push(matching.callIds,currentCallId)}),proxyCallUtil.createCallProperties(this),forEach(matchings,proxyCallUtil.createCallProperties);try{this.invoking=!0,this.getCall(this.callCount-1).calledWithNew()?(returnValue=new(bind.apply(this.func||func,concat([thisValue],args))),"object"!=typeof returnValue&&(returnValue=thisValue)):returnValue=(this.func||func).apply(thisValue,args)}catch(e){exception=e}finally{delete this.invoking}push(this.exceptions,exception),push(this.returnValues,returnValue),forEach(matchings,function(matching){push(matching.exceptions,exception),push(matching.returnValues,returnValue)});var err=new ErrorConstructor;try{throw err}catch(e){}if(push(this.errorsWithCallStack,err),forEach(matchings,function(matching){push(matching.errorsWithCallStack,err)}),proxyCallUtil.createCallProperties(this),forEach(matchings,proxyCallUtil.createCallProperties),void 0!==exception)throw exception;return returnValue}},{"./proxy-call-util":13,"@sinonjs/commons":47}],16:[function(require1,module,exports){var arrayProto=require1("@sinonjs/commons").prototypes.array,extend=require1("./util/core/extend"),functionToString=require1("./util/core/function-to-string"),proxyCall=require1("./proxy-call"),proxyCallUtil=require1("./proxy-call-util"),proxyInvoke=require1("./proxy-invoke"),sinonFormat=require1("./util/core/format"),push=arrayProto.push,forEach=arrayProto.forEach,slice=arrayProto.slice,emptyFakes=Object.freeze([]),proxyApi={toString:functionToString,named:function named(name){this.displayName=name;var nameDescriptor=Object.getOwnPropertyDescriptor(this,"name");return nameDescriptor&&nameDescriptor.configurable&&(nameDescriptor.value=name,Object.defineProperty(this,"name",nameDescriptor)),this},invoke:proxyInvoke,matchingFakes:function(){return emptyFakes},getCall:function getCall(index){var i=index;return(i<0&&(i+=this.callCount),i<0||i>=this.callCount)?null:proxyCall(this,this.thisValues[i],this.args[i],this.returnValues[i],this.exceptions[i],this.callIds[i],this.errorsWithCallStack[i])},getCalls:function(){var i,calls=[];for(i=0;i<this.callCount;i++)push(calls,this.getCall(i));return calls},calledBefore:function calledBefore(proxy){return!!this.called&&(!proxy.called||this.callIds[0]<proxy.callIds[proxy.callIds.length-1])},calledAfter:function calledAfter(proxy){return!!this.called&&!!proxy.called&&this.callIds[this.callCount-1]>proxy.callIds[0]},calledImmediatelyBefore:function calledImmediatelyBefore(proxy){return!!this.called&&!!proxy.called&&this.callIds[this.callCount-1]===proxy.callIds[proxy.callCount-1]-1},calledImmediatelyAfter:function calledImmediatelyAfter(proxy){return!!this.called&&!!proxy.called&&this.callIds[this.callCount-1]===proxy.callIds[proxy.callCount-1]+1},formatters:require1("./spy-formatters"),printf:function(format){var formatter,spyInstance=this,args=slice(arguments,1);return(format||"").replace(/%(.)/g,function(match,specifier){return"function"==typeof(formatter=proxyApi.formatters[specifier])?String(formatter(spyInstance,args)):isNaN(parseInt(specifier,10))?`%${specifier}`:sinonFormat(args[specifier-1])})},resetHistory:function(){if(this.invoking){var err=Error("Cannot reset Sinon function while invoking it. Move the call to .resetHistory outside of the callback.");throw err.name="InvalidResetException",err}return this.called=!1,this.notCalled=!0,this.calledOnce=!1,this.calledTwice=!1,this.calledThrice=!1,this.callCount=0,this.firstCall=null,this.secondCall=null,this.thirdCall=null,this.lastCall=null,this.args=[],this.firstArg=null,this.lastArg=null,this.returnValues=[],this.thisValues=[],this.exceptions=[],this.callIds=[],this.errorsWithCallStack=[],this.fakes&&forEach(this.fakes,function(fake){fake.resetHistory()}),this}},delegateToCalls=proxyCallUtil.delegateToCalls;function createProxy(func,originalFunc){var proxy=wrapFunction(func,originalFunc);return extend(proxy,func),proxy.prototype=func.prototype,extend.nonEnum(proxy,proxyApi),proxy}function wrapFunction(func,originalFunc){switch(originalFunc.length){case 0:p=function proxy(){return p.invoke(func,this,slice(arguments))};break;case 1:p=function proxy(a){return p.invoke(func,this,slice(arguments))};break;case 2:p=function proxy(a,b){return p.invoke(func,this,slice(arguments))};break;case 3:p=function proxy(a,b,c){return p.invoke(func,this,slice(arguments))};break;case 4:p=function proxy(a,b,c,d){return p.invoke(func,this,slice(arguments))};break;case 5:p=function proxy(a,b,c,d,e){return p.invoke(func,this,slice(arguments))};break;case 6:p=function proxy(a,b,c,d,e,f){return p.invoke(func,this,slice(arguments))};break;case 7:p=function proxy(a,b,c,d,e,f,g){return p.invoke(func,this,slice(arguments))};break;case 8:p=function proxy(a,b,c,d,e,f,g,h){return p.invoke(func,this,slice(arguments))};break;case 9:p=function proxy(a,b,c,d,e,f,g,h,i){return p.invoke(func,this,slice(arguments))};break;case 10:p=function proxy(a,b,c,d,e,f,g,h,i,j){return p.invoke(func,this,slice(arguments))};break;case 11:p=function proxy(a,b,c,d,e,f,g,h,i,j,k){return p.invoke(func,this,slice(arguments))};break;case 12:p=function proxy(a,b,c,d,e,f,g,h,i,j,k,l){return p.invoke(func,this,slice(arguments))};break;default:p=function proxy(){return p.invoke(func,this,slice(arguments))}}var p,nameDescriptor=Object.getOwnPropertyDescriptor(originalFunc,"name");return nameDescriptor&&nameDescriptor.configurable&&Object.defineProperty(p,"name",nameDescriptor),extend.nonEnum(p,{isSinonProxy:!0,called:!1,notCalled:!0,calledOnce:!1,calledTwice:!1,calledThrice:!1,callCount:0,firstCall:null,firstArg:null,secondCall:null,thirdCall:null,lastCall:null,lastArg:null,args:[],returnValues:[],thisValues:[],exceptions:[],callIds:[],errorsWithCallStack:[]}),p}delegateToCalls(proxyApi,"calledOn",!0),delegateToCalls(proxyApi,"alwaysCalledOn",!1,"calledOn"),delegateToCalls(proxyApi,"calledWith",!0),delegateToCalls(proxyApi,"calledOnceWith",!0,"calledWith",!1,void 0,1),delegateToCalls(proxyApi,"calledWithMatch",!0),delegateToCalls(proxyApi,"alwaysCalledWith",!1,"calledWith"),delegateToCalls(proxyApi,"alwaysCalledWithMatch",!1,"calledWithMatch"),delegateToCalls(proxyApi,"calledWithExactly",!0),delegateToCalls(proxyApi,"calledOnceWithExactly",!0,"calledWithExactly",!1,void 0,1),delegateToCalls(proxyApi,"calledOnceWithMatch",!0,"calledWithMatch",!1,void 0,1),delegateToCalls(proxyApi,"alwaysCalledWithExactly",!1,"calledWithExactly"),delegateToCalls(proxyApi,"neverCalledWith",!1,"notCalledWith",!1,function(){return!0}),delegateToCalls(proxyApi,"neverCalledWithMatch",!1,"notCalledWithMatch",!1,function(){return!0}),delegateToCalls(proxyApi,"threw",!0),delegateToCalls(proxyApi,"alwaysThrew",!1,"threw"),delegateToCalls(proxyApi,"returned",!0),delegateToCalls(proxyApi,"alwaysReturned",!1,"returned"),delegateToCalls(proxyApi,"calledWithNew",!0),delegateToCalls(proxyApi,"alwaysCalledWithNew",!1,"calledWithNew"),module.exports=createProxy},{"./proxy-call":14,"./proxy-call-util":13,"./proxy-invoke":15,"./spy-formatters":19,"./util/core/extend":25,"./util/core/format":26,"./util/core/function-to-string":27,"@sinonjs/commons":47}],17:[function(require1,module,exports){var walkObject=require1("./util/core/walk-object");function filter(object,property){return object[property].restore&&object[property].restore.sinon}function restore(object,property){object[property].restore()}function restoreObject(object){return walkObject(restore,object,filter)}module.exports=restoreObject},{"./util/core/walk-object":37}],18:[function(require1,module,exports){var arrayProto=require1("@sinonjs/commons").prototypes.array,logger=require1("@sinonjs/commons").deprecated,collectOwnMethods=require1("./collect-own-methods"),getPropertyDescriptor=require1("./util/core/get-property-descriptor"),isPropertyConfigurable=require1("./util/core/is-property-configurable"),match=require1("@sinonjs/samsam").createMatcher,sinonAssert=require1("./assert"),sinonClock=require1("./util/fake-timers"),sinonMock=require1("./mock"),sinonSpy=require1("./spy"),sinonStub=require1("./stub"),sinonFake=require1("./fake"),valueToString=require1("@sinonjs/commons").valueToString,fakeServer=require1("nise").fakeServer,fakeXhr=require1("nise").fakeXhr,usePromiseLibrary=require1("./util/core/use-promise-library"),filter=arrayProto.filter,forEach=arrayProto.forEach,push=arrayProto.push,reverse=arrayProto.reverse;function applyOnEach(fakes,method){forEach(filter(fakes,function(fake){return"function"==typeof fake[method]}),function(fake){fake[method]()})}function Sandbox(){var promiseLib,sandbox=this,fakeRestorers=[],collection=[],loggedLeakWarning=!1;function addToCollection(object){push(collection,object)>sandbox.leakThreshold&&!loggedLeakWarning&&(logger.printWarning("Potential memory leak detected; be sure to call restore() to clean up your sandbox. To suppress this warning, modify the leakThreshold property of your sandbox."),loggedLeakWarning=!0)}function getFakeRestorer(object,property){var descriptor=getPropertyDescriptor(object,property);function restorer(){descriptor.isOwn?Object.defineProperty(object,property,descriptor):delete object[property]}return restorer.object=object,restorer.property=property,restorer}function verifyNotReplaced(object,property){forEach(fakeRestorers,function(fakeRestorer){if(fakeRestorer.object===object&&fakeRestorer.property===property)throw TypeError(`Attempted to replace ${property} which is already replaced`)})}function commonPostInitSetup(args,spy){var object=args[0];if(void 0===args[1]&&"object"==typeof object){var ownMethods=collectOwnMethods(spy);forEach(ownMethods,function(method){addToCollection(method)}),usePromiseLibrary(promiseLib,ownMethods)}else addToCollection(spy),usePromiseLibrary(promiseLib,spy);return spy}sandbox.leakThreshold=1e4,sandbox.assert=sinonAssert.createAssertObject(),sandbox.serverPrototype=fakeServer,sandbox.getFakes=function getFakes(){return collection},sandbox.getRestorers=function(){return fakeRestorers},sandbox.createStubInstance=function createStubInstance(){var stubbed=sinonStub.createStubInstance.apply(null,arguments),ownMethods=collectOwnMethods(stubbed);return forEach(ownMethods,function(method){addToCollection(method)}),usePromiseLibrary(promiseLib,ownMethods),stubbed},sandbox.inject=function inject(obj){return obj.spy=function(){return sandbox.spy.apply(null,arguments)},obj.stub=function(){return sandbox.stub.apply(null,arguments)},obj.mock=function(){return sandbox.mock.apply(null,arguments)},obj.createStubInstance=function(){return sandbox.createStubInstance.apply(sandbox,arguments)},obj.fake=function(){return sandbox.fake.apply(null,arguments)},obj.replace=function(){return sandbox.replace.apply(null,arguments)},obj.replaceSetter=function(){return sandbox.replaceSetter.apply(null,arguments)},obj.replaceGetter=function(){return sandbox.replaceGetter.apply(null,arguments)},sandbox.clock&&(obj.clock=sandbox.clock),sandbox.server&&(obj.server=sandbox.server,obj.requests=sandbox.server.requests),obj.match=match,obj},sandbox.mock=function mock(){var m=sinonMock.apply(null,arguments);return addToCollection(m),usePromiseLibrary(promiseLib,m),m},sandbox.reset=function reset(){applyOnEach(collection,"reset"),applyOnEach(collection,"resetHistory")},sandbox.resetBehavior=function resetBehavior(){applyOnEach(collection,"resetBehavior")},sandbox.resetHistory=function resetHistory(){function privateResetHistory(f){var method=f.resetHistory||f.reset;method&&method.call(f)}forEach(collection,function(fake){if("function"==typeof fake){privateResetHistory(fake);return}var methods=[];fake.get&&push(methods,fake.get),fake.set&&push(methods,fake.set),forEach(methods,privateResetHistory)})},sandbox.restore=function restore(){if(arguments.length)throw Error("sandbox.restore() does not take any parameters. Perhaps you meant stub.restore()");reverse(collection),applyOnEach(collection,"restore"),collection=[],forEach(fakeRestorers,function(restorer){restorer()}),fakeRestorers=[],sandbox.restoreContext()},sandbox.restoreContext=function restoreContext(){var injectedKeys=sandbox.injectedKeys,injectInto=sandbox.injectInto;injectedKeys&&forEach(injectedKeys,function(injectedKey){delete injectInto[injectedKey]})},sandbox.replace=function replace(object,property,replacement){var descriptor=getPropertyDescriptor(object,property);if(void 0===descriptor)throw TypeError(`Cannot replace non-existent property ${valueToString(property)}`);if(void 0===replacement)throw TypeError("Expected replacement argument to be defined");if("function"==typeof descriptor.get)throw Error("Use sandbox.replaceGetter for replacing getters");if("function"==typeof descriptor.set)throw Error("Use sandbox.replaceSetter for replacing setters");if(typeof object[property]!=typeof replacement)throw TypeError(`Cannot replace ${typeof object[property]} with ${typeof replacement}`);return verifyNotReplaced(object,property),push(fakeRestorers,getFakeRestorer(object,property)),object[property]=replacement,replacement},sandbox.replaceGetter=function replaceGetter(object,property,replacement){var descriptor=getPropertyDescriptor(object,property);if(void 0===descriptor)throw TypeError(`Cannot replace non-existent property ${valueToString(property)}`);if("function"!=typeof replacement)throw TypeError("Expected replacement argument to be a function");if("function"!=typeof descriptor.get)throw Error("`object.property` is not a getter");return verifyNotReplaced(object,property),push(fakeRestorers,getFakeRestorer(object,property)),Object.defineProperty(object,property,{get:replacement,configurable:isPropertyConfigurable(object,property)}),replacement},sandbox.replaceSetter=function replaceSetter(object,property,replacement){var descriptor=getPropertyDescriptor(object,property);if(void 0===descriptor)throw TypeError(`Cannot replace non-existent property ${valueToString(property)}`);if("function"!=typeof replacement)throw TypeError("Expected replacement argument to be a function");if("function"!=typeof descriptor.set)throw Error("`object.property` is not a setter");return verifyNotReplaced(object,property),push(fakeRestorers,getFakeRestorer(object,property)),Object.defineProperty(object,property,{set:replacement,configurable:isPropertyConfigurable(object,property)}),replacement},sandbox.spy=function spy(){var createdSpy=sinonSpy.apply(sinonSpy,arguments);return commonPostInitSetup(arguments,createdSpy)},sandbox.stub=function stub(){var createdStub=sinonStub.apply(sinonStub,arguments);return commonPostInitSetup(arguments,createdStub)},sandbox.fake=function fake(f){var s=sinonFake.apply(sinonFake,arguments);return addToCollection(s),s},forEach(Object.keys(sinonFake),function(key){var fakeBehavior=sinonFake[key];"function"==typeof fakeBehavior&&(sandbox.fake[key]=function(){var s=fakeBehavior.apply(fakeBehavior,arguments);return addToCollection(s),s})}),sandbox.useFakeTimers=function useFakeTimers(args){var clock=sinonClock.useFakeTimers.call(null,args);return sandbox.clock=clock,addToCollection(clock),clock},sandbox.verify=function verify(){applyOnEach(collection,"verify")},sandbox.verifyAndRestore=function verifyAndRestore(){var exception;try{sandbox.verify()}catch(e){exception=e}if(sandbox.restore(),exception)throw exception},sandbox.useFakeServer=function useFakeServer(){var proto=sandbox.serverPrototype||fakeServer;return proto&&proto.create?(sandbox.server=proto.create(),addToCollection(sandbox.server),sandbox.server):null},sandbox.useFakeXMLHttpRequest=function useFakeXMLHttpRequest(){var xhr=fakeXhr.useFakeXMLHttpRequest();return addToCollection(xhr),xhr},sandbox.usingPromise=function usingPromise(promiseLibrary){return promiseLib=promiseLibrary,collection.promiseLibrary=promiseLibrary,sandbox}}Sandbox.prototype.match=match,module.exports=Sandbox},{"./assert":3,"./collect-own-methods":5,"./fake":9,"./mock":11,"./spy":20,"./stub":21,"./util/core/get-property-descriptor":29,"./util/core/is-property-configurable":32,"./util/core/use-promise-library":36,"./util/fake-timers":40,"@sinonjs/commons":47,"@sinonjs/samsam":106,nise:127}],19:[function(require1,module,exports){var arrayProto=require1("@sinonjs/commons").prototypes.array,color=require1("./color"),match=require1("@sinonjs/samsam").createMatcher,timesInWords=require1("./util/core/times-in-words"),sinonFormat=require1("./util/core/format"),jsDiff=require1("diff"),join=arrayProto.join,map=arrayProto.map,push=arrayProto.push,slice=arrayProto.slice;function colorSinonMatchText(matcher,calledArg,calledArgMessage){var calledArgumentMessage=calledArgMessage;return!matcher.test(calledArg)&&(matcher.message=color.red(matcher.message),calledArgumentMessage&&(calledArgumentMessage=color.green(calledArgumentMessage))),`${calledArgumentMessage} ${matcher.message}`}function colorDiffText(diff){return join(map(diff,function(part){var text=part.value;return part.added?text=color.green(text):part.removed&&(text=color.red(text)),2===diff.length&&(text+=" "),text}),"")}function quoteStringValue(value){return"string"==typeof value?JSON.stringify(value):value}module.exports={c:function(spyInstance){return timesInWords(spyInstance.callCount)},n:function(spyInstance){return spyInstance.toString()},D:function(spyInstance,args){for(var message="",i=0,l=spyInstance.callCount;i<l;++i){l>1&&(message+=`
Call ${i+1}:`);for(var calledArgs=spyInstance.getCall(i).args,expectedArgs=slice(args),j=0;j<calledArgs.length||j<expectedArgs.length;++j){var calledArg=calledArgs[j],expectedArg=expectedArgs[j];calledArg&&(calledArg=quoteStringValue(calledArg)),expectedArg&&(expectedArg=quoteStringValue(expectedArg)),message+="\n";var calledArgMessage=j<calledArgs.length?sinonFormat(calledArg):"";if(match.isMatcher(expectedArg))message+=colorSinonMatchText(expectedArg,calledArg,calledArgMessage);else{var expectedArgMessage=j<expectedArgs.length?sinonFormat(expectedArg):"";message+=colorDiffText(jsDiff.diffJson(calledArgMessage,expectedArgMessage))}}}return message},C:function(spyInstance){for(var calls=[],i=0,l=spyInstance.callCount;i<l;++i){var stringifiedCall=`    ${spyInstance.getCall(i).toString()}`;/\n/.test(calls[i-1])&&(stringifiedCall=`
${stringifiedCall}`),push(calls,stringifiedCall)}return calls.length>0?`
${join(calls,"\n")}`:""},t:function(spyInstance){for(var objects=[],i=0,l=spyInstance.callCount;i<l;++i)push(objects,sinonFormat(spyInstance.thisValues[i]));return join(objects,", ")},"*":function(spyInstance,args){return join(map(args,function(arg){return sinonFormat(arg)}),", ")}}},{"./color":6,"./util/core/format":26,"./util/core/times-in-words":35,"@sinonjs/commons":47,"@sinonjs/samsam":106,diff:113}],20:[function(require1,module,exports){var arrayProto=require1("@sinonjs/commons").prototypes.array,createProxy=require1("./proxy"),extend=require1("./util/core/extend"),functionName=require1("@sinonjs/commons").functionName,getPropertyDescriptor=require1("./util/core/get-property-descriptor"),deepEqual=require1("@sinonjs/samsam").deepEqual,isEsModule=require1("./util/core/is-es-module"),proxyCallUtil=require1("./proxy-call-util"),walkObject=require1("./util/core/walk-object"),wrapMethod=require1("./util/core/wrap-method"),valueToString=require1("@sinonjs/commons").valueToString,forEach=arrayProto.forEach,pop=arrayProto.pop,push=arrayProto.push,slice=arrayProto.slice,filter=Array.prototype.filter,uuid=0;function matches(fake,args,strict){var margs=fake.matchingArguments;return!!(margs.length<=args.length&&deepEqual(slice(args,0,margs.length),margs))&&(!strict||margs.length===args.length)}var spyApi={withArgs:function(){var args=slice(arguments),matching=pop(this.matchingFakes(args,!0));if(matching)return matching;var original=this,fake=this.instantiateFake();return fake.matchingArguments=args,fake.parent=this,push(this.fakes,fake),fake.withArgs=function(){return original.withArgs.apply(original,arguments)},forEach(original.args,function(arg,i){matches(fake,arg)&&(proxyCallUtil.incrementCallCount(fake),push(fake.thisValues,original.thisValues[i]),push(fake.args,arg),push(fake.returnValues,original.returnValues[i]),push(fake.exceptions,original.exceptions[i]),push(fake.callIds,original.callIds[i]))}),proxyCallUtil.createCallProperties(fake),fake},matchingFakes:function(args,strict){return filter.call(this.fakes,function(fake){return matches(fake,args,strict)})}},delegateToCalls=proxyCallUtil.delegateToCalls;function createSpy(func){var name,funk=func;"function"!=typeof funk?funk=function(){}:name=functionName(funk);var proxy=createProxy(funk,funk);return extend.nonEnum(proxy,spyApi),extend.nonEnum(proxy,{displayName:name||"spy",fakes:[],instantiateFake:createSpy,id:`spy#${uuid++}`}),proxy}function spy(object,property,types){var descriptor,methodDesc;if(isEsModule(object))throw TypeError("ES Modules cannot be spied");return property||"function"!=typeof object?property||"object"!=typeof object?object||property?types?(descriptor={},methodDesc=getPropertyDescriptor(object,property),forEach(types,function(type){descriptor[type]=createSpy(methodDesc[type])}),wrapMethod(object,property,descriptor)):wrapMethod(object,property,createSpy(object[property])):createSpy(function(){}):walkObject(spy,object):createSpy(object)}delegateToCalls(spyApi,"callArg",!1,"callArgWith",!0,function(){throw Error(`${this.toString()} cannot call arg since it was not yet invoked.`)}),spyApi.callArgWith=spyApi.callArg,delegateToCalls(spyApi,"callArgOn",!1,"callArgOnWith",!0,function(){throw Error(`${this.toString()} cannot call arg since it was not yet invoked.`)}),spyApi.callArgOnWith=spyApi.callArgOn,delegateToCalls(spyApi,"throwArg",!1,"throwArg",!1,function(){throw Error(`${this.toString()} cannot throw arg since it was not yet invoked.`)}),delegateToCalls(spyApi,"yield",!1,"yield",!0,function(){throw Error(`${this.toString()} cannot yield since it was not yet invoked.`)}),spyApi.invokeCallback=spyApi.yield,delegateToCalls(spyApi,"yieldOn",!1,"yieldOn",!0,function(){throw Error(`${this.toString()} cannot yield since it was not yet invoked.`)}),delegateToCalls(spyApi,"yieldTo",!1,"yieldTo",!0,function(property){throw Error(`${this.toString()} cannot yield to '${valueToString(property)}' since it was not yet invoked.`)}),delegateToCalls(spyApi,"yieldToOn",!1,"yieldToOn",!0,function(property){throw Error(`${this.toString()} cannot yield to '${valueToString(property)}' since it was not yet invoked.`)}),extend(spy,spyApi),module.exports=spy},{"./proxy":16,"./proxy-call-util":13,"./util/core/extend":25,"./util/core/get-property-descriptor":29,"./util/core/is-es-module":30,"./util/core/walk-object":37,"./util/core/wrap-method":39,"@sinonjs/commons":47,"@sinonjs/samsam":106}],21:[function(require1,module,exports){var arrayProto=require1("@sinonjs/commons").prototypes.array,behavior=require1("./behavior"),behaviors=require1("./default-behaviors"),createProxy=require1("./proxy"),functionName=require1("@sinonjs/commons").functionName,hasOwnProperty=require1("@sinonjs/commons").prototypes.object.hasOwnProperty,isNonExistentProperty=require1("./util/core/is-non-existent-property"),spy=require1("./spy"),extend=require1("./util/core/extend"),getPropertyDescriptor=require1("./util/core/get-property-descriptor"),isEsModule=require1("./util/core/is-es-module"),wrapMethod=require1("./util/core/wrap-method"),throwOnFalsyObject=require1("./throw-on-falsy-object"),valueToString=require1("@sinonjs/commons").valueToString,walkObject=require1("./util/core/walk-object"),forEach=arrayProto.forEach,pop=arrayProto.pop,slice=arrayProto.slice,sort=arrayProto.sort,uuid=0;function createStub(originalFunc){function functionStub(){var args=slice(arguments);return getCurrentBehavior(pop(sort(proxy.matchingFakes(args),function(a,b){return a.matchingArguments.length-b.matchingArguments.length}))||proxy).invoke(this,arguments)}proxy=createProxy(functionStub,originalFunc||functionStub),extend.nonEnum(proxy,spy),extend.nonEnum(proxy,stub);var proxy,name=originalFunc?functionName(originalFunc):null;return extend.nonEnum(proxy,{fakes:[],instantiateFake:createStub,displayName:name||"stub",defaultBehavior:null,behaviors:[],id:`stub#${uuid++}`}),proxy}function stub(object,property){if(arguments.length>2)throw TypeError("stub(obj, 'meth', fn) has been removed, see documentation");if(isEsModule(object))throw TypeError("ES Modules cannot be stubbed");if(throwOnFalsyObject.apply(null,arguments),isNonExistentProperty(object,property))throw TypeError(`Cannot stub non-existent property ${valueToString(property)}`);var actualDescriptor=getPropertyDescriptor(object,property);assertValidPropertyDescriptor(actualDescriptor,property);var isObjectOrFunction="object"==typeof object||"function"==typeof object,isStubbingEntireObject=void 0===property&&isObjectOrFunction,isCreatingNewStub=!object&&void 0===property,isStubbingNonFuncProperty=isObjectOrFunction&&void 0!==property&&(void 0===actualDescriptor||"function"!=typeof actualDescriptor.value);if(isStubbingEntireObject)return walkObject(stub,object);if(isCreatingNewStub)return createStub();var s=createStub("function"==typeof actualDescriptor.value?actualDescriptor.value:null);return extend.nonEnum(s,{rootObj:object,propName:property,shadowsPropOnPrototype:!actualDescriptor.isOwn,restore:function restore(){if(void 0!==actualDescriptor&&actualDescriptor.isOwn){Object.defineProperty(object,property,actualDescriptor);return}delete object[property]}}),isStubbingNonFuncProperty?s:wrapMethod(object,property,s)}function assertValidPropertyDescriptor(descriptor,property){if(descriptor&&property){if(!descriptor.configurable&&!descriptor.writable)throw TypeError(`Descriptor for property ${property} is non-configurable and non-writable`);if((descriptor.get||descriptor.set)&&!descriptor.configurable)throw TypeError(`Descriptor for accessor property ${property} is non-configurable`);if(isDataDescriptor(descriptor)&&!descriptor.writable)throw TypeError(`Descriptor for data property ${property} is non-writable`)}}function isDataDescriptor(descriptor){return!descriptor.value&&!descriptor.writable&&!descriptor.set&&!descriptor.get}function getParentBehaviour(stubInstance){return stubInstance.parent&&getCurrentBehavior(stubInstance.parent)}function getDefaultBehavior(stubInstance){return stubInstance.defaultBehavior||getParentBehaviour(stubInstance)||behavior.create(stubInstance)}function getCurrentBehavior(stubInstance){var currentBehavior=stubInstance.behaviors[stubInstance.callCount-1];return currentBehavior&&currentBehavior.isPresent()?currentBehavior:getDefaultBehavior(stubInstance)}stub.createStubInstance=function(constructor,overrides){if("function"!=typeof constructor)throw TypeError("The constructor should be a function.");var stubbedObject=stub(Object.create(constructor.prototype));return forEach(Object.keys(overrides||{}),function(propertyName){if(propertyName in stubbedObject){var value=overrides[propertyName];value&&value.createStubInstance?stubbedObject[propertyName]=value:stubbedObject[propertyName].returns(value)}else throw Error(`Cannot stub ${propertyName}. Property does not exist!`)}),stubbedObject};var proto={resetBehavior:function(){this.defaultBehavior=null,this.behaviors=[],delete this.returnValue,delete this.returnArgAt,delete this.throwArgAt,delete this.resolveArgAt,delete this.fakeFn,this.returnThis=!1,this.resolveThis=!1,forEach(this.fakes,function(fake){fake.resetBehavior()})},reset:function(){this.resetHistory(),this.resetBehavior()},onCall:function onCall(index){return this.behaviors[index]||(this.behaviors[index]=behavior.create(this)),this.behaviors[index]},onFirstCall:function onFirstCall(){return this.onCall(0)},onSecondCall:function onSecondCall(){return this.onCall(1)},onThirdCall:function onThirdCall(){return this.onCall(2)},withArgs:function withArgs(){var fake=spy.withArgs.apply(this,arguments);return this.defaultBehavior&&this.defaultBehavior.promiseLibrary&&(fake.defaultBehavior=fake.defaultBehavior||behavior.create(fake),fake.defaultBehavior.promiseLibrary=this.defaultBehavior.promiseLibrary),fake}};forEach(Object.keys(behavior),function(method){hasOwnProperty(behavior,method)&&!hasOwnProperty(proto,method)&&"create"!==method&&"invoke"!==method&&(proto[method]=behavior.createBehavior(method))}),forEach(Object.keys(behaviors),function(method){hasOwnProperty(behaviors,method)&&!hasOwnProperty(proto,method)&&behavior.addBehavior(stub,method,behaviors[method])}),extend(stub,proto),module.exports=stub},{"./behavior":4,"./default-behaviors":8,"./proxy":16,"./spy":20,"./throw-on-falsy-object":22,"./util/core/extend":25,"./util/core/get-property-descriptor":29,"./util/core/is-es-module":30,"./util/core/is-non-existent-property":31,"./util/core/walk-object":37,"./util/core/wrap-method":39,"@sinonjs/commons":47}],22:[function(require1,module,exports){var valueToString=require1("@sinonjs/commons").valueToString;function throwOnFalsyObject(object,property){if(property&&!object)throw Error(`Trying to stub property '${valueToString(property)}' of ${null===object?"null":"undefined"}`)}module.exports=throwOnFalsyObject},{"@sinonjs/commons":47}],23:[function(require1,module,exports){module.exports={injectInto:null,properties:["spy","stub","mock","clock","server","requests","fake","replace","replaceSetter","replaceGetter","createStubInstance"],useFakeTimers:!0,useFakeServer:!0}},{}],24:[function(require1,module,exports){var reduce=require1("@sinonjs/commons").prototypes.array.reduce;module.exports=function exportAsyncBehaviors(behaviorMethods){return reduce(Object.keys(behaviorMethods),function(acc,method){return method.match(/^(callsArg|yields)/)&&!method.match(/Async/)&&(acc[`${method}Async`]=function(){var result=behaviorMethods[method].apply(this,arguments);return this.callbackAsync=!0,result}),acc},{})}},{"@sinonjs/commons":47}],25:[function(require1,module,exports){var arrayProto=require1("@sinonjs/commons").prototypes.array,hasOwnProperty=require1("@sinonjs/commons").prototypes.object.hasOwnProperty,join=arrayProto.join,push=arrayProto.push,hasDontEnumBug=function(){var obj={constructor:function(){return"0"},toString:function(){return"1"},valueOf:function(){return"2"},toLocaleString:function(){return"3"},prototype:function(){return"4"},isPrototypeOf:function(){return"5"},propertyIsEnumerable:function(){return"6"},hasOwnProperty:function(){return"7"},length:function(){return"8"},unique:function(){return"9"}},result=[];for(var prop in obj)hasOwnProperty(obj,prop)&&push(result,obj[prop]());return"0123456789"!==join(result,"")}();function extendCommon(target,sources,doCopy){var source,i,prop;for(i=0;i<sources.length;i++){for(prop in source=sources[i])hasOwnProperty(source,prop)&&doCopy(target,source,prop);hasDontEnumBug&&hasOwnProperty(source,"toString")&&source.toString!==target.toString&&(target.toString=source.toString)}return target}module.exports=function extend(target,...sources){return extendCommon(target,sources,function copyValue(dest,source,prop){var destOwnPropertyDescriptor=Object.getOwnPropertyDescriptor(dest,prop),sourceOwnPropertyDescriptor=Object.getOwnPropertyDescriptor(source,prop);if("name"===prop&&!destOwnPropertyDescriptor.writable)return;let descriptors={configurable:sourceOwnPropertyDescriptor.configurable,enumerable:sourceOwnPropertyDescriptor.enumerable};hasOwnProperty(sourceOwnPropertyDescriptor,"writable")?(descriptors.writable=sourceOwnPropertyDescriptor.writable,descriptors.value=sourceOwnPropertyDescriptor.value):(sourceOwnPropertyDescriptor.get&&(descriptors.get=sourceOwnPropertyDescriptor.get.bind(dest)),sourceOwnPropertyDescriptor.set&&(descriptors.set=sourceOwnPropertyDescriptor.set.bind(dest))),Object.defineProperty(dest,prop,descriptors)})},module.exports.nonEnum=function extendNonEnum(target,...sources){return extendCommon(target,sources,function copyProperty(dest,source,prop){Object.defineProperty(dest,prop,{value:source[prop],enumerable:!1,configurable:!0,writable:!0})})}},{"@sinonjs/commons":47}],26:[function(require1,module,exports){var customFormatter,inspect=require1("util").inspect;function format(){return customFormatter?customFormatter.apply(null,arguments):inspect.apply(inspect,arguments)}format.setFormatter=function(aCustomFormatter){if("function"!=typeof aCustomFormatter)throw Error("format.setFormatter must be called with a function");customFormatter=aCustomFormatter},module.exports=format},{util:112}],27:[function(require1,module,exports){module.exports=function toString(){var i,prop,thisValue;if(this.getCall&&this.callCount)for(i=this.callCount;i--;)for(prop in thisValue=this.getCall(i).thisValue)try{if(thisValue[prop]===this)return prop}catch(e){}return this.displayName||"sinon fake"}},{}],28:[function(require1,module,exports){function nextTick(callback){setTimeout(callback,0)}module.exports=function getNextTick(process,setImmediate){return"object"==typeof process&&"function"==typeof process.nextTick?process.nextTick:"function"==typeof setImmediate?setImmediate:nextTick}},{}],29:[function(require1,module,exports){module.exports=function getPropertyDescriptor(object,property){for(var descriptor,proto=object,isOwn=!!(object&&Object.getOwnPropertyDescriptor(object,property));proto&&!(descriptor=Object.getOwnPropertyDescriptor(proto,property));)proto=Object.getPrototypeOf(proto);return descriptor&&(descriptor.isOwn=isOwn),descriptor}},{}],30:[function(require1,module,exports){module.exports=function(object){return object&&"undefined"!=typeof Symbol&&"Module"===object[Symbol.toStringTag]&&Object.isSealed(object)}},{}],31:[function(require1,module,exports){function isNonExistentProperty(object,property){return!!(object&&void 0!==property&&!(property in object))}module.exports=isNonExistentProperty},{}],32:[function(require1,module,exports){var getPropertyDescriptor=require1("./get-property-descriptor");function isPropertyConfigurable(obj,propName){var propertyDescriptor=getPropertyDescriptor(obj,propName);return!propertyDescriptor||propertyDescriptor.configurable}module.exports=isPropertyConfigurable},{"./get-property-descriptor":29}],33:[function(require1,module,exports){function isRestorable(obj){return"function"==typeof obj&&"function"==typeof obj.restore&&obj.restore.sinon}module.exports=isRestorable},{}],34:[function(require1,module,exports){var globalObject=require1("@sinonjs/commons").global,getNextTick=require1("./get-next-tick");module.exports=getNextTick(globalObject.process,globalObject.setImmediate)},{"./get-next-tick":28,"@sinonjs/commons":47}],35:[function(require1,module,exports){var array=[null,"once","twice","thrice"];module.exports=function timesInWords(count){return array[count]||`${count||0} times`}},{}],36:[function(require1,module,exports){var forEach=Array.prototype.forEach;function usePromiseLibrary(library,fakes){if(void 0!==library){if(Array.isArray(fakes)){forEach.call(fakes,usePromiseLibrary.bind(null,library));return}"function"==typeof fakes.usingPromise&&fakes.usingPromise(library)}}module.exports=usePromiseLibrary},{}],37:[function(require1,module,exports){var functionName=require1("@sinonjs/commons").functionName,getPropertyDescriptor=require1("./get-property-descriptor"),walk=require1("./walk");function walkObject(predicate,object,filter){var called=!1,name=functionName(predicate);if(!object)throw Error(`Trying to ${name} object but received ${String(object)}`);if(walk(object,function(prop,propOwner){propOwner!==Object.prototype&&"constructor"!==prop&&"function"==typeof getPropertyDescriptor(propOwner,prop).value&&(filter?filter(object,prop)&&(called=!0,predicate(object,prop)):(called=!0,predicate(object,prop)))}),!called)throw Error(`Expected to ${name} methods on object but found none`);return object}module.exports=walkObject},{"./get-property-descriptor":29,"./walk":38,"@sinonjs/commons":47}],38:[function(require1,module,exports){var forEach=require1("@sinonjs/commons").prototypes.array.forEach;function walkInternal(obj,iterator,context,originalObj,seen){var proto,prop;if("function"!=typeof Object.getOwnPropertyNames){for(prop in obj)iterator.call(context,obj[prop],prop,obj);return}forEach(Object.getOwnPropertyNames(obj),function(k){if(!0!==seen[k]){seen[k]=!0;var target="function"==typeof Object.getOwnPropertyDescriptor(obj,k).get?originalObj:obj;iterator.call(context,k,target)}}),(proto=Object.getPrototypeOf(obj))&&walkInternal(proto,iterator,context,originalObj,seen)}module.exports=function walk(obj,iterator,context){return walkInternal(obj,iterator,context,obj,{})}},{"@sinonjs/commons":47}],39:[function(require1,module,exports){var getPropertyDescriptor=require1("./get-property-descriptor"),extend=require1("./extend"),hasOwnProperty=require1("@sinonjs/commons").prototypes.object.hasOwnProperty,valueToString=require1("@sinonjs/commons").valueToString,push=require1("@sinonjs/commons").prototypes.array.push;function isFunction(obj){return"function"==typeof obj||!!(obj&&obj.constructor&&obj.call&&obj.apply)}function mirrorProperties(target,source){for(var prop in source)hasOwnProperty(target,prop)||(target[prop]=source[prop])}function getAccessor(object,property,method){for(var accessors=["get","set"],descriptor=getPropertyDescriptor(object,property),i=0;i<accessors.length;i++)if(descriptor[accessors[i]]&&descriptor[accessors[i]].name===method.name)return accessors[i];return null}var hasES5Support="keys"in Object;module.exports=function wrapMethod(object,property,method){if(!object)throw TypeError("Should wrap property of object");if("function"!=typeof method&&"object"!=typeof method)throw TypeError("Method wrapper should be a function or a property descriptor");function checkWrappedMethod(wrappedMethod){var error;if(isFunction(wrappedMethod)){if(wrappedMethod.restore&&wrappedMethod.restore.sinon)error=TypeError(`Attempted to wrap ${valueToString(property)} which is already wrapped`);else if(wrappedMethod.calledBefore){var verb=wrappedMethod.returns?"stubbed":"spied on";error=TypeError(`Attempted to wrap ${valueToString(property)} which is already ${verb}`)}}else error=TypeError(`Attempted to wrap ${typeof wrappedMethod} property ${valueToString(property)} as function`);if(error)throw wrappedMethod&&wrappedMethod.stackTraceError&&(error.stack+=`
--------------
${wrappedMethod.stackTraceError.stack}`),error}function simplePropertyAssignment(){checkWrappedMethod(wrappedMethod=object[property]),object[property]=method,method.displayName=property}wrappedMethods=[];var error,wrappedMethods,wrappedMethod,i,wrappedMethodDesc,target,accessor,owned=object.hasOwnProperty?object.hasOwnProperty(property):hasOwnProperty(object,property);if(hasES5Support){var methodDesc="function"==typeof method?{value:method}:method;if((wrappedMethodDesc=getPropertyDescriptor(object,property))?wrappedMethodDesc.restore&&wrappedMethodDesc.restore.sinon&&(error=TypeError(`Attempted to wrap ${property} which is already wrapped`)):error=TypeError(`Attempted to wrap ${typeof wrappedMethod} property ${property} as function`),error)throw wrappedMethodDesc&&wrappedMethodDesc.stackTraceError&&(error.stack+=`
--------------
${wrappedMethodDesc.stackTraceError.stack}`),error;var types=Object.keys(methodDesc);for(i=0;i<types.length;i++)checkWrappedMethod(wrappedMethod=wrappedMethodDesc[types[i]]),push(wrappedMethods,wrappedMethod);for(mirrorProperties(methodDesc,wrappedMethodDesc),i=0;i<types.length;i++)mirrorProperties(methodDesc[types[i]],wrappedMethodDesc[types[i]]);Object.defineProperty(object,property,methodDesc),"function"==typeof method&&object[property]!==method&&(delete object[property],simplePropertyAssignment())}else simplePropertyAssignment();function restore(){var descriptor;if(accessor=getAccessor(object,property,this.wrappedMethod)){if(owned)hasES5Support&&((descriptor=getPropertyDescriptor(object,property))[accessor]=wrappedMethodDesc[accessor],Object.defineProperty(object,property,descriptor));else try{delete object[property][accessor]}catch(e){}hasES5Support?(descriptor=getPropertyDescriptor(object,property))&&descriptor.value===target&&(object[property][accessor]=this.wrappedMethod):object[property][accessor]===target&&(object[property][accessor]=this.wrappedMethod)}else{if(owned)hasES5Support&&Object.defineProperty(object,property,wrappedMethodDesc);else try{delete object[property]}catch(e){}hasES5Support?(descriptor=getPropertyDescriptor(object,property))&&descriptor.value===target&&(object[property]=this.wrappedMethod):object[property]===target&&(object[property]=this.wrappedMethod)}}return function extendObjectWithWrappedMethods(){for(i=0;i<wrappedMethods.length;i++)target=(accessor=getAccessor(object,property,wrappedMethods[i]))?method[accessor]:method,extend.nonEnum(target,{displayName:property,wrappedMethod:wrappedMethods[i],stackTraceError:Error("Stack Trace for original"),restore:restore}),target.restore.sinon=!0,hasES5Support||mirrorProperties(target,wrappedMethod)}(),method}},{"./extend":25,"./get-property-descriptor":29,"@sinonjs/commons":47}],40:[function(require1,module,exports){var extend=require1("./core/extend"),FakeTimers=require1("@sinonjs/fake-timers"),globalObject=require1("@sinonjs/commons").global;function createClock(config,globalCtx){var FakeTimersCtx=FakeTimers;null!==globalCtx&&"object"==typeof globalCtx&&(FakeTimersCtx=FakeTimers.withGlobal(globalCtx));var clock=FakeTimersCtx.install(config);return clock.restore=clock.uninstall,clock}function addIfDefined(obj,globalPropName){var globalProp=globalObject[globalPropName];void 0!==globalProp&&(obj[globalPropName]=globalProp)}exports.useFakeTimers=function(dateOrConfig){var hasArguments=void 0!==dateOrConfig,argumentIsDateLike=("number"==typeof dateOrConfig||dateOrConfig instanceof Date)&&1==arguments.length,argumentIsObject=null!==dateOrConfig&&"object"==typeof dateOrConfig&&1==arguments.length;if(!hasArguments)return createClock({now:0});if(argumentIsDateLike)return createClock({now:dateOrConfig});if(argumentIsObject){var config=extend.nonEnum({},dateOrConfig),globalCtx=config.global;return delete config.global,createClock(config,globalCtx)}throw TypeError("useFakeTimers expected epoch or config object. See https://github.com/sinonjs/sinon")},exports.clock={create:function(now){return FakeTimers.createClock(now)}};var timers={setTimeout:setTimeout,clearTimeout:clearTimeout,setInterval:setInterval,clearInterval:clearInterval,Date:Date};addIfDefined(timers,"setImmediate"),addIfDefined(timers,"clearImmediate"),exports.timers=timers},{"./core/extend":25,"@sinonjs/commons":47,"@sinonjs/fake-timers":79}],41:[function(require1,module,exports){var every=require1("./prototypes/array").every;function hasCallsLeft(callMap,spy){return void 0===callMap[spy.id]&&(callMap[spy.id]=0),callMap[spy.id]<spy.callCount}function checkAdjacentCalls(callMap,spy,index,spies){var calledBeforeNext=!0;return index!==spies.length-1&&(calledBeforeNext=spy.calledBefore(spies[index+1])),!!hasCallsLeft(callMap,spy)&&!!calledBeforeNext&&(callMap[spy.id]+=1,!0)}function calledInOrder(spies){var _spies=arguments.length>1?arguments:spies;return every(_spies,checkAdjacentCalls.bind(null,{}))}module.exports=calledInOrder},{"./prototypes/array":49}],42:[function(require1,module,exports){var functionName=require1("./function-name");function className(value){return value.constructor&&value.constructor.name||"function"==typeof value.constructor&&functionName(value.constructor)||null}module.exports=className},{"./function-name":45}],43:[function(require1,module,exports){exports.wrap=function(func,msg){var wrapped=function(){return exports.printWarning(msg),func.apply(this,arguments)};return func.prototype&&(wrapped.prototype=func.prototype),wrapped},exports.defaultMsg=function(packageName,funcName){return`${packageName}.${funcName} is deprecated and will be removed from the public API in a future version of ${packageName}.`},exports.printWarning=function(msg){"object"==typeof process&&process.emitWarning?process.emitWarning(msg):console.info?console.info(msg):console.log(msg)}},{}],44:[function(require1,module,exports){module.exports=function every(obj,fn){var pass=!0;try{obj.forEach(function(){if(!fn.apply(this,arguments))throw Error()})}catch(e){pass=!1}return pass}},{}],45:[function(require1,module,exports){module.exports=function functionName(func){if(!func)return"";try{return func.displayName||func.name||(String(func).match(/function ([^\s(]+)/)||[])[1]}catch(e){return""}}},{}],46:[function(require1,module,exports){var globalObject;globalObject=void 0!==__webpack_require__.g?__webpack_require__.g:"undefined"!=typeof window?window:self,module.exports=globalObject},{}],47:[function(require1,module,exports){module.exports={global:require1("./global"),calledInOrder:require1("./called-in-order"),className:require1("./class-name"),deprecated:require1("./deprecated"),every:require1("./every"),functionName:require1("./function-name"),orderByFirstCall:require1("./order-by-first-call"),prototypes:require1("./prototypes"),typeOf:require1("./type-of"),valueToString:require1("./value-to-string")}},{"./called-in-order":41,"./class-name":42,"./deprecated":43,"./every":44,"./function-name":45,"./global":46,"./order-by-first-call":48,"./prototypes":52,"./type-of":58,"./value-to-string":59}],48:[function(require1,module,exports){var sort=require1("./prototypes/array").sort,slice=require1("./prototypes/array").slice;function comparator(a,b){var aCall=a.getCall(0),bCall=b.getCall(0);return(aCall&&aCall.callId||-1)<(bCall&&bCall.callId||-1)?-1:1}function orderByFirstCall(spies){return sort(slice(spies),comparator)}module.exports=orderByFirstCall},{"./prototypes/array":49}],49:[function(require1,module,exports){var copyPrototype=require1("./copy-prototype-methods");module.exports=copyPrototype(Array.prototype)},{"./copy-prototype-methods":50}],50:[function(require1,module,exports){var call=Function.call,throwsOnProto=require1("./throws-on-proto"),disallowedProperties=["size","caller","callee","arguments"];throwsOnProto&&disallowedProperties.push("__proto__"),module.exports=function copyPrototypeMethods(prototype){return Object.getOwnPropertyNames(prototype).reduce(function(result,name){return disallowedProperties.includes(name)||"function"!=typeof prototype[name]||(result[name]=call.bind(prototype[name])),result},Object.create(null))}},{"./throws-on-proto":57}],51:[function(require1,module,exports){var copyPrototype=require1("./copy-prototype-methods");module.exports=copyPrototype(Function.prototype)},{"./copy-prototype-methods":50}],52:[function(require1,module,exports){module.exports={array:require1("./array"),function:require1("./function"),map:require1("./map"),object:require1("./object"),set:require1("./set"),string:require1("./string")}},{"./array":49,"./function":51,"./map":53,"./object":54,"./set":55,"./string":56}],53:[function(require1,module,exports){var copyPrototype=require1("./copy-prototype-methods");module.exports=copyPrototype(Map.prototype)},{"./copy-prototype-methods":50}],54:[function(require1,module,exports){var copyPrototype=require1("./copy-prototype-methods");module.exports=copyPrototype(Object.prototype)},{"./copy-prototype-methods":50}],55:[function(require1,module,exports){var copyPrototype=require1("./copy-prototype-methods");module.exports=copyPrototype(Set.prototype)},{"./copy-prototype-methods":50}],56:[function(require1,module,exports){var copyPrototype=require1("./copy-prototype-methods");module.exports=copyPrototype(String.prototype)},{"./copy-prototype-methods":50}],57:[function(require1,module,exports){let throwsOnProto;try{throwsOnProto=!1}catch(_){throwsOnProto=!0}module.exports=throwsOnProto},{}],58:[function(require1,module,exports){var type=require1("type-detect");module.exports=function typeOf(value){return type(value).toLowerCase()}},{"type-detect":151}],59:[function(require1,module,exports){function valueToString(value){return value&&value.toString?value.toString():String(value)}module.exports=valueToString},{}],60:[function(require1,module,exports){arguments[4][41][0].apply(exports,arguments)},{"./prototypes/array":68,dup:41}],61:[function(require1,module,exports){arguments[4][42][0].apply(exports,arguments)},{"./function-name":64,dup:42}],62:[function(require1,module,exports){arguments[4][43][0].apply(exports,arguments)},{dup:43}],63:[function(require1,module,exports){arguments[4][44][0].apply(exports,arguments)},{dup:44}],64:[function(require1,module,exports){arguments[4][45][0].apply(exports,arguments)},{dup:45}],65:[function(require1,module,exports){arguments[4][46][0].apply(exports,arguments)},{dup:46}],66:[function(require1,module,exports){arguments[4][47][0].apply(exports,arguments)},{"./called-in-order":60,"./class-name":61,"./deprecated":62,"./every":63,"./function-name":64,"./global":65,"./order-by-first-call":67,"./prototypes":71,"./type-of":77,"./value-to-string":78,dup:47}],67:[function(require1,module,exports){arguments[4][48][0].apply(exports,arguments)},{"./prototypes/array":68,dup:48}],68:[function(require1,module,exports){arguments[4][49][0].apply(exports,arguments)},{"./copy-prototype-methods":69,dup:49}],69:[function(require1,module,exports){var call=Function.call,throwsOnProto=require1("./throws-on-proto"),disallowedProperties=["size","caller","callee","arguments"];throwsOnProto&&disallowedProperties.push("__proto__"),module.exports=function copyPrototypeMethods(prototype){return Object.getOwnPropertyNames(prototype).reduce(function(result,name){return disallowedProperties.indexOf(name)>-1||"function"!=typeof prototype[name]||(result[name]=call.bind(prototype[name])),result},Object.create(null))}},{"./throws-on-proto":76}],70:[function(require1,module,exports){arguments[4][51][0].apply(exports,arguments)},{"./copy-prototype-methods":69,dup:51}],71:[function(require1,module,exports){arguments[4][52][0].apply(exports,arguments)},{"./array":68,"./function":70,"./map":72,"./object":73,"./set":74,"./string":75,dup:52}],72:[function(require1,module,exports){arguments[4][53][0].apply(exports,arguments)},{"./copy-prototype-methods":69,dup:53}],73:[function(require1,module,exports){arguments[4][54][0].apply(exports,arguments)},{"./copy-prototype-methods":69,dup:54}],74:[function(require1,module,exports){arguments[4][55][0].apply(exports,arguments)},{"./copy-prototype-methods":69,dup:55}],75:[function(require1,module,exports){arguments[4][56][0].apply(exports,arguments)},{"./copy-prototype-methods":69,dup:56}],76:[function(require1,module,exports){arguments[4][57][0].apply(exports,arguments)},{dup:57}],77:[function(require1,module,exports){arguments[4][58][0].apply(exports,arguments)},{dup:58,"type-detect":151}],78:[function(require1,module,exports){arguments[4][59][0].apply(exports,arguments)},{dup:59}],79:[function(require1,module,exports){function withGlobal(_global){let calls;let userAgent=_global.navigator&&_global.navigator.userAgent,isRunningInIE=userAgent&&userAgent.indexOf("MSIE ")>-1,NOOP=function(){},NOOP_ARRAY=function(){return[]},timeoutResult=_global.setTimeout(NOOP,0),addTimerReturnsObject="object"==typeof timeoutResult,hrtimePresent=_global.process&&"function"==typeof _global.process.hrtime,hrtimeBigintPresent=hrtimePresent&&"function"==typeof _global.process.hrtime.bigint,nextTickPresent=_global.process&&"function"==typeof _global.process.nextTick,utilPromisify=_global.process&&require1("util").promisify,performancePresent=_global.performance&&"function"==typeof _global.performance.now,hasPerformancePrototype=_global.Performance&&(typeof _global.Performance).match(/^(function|object)$/),hasPerformanceConstructorPrototype=_global.performance&&_global.performance.constructor&&_global.performance.constructor.prototype,queueMicrotaskPresent=_global.hasOwnProperty("queueMicrotask"),requestAnimationFramePresent=_global.requestAnimationFrame&&"function"==typeof _global.requestAnimationFrame,cancelAnimationFramePresent=_global.cancelAnimationFrame&&"function"==typeof _global.cancelAnimationFrame,requestIdleCallbackPresent=_global.requestIdleCallback&&"function"==typeof _global.requestIdleCallback,cancelIdleCallbackPresent=_global.cancelIdleCallback&&"function"==typeof _global.cancelIdleCallback,setImmediatePresent=_global.setImmediate&&"function"==typeof _global.setImmediate;isRunningInIE&&(_global.setTimeout=_global.setTimeout,_global.clearTimeout=_global.clearTimeout,_global.setInterval=_global.setInterval,_global.clearInterval=_global.clearInterval,_global.Date=_global.Date),setImmediatePresent&&(_global.setImmediate=_global.setImmediate,_global.clearImmediate=_global.clearImmediate),_global.clearTimeout(timeoutResult);let NativeDate=_global.Date,uniqueTimerId=1e12;function isNumberFinite(num){return Number.isFinite?Number.isFinite(num):isFinite(num)}let isNearInfiniteLimit=!1;function checkIsNearInfiniteLimit(clock,i){clock.loopLimit&&i===clock.loopLimit-1&&(isNearInfiniteLimit=!0)}function parseTime(str){let parsed;if(!str)return 0;let strings=str.split(":"),l=strings.length,i=l,ms=0;if(l>3||!/^(\d\d:){0,2}\d\d?$/.test(str))throw Error("tick only understands numbers, 'm:s' and 'h:m:s'. Each part must be two digits");for(;i--;){if((parsed=parseInt(strings[i],10))>=60)throw Error(`Invalid time ${str}`);ms+=parsed*Math.pow(60,l-i-1)}return 1e3*ms}function nanoRemainder(msFloat){let remainder=1e6*msFloat%1e6;return Math.floor(remainder<0?remainder+1e6:remainder)}function getEpoch(epoch){if(!epoch)return 0;if("function"==typeof epoch.getTime)return epoch.getTime();if("number"==typeof epoch)return epoch;throw TypeError("now should be milliseconds since UNIX epoch")}function inRange(from,to,timer){return timer&&timer.callAt>=from&&timer.callAt<=to}function getInfiniteLoopError(clock,job){let infiniteLoopError=Error(`Aborting after running ${clock.loopLimit} timers, assuming an infinite loop!`);if(!job.error)return infiniteLoopError;let computedTargetPattern=/target\.*[<|(|[].*?[>|\]|)]\s*/,clockMethodPattern=new RegExp(String(Object.keys(clock).join("|")));addTimerReturnsObject&&(clockMethodPattern=RegExp(`\\s+at (Object\\.)?(?:${Object.keys(clock).join("|")})\\s+`));let matchedLineIndex=-1;job.error.stack.split("\n").some(function(line,i){return line.match(computedTargetPattern)?(matchedLineIndex=i,!0):line.match(clockMethodPattern)?(matchedLineIndex=i,!1):matchedLineIndex>=0});let stack=`${infiniteLoopError}
${job.type||"Microtask"} - ${job.func.name||"anonymous"}
${job.error.stack.split("\n").slice(matchedLineIndex+1).join("\n")}`;try{Object.defineProperty(infiniteLoopError,"stack",{value:stack})}catch(e){}return infiniteLoopError}function mirrorDateProperties(target,source){let prop;for(prop in source)source.hasOwnProperty(prop)&&(target[prop]=source[prop]);return source.now?target.now=function now(){return target.clock.now}:delete target.now,source.toSource?target.toSource=function toSource(){return source.toSource()}:delete target.toSource,target.toString=function toString(){return source.toString()},target.prototype=source.prototype,target.parse=source.parse,target.UTC=source.UTC,target.prototype.toUTCString=source.prototype.toUTCString,target.isFake=!0,target}function createDate(){function ClockDate(year,month,date,hour,minute,second,ms){if(!(this instanceof ClockDate))return new NativeDate(ClockDate.clock.now).toString();switch(arguments.length){case 0:return new NativeDate(ClockDate.clock.now);case 1:return new NativeDate(year);case 2:return new NativeDate(year,month);case 3:return new NativeDate(year,month,date);case 4:return new NativeDate(year,month,date,hour);case 5:return new NativeDate(year,month,date,hour,minute);case 6:return new NativeDate(year,month,date,hour,minute,second);default:return new NativeDate(year,month,date,hour,minute,second,ms)}}return mirrorDateProperties(ClockDate,NativeDate)}function enqueueJob(clock,job){clock.jobs||(clock.jobs=[]),clock.jobs.push(job)}function runJobs(clock){if(clock.jobs){for(let i=0;i<clock.jobs.length;i++){let job=clock.jobs[i];if(job.func.apply(null,job.args),checkIsNearInfiniteLimit(clock,i),clock.loopLimit&&i>clock.loopLimit)throw getInfiniteLoopError(clock,job)}isNearInfiniteLimit=!1,clock.jobs=[]}}function addTimer(clock,timer){if(void 0===timer.func)throw Error("Callback must be provided to timer calls");if(addTimerReturnsObject&&"function"!=typeof timer.func)throw TypeError(`[ERR_INVALID_CALLBACK]: Callback must be a function. Received ${timer.func} of type ${typeof timer.func}`);if(isNearInfiniteLimit&&(timer.error=Error()),timer.type=timer.immediate?"Immediate":"Timeout",timer.hasOwnProperty("delay")&&("number"!=typeof timer.delay&&(timer.delay=parseInt(timer.delay,10)),isNumberFinite(timer.delay)||(timer.delay=0),timer.delay=timer.delay>2147483647?1:timer.delay,timer.delay=Math.max(0,timer.delay)),timer.hasOwnProperty("interval")&&(timer.type="Interval",timer.interval=timer.interval>2147483647?1:timer.interval),timer.hasOwnProperty("animation")&&(timer.type="AnimationFrame",timer.animation=!0),timer.hasOwnProperty("idleCallback")&&(timer.type="IdleCallback",timer.idleCallback=!0),clock.timers||(clock.timers={}),timer.id=uniqueTimerId++,timer.createdAt=clock.now,timer.callAt=clock.now+(parseInt(timer.delay)||(clock.duringTick?1:0)),clock.timers[timer.id]=timer,addTimerReturnsObject){let res={refed:!0,ref:function(){return this.refed=!0,res},unref:function(){return this.refed=!1,res},hasRef:function(){return this.refed},refresh:function(){return timer.callAt=clock.now+(parseInt(timer.delay)||(clock.duringTick?1:0)),clock.timers[timer.id]=timer,res},[Symbol.toPrimitive]:function(){return timer.id}};return res}return timer.id}function compareTimers(a,b){return a.callAt<b.callAt?-1:a.callAt>b.callAt?1:a.immediate&&!b.immediate?-1:!a.immediate&&b.immediate?1:a.createdAt<b.createdAt?-1:a.createdAt>b.createdAt?1:a.id<b.id?-1:a.id>b.id?1:void 0}function firstTimerInRange(clock,from,to){let id;let timers=clock.timers,timer=null;for(id in timers)timers.hasOwnProperty(id)&&inRange(from,to,timers[id])&&(!timer||1===compareTimers(timer,timers[id]))&&(timer=timers[id]);return timer}function firstTimer(clock){let id;let timers=clock.timers,timer=null;for(id in timers)timers.hasOwnProperty(id)&&(!timer||1===compareTimers(timer,timers[id]))&&(timer=timers[id]);return timer}function lastTimer(clock){let id;let timers=clock.timers,timer=null;for(id in timers)timers.hasOwnProperty(id)&&(!timer||-1===compareTimers(timer,timers[id]))&&(timer=timers[id]);return timer}function callTimer(clock,timer){("number"==typeof timer.interval?clock.timers[timer.id].callAt+=timer.interval:delete clock.timers[timer.id],"function"==typeof timer.func)?timer.func.apply(null,timer.args):(0,eval)(timer.func)}function getClearHandler(ttype){return"IdleCallback"===ttype||"AnimationFrame"===ttype?`cancel${ttype}`:`clear${ttype}`}function getScheduleHandler(ttype){return"IdleCallback"===ttype||"AnimationFrame"===ttype?`request${ttype}`:`set${ttype}`}let warnOnce=(calls=0,function(msg){calls++||console.warn(msg)});function clearTimer(clock,timerId,ttype){if(!timerId)return;clock.timers||(clock.timers={});let id=Number(timerId);if(Number.isNaN(id)||id<1e12){let handlerName=getClearHandler(ttype);if(!0===clock.shouldClearNativeTimers){let nativeHandler=clock[`_${handlerName}`];return"function"==typeof nativeHandler?nativeHandler(timerId):void 0}warnOnce(`FakeTimers: ${handlerName} was invoked to clear a native timer instead of one created by this library.
To automatically clean-up native timers, use \`shouldClearNativeTimers\`.`)}if(clock.timers.hasOwnProperty(id)){let timer=clock.timers[id];if(timer.type===ttype||"Timeout"===timer.type&&"Interval"===ttype||"Interval"===timer.type&&"Timeout"===ttype)delete clock.timers[id];else{let clear=getClearHandler(ttype),schedule=getScheduleHandler(timer.type);throw Error(`Cannot clear timer: timer created with ${schedule}() but cleared with ${clear}()`)}}}function uninstall(clock,config){let method,i,l;for(i=0,l=clock.methods.length;i<l;i++)if("hrtime"===(method=clock.methods[i])&&_global.process)_global.process.hrtime=clock._hrtime;else if("nextTick"===method&&_global.process)_global.process.nextTick=clock._nextTick;else if("performance"===method){let originalPerfDescriptor=Object.getOwnPropertyDescriptor(clock,`_${method}`);originalPerfDescriptor&&originalPerfDescriptor.get&&!originalPerfDescriptor.set?Object.defineProperty(_global,method,originalPerfDescriptor):originalPerfDescriptor.configurable&&(_global[method]=clock[`_${method}`])}else if(_global[method]&&_global[method].hadOwnProperty)_global[method]=clock[`_${method}`];else try{delete _global[method]}catch(ignore){}return(!0===config.shouldAdvanceTime&&_global.clearInterval(clock.attachedInterval),clock.methods=[],clock.timers)?Object.keys(clock.timers).map(function mapper(key){return clock.timers[key]}):[]}function hijackMethod(target,method,clock){if(clock[method].hadOwnProperty=Object.prototype.hasOwnProperty.call(target,method),clock[`_${method}`]=target[method],"Date"===method){let date=mirrorDateProperties(clock[method],target[method]);target[method]=date}else if("performance"===method){let originalPerfDescriptor=Object.getOwnPropertyDescriptor(target,method);if(originalPerfDescriptor&&originalPerfDescriptor.get&&!originalPerfDescriptor.set){Object.defineProperty(clock,`_${method}`,originalPerfDescriptor);let perfDescriptor=Object.getOwnPropertyDescriptor(clock,method);Object.defineProperty(target,method,perfDescriptor)}else target[method]=clock[method]}else target[method]=function(){return clock[method].apply(clock,arguments)},Object.defineProperties(target[method],Object.getOwnPropertyDescriptors(clock[method]));target[method].clock=clock}function doIntervalTick(clock,advanceTimeDelta){clock.tick(advanceTimeDelta)}let timers={setTimeout:_global.setTimeout,clearTimeout:_global.clearTimeout,setInterval:_global.setInterval,clearInterval:_global.clearInterval,Date:_global.Date};setImmediatePresent&&(timers.setImmediate=_global.setImmediate,timers.clearImmediate=_global.clearImmediate),hrtimePresent&&(timers.hrtime=_global.process.hrtime),nextTickPresent&&(timers.nextTick=_global.process.nextTick),performancePresent&&(timers.performance=_global.performance),requestAnimationFramePresent&&(timers.requestAnimationFrame=_global.requestAnimationFrame),queueMicrotaskPresent&&(timers.queueMicrotask=!0),cancelAnimationFramePresent&&(timers.cancelAnimationFrame=_global.cancelAnimationFrame),requestIdleCallbackPresent&&(timers.requestIdleCallback=_global.requestIdleCallback),cancelIdleCallbackPresent&&(timers.cancelIdleCallback=_global.cancelIdleCallback);let originalSetTimeout=_global.setImmediate||_global.setTimeout;function createClock(start,loopLimit){start=Math.floor(getEpoch(start)),loopLimit=loopLimit||1e3;let nanos=0,adjustedSystemTime=[0,0];if(void 0===NativeDate)throw Error("The global scope doesn't have a `Date` object (see https://github.com/sinonjs/sinon/issues/1852#issuecomment-419622780)");let clock={now:start,Date:createDate(),loopLimit:loopLimit};function getTimeToNextFrame(){return 16-(clock.now-start)%16}function hrtime(prev){let millisSinceStart=clock.now-adjustedSystemTime[0]-start,secsSinceStart=Math.floor(millisSinceStart/1e3),remainderInNanos=(millisSinceStart-1e3*secsSinceStart)*1e6+nanos-adjustedSystemTime[1];if(Array.isArray(prev)){if(prev[1]>1e9)throw TypeError("Number of nanoseconds can't exceed a billion");let oldSecs=prev[0],nanoDiff=remainderInNanos-prev[1],secDiff=secsSinceStart-oldSecs;return nanoDiff<0&&(nanoDiff+=1e9,secDiff-=1),[secDiff,nanoDiff]}return[secsSinceStart,remainderInNanos]}function doTick(tickValue,isAsync,resolve,reject){let timer,firstException,oldNow,nextPromiseTick,compensationCheck,postTimerCall;let msFloat="number"==typeof tickValue?tickValue:parseTime(tickValue),ms=Math.floor(msFloat),remainder=nanoRemainder(msFloat),nanosTotal=nanos+remainder,tickTo=clock.now+ms;if(msFloat<0)throw TypeError("Negative ticks are not supported");nanosTotal>=1e6&&(tickTo+=1,nanosTotal-=1e6),nanos=nanosTotal;let tickFrom=clock.now,previous=clock.now;function doTickInner(){for(timer=firstTimerInRange(clock,tickFrom,tickTo);timer&&tickFrom<=tickTo;){if(clock.timers[timer.id]){tickFrom=timer.callAt,clock.now=timer.callAt,oldNow=clock.now;try{runJobs(clock),callTimer(clock,timer)}catch(e){firstException=firstException||e}if(isAsync){originalSetTimeout(nextPromiseTick);return}compensationCheck()}postTimerCall()}if(oldNow=clock.now,runJobs(clock),oldNow!==clock.now&&(tickFrom+=clock.now-oldNow,tickTo+=clock.now-oldNow),clock.duringTick=!1,timer=firstTimerInRange(clock,tickFrom,tickTo))try{clock.tick(tickTo-clock.now)}catch(e){firstException=firstException||e}else clock.now=tickTo,nanos=nanosTotal;if(firstException)throw firstException;if(!isAsync)return clock.now;resolve(clock.now)}return clock.duringTick=!0,oldNow=clock.now,runJobs(clock),oldNow!==clock.now&&(tickFrom+=clock.now-oldNow,tickTo+=clock.now-oldNow),nextPromiseTick=isAsync&&function(){try{compensationCheck(),postTimerCall(),doTickInner()}catch(e){reject(e)}},compensationCheck=function(){oldNow!==clock.now&&(tickFrom+=clock.now-oldNow,tickTo+=clock.now-oldNow,previous+=clock.now-oldNow)},postTimerCall=function(){timer=firstTimerInRange(clock,previous,tickTo),previous=tickFrom},doTickInner()}return clock.Date.clock=clock,hrtimeBigintPresent&&(hrtime.bigint=function(){let parts=hrtime();return BigInt(parts[0])*BigInt(1e9)+BigInt(parts[1])}),clock.requestIdleCallback=function requestIdleCallback(func,timeout){let timeToNextIdlePeriod=0;clock.countTimers()>0&&(timeToNextIdlePeriod=50);let result=addTimer(clock,{func:func,args:Array.prototype.slice.call(arguments,2),delay:void 0===timeout?timeToNextIdlePeriod:Math.min(timeout,timeToNextIdlePeriod),idleCallback:!0});return Number(result)},clock.cancelIdleCallback=function cancelIdleCallback(timerId){return clearTimer(clock,timerId,"IdleCallback")},clock.setTimeout=function setTimeout1(func,timeout){return addTimer(clock,{func:func,args:Array.prototype.slice.call(arguments,2),delay:timeout})},void 0!==_global.Promise&&utilPromisify&&(clock.setTimeout[utilPromisify.custom]=function promisifiedSetTimeout(timeout,arg){return new _global.Promise(function setTimeoutExecutor(resolve){addTimer(clock,{func:resolve,args:[arg],delay:timeout})})}),clock.clearTimeout=function clearTimeout1(timerId){return clearTimer(clock,timerId,"Timeout")},clock.nextTick=function nextTick(func){return enqueueJob(clock,{func:func,args:Array.prototype.slice.call(arguments,1),error:isNearInfiniteLimit?Error():null})},clock.queueMicrotask=function queueMicrotask(func){return clock.nextTick(func)},clock.setInterval=function setInterval1(func,timeout){return timeout=parseInt(timeout,10),addTimer(clock,{func:func,args:Array.prototype.slice.call(arguments,2),delay:timeout,interval:timeout})},clock.clearInterval=function clearInterval1(timerId){return clearTimer(clock,timerId,"Interval")},setImmediatePresent&&(clock.setImmediate=function setImmediate(func){return addTimer(clock,{func:func,args:Array.prototype.slice.call(arguments,1),immediate:!0})},void 0!==_global.Promise&&utilPromisify&&(clock.setImmediate[utilPromisify.custom]=function promisifiedSetImmediate(arg){return new _global.Promise(function setImmediateExecutor(resolve){addTimer(clock,{func:resolve,args:[arg],immediate:!0})})}),clock.clearImmediate=function clearImmediate(timerId){return clearTimer(clock,timerId,"Immediate")}),clock.countTimers=function countTimers(){return Object.keys(clock.timers||{}).length+(clock.jobs||[]).length},clock.requestAnimationFrame=function requestAnimationFrame(func){return Number(addTimer(clock,{func:func,delay:getTimeToNextFrame(),args:[clock.now+getTimeToNextFrame()],animation:!0}))},clock.cancelAnimationFrame=function cancelAnimationFrame(timerId){return clearTimer(clock,timerId,"AnimationFrame")},clock.runMicrotasks=function runMicrotasks(){runJobs(clock)},clock.tick=function tick(tickValue){return doTick(tickValue,!1)},void 0!==_global.Promise&&(clock.tickAsync=function tickAsync(tickValue){return new _global.Promise(function(resolve,reject){originalSetTimeout(function(){try{doTick(tickValue,!0,resolve,reject)}catch(e){reject(e)}})})}),clock.next=function next(){runJobs(clock);let timer=firstTimer(clock);if(!timer)return clock.now;clock.duringTick=!0;try{return clock.now=timer.callAt,callTimer(clock,timer),runJobs(clock),clock.now}finally{clock.duringTick=!1}},void 0!==_global.Promise&&(clock.nextAsync=function nextAsync(){return new _global.Promise(function(resolve,reject){originalSetTimeout(function(){try{let err;let timer=firstTimer(clock);if(!timer){resolve(clock.now);return}clock.duringTick=!0,clock.now=timer.callAt;try{callTimer(clock,timer)}catch(e){err=e}clock.duringTick=!1,originalSetTimeout(function(){err?reject(err):resolve(clock.now)})}catch(e){reject(e)}})})}),clock.runAll=function runAll(){let i;for(runJobs(clock),i=0;i<clock.loopLimit;i++){if(!clock.timers||0===Object.keys(clock.timers).length)return isNearInfiniteLimit=!1,clock.now;clock.next(),checkIsNearInfiniteLimit(clock,i)}let excessJob=firstTimer(clock);throw getInfiniteLoopError(clock,excessJob)},clock.runToFrame=function runToFrame(){return clock.tick(getTimeToNextFrame())},void 0!==_global.Promise&&(clock.runAllAsync=function runAllAsync(){return new _global.Promise(function(resolve,reject){let i=0;function doRun(){originalSetTimeout(function(){try{let numTimers;if(i<clock.loopLimit){if(!clock.timers||(numTimers=Object.keys(clock.timers).length,0===numTimers)){isNearInfiniteLimit=!1,resolve(clock.now);return}clock.next(),i++,doRun(),checkIsNearInfiniteLimit(clock,i);return}let excessJob=firstTimer(clock);reject(getInfiniteLoopError(clock,excessJob))}catch(e){reject(e)}})}doRun()})}),clock.runToLast=function runToLast(){let timer=lastTimer(clock);return timer?clock.tick(timer.callAt-clock.now):(runJobs(clock),clock.now)},void 0!==_global.Promise&&(clock.runToLastAsync=function runToLastAsync(){return new _global.Promise(function(resolve,reject){originalSetTimeout(function(){try{let timer=lastTimer(clock);timer||resolve(clock.now),resolve(clock.tickAsync(timer.callAt))}catch(e){reject(e)}})})}),clock.reset=function reset(){nanos=0,clock.timers={},clock.jobs=[],clock.now=start},clock.setSystemTime=function setSystemTime(systemTime){let id,timer;let newNow=getEpoch(systemTime),difference=newNow-clock.now;for(id in adjustedSystemTime[0]=adjustedSystemTime[0]+difference,adjustedSystemTime[1]=adjustedSystemTime[1]+nanos,clock.now=newNow,nanos=0,clock.timers)clock.timers.hasOwnProperty(id)&&(timer=clock.timers[id],timer.createdAt+=difference,timer.callAt+=difference)},performancePresent&&(clock.performance=Object.create(null),clock.performance.now=function FakeTimersNow(){let hrt=hrtime();return 1e3*hrt[0]+hrt[1]/1e6}),hrtimePresent&&(clock.hrtime=hrtime),clock}function install(config){let i,l;if(arguments.length>1||config instanceof Date||Array.isArray(config)||"number"==typeof config)throw TypeError(`FakeTimers.install called with ${String(config)} install requires an object parameter`);if(!0===_global.Date.isFake)throw TypeError("Can't install fake timers twice on the same global object.");if((config=void 0!==config?config:{}).shouldAdvanceTime=config.shouldAdvanceTime||!1,config.advanceTimeDelta=config.advanceTimeDelta||20,config.shouldClearNativeTimers=config.shouldClearNativeTimers||!1,config.target)throw TypeError("config.target is no longer supported. Use `withGlobal(target)` instead.");let clock=createClock(config.now,config.loopLimit);if(clock.shouldClearNativeTimers=config.shouldClearNativeTimers,clock.uninstall=function(){return uninstall(clock,config)},clock.methods=config.toFake||[],0===clock.methods.length&&(clock.methods=Object.keys(timers).filter(function(key){return"nextTick"!==key&&"queueMicrotask"!==key})),!0===config.shouldAdvanceTime){let intervalTick=doIntervalTick.bind(null,clock,config.advanceTimeDelta),intervalId=_global.setInterval(intervalTick,config.advanceTimeDelta);clock.attachedInterval=intervalId}if(clock.methods.includes("performance")){let proto=hasPerformancePrototype?_global.Performance.prototype:hasPerformanceConstructorPrototype?_global.performance.constructor.prototype:void 0;if(proto)Object.getOwnPropertyNames(proto).forEach(function(name){"now"!==name&&(clock.performance[name]=0===name.indexOf("getEntries")?NOOP_ARRAY:NOOP)});else if((config.toFake||[]).includes("performance"))throw ReferenceError("non-existent performance object cannot be faked")}for(i=0,l=clock.methods.length;i<l;i++){let nameOfMethodToReplace=clock.methods[i];"hrtime"===nameOfMethodToReplace?_global.process&&"function"==typeof _global.process.hrtime&&hijackMethod(_global.process,nameOfMethodToReplace,clock):"nextTick"===nameOfMethodToReplace?_global.process&&"function"==typeof _global.process.nextTick&&hijackMethod(_global.process,nameOfMethodToReplace,clock):hijackMethod(_global,nameOfMethodToReplace,clock)}return clock}return{timers:timers,createClock:createClock,install:install,withGlobal:withGlobal}}let defaultImplementation=withGlobal(require1("@sinonjs/commons").global);exports.timers=defaultImplementation.timers,exports.createClock=defaultImplementation.createClock,exports.install=defaultImplementation.install,exports.withGlobal=withGlobal},{"@sinonjs/commons":66,util:112}],80:[function(require1,module,exports){var ARRAY_TYPES=[Array,Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];module.exports=ARRAY_TYPES},{}],81:[function(require1,module,exports){var arrayProto=require1("@sinonjs/commons").prototypes.array,deepEqual=require1("./deep-equal").use(createMatcher),every=require1("@sinonjs/commons").every,functionName=require1("@sinonjs/commons").functionName,get=require1("lodash.get"),iterableToString=require1("./iterable-to-string"),objectProto=require1("@sinonjs/commons").prototypes.object,typeOf=require1("@sinonjs/commons").typeOf,valueToString=require1("@sinonjs/commons").valueToString,assertMatcher=require1("./create-matcher/assert-matcher"),assertMethodExists=require1("./create-matcher/assert-method-exists"),assertType=require1("./create-matcher/assert-type"),isIterable=require1("./create-matcher/is-iterable"),isMatcher=require1("./create-matcher/is-matcher"),matcherPrototype=require1("./create-matcher/matcher-prototype"),arrayIndexOf=arrayProto.indexOf,some=arrayProto.some,hasOwnProperty=objectProto.hasOwnProperty,objectToString=objectProto.toString,TYPE_MAP=require1("./create-matcher/type-map")(createMatcher);function createMatcher(expectation,message){var m=Object.create(matcherPrototype),type=typeOf(expectation);if(void 0!==message&&"string"!=typeof message)throw TypeError("Message should be a string");if(arguments.length>2)throw TypeError(`Expected 1 or 2 arguments, received ${arguments.length}`);return type in TYPE_MAP?TYPE_MAP[type](m,expectation,message):m.test=function(actual){return deepEqual(actual,expectation)},m.message||(m.message=`match(${valueToString(expectation)})`),m}function createPropertyMatcher(propertyTest,messagePrefix){return function(property,value){assertType(property,"string","property");var onlyProperty=1==arguments.length,message=`${messagePrefix}("${property}"`;return onlyProperty||(message+=`, ${valueToString(value)}`),createMatcher(function(actual){return!!(null!=actual&&propertyTest(actual,property))&&(onlyProperty||deepEqual(actual[property],value))},message+=")")}}createMatcher.isMatcher=isMatcher,createMatcher.any=createMatcher(function(){return!0},"any"),createMatcher.defined=createMatcher(function(actual){return null!=actual},"defined"),createMatcher.truthy=createMatcher(function(actual){return!!actual},"truthy"),createMatcher.falsy=createMatcher(function(actual){return!actual},"falsy"),createMatcher.same=function(expectation){return createMatcher(function(actual){return expectation===actual},`same(${valueToString(expectation)})`)},createMatcher.in=function(arrayOfExpectations){if("array"!==typeOf(arrayOfExpectations))throw TypeError("array expected");return createMatcher(function(actual){return some(arrayOfExpectations,function(expectation){return expectation===actual})},`in(${valueToString(arrayOfExpectations)})`)},createMatcher.typeOf=function(type){return assertType(type,"string","type"),createMatcher(function(actual){return typeOf(actual)===type},`typeOf("${type}")`)},createMatcher.instanceOf=function(type){return"undefined"==typeof Symbol||void 0===Symbol.hasInstance?assertType(type,"function","type"):assertMethodExists(type,Symbol.hasInstance,"type","[Symbol.hasInstance]"),createMatcher(function(actual){return actual instanceof type},`instanceOf(${functionName(type)||objectToString(type)})`)},createMatcher.has=createPropertyMatcher(function(actual,property){return"object"==typeof actual?property in actual:void 0!==actual[property]},"has"),createMatcher.hasOwn=createPropertyMatcher(function(actual,property){return hasOwnProperty(actual,property)},"hasOwn"),createMatcher.hasNested=function(property,value){assertType(property,"string","property");var onlyProperty=1==arguments.length,message=`hasNested("${property}"`;return onlyProperty||(message+=`, ${valueToString(value)}`),createMatcher(function(actual){return null!=actual&&void 0!==get(actual,property)&&(onlyProperty||deepEqual(get(actual,property),value))},message+=")")};var jsonParseResultTypes={null:!0,boolean:!0,number:!0,string:!0,object:!0,array:!0};createMatcher.json=function(value){if(!jsonParseResultTypes[typeOf(value)])throw TypeError("Value cannot be the result of JSON.parse");return createMatcher(function(actual){var parsed;try{parsed=JSON.parse(actual)}catch(e){return!1}return deepEqual(parsed,value)},`json(${JSON.stringify(value,null,"  ")})`)},createMatcher.every=function(predicate){return assertMatcher(predicate),createMatcher(function(actual){return"object"===typeOf(actual)?every(Object.keys(actual),function(key){return predicate.test(actual[key])}):isIterable(actual)&&every(actual,function(element){return predicate.test(element)})},`every(${predicate.message})`)},createMatcher.some=function(predicate){return assertMatcher(predicate),createMatcher(function(actual){return"object"===typeOf(actual)?!every(Object.keys(actual),function(key){return!predicate.test(actual[key])}):isIterable(actual)&&!every(actual,function(element){return!predicate.test(element)})},`some(${predicate.message})`)},createMatcher.array=createMatcher.typeOf("array"),createMatcher.array.deepEquals=function(expectation){return createMatcher(function(actual){var sameLength=actual.length===expectation.length;return"array"===typeOf(actual)&&sameLength&&every(actual,function(element,index){var expected=expectation[index];return"array"===typeOf(expected)&&"array"===typeOf(element)?createMatcher.array.deepEquals(expected).test(element):deepEqual(expected,element)})},`deepEquals([${iterableToString(expectation)}])`)},createMatcher.array.startsWith=function(expectation){return createMatcher(function(actual){return"array"===typeOf(actual)&&every(expectation,function(expectedElement,index){return actual[index]===expectedElement})},`startsWith([${iterableToString(expectation)}])`)},createMatcher.array.endsWith=function(expectation){return createMatcher(function(actual){var offset=actual.length-expectation.length;return"array"===typeOf(actual)&&every(expectation,function(expectedElement,index){return actual[offset+index]===expectedElement})},`endsWith([${iterableToString(expectation)}])`)},createMatcher.array.contains=function(expectation){return createMatcher(function(actual){return"array"===typeOf(actual)&&every(expectation,function(expectedElement){return -1!==arrayIndexOf(actual,expectedElement)})},`contains([${iterableToString(expectation)}])`)},createMatcher.map=createMatcher.typeOf("map"),createMatcher.map.deepEquals=function mapDeepEquals(expectation){return createMatcher(function(actual){var sameLength=actual.size===expectation.size;return"map"===typeOf(actual)&&sameLength&&every(actual,function(element,key){return expectation.has(key)&&expectation.get(key)===element})},`deepEquals(Map[${iterableToString(expectation)}])`)},createMatcher.map.contains=function mapContains(expectation){return createMatcher(function(actual){return"map"===typeOf(actual)&&every(expectation,function(element,key){return actual.has(key)&&actual.get(key)===element})},`contains(Map[${iterableToString(expectation)}])`)},createMatcher.set=createMatcher.typeOf("set"),createMatcher.set.deepEquals=function setDeepEquals(expectation){return createMatcher(function(actual){var sameLength=actual.size===expectation.size;return"set"===typeOf(actual)&&sameLength&&every(actual,function(element){return expectation.has(element)})},`deepEquals(Set[${iterableToString(expectation)}])`)},createMatcher.set.contains=function setContains(expectation){return createMatcher(function(actual){return"set"===typeOf(actual)&&every(expectation,function(element){return actual.has(element)})},`contains(Set[${iterableToString(expectation)}])`)},createMatcher.bool=createMatcher.typeOf("boolean"),createMatcher.number=createMatcher.typeOf("number"),createMatcher.string=createMatcher.typeOf("string"),createMatcher.object=createMatcher.typeOf("object"),createMatcher.func=createMatcher.typeOf("function"),createMatcher.regexp=createMatcher.typeOf("regexp"),createMatcher.date=createMatcher.typeOf("date"),createMatcher.symbol=createMatcher.typeOf("symbol"),module.exports=createMatcher},{"./create-matcher/assert-matcher":82,"./create-matcher/assert-method-exists":83,"./create-matcher/assert-type":84,"./create-matcher/is-iterable":85,"./create-matcher/is-matcher":86,"./create-matcher/matcher-prototype":88,"./create-matcher/type-map":89,"./deep-equal":90,"./iterable-to-string":104,"@sinonjs/commons":47,"lodash.get":115}],82:[function(require1,module,exports){var isMatcher=require1("./is-matcher");function assertMatcher(value){if(!isMatcher(value))throw TypeError("Matcher expected")}module.exports=assertMatcher},{"./is-matcher":86}],83:[function(require1,module,exports){function assertMethodExists(value,method,name,methodPath){if(null===value[method]||void 0===value[method])throw TypeError(`Expected ${name} to have method ${methodPath}`)}module.exports=assertMethodExists},{}],84:[function(require1,module,exports){var typeOf=require1("@sinonjs/commons").typeOf;function assertType(value,type,name){var actual=typeOf(value);if(actual!==type)throw TypeError(`Expected type of ${name} to be ${type}, but was ${actual}`)}module.exports=assertType},{"@sinonjs/commons":47}],85:[function(require1,module,exports){var typeOf=require1("@sinonjs/commons").typeOf;function isIterable(value){return!!value&&"function"===typeOf(value.forEach)}module.exports=isIterable},{"@sinonjs/commons":47}],86:[function(require1,module,exports){var isPrototypeOf=require1("@sinonjs/commons").prototypes.object.isPrototypeOf,matcherPrototype=require1("./matcher-prototype");function isMatcher(object){return isPrototypeOf(matcherPrototype,object)}module.exports=isMatcher},{"./matcher-prototype":88,"@sinonjs/commons":47}],87:[function(require1,module,exports){var every=require1("@sinonjs/commons").prototypes.array.every,concat=require1("@sinonjs/commons").prototypes.array.concat,typeOf=require1("@sinonjs/commons").typeOf,deepEqualFactory=require1("../deep-equal").use,isMatcher=require1("./is-matcher"),keys=Object.keys,getOwnPropertySymbols=Object.getOwnPropertySymbols;function matchObject(actual,expectation,matcher){var deepEqual=deepEqualFactory(matcher);if(null==actual)return!1;var expectedKeys=keys(expectation);return"function"===typeOf(getOwnPropertySymbols)&&(expectedKeys=concat(expectedKeys,getOwnPropertySymbols(expectation))),every(expectedKeys,function(key){var exp=expectation[key],act=actual[key];if(isMatcher(exp)){if(!exp.test(act))return!1}else if("object"===typeOf(exp)){if(!matchObject(act,exp,matcher))return!1}else if(!deepEqual(act,exp))return!1;return!0})}module.exports=matchObject},{"../deep-equal":90,"./is-matcher":86,"@sinonjs/commons":47}],88:[function(require1,module,exports){var matcherPrototype={toString:function(){return this.message}};matcherPrototype.or=function(valueOrMatcher){var createMatcher=require1("../create-matcher"),isMatcher=createMatcher.isMatcher;if(!arguments.length)throw TypeError("Matcher expected");var m2=isMatcher(valueOrMatcher)?valueOrMatcher:createMatcher(valueOrMatcher),m1=this,or=Object.create(matcherPrototype);return or.test=function(actual){return m1.test(actual)||m2.test(actual)},or.message=`${m1.message}.or(${m2.message})`,or},matcherPrototype.and=function(valueOrMatcher){var createMatcher=require1("../create-matcher"),isMatcher=createMatcher.isMatcher;if(!arguments.length)throw TypeError("Matcher expected");var m2=isMatcher(valueOrMatcher)?valueOrMatcher:createMatcher(valueOrMatcher),m1=this,and=Object.create(matcherPrototype);return and.test=function(actual){return m1.test(actual)&&m2.test(actual)},and.message=`${m1.message}.and(${m2.message})`,and},module.exports=matcherPrototype},{"../create-matcher":81}],89:[function(require1,module,exports){var functionName=require1("@sinonjs/commons").functionName,join=require1("@sinonjs/commons").prototypes.array.join,map=require1("@sinonjs/commons").prototypes.array.map,stringIndexOf=require1("@sinonjs/commons").prototypes.string.indexOf,valueToString=require1("@sinonjs/commons").valueToString,matchObject=require1("./match-object");module.exports=function(match){return{function:function(m,expectation,message){m.test=expectation,m.message=message||`match(${functionName(expectation)})`},number:function(m,expectation){m.test=function(actual){return expectation==actual}},object:function(m,expectation){var array=[];return"function"==typeof expectation.test?(m.test=function(actual){return!0===expectation.test(actual)},m.message=`match(${functionName(expectation.test)})`):(array=map(Object.keys(expectation),function(key){return`${key}: ${valueToString(expectation[key])}`}),m.test=function(actual){return matchObject(actual,expectation,match)},m.message=`match(${join(array,", ")})`),m},regexp:function(m,expectation){m.test=function(actual){return"string"==typeof actual&&expectation.test(actual)}},string:function(m,expectation){m.test=function(actual){return"string"==typeof actual&&-1!==stringIndexOf(actual,expectation)},m.message=`match("${expectation}")`}}}},{"./match-object":87,"@sinonjs/commons":47}],90:[function(require1,module,exports){var valueToString=require1("@sinonjs/commons").valueToString,className=require1("@sinonjs/commons").className,typeOf=require1("@sinonjs/commons").typeOf,arrayProto=require1("@sinonjs/commons").prototypes.array,objectProto=require1("@sinonjs/commons").prototypes.object,mapForEach=require1("@sinonjs/commons").prototypes.map.forEach,getClass=require1("./get-class"),identical=require1("./identical"),isArguments=require1("./is-arguments"),isArrayType=require1("./is-array-type"),isDate=require1("./is-date"),isElement=require1("./is-element"),isIterable=require1("./is-iterable"),isMap=require1("./is-map"),isNaN1=require1("./is-nan"),isObject=require1("./is-object"),isSet=require1("./is-set"),isSubset=require1("./is-subset"),concat=arrayProto.concat,every=arrayProto.every,push=arrayProto.push,getTime=Date.prototype.getTime,hasOwnProperty=objectProto.hasOwnProperty,indexOf=arrayProto.indexOf,keys=Object.keys,getOwnPropertySymbols=Object.getOwnPropertySymbols;function deepEqualCyclic(actual,expectation,match){var actualObjects=[],expectationObjects=[],actualPaths=[],expectationPaths=[],compared={};return function deepEqual(actualObj,expectationObj,actualPath,expectationPath){if(match&&match.isMatcher(expectationObj))return match.isMatcher(actualObj)?actualObj===expectationObj:expectationObj.test(actualObj);var actualType=typeof actualObj,expectationType=typeof expectationObj;if(actualObj===expectationObj||isNaN1(actualObj)||isNaN1(expectationObj)||null===actualObj||null===expectationObj||void 0===actualObj||void 0===expectationObj||"object"!==actualType||"object"!==expectationType)return identical(actualObj,expectationObj);if(isElement(actualObj)||isElement(expectationObj))return!1;var isActualDate=isDate(actualObj),isExpectationDate=isDate(expectationObj);if((isActualDate||isExpectationDate)&&(!isActualDate||!isExpectationDate||getTime.call(actualObj)!==getTime.call(expectationObj))||actualObj instanceof RegExp&&expectationObj instanceof RegExp&&valueToString(actualObj)!==valueToString(expectationObj))return!1;if(actualObj instanceof Promise&&expectationObj instanceof Promise||actualObj instanceof Error&&expectationObj instanceof Error)return actualObj===expectationObj;var actualClass=getClass(actualObj),expectationClass=getClass(expectationObj),actualKeys=keys(actualObj),expectationKeys=keys(expectationObj),actualName=className(actualObj),expectationName=className(expectationObj),expectationKeysAndSymbols=concat(expectationKeys,"function"===typeOf(getOwnPropertySymbols)?getOwnPropertySymbols(expectationObj):[]);if(isArguments(actualObj)||isArguments(expectationObj)){if(actualObj.length!==expectationObj.length)return!1}else if(actualType!==expectationType||actualClass!==expectationClass||actualKeys.length!==expectationKeys.length||actualName&&expectationName&&actualName!==expectationName)return!1;if(isSet(actualObj)||isSet(expectationObj))return!!(isSet(actualObj)&&isSet(expectationObj))&&actualObj.size===expectationObj.size&&isSubset(actualObj,expectationObj,deepEqual);if(isMap(actualObj)||isMap(expectationObj)){if(!isMap(actualObj)||!isMap(expectationObj)||actualObj.size!==expectationObj.size)return!1;var mapsDeeplyEqual=!0;return mapForEach(actualObj,function(value,key){mapsDeeplyEqual=mapsDeeplyEqual&&deepEqualCyclic(value,expectationObj.get(key))}),mapsDeeplyEqual}if(actualObj.constructor&&"jQuery"===actualObj.constructor.name&&"function"==typeof actualObj.is)return actualObj.is(expectationObj);var isActualNonArrayIterable=isIterable(actualObj)&&!isArrayType(actualObj)&&!isArguments(actualObj),isExpectationNonArrayIterable=isIterable(expectationObj)&&!isArrayType(expectationObj)&&!isArguments(expectationObj);if(isActualNonArrayIterable||isExpectationNonArrayIterable){var actualArray=Array.from(actualObj),expectationArray=Array.from(expectationObj);if(actualArray.length!==expectationArray.length)return!1;var arrayDeeplyEquals=!0;return every(actualArray,function(key){arrayDeeplyEquals=arrayDeeplyEquals&&deepEqualCyclic(actualArray[key],expectationArray[key])}),arrayDeeplyEquals}return every(expectationKeysAndSymbols,function(key){if(!hasOwnProperty(actualObj,key))return!1;var actualValue=actualObj[key],expectationValue=expectationObj[key],actualObject=isObject(actualValue),expectationObject=isObject(expectationValue),actualIndex=actualObject?indexOf(actualObjects,actualValue):-1,expectationIndex=expectationObject?indexOf(expectationObjects,expectationValue):-1,newActualPath=-1!==actualIndex?actualPaths[actualIndex]:`${actualPath}[${JSON.stringify(key)}]`,newExpectationPath=-1!==expectationIndex?expectationPaths[expectationIndex]:`${expectationPath}[${JSON.stringify(key)}]`,combinedPath=newActualPath+newExpectationPath;return!!compared[combinedPath]||(-1===actualIndex&&actualObject&&(push(actualObjects,actualValue),push(actualPaths,newActualPath)),-1===expectationIndex&&expectationObject&&(push(expectationObjects,expectationValue),push(expectationPaths,newExpectationPath)),actualObject&&expectationObject&&(compared[combinedPath]=!0),deepEqual(actualValue,expectationValue,newActualPath,newExpectationPath))})}(actual,expectation,"$1","$2")}deepEqualCyclic.use=function(match){return function deepEqual(a,b){return deepEqualCyclic(a,b,match)}},module.exports=deepEqualCyclic},{"./get-class":91,"./identical":92,"./is-arguments":93,"./is-array-type":94,"./is-date":95,"./is-element":96,"./is-iterable":97,"./is-map":98,"./is-nan":99,"./is-object":101,"./is-set":102,"./is-subset":103,"@sinonjs/commons":47}],91:[function(require1,module,exports){var toString=require1("@sinonjs/commons").prototypes.object.toString;function getClass(value){return toString(value).split(/[ \]]/)[1]}module.exports=getClass},{"@sinonjs/commons":47}],92:[function(require1,module,exports){var isNaN1=require1("./is-nan"),isNegZero=require1("./is-neg-zero");function identical(obj1,obj2){return!!(obj1===obj2||isNaN1(obj1)&&isNaN1(obj2))&&(0!==obj1||isNegZero(obj1)===isNegZero(obj2))}module.exports=identical},{"./is-nan":99,"./is-neg-zero":100}],93:[function(require1,module,exports){var getClass=require1("./get-class");function isArguments(object){return"Arguments"===getClass(object)}module.exports=isArguments},{"./get-class":91}],94:[function(require1,module,exports){var functionName=require1("@sinonjs/commons").functionName,indexOf=require1("@sinonjs/commons").prototypes.array.indexOf,map=require1("@sinonjs/commons").prototypes.array.map,ARRAY_TYPES=require1("./array-types"),type=require1("type-detect");function isArrayType(object){return -1!==indexOf(map(ARRAY_TYPES,functionName),type(object))}module.exports=isArrayType},{"./array-types":80,"@sinonjs/commons":47,"type-detect":151}],95:[function(require1,module,exports){function isDate(value){return value instanceof Date}module.exports=isDate},{}],96:[function(require1,module,exports){var div="undefined"!=typeof document&&document.createElement("div");function isElement(object){if(!object||1!==object.nodeType||!div)return!1;try{object.appendChild(div),object.removeChild(div)}catch(e){return!1}return!0}module.exports=isElement},{}],97:[function(require1,module,exports){function isIterable(val){return"object"==typeof val&&"function"==typeof val[Symbol.iterator]}module.exports=isIterable},{}],98:[function(require1,module,exports){function isMap(value){return"undefined"!=typeof Map&&value instanceof Map}module.exports=isMap},{}],99:[function(require1,module,exports){function isNaN1(value){return"number"==typeof value&&value!=value}module.exports=isNaN1},{}],100:[function(require1,module,exports){function isNegZero(value){return 0===value&&1/value==-1/0}module.exports=isNegZero},{}],101:[function(require1,module,exports){function isObject(value){return"object"==typeof value&&null!==value&&!(value instanceof Boolean)&&!(value instanceof Date)&&!(value instanceof Error)&&!(value instanceof Number)&&!(value instanceof RegExp)&&!(value instanceof String)}module.exports=isObject},{}],102:[function(require1,module,exports){function isSet(val){return"undefined"!=typeof Set&&val instanceof Set}module.exports=isSet},{}],103:[function(require1,module,exports){var forEach=require1("@sinonjs/commons").prototypes.set.forEach;function isSubset(s1,s2,compare){var allContained=!0;return forEach(s1,function(v1){var includes=!1;forEach(s2,function(v2){compare(v2,v1)&&(includes=!0)}),allContained=allContained&&includes}),allContained}module.exports=isSubset},{"@sinonjs/commons":47}],104:[function(require1,module,exports){var slice=require1("@sinonjs/commons").prototypes.string.slice,typeOf=require1("@sinonjs/commons").typeOf,valueToString=require1("@sinonjs/commons").valueToString;function iterableToString(obj){return"map"===typeOf(obj)?mapToString(obj):genericIterableToString(obj)}function mapToString(map){var representation="";return map.forEach(function(value,key){representation+=`[${stringify(key)},${stringify(value)}],`}),representation=slice(representation,0,-1)}function genericIterableToString(iterable){var representation="";return iterable.forEach(function(value){representation+=`${stringify(value)},`}),representation=slice(representation,0,-1)}function stringify(item){return"string"==typeof item?`'${item}'`:valueToString(item)}module.exports=iterableToString},{"@sinonjs/commons":47}],105:[function(require1,module,exports){var valueToString=require1("@sinonjs/commons").valueToString,indexOf=require1("@sinonjs/commons").prototypes.string.indexOf,forEach=require1("@sinonjs/commons").prototypes.array.forEach,type=require1("type-detect"),engineCanCompareMaps="function"==typeof Array.from,deepEqual=require1("./deep-equal").use(match),isArrayType=require1("./is-array-type"),isSubset=require1("./is-subset"),createMatcher=require1("./create-matcher");function arrayContains(array,subset,compare){var i,l,j,k;if(0===subset.length)return!0;for(i=0,l=array.length;i<l;++i)if(compare(array[i],subset[0])){for(j=0,k=subset.length;j<k;++j)if(i+j>=l||!compare(array[i+j],subset[j]))return!1;return!0}return!1}function match(object,matcherOrValue){if(matcherOrValue&&"function"==typeof matcherOrValue.test)return matcherOrValue.test(object);switch(type(matcherOrValue)){case"bigint":case"boolean":case"number":case"symbol":return matcherOrValue===object;case"function":return!0===matcherOrValue(object);case"string":return("string"==typeof object||!!object)&&indexOf(valueToString(object).toLowerCase(),matcherOrValue.toLowerCase())>=0;case"null":return null===object;case"undefined":return void 0===object;case"Date":if("Date"===type(object))return object.getTime()===matcherOrValue.getTime();break;case"Array":case"Int8Array":case"Uint8Array":case"Uint8ClampedArray":case"Int16Array":case"Uint16Array":case"Int32Array":case"Uint32Array":case"Float32Array":case"Float64Array":return isArrayType(matcherOrValue)&&arrayContains(object,matcherOrValue,match);case"Map":if(!engineCanCompareMaps)throw Error("The JavaScript engine does not support Array.from and cannot reliably do value comparison of Map instances");return"Map"===type(object)&&arrayContains(Array.from(object),Array.from(matcherOrValue),match)}switch(type(object)){case"null":return!1;case"Set":return isSubset(matcherOrValue,object,match)}if(matcherOrValue&&"object"==typeof matcherOrValue){if(matcherOrValue===object)return!0;if("object"!=typeof object)return!1;for(prop in matcherOrValue){var prop,value=object[prop];if(void 0===value&&"function"==typeof object.getAttribute&&(value=object.getAttribute(prop)),null===matcherOrValue[prop]||void 0===matcherOrValue[prop]){if(value!==matcherOrValue[prop])return!1}else if(void 0===value||!deepEqual(value,matcherOrValue[prop]))return!1}return!0}throw Error("Matcher was an unknown or unsupported type")}forEach(Object.keys(createMatcher),function(key){match[key]=createMatcher[key]}),module.exports=match},{"./create-matcher":81,"./deep-equal":90,"./is-array-type":94,"./is-subset":103,"@sinonjs/commons":47,"type-detect":151}],106:[function(require1,module,exports){var identical=require1("./identical"),isArguments=require1("./is-arguments"),isElement=require1("./is-element"),isNegZero=require1("./is-neg-zero"),isSet=require1("./is-set"),isMap=require1("./is-map"),match=require1("./match"),deepEqualCyclic=require1("./deep-equal").use(match),createMatcher=require1("./create-matcher");module.exports={createMatcher:createMatcher,deepEqual:deepEqualCyclic,identical:identical,isArguments:isArguments,isElement:isElement,isMap:isMap,isNegZero:isNegZero,isSet:isSet,match:match}},{"./create-matcher":81,"./deep-equal":90,"./identical":92,"./is-arguments":93,"./is-element":96,"./is-map":98,"./is-neg-zero":100,"./is-set":102,"./match":105}],107:[function(require1,module,exports){var encoding=require1("./lib/encoding.js");module.exports={TextEncoder:encoding.TextEncoder,TextDecoder:encoding.TextDecoder}},{"./lib/encoding.js":109}],108:[function(require1,module,exports){var global;global=this||{},void 0!==module&&module.exports&&(module.exports=global),global["encoding-indexes"]={big5:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,17392,19506,17923,17830,17784,160359,19831,17843,162993,19682,163013,15253,18230,18244,19527,19520,148159,144919,160594,159371,159954,19543,172881,18255,17882,19589,162924,19719,19108,18081,158499,29221,154196,137827,146950,147297,26189,22267,null,32149,22813,166841,15860,38708,162799,23515,138590,23204,13861,171696,23249,23479,23804,26478,34195,170309,29793,29853,14453,138579,145054,155681,16108,153822,15093,31484,40855,147809,166157,143850,133770,143966,17162,33924,40854,37935,18736,34323,22678,38730,37400,31184,31282,26208,27177,34973,29772,31685,26498,31276,21071,36934,13542,29636,155065,29894,40903,22451,18735,21580,16689,145038,22552,31346,162661,35727,18094,159368,16769,155033,31662,140476,40904,140481,140489,140492,40905,34052,144827,16564,40906,17633,175615,25281,28782,40907,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,12736,12737,12738,12739,12740,131340,12741,131281,131277,12742,12743,131275,139240,12744,131274,12745,12746,12747,12748,131342,12749,12750,256,193,461,192,274,201,282,200,332,211,465,210,null,7870,null,7872,202,257,225,462,224,593,275,233,283,232,299,237,464,236,333,243,466,242,363,250,468,249,470,472,474,476,252,null,7871,null,7873,234,609,9178,9179,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,172969,135493,null,25866,null,null,20029,28381,40270,37343,null,null,161589,25745,20250,20264,20392,20822,20852,20892,20964,21153,21160,21307,21326,21457,21464,22242,22768,22788,22791,22834,22836,23398,23454,23455,23706,24198,24635,25993,26622,26628,26725,27982,28860,30005,32420,32428,32442,32455,32463,32479,32518,32567,33402,33487,33647,35270,35774,35810,36710,36711,36718,29713,31996,32205,26950,31433,21031,null,null,null,null,37260,30904,37214,32956,null,36107,33014,133607,null,null,32927,40647,19661,40393,40460,19518,171510,159758,40458,172339,13761,null,28314,33342,29977,null,18705,39532,39567,40857,31111,164972,138698,132560,142054,20004,20097,20096,20103,20159,20203,20279,13388,20413,15944,20483,20616,13437,13459,13477,20870,22789,20955,20988,20997,20105,21113,21136,21287,13767,21417,13649,21424,13651,21442,21539,13677,13682,13953,21651,21667,21684,21689,21712,21743,21784,21795,21800,13720,21823,13733,13759,21975,13765,163204,21797,null,134210,134421,151851,21904,142534,14828,131905,36422,150968,169189,16467,164030,30586,142392,14900,18389,164189,158194,151018,25821,134524,135092,134357,135412,25741,36478,134806,134155,135012,142505,164438,148691,null,134470,170573,164073,18420,151207,142530,39602,14951,169460,16365,13574,152263,169940,161992,142660,40302,38933,null,17369,155813,25780,21731,142668,142282,135287,14843,135279,157402,157462,162208,25834,151634,134211,36456,139681,166732,132913,null,18443,131497,16378,22643,142733,null,148936,132348,155799,134988,134550,21881,16571,17338,null,19124,141926,135325,33194,39157,134556,25465,14846,141173,36288,22177,25724,15939,null,173569,134665,142031,142537,null,135368,145858,14738,14854,164507,13688,155209,139463,22098,134961,142514,169760,13500,27709,151099,null,null,161140,142987,139784,173659,167117,134778,134196,157724,32659,135375,141315,141625,13819,152035,134796,135053,134826,16275,134960,134471,135503,134732,null,134827,134057,134472,135360,135485,16377,140950,25650,135085,144372,161337,142286,134526,134527,142417,142421,14872,134808,135367,134958,173618,158544,167122,167321,167114,38314,21708,33476,21945,null,171715,39974,39606,161630,142830,28992,33133,33004,23580,157042,33076,14231,21343,164029,37302,134906,134671,134775,134907,13789,151019,13833,134358,22191,141237,135369,134672,134776,135288,135496,164359,136277,134777,151120,142756,23124,135197,135198,135413,135414,22428,134673,161428,164557,135093,134779,151934,14083,135094,135552,152280,172733,149978,137274,147831,164476,22681,21096,13850,153405,31666,23400,18432,19244,40743,18919,39967,39821,154484,143677,22011,13810,22153,20008,22786,138177,194680,38737,131206,20059,20155,13630,23587,24401,24516,14586,25164,25909,27514,27701,27706,28780,29227,20012,29357,149737,32594,31035,31993,32595,156266,13505,null,156491,32770,32896,157202,158033,21341,34916,35265,161970,35744,36125,38021,38264,38271,38376,167439,38886,39029,39118,39134,39267,17e4,40060,40479,40644,27503,63751,20023,131207,38429,25143,38050,null,20539,28158,171123,40870,15817,34959,147790,28791,23797,19232,152013,13657,154928,24866,166450,36775,37366,29073,26393,29626,144001,172295,15499,137600,19216,30948,29698,20910,165647,16393,27235,172730,16931,34319,133743,31274,170311,166634,38741,28749,21284,139390,37876,30425,166371,40871,30685,20131,20464,20668,20015,20247,40872,21556,32139,22674,22736,138678,24210,24217,24514,141074,25995,144377,26905,27203,146531,27903,null,29184,148741,29580,16091,150035,23317,29881,35715,154788,153237,31379,31724,31939,32364,33528,34199,40873,34960,40874,36537,40875,36815,34143,39392,37409,40876,167353,136255,16497,17058,23066,null,null,null,39016,26475,17014,22333,null,34262,149883,33471,160013,19585,159092,23931,158485,159678,40877,40878,23446,40879,26343,32347,28247,31178,15752,17603,143958,141206,17306,17718,null,23765,146202,35577,23672,15634,144721,23928,40882,29015,17752,147692,138787,19575,14712,13386,131492,158785,35532,20404,131641,22975,33132,38998,170234,24379,134047,null,139713,166253,16642,18107,168057,16135,40883,172469,16632,14294,18167,158790,16764,165554,160767,17773,14548,152730,17761,17691,19849,19579,19830,17898,16328,150287,13921,17630,17597,16877,23870,23880,23894,15868,14351,23972,23993,14368,14392,24130,24253,24357,24451,14600,14612,14655,14669,24791,24893,23781,14729,25015,25017,25039,14776,25132,25232,25317,25368,14840,22193,14851,25570,25595,25607,25690,14923,25792,23829,22049,40863,14999,25990,15037,26111,26195,15090,26258,15138,26390,15170,26532,26624,15192,26698,26756,15218,15217,15227,26889,26947,29276,26980,27039,27013,15292,27094,15325,27237,27252,27249,27266,15340,27289,15346,27307,27317,27348,27382,27521,27585,27626,27765,27818,15563,27906,27910,27942,28033,15599,28068,28081,28181,28184,28201,28294,166336,28347,28386,28378,40831,28392,28393,28452,28468,15686,147265,28545,28606,15722,15733,29111,23705,15754,28716,15761,28752,28756,28783,28799,28809,131877,17345,13809,134872,147159,22462,159443,28990,153568,13902,27042,166889,23412,31305,153825,169177,31333,31357,154028,31419,31408,31426,31427,29137,156813,16842,31450,31453,31466,16879,21682,154625,31499,31573,31529,152334,154878,31650,31599,33692,154548,158847,31696,33825,31634,31672,154912,15789,154725,33938,31738,31750,31797,154817,31812,31875,149634,31910,26237,148856,31945,31943,31974,31860,31987,31989,31950,32359,17693,159300,32093,159446,29837,32137,32171,28981,32179,32210,147543,155689,32228,15635,32245,137209,32229,164717,32285,155937,155994,32366,32402,17195,37996,32295,32576,32577,32583,31030,156368,39393,32663,156497,32675,136801,131176,17756,145254,17667,164666,32762,156809,32773,32776,32797,32808,32815,172167,158915,32827,32828,32865,141076,18825,157222,146915,157416,26405,32935,166472,33031,33050,22704,141046,27775,156824,151480,25831,136330,33304,137310,27219,150117,150165,17530,33321,133901,158290,146814,20473,136445,34018,33634,158474,149927,144688,137075,146936,33450,26907,194964,16859,34123,33488,33562,134678,137140,14017,143741,144730,33403,33506,33560,147083,159139,158469,158615,144846,15807,33565,21996,33669,17675,159141,33708,33729,33747,13438,159444,27223,34138,13462,159298,143087,33880,154596,33905,15827,17636,27303,33866,146613,31064,33960,158614,159351,159299,34014,33807,33681,17568,33939,34020,154769,16960,154816,17731,34100,23282,159385,17703,34163,17686,26559,34326,165413,165435,34241,159880,34306,136578,159949,194994,17770,34344,13896,137378,21495,160666,34430,34673,172280,34798,142375,34737,34778,34831,22113,34412,26710,17935,34885,34886,161248,146873,161252,34910,34972,18011,34996,34997,25537,35013,30583,161551,35207,35210,35238,35241,35239,35260,166437,35303,162084,162493,35484,30611,37374,35472,162393,31465,162618,147343,18195,162616,29052,35596,35615,152624,152933,35647,35660,35661,35497,150138,35728,35739,35503,136927,17941,34895,35995,163156,163215,195028,14117,163155,36054,163224,163261,36114,36099,137488,36059,28764,36113,150729,16080,36215,36265,163842,135188,149898,15228,164284,160012,31463,36525,36534,36547,37588,36633,36653,164709,164882,36773,37635,172703,133712,36787,18730,166366,165181,146875,24312,143970,36857,172052,165564,165121,140069,14720,159447,36919,165180,162494,36961,165228,165387,37032,165651,37060,165606,37038,37117,37223,15088,37289,37316,31916,166195,138889,37390,27807,37441,37474,153017,37561,166598,146587,166668,153051,134449,37676,37739,166625,166891,28815,23235,166626,166629,18789,37444,166892,166969,166911,37747,37979,36540,38277,38310,37926,38304,28662,17081,140922,165592,135804,146990,18911,27676,38523,38550,16748,38563,159445,25050,38582,30965,166624,38589,21452,18849,158904,131700,156688,168111,168165,150225,137493,144138,38705,34370,38710,18959,17725,17797,150249,28789,23361,38683,38748,168405,38743,23370,168427,38751,37925,20688,143543,143548,38793,38815,38833,38846,38848,38866,38880,152684,38894,29724,169011,38911,38901,168989,162170,19153,38964,38963,38987,39014,15118,160117,15697,132656,147804,153350,39114,39095,39112,39111,19199,159015,136915,21936,39137,39142,39148,37752,39225,150057,19314,170071,170245,39413,39436,39483,39440,39512,153381,14020,168113,170965,39648,39650,170757,39668,19470,39700,39725,165376,20532,39732,158120,14531,143485,39760,39744,171326,23109,137315,39822,148043,39938,39935,39948,171624,40404,171959,172434,172459,172257,172323,172511,40318,40323,172340,40462,26760,40388,139611,172435,172576,137531,172595,40249,172217,172724,40592,40597,40606,40610,19764,40618,40623,148324,40641,15200,14821,15645,20274,14270,166955,40706,40712,19350,37924,159138,40727,40726,40761,22175,22154,40773,39352,168075,38898,33919,40802,40809,31452,40846,29206,19390,149877,149947,29047,150008,148296,150097,29598,166874,137466,31135,166270,167478,37737,37875,166468,37612,37761,37835,166252,148665,29207,16107,30578,31299,28880,148595,148472,29054,137199,28835,137406,144793,16071,137349,152623,137208,14114,136955,137273,14049,137076,137425,155467,14115,136896,22363,150053,136190,135848,136134,136374,34051,145062,34051,33877,149908,160101,146993,152924,147195,159826,17652,145134,170397,159526,26617,14131,15381,15847,22636,137506,26640,16471,145215,147681,147595,147727,158753,21707,22174,157361,22162,135135,134056,134669,37830,166675,37788,20216,20779,14361,148534,20156,132197,131967,20299,20362,153169,23144,131499,132043,14745,131850,132116,13365,20265,131776,167603,131701,35546,131596,20120,20685,20749,20386,20227,150030,147082,20290,20526,20588,20609,20428,20453,20568,20732,20825,20827,20829,20830,28278,144789,147001,147135,28018,137348,147081,20904,20931,132576,17629,132259,132242,132241,36218,166556,132878,21081,21156,133235,21217,37742,18042,29068,148364,134176,149932,135396,27089,134685,29817,16094,29849,29716,29782,29592,19342,150204,147597,21456,13700,29199,147657,21940,131909,21709,134086,22301,37469,38644,37734,22493,22413,22399,13886,22731,23193,166470,136954,137071,136976,23084,22968,37519,23166,23247,23058,153926,137715,137313,148117,14069,27909,29763,23073,155267,23169,166871,132115,37856,29836,135939,28933,18802,37896,166395,37821,14240,23582,23710,24158,24136,137622,137596,146158,24269,23375,137475,137476,14081,137376,14045,136958,14035,33066,166471,138682,144498,166312,24332,24334,137511,137131,23147,137019,23364,34324,161277,34912,24702,141408,140843,24539,16056,140719,140734,168072,159603,25024,131134,131142,140827,24985,24984,24693,142491,142599,149204,168269,25713,149093,142186,14889,142114,144464,170218,142968,25399,173147,25782,25393,25553,149987,142695,25252,142497,25659,25963,26994,15348,143502,144045,149897,144043,21773,144096,137433,169023,26318,144009,143795,15072,16784,152964,166690,152975,136956,152923,152613,30958,143619,137258,143924,13412,143887,143746,148169,26254,159012,26219,19347,26160,161904,138731,26211,144082,144097,26142,153714,14545,145466,145340,15257,145314,144382,29904,15254,26511,149034,26806,26654,15300,27326,14435,145365,148615,27187,27218,27337,27397,137490,25873,26776,27212,15319,27258,27479,147392,146586,37792,37618,166890,166603,37513,163870,166364,37991,28069,28427,149996,28007,147327,15759,28164,147516,23101,28170,22599,27940,30786,28987,148250,148086,28913,29264,29319,29332,149391,149285,20857,150180,132587,29818,147192,144991,150090,149783,155617,16134,16049,150239,166947,147253,24743,16115,29900,29756,37767,29751,17567,159210,17745,30083,16227,150745,150790,16216,30037,30323,173510,15129,29800,166604,149931,149902,15099,15821,150094,16127,149957,149747,37370,22322,37698,166627,137316,20703,152097,152039,30584,143922,30478,30479,30587,149143,145281,14942,149744,29752,29851,16063,150202,150215,16584,150166,156078,37639,152961,30750,30861,30856,30930,29648,31065,161601,153315,16654,31131,33942,31141,27181,147194,31290,31220,16750,136934,16690,37429,31217,134476,149900,131737,146874,137070,13719,21867,13680,13994,131540,134157,31458,23129,141045,154287,154268,23053,131675,30960,23082,154566,31486,16889,31837,31853,16913,154547,155324,155302,31949,150009,137136,31886,31868,31918,27314,32220,32263,32211,32590,156257,155996,162632,32151,155266,17002,158581,133398,26582,131150,144847,22468,156690,156664,149858,32733,31527,133164,154345,154947,31500,155150,39398,34373,39523,27164,144447,14818,150007,157101,39455,157088,33920,160039,158929,17642,33079,17410,32966,33033,33090,157620,39107,158274,33378,33381,158289,33875,159143,34320,160283,23174,16767,137280,23339,137377,23268,137432,34464,195004,146831,34861,160802,23042,34926,20293,34951,35007,35046,35173,35149,153219,35156,161669,161668,166901,166873,166812,166393,16045,33955,18165,18127,14322,35389,35356,169032,24397,37419,148100,26068,28969,28868,137285,40301,35999,36073,163292,22938,30659,23024,17262,14036,36394,36519,150537,36656,36682,17140,27736,28603,140065,18587,28537,28299,137178,39913,14005,149807,37051,37015,21873,18694,37307,37892,166475,16482,166652,37927,166941,166971,34021,35371,38297,38311,38295,38294,167220,29765,16066,149759,150082,148458,16103,143909,38543,167655,167526,167525,16076,149997,150136,147438,29714,29803,16124,38721,168112,26695,18973,168083,153567,38749,37736,166281,166950,166703,156606,37562,23313,35689,18748,29689,147995,38811,38769,39224,134950,24001,166853,150194,38943,169178,37622,169431,37349,17600,166736,150119,166756,39132,166469,16128,37418,18725,33812,39227,39245,162566,15869,39323,19311,39338,39516,166757,153800,27279,39457,23294,39471,170225,19344,170312,39356,19389,19351,37757,22642,135938,22562,149944,136424,30788,141087,146872,26821,15741,37976,14631,24912,141185,141675,24839,40015,40019,40059,39989,39952,39807,39887,171565,39839,172533,172286,40225,19630,147716,40472,19632,40204,172468,172269,172275,170287,40357,33981,159250,159711,158594,34300,17715,159140,159364,159216,33824,34286,159232,145367,155748,31202,144796,144960,18733,149982,15714,37851,37566,37704,131775,30905,37495,37965,20452,13376,36964,152925,30781,30804,30902,30795,137047,143817,149825,13978,20338,28634,28633,28702,28702,21524,147893,22459,22771,22410,40214,22487,28980,13487,147884,29163,158784,151447,23336,137141,166473,24844,23246,23051,17084,148616,14124,19323,166396,37819,37816,137430,134941,33906,158912,136211,148218,142374,148417,22932,146871,157505,32168,155995,155812,149945,149899,166394,37605,29666,16105,29876,166755,137375,16097,150195,27352,29683,29691,16086,150078,150164,137177,150118,132007,136228,149989,29768,149782,28837,149878,37508,29670,37727,132350,37681,166606,166422,37766,166887,153045,18741,166530,29035,149827,134399,22180,132634,134123,134328,21762,31172,137210,32254,136898,150096,137298,17710,37889,14090,166592,149933,22960,137407,137347,160900,23201,14050,146779,14e3,37471,23161,166529,137314,37748,15565,133812,19094,14730,20724,15721,15692,136092,29045,17147,164376,28175,168164,17643,27991,163407,28775,27823,15574,147437,146989,28162,28428,15727,132085,30033,14012,13512,18048,16090,18545,22980,37486,18750,36673,166940,158656,22546,22472,14038,136274,28926,148322,150129,143331,135856,140221,26809,26983,136088,144613,162804,145119,166531,145366,144378,150687,27162,145069,158903,33854,17631,17614,159014,159057,158850,159710,28439,160009,33597,137018,33773,158848,159827,137179,22921,23170,137139,23137,23153,137477,147964,14125,23023,137020,14023,29070,37776,26266,148133,23150,23083,148115,27179,147193,161590,148571,148170,28957,148057,166369,20400,159016,23746,148686,163405,148413,27148,148054,135940,28838,28979,148457,15781,27871,194597,150095,32357,23019,23855,15859,24412,150109,137183,32164,33830,21637,146170,144128,131604,22398,133333,132633,16357,139166,172726,28675,168283,23920,29583,31955,166489,168992,20424,32743,29389,29456,162548,29496,29497,153334,29505,29512,16041,162584,36972,29173,149746,29665,33270,16074,30476,16081,27810,22269,29721,29726,29727,16098,16112,16116,16122,29907,16142,16211,30018,30061,30066,30093,16252,30152,30172,16320,30285,16343,30324,16348,30330,151388,29064,22051,35200,22633,16413,30531,16441,26465,16453,13787,30616,16490,16495,23646,30654,30667,22770,30744,28857,30748,16552,30777,30791,30801,30822,33864,152885,31027,26627,31026,16643,16649,31121,31129,36795,31238,36796,16743,31377,16818,31420,33401,16836,31439,31451,16847,20001,31586,31596,31611,31762,31771,16992,17018,31867,31900,17036,31928,17044,31981,36755,28864,134351,32207,32212,32208,32253,32686,32692,29343,17303,32800,32805,31545,32814,32817,32852,15820,22452,28832,32951,33001,17389,33036,29482,33038,33042,30048,33044,17409,15161,33110,33113,33114,17427,22586,33148,33156,17445,33171,17453,33189,22511,33217,33252,33364,17551,33446,33398,33482,33496,33535,17584,33623,38505,27018,33797,28917,33892,24803,33928,17668,33982,34017,34040,34064,34104,34130,17723,34159,34160,34272,17783,34418,34450,34482,34543,38469,34699,17926,17943,34990,35071,35108,35143,35217,162151,35369,35384,35476,35508,35921,36052,36082,36124,18328,22623,36291,18413,20206,36410,21976,22356,36465,22005,36528,18487,36558,36578,36580,36589,36594,36791,36801,36810,36812,36915,39364,18605,39136,37395,18718,37416,37464,37483,37553,37550,37567,37603,37611,37619,37620,37629,37699,37764,37805,18757,18769,40639,37911,21249,37917,37933,37950,18794,37972,38009,38189,38306,18855,38388,38451,18917,26528,18980,38720,18997,38834,38850,22100,19172,24808,39097,19225,39153,22596,39182,39193,20916,39196,39223,39234,39261,39266,19312,39365,19357,39484,39695,31363,39785,39809,39901,39921,39924,19565,39968,14191,138178,40265,39994,40702,22096,40339,40381,40384,40444,38134,36790,40571,40620,40625,40637,40646,38108,40674,40689,40696,31432,40772,131220,131767,132e3,26906,38083,22956,132311,22592,38081,14265,132565,132629,132726,136890,22359,29043,133826,133837,134079,21610,194619,134091,21662,134139,134203,134227,134245,134268,24807,134285,22138,134325,134365,134381,134511,134578,134600,26965,39983,34725,134660,134670,134871,135056,134957,134771,23584,135100,24075,135260,135247,135286,26398,135291,135304,135318,13895,135359,135379,135471,135483,21348,33965,135907,136053,135990,35713,136567,136729,137155,137159,20088,28859,137261,137578,137773,137797,138282,138352,138412,138952,25283,138965,139029,29080,26709,139333,27113,14024,139900,140247,140282,141098,141425,141647,33533,141671,141715,142037,35237,142056,36768,142094,38840,142143,38983,39613,142412,null,142472,142519,154600,142600,142610,142775,142741,142914,143220,143308,143411,143462,144159,144350,24497,26184,26303,162425,144743,144883,29185,149946,30679,144922,145174,32391,131910,22709,26382,26904,146087,161367,155618,146961,147129,161278,139418,18640,19128,147737,166554,148206,148237,147515,148276,148374,150085,132554,20946,132625,22943,138920,15294,146687,148484,148694,22408,149108,14747,149295,165352,170441,14178,139715,35678,166734,39382,149522,149755,150037,29193,150208,134264,22885,151205,151430,132985,36570,151596,21135,22335,29041,152217,152601,147274,150183,21948,152646,152686,158546,37332,13427,152895,161330,152926,18200,152930,152934,153543,149823,153693,20582,13563,144332,24798,153859,18300,166216,154286,154505,154630,138640,22433,29009,28598,155906,162834,36950,156082,151450,35682,156674,156746,23899,158711,36662,156804,137500,35562,150006,156808,147439,156946,19392,157119,157365,141083,37989,153569,24981,23079,194765,20411,22201,148769,157436,20074,149812,38486,28047,158909,13848,35191,157593,157806,156689,157790,29151,157895,31554,168128,133649,157990,37124,158009,31301,40432,158202,39462,158253,13919,156777,131105,31107,158260,158555,23852,144665,33743,158621,18128,158884,30011,34917,159150,22710,14108,140685,159819,160205,15444,160384,160389,37505,139642,160395,37680,160486,149968,27705,38047,160848,134904,34855,35061,141606,164979,137137,28344,150058,137248,14756,14009,23568,31203,17727,26294,171181,170148,35139,161740,161880,22230,16607,136714,14753,145199,164072,136133,29101,33638,162269,168360,23143,19639,159919,166315,162301,162314,162571,163174,147834,31555,31102,163849,28597,172767,27139,164632,21410,159239,37823,26678,38749,164207,163875,158133,136173,143919,163912,23941,166960,163971,22293,38947,166217,23979,149896,26046,27093,21458,150181,147329,15377,26422,163984,164084,164142,139169,164175,164233,164271,164378,164614,164655,164746,13770,164968,165546,18682,25574,166230,30728,37461,166328,17394,166375,17375,166376,166726,166868,23032,166921,36619,167877,168172,31569,168208,168252,15863,168286,150218,36816,29327,22155,169191,169449,169392,169400,169778,170193,170313,170346,170435,170536,170766,171354,171419,32415,171768,171811,19620,38215,172691,29090,172799,19857,36882,173515,19868,134300,36798,21953,36794,140464,36793,150163,17673,32383,28502,27313,20202,13540,166700,161949,14138,36480,137205,163876,166764,166809,162366,157359,15851,161365,146615,153141,153942,20122,155265,156248,22207,134765,36366,23405,147080,150686,25566,25296,137206,137339,25904,22061,154698,21530,152337,15814,171416,19581,22050,22046,32585,155352,22901,146752,34672,19996,135146,134473,145082,33047,40286,36120,30267,40005,30286,30649,37701,21554,33096,33527,22053,33074,33816,32957,21994,31074,22083,21526,134813,13774,22021,22001,26353,164578,13869,30004,22e3,21946,21655,21874,134209,134294,24272,151880,134774,142434,134818,40619,32090,21982,135285,25245,38765,21652,36045,29174,37238,25596,25529,25598,21865,142147,40050,143027,20890,13535,134567,20903,21581,21790,21779,30310,36397,157834,30129,32950,34820,34694,35015,33206,33820,135361,17644,29444,149254,23440,33547,157843,22139,141044,163119,147875,163187,159440,160438,37232,135641,37384,146684,173737,134828,134905,29286,138402,18254,151490,163833,135147,16634,40029,25887,142752,18675,149472,171388,135148,134666,24674,161187,135149,null,155720,135559,29091,32398,40272,19994,19972,13687,23309,27826,21351,13996,14812,21373,13989,149016,22682,150382,33325,21579,22442,154261,133497,null,14930,140389,29556,171692,19721,39917,146686,171824,19547,151465,169374,171998,33884,146870,160434,157619,145184,25390,32037,147191,146988,14890,36872,21196,15988,13946,17897,132238,30272,23280,134838,30842,163630,22695,16575,22140,39819,23924,30292,173108,40581,19681,30201,14331,24857,143578,148466,null,22109,135849,22439,149859,171526,21044,159918,13741,27722,40316,31830,39737,22494,137068,23635,25811,169168,156469,160100,34477,134440,159010,150242,134513,null,20990,139023,23950,38659,138705,40577,36940,31519,39682,23761,31651,25192,25397,39679,31695,39722,31870,39726,31810,31878,39957,31740,39689,40727,39963,149822,40794,21875,23491,20477,40600,20466,21088,15878,21201,22375,20566,22967,24082,38856,40363,36700,21609,38836,39232,38842,21292,24880,26924,21466,39946,40194,19515,38465,27008,20646,30022,137069,39386,21107,null,37209,38529,37212,null,37201,167575,25471,159011,27338,22033,37262,30074,25221,132092,29519,31856,154657,146685,null,149785,30422,39837,20010,134356,33726,34882,null,23626,27072,20717,22394,21023,24053,20174,27697,131570,20281,21660,21722,21146,36226,13822,24332,13811,null,27474,37244,40869,39831,38958,39092,39610,40616,40580,29050,31508,null,27642,34840,32632,null,22048,173642,36471,40787,null,36308,36431,40476,36353,25218,164733,36392,36469,31443,150135,31294,30936,27882,35431,30215,166490,40742,27854,34774,30147,172722,30803,194624,36108,29410,29553,35629,29442,29937,36075,150203,34351,24506,34976,17591,null,137275,159237,null,35454,140571,null,24829,30311,39639,40260,37742,39823,34805,null,34831,36087,29484,38689,39856,13782,29362,19463,31825,39242,155993,24921,19460,40598,24957,null,22367,24943,25254,25145,25294,14940,25058,21418,144373,25444,26626,13778,23895,166850,36826,167481,null,20697,138566,30982,21298,38456,134971,16485,null,30718,null,31938,155418,31962,31277,32870,32867,32077,29957,29938,35220,33306,26380,32866,160902,32859,29936,33027,30500,35209,157644,30035,159441,34729,34766,33224,34700,35401,36013,35651,30507,29944,34010,13877,27058,36262,null,35241,29800,28089,34753,147473,29927,15835,29046,24740,24988,15569,29026,24695,null,32625,166701,29264,24809,19326,21024,15384,146631,155351,161366,152881,137540,135934,170243,159196,159917,23745,156077,166415,145015,131310,157766,151310,17762,23327,156492,40784,40614,156267,12288,65292,12289,12290,65294,8231,65307,65306,65311,65281,65072,8230,8229,65104,65105,65106,183,65108,65109,65110,65111,65372,8211,65073,8212,65075,9588,65076,65103,65288,65289,65077,65078,65371,65373,65079,65080,12308,12309,65081,65082,12304,12305,65083,65084,12298,12299,65085,65086,12296,12297,65087,65088,12300,12301,65089,65090,12302,12303,65091,65092,65113,65114,65115,65116,65117,65118,8216,8217,8220,8221,12317,12318,8245,8242,65283,65286,65290,8251,167,12291,9675,9679,9651,9650,9678,9734,9733,9671,9670,9633,9632,9661,9660,12963,8453,175,65507,65343,717,65097,65098,65101,65102,65099,65100,65119,65120,65121,65291,65293,215,247,177,8730,65308,65310,65309,8806,8807,8800,8734,8786,8801,65122,65123,65124,65125,65126,65374,8745,8746,8869,8736,8735,8895,13266,13265,8747,8750,8757,8756,9792,9794,8853,8857,8593,8595,8592,8594,8598,8599,8601,8600,8741,8739,65295,65340,8725,65128,65284,65509,12306,65504,65505,65285,65312,8451,8457,65129,65130,65131,13269,13212,13213,13214,13262,13217,13198,13199,13252,176,20825,20827,20830,20829,20833,20835,21991,29929,31950,9601,9602,9603,9604,9605,9606,9607,9608,9615,9614,9613,9612,9611,9610,9609,9532,9524,9516,9508,9500,9620,9472,9474,9621,9484,9488,9492,9496,9581,9582,9584,9583,9552,9566,9578,9569,9698,9699,9701,9700,9585,9586,9587,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,12321,12322,12323,12324,12325,12326,12327,12328,12329,21313,21316,21317,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,12549,12550,12551,12552,12553,12554,12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,12579,12580,12581,12582,12583,12584,12585,729,713,714,711,715,9216,9217,9218,9219,9220,9221,9222,9223,9224,9225,9226,9227,9228,9229,9230,9231,9232,9233,9234,9235,9236,9237,9238,9239,9240,9241,9242,9243,9244,9245,9246,9247,9249,8364,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,19968,20057,19969,19971,20035,20061,20102,20108,20154,20799,20837,20843,20960,20992,20993,21147,21269,21313,21340,21448,19977,19979,19976,19978,20011,20024,20961,20037,20040,20063,20062,20110,20129,20800,20995,21242,21315,21449,21475,22303,22763,22805,22823,22899,23376,23377,23379,23544,23567,23586,23608,23665,24029,24037,24049,24050,24051,24062,24178,24318,24331,24339,25165,19985,19984,19981,20013,20016,20025,20043,23609,20104,20113,20117,20114,20116,20130,20161,20160,20163,20166,20167,20173,20170,20171,20164,20803,20801,20839,20845,20846,20844,20887,20982,20998,20999,21e3,21243,21246,21247,21270,21305,21320,21319,21317,21342,21380,21451,21450,21453,22764,22825,22827,22826,22829,23380,23569,23588,23610,23663,24052,24187,24319,24340,24341,24515,25096,25142,25163,25166,25903,25991,26007,26020,26041,26085,26352,26376,26408,27424,27490,27513,27595,27604,27611,27663,27700,28779,29226,29238,29243,29255,29273,29275,29356,29579,19993,19990,19989,19988,19992,20027,20045,20047,20046,20197,20184,20180,20181,20182,20183,20195,20196,20185,20190,20805,20804,20873,20874,20908,20985,20986,20984,21002,21152,21151,21253,21254,21271,21277,20191,21322,21321,21345,21344,21359,21358,21435,21487,21476,21491,21484,21486,21481,21480,21500,21496,21493,21483,21478,21482,21490,21489,21488,21477,21485,21499,22235,22234,22806,22830,22833,22900,22902,23381,23427,23612,24040,24039,24038,24066,24067,24179,24188,24321,24344,24343,24517,25098,25171,25172,25170,25169,26021,26086,26414,26412,26410,26411,26413,27491,27597,27665,27664,27704,27713,27712,27710,29359,29572,29577,29916,29926,29976,29983,29992,29993,3e4,30001,30002,30003,30091,30333,30382,30399,30446,30683,30690,30707,31034,31166,31348,31435,19998,19999,20050,20051,20073,20121,20132,20134,20133,20223,20233,20249,20234,20245,20237,20240,20241,20239,20210,20214,20219,20208,20211,20221,20225,20235,20809,20807,20806,20808,20840,20849,20877,20912,21015,21009,21010,21006,21014,21155,21256,21281,21280,21360,21361,21513,21519,21516,21514,21520,21505,21515,21508,21521,21517,21512,21507,21518,21510,21522,22240,22238,22237,22323,22320,22312,22317,22316,22319,22313,22809,22810,22839,22840,22916,22904,22915,22909,22905,22914,22913,23383,23384,23431,23432,23429,23433,23546,23574,23673,24030,24070,24182,24180,24335,24347,24537,24534,25102,25100,25101,25104,25187,25179,25176,25910,26089,26088,26092,26093,26354,26355,26377,26429,26420,26417,26421,27425,27492,27515,27670,27741,27735,27737,27743,27744,27728,27733,27745,27739,27725,27726,28784,29279,29277,30334,31481,31859,31992,32566,32650,32701,32769,32771,32780,32786,32819,32895,32905,32907,32908,33251,33258,33267,33276,33292,33307,33311,33390,33394,33406,34411,34880,34892,34915,35199,38433,20018,20136,20301,20303,20295,20311,20318,20276,20315,20309,20272,20304,20305,20285,20282,20280,20291,20308,20284,20294,20323,20316,20320,20271,20302,20278,20313,20317,20296,20314,20812,20811,20813,20853,20918,20919,21029,21028,21033,21034,21032,21163,21161,21162,21164,21283,21363,21365,21533,21549,21534,21566,21542,21582,21543,21574,21571,21555,21576,21570,21531,21545,21578,21561,21563,21560,21550,21557,21558,21536,21564,21568,21553,21547,21535,21548,22250,22256,22244,22251,22346,22353,22336,22349,22343,22350,22334,22352,22351,22331,22767,22846,22941,22930,22952,22942,22947,22937,22934,22925,22948,22931,22922,22949,23389,23388,23386,23387,23436,23435,23439,23596,23616,23617,23615,23614,23696,23697,23700,23692,24043,24076,24207,24199,24202,24311,24324,24351,24420,24418,24439,24441,24536,24524,24535,24525,24561,24555,24568,24554,25106,25105,25220,25239,25238,25216,25206,25225,25197,25226,25212,25214,25209,25203,25234,25199,25240,25198,25237,25235,25233,25222,25913,25915,25912,26097,26356,26463,26446,26447,26448,26449,26460,26454,26462,26441,26438,26464,26451,26455,27493,27599,27714,27742,27801,27777,27784,27785,27781,27803,27754,27770,27792,27760,27788,27752,27798,27794,27773,27779,27762,27774,27764,27782,27766,27789,27796,27800,27778,28790,28796,28797,28792,29282,29281,29280,29380,29378,29590,29996,29995,30007,30008,30338,30447,30691,31169,31168,31167,31350,31995,32597,32918,32915,32925,32920,32923,32922,32946,33391,33426,33419,33421,35211,35282,35328,35895,35910,35925,35997,36196,36208,36275,36523,36554,36763,36784,36802,36806,36805,36804,24033,37009,37026,37034,37030,37027,37193,37318,37324,38450,38446,38449,38442,38444,20006,20054,20083,20107,20123,20126,20139,20140,20335,20381,20365,20339,20351,20332,20379,20363,20358,20355,20336,20341,20360,20329,20347,20374,20350,20367,20369,20346,20820,20818,20821,20841,20855,20854,20856,20925,20989,21051,21048,21047,21050,21040,21038,21046,21057,21182,21179,21330,21332,21331,21329,21350,21367,21368,21369,21462,21460,21463,21619,21621,21654,21624,21653,21632,21627,21623,21636,21650,21638,21628,21648,21617,21622,21644,21658,21602,21608,21643,21629,21646,22266,22403,22391,22378,22377,22369,22374,22372,22396,22812,22857,22855,22856,22852,22868,22974,22971,22996,22969,22958,22993,22982,22992,22989,22987,22995,22986,22959,22963,22994,22981,23391,23396,23395,23447,23450,23448,23452,23449,23451,23578,23624,23621,23622,23735,23713,23736,23721,23723,23729,23731,24088,24090,24086,24085,24091,24081,24184,24218,24215,24220,24213,24214,24310,24358,24359,24361,24448,24449,24447,24444,24541,24544,24573,24565,24575,24591,24596,24623,24629,24598,24618,24597,24609,24615,24617,24619,24603,25110,25109,25151,25150,25152,25215,25289,25292,25284,25279,25282,25273,25298,25307,25259,25299,25300,25291,25288,25256,25277,25276,25296,25305,25287,25293,25269,25306,25265,25304,25302,25303,25286,25260,25294,25918,26023,26044,26106,26132,26131,26124,26118,26114,26126,26112,26127,26133,26122,26119,26381,26379,26477,26507,26517,26481,26524,26483,26487,26503,26525,26519,26479,26480,26495,26505,26494,26512,26485,26522,26515,26492,26474,26482,27427,27494,27495,27519,27667,27675,27875,27880,27891,27825,27852,27877,27827,27837,27838,27836,27874,27819,27861,27859,27832,27844,27833,27841,27822,27863,27845,27889,27839,27835,27873,27867,27850,27820,27887,27868,27862,27872,28821,28814,28818,28810,28825,29228,29229,29240,29256,29287,29289,29376,29390,29401,29399,29392,29609,29608,29599,29611,29605,30013,30109,30105,30106,30340,30402,30450,30452,30693,30717,31038,31040,31041,31177,31176,31354,31353,31482,31998,32596,32652,32651,32773,32954,32933,32930,32945,32929,32939,32937,32948,32938,32943,33253,33278,33293,33459,33437,33433,33453,33469,33439,33465,33457,33452,33445,33455,33464,33443,33456,33470,33463,34382,34417,21021,34920,36555,36814,36820,36817,37045,37048,37041,37046,37319,37329,38263,38272,38428,38464,38463,38459,38468,38466,38585,38632,38738,38750,20127,20141,20142,20449,20405,20399,20415,20448,20433,20431,20445,20419,20406,20440,20447,20426,20439,20398,20432,20420,20418,20442,20430,20446,20407,20823,20882,20881,20896,21070,21059,21066,21069,21068,21067,21063,21191,21193,21187,21185,21261,21335,21371,21402,21467,21676,21696,21672,21710,21705,21688,21670,21683,21703,21698,21693,21674,21697,21700,21704,21679,21675,21681,21691,21673,21671,21695,22271,22402,22411,22432,22435,22434,22478,22446,22419,22869,22865,22863,22862,22864,23004,23e3,23039,23011,23016,23043,23013,23018,23002,23014,23041,23035,23401,23459,23462,23460,23458,23461,23553,23630,23631,23629,23627,23769,23762,24055,24093,24101,24095,24189,24224,24230,24314,24328,24365,24421,24456,24453,24458,24459,24455,24460,24457,24594,24605,24608,24613,24590,24616,24653,24688,24680,24674,24646,24643,24684,24683,24682,24676,25153,25308,25366,25353,25340,25325,25345,25326,25341,25351,25329,25335,25327,25324,25342,25332,25361,25346,25919,25925,26027,26045,26082,26149,26157,26144,26151,26159,26143,26152,26161,26148,26359,26623,26579,26609,26580,26576,26604,26550,26543,26613,26601,26607,26564,26577,26548,26586,26597,26552,26575,26590,26611,26544,26585,26594,26589,26578,27498,27523,27526,27573,27602,27607,27679,27849,27915,27954,27946,27969,27941,27916,27953,27934,27927,27963,27965,27966,27958,27931,27893,27961,27943,27960,27945,27950,27957,27918,27947,28843,28858,28851,28844,28847,28845,28856,28846,28836,29232,29298,29295,29300,29417,29408,29409,29623,29642,29627,29618,29645,29632,29619,29978,29997,30031,30028,30030,30027,30123,30116,30117,30114,30115,30328,30342,30343,30344,30408,30406,30403,30405,30465,30457,30456,30473,30475,30462,30460,30471,30684,30722,30740,30732,30733,31046,31049,31048,31047,31161,31162,31185,31186,31179,31359,31361,31487,31485,31869,32002,32005,32e3,32009,32007,32004,32006,32568,32654,32703,32772,32784,32781,32785,32822,32982,32997,32986,32963,32964,32972,32993,32987,32974,32990,32996,32989,33268,33314,33511,33539,33541,33507,33499,33510,33540,33509,33538,33545,33490,33495,33521,33537,33500,33492,33489,33502,33491,33503,33519,33542,34384,34425,34427,34426,34893,34923,35201,35284,35336,35330,35331,35998,36e3,36212,36211,36276,36557,36556,36848,36838,36834,36842,36837,36845,36843,36836,36840,37066,37070,37057,37059,37195,37194,37325,38274,38480,38475,38476,38477,38754,38761,38859,38893,38899,38913,39080,39131,39135,39318,39321,20056,20147,20492,20493,20515,20463,20518,20517,20472,20521,20502,20486,20540,20511,20506,20498,20497,20474,20480,20500,20520,20465,20513,20491,20505,20504,20467,20462,20525,20522,20478,20523,20489,20860,20900,20901,20898,20941,20940,20934,20939,21078,21084,21076,21083,21085,21290,21375,21407,21405,21471,21736,21776,21761,21815,21756,21733,21746,21766,21754,21780,21737,21741,21729,21769,21742,21738,21734,21799,21767,21757,21775,22275,22276,22466,22484,22475,22467,22537,22799,22871,22872,22874,23057,23064,23068,23071,23067,23059,23020,23072,23075,23081,23077,23052,23049,23403,23640,23472,23475,23478,23476,23470,23477,23481,23480,23556,23633,23637,23632,23789,23805,23803,23786,23784,23792,23798,23809,23796,24046,24109,24107,24235,24237,24231,24369,24466,24465,24464,24665,24675,24677,24656,24661,24685,24681,24687,24708,24735,24730,24717,24724,24716,24709,24726,25159,25331,25352,25343,25422,25406,25391,25429,25410,25414,25423,25417,25402,25424,25405,25386,25387,25384,25421,25420,25928,25929,26009,26049,26053,26178,26185,26191,26179,26194,26188,26181,26177,26360,26388,26389,26391,26657,26680,26696,26694,26707,26681,26690,26708,26665,26803,26647,26700,26705,26685,26612,26704,26688,26684,26691,26666,26693,26643,26648,26689,27530,27529,27575,27683,27687,27688,27686,27684,27888,28010,28053,28040,28039,28006,28024,28023,27993,28051,28012,28041,28014,27994,28020,28009,28044,28042,28025,28037,28005,28052,28874,28888,28900,28889,28872,28879,29241,29305,29436,29433,29437,29432,29431,29574,29677,29705,29678,29664,29674,29662,30036,30045,30044,30042,30041,30142,30149,30151,30130,30131,30141,30140,30137,30146,30136,30347,30384,30410,30413,30414,30505,30495,30496,30504,30697,30768,30759,30776,30749,30772,30775,30757,30765,30752,30751,30770,31061,31056,31072,31071,31062,31070,31069,31063,31066,31204,31203,31207,31199,31206,31209,31192,31364,31368,31449,31494,31505,31881,32033,32023,32011,32010,32032,32034,32020,32016,32021,32026,32028,32013,32025,32027,32570,32607,32660,32709,32705,32774,32792,32789,32793,32791,32829,32831,33009,33026,33008,33029,33005,33012,33030,33016,33011,33032,33021,33034,33020,33007,33261,33260,33280,33296,33322,33323,33320,33324,33467,33579,33618,33620,33610,33592,33616,33609,33589,33588,33615,33586,33593,33590,33559,33600,33585,33576,33603,34388,34442,34474,34451,34468,34473,34444,34467,34460,34928,34935,34945,34946,34941,34937,35352,35344,35342,35340,35349,35338,35351,35347,35350,35343,35345,35912,35962,35961,36001,36002,36215,36524,36562,36564,36559,36785,36865,36870,36855,36864,36858,36852,36867,36861,36869,36856,37013,37089,37085,37090,37202,37197,37196,37336,37341,37335,37340,37337,38275,38498,38499,38497,38491,38493,38500,38488,38494,38587,39138,39340,39592,39640,39717,39730,39740,20094,20602,20605,20572,20551,20547,20556,20570,20553,20581,20598,20558,20565,20597,20596,20599,20559,20495,20591,20589,20828,20885,20976,21098,21103,21202,21209,21208,21205,21264,21263,21273,21311,21312,21310,21443,26364,21830,21866,21862,21828,21854,21857,21827,21834,21809,21846,21839,21845,21807,21860,21816,21806,21852,21804,21859,21811,21825,21847,22280,22283,22281,22495,22533,22538,22534,22496,22500,22522,22530,22581,22519,22521,22816,22882,23094,23105,23113,23142,23146,23104,23100,23138,23130,23110,23114,23408,23495,23493,23492,23490,23487,23494,23561,23560,23559,23648,23644,23645,23815,23814,23822,23835,23830,23842,23825,23849,23828,23833,23844,23847,23831,24034,24120,24118,24115,24119,24247,24248,24246,24245,24254,24373,24375,24407,24428,24425,24427,24471,24473,24478,24472,24481,24480,24476,24703,24739,24713,24736,24744,24779,24756,24806,24765,24773,24763,24757,24796,24764,24792,24789,24774,24799,24760,24794,24775,25114,25115,25160,25504,25511,25458,25494,25506,25509,25463,25447,25496,25514,25457,25513,25481,25475,25499,25451,25512,25476,25480,25497,25505,25516,25490,25487,25472,25467,25449,25448,25466,25949,25942,25937,25945,25943,21855,25935,25944,25941,25940,26012,26011,26028,26063,26059,26060,26062,26205,26202,26212,26216,26214,26206,26361,21207,26395,26753,26799,26786,26771,26805,26751,26742,26801,26791,26775,26800,26755,26820,26797,26758,26757,26772,26781,26792,26783,26785,26754,27442,27578,27627,27628,27691,28046,28092,28147,28121,28082,28129,28108,28132,28155,28154,28165,28103,28107,28079,28113,28078,28126,28153,28088,28151,28149,28101,28114,28186,28085,28122,28139,28120,28138,28145,28142,28136,28102,28100,28074,28140,28095,28134,28921,28937,28938,28925,28911,29245,29309,29313,29468,29467,29462,29459,29465,29575,29701,29706,29699,29702,29694,29709,29920,29942,29943,29980,29986,30053,30054,30050,30064,30095,30164,30165,30133,30154,30157,30350,30420,30418,30427,30519,30526,30524,30518,30520,30522,30827,30787,30798,31077,31080,31085,31227,31378,31381,31520,31528,31515,31532,31526,31513,31518,31534,31890,31895,31893,32070,32067,32113,32046,32057,32060,32064,32048,32051,32068,32047,32066,32050,32049,32573,32670,32666,32716,32718,32722,32796,32842,32838,33071,33046,33059,33067,33065,33072,33060,33282,33333,33335,33334,33337,33678,33694,33688,33656,33698,33686,33725,33707,33682,33674,33683,33673,33696,33655,33659,33660,33670,33703,34389,24426,34503,34496,34486,34500,34485,34502,34507,34481,34479,34505,34899,34974,34952,34987,34962,34966,34957,34955,35219,35215,35370,35357,35363,35365,35377,35373,35359,35355,35362,35913,35930,36009,36012,36011,36008,36010,36007,36199,36198,36286,36282,36571,36575,36889,36877,36890,36887,36899,36895,36893,36880,36885,36894,36896,36879,36898,36886,36891,36884,37096,37101,37117,37207,37326,37365,37350,37347,37351,37357,37353,38281,38506,38517,38515,38520,38512,38516,38518,38519,38508,38592,38634,38633,31456,31455,38914,38915,39770,40165,40565,40575,40613,40635,20642,20621,20613,20633,20625,20608,20630,20632,20634,26368,20977,21106,21108,21109,21097,21214,21213,21211,21338,21413,21883,21888,21927,21884,21898,21917,21912,21890,21916,21930,21908,21895,21899,21891,21939,21934,21919,21822,21938,21914,21947,21932,21937,21886,21897,21931,21913,22285,22575,22570,22580,22564,22576,22577,22561,22557,22560,22777,22778,22880,23159,23194,23167,23186,23195,23207,23411,23409,23506,23500,23507,23504,23562,23563,23601,23884,23888,23860,23879,24061,24133,24125,24128,24131,24190,24266,24257,24258,24260,24380,24429,24489,24490,24488,24785,24801,24754,24758,24800,24860,24867,24826,24853,24816,24827,24820,24936,24817,24846,24822,24841,24832,24850,25119,25161,25507,25484,25551,25536,25577,25545,25542,25549,25554,25571,25552,25569,25558,25581,25582,25462,25588,25578,25563,25682,25562,25593,25950,25958,25954,25955,26001,26e3,26031,26222,26224,26228,26230,26223,26257,26234,26238,26231,26366,26367,26399,26397,26874,26837,26848,26840,26839,26885,26847,26869,26862,26855,26873,26834,26866,26851,26827,26829,26893,26898,26894,26825,26842,26990,26875,27454,27450,27453,27544,27542,27580,27631,27694,27695,27692,28207,28216,28244,28193,28210,28263,28234,28192,28197,28195,28187,28251,28248,28196,28246,28270,28205,28198,28271,28212,28237,28218,28204,28227,28189,28222,28363,28297,28185,28238,28259,28228,28274,28265,28255,28953,28954,28966,28976,28961,28982,29038,28956,29260,29316,29312,29494,29477,29492,29481,29754,29738,29747,29730,29733,29749,29750,29748,29743,29723,29734,29736,29989,29990,30059,30058,30178,30171,30179,30169,30168,30174,30176,30331,30332,30358,30355,30388,30428,30543,30701,30813,30828,30831,31245,31240,31243,31237,31232,31384,31383,31382,31461,31459,31561,31574,31558,31568,31570,31572,31565,31563,31567,31569,31903,31909,32094,32080,32104,32085,32043,32110,32114,32097,32102,32098,32112,32115,21892,32724,32725,32779,32850,32901,33109,33108,33099,33105,33102,33081,33094,33086,33100,33107,33140,33298,33308,33769,33795,33784,33805,33760,33733,33803,33729,33775,33777,33780,33879,33802,33776,33804,33740,33789,33778,33738,33848,33806,33796,33756,33799,33748,33759,34395,34527,34521,34541,34516,34523,34532,34512,34526,34903,35009,35010,34993,35203,35222,35387,35424,35413,35422,35388,35393,35412,35419,35408,35398,35380,35386,35382,35414,35937,35970,36015,36028,36019,36029,36033,36027,36032,36020,36023,36022,36031,36024,36234,36229,36225,36302,36317,36299,36314,36305,36300,36315,36294,36603,36600,36604,36764,36910,36917,36913,36920,36914,36918,37122,37109,37129,37118,37219,37221,37327,37396,37397,37411,37385,37406,37389,37392,37383,37393,38292,38287,38283,38289,38291,38290,38286,38538,38542,38539,38525,38533,38534,38541,38514,38532,38593,38597,38596,38598,38599,38639,38642,38860,38917,38918,38920,39143,39146,39151,39145,39154,39149,39342,39341,40643,40653,40657,20098,20653,20661,20658,20659,20677,20670,20652,20663,20667,20655,20679,21119,21111,21117,21215,21222,21220,21218,21219,21295,21983,21992,21971,21990,21966,21980,21959,21969,21987,21988,21999,21978,21985,21957,21958,21989,21961,22290,22291,22622,22609,22616,22615,22618,22612,22635,22604,22637,22602,22626,22610,22603,22887,23233,23241,23244,23230,23229,23228,23219,23234,23218,23913,23919,24140,24185,24265,24264,24338,24409,24492,24494,24858,24847,24904,24863,24819,24859,24825,24833,24840,24910,24908,24900,24909,24894,24884,24871,24845,24838,24887,25121,25122,25619,25662,25630,25642,25645,25661,25644,25615,25628,25620,25613,25654,25622,25623,25606,25964,26015,26032,26263,26249,26247,26248,26262,26244,26264,26253,26371,27028,26989,26970,26999,26976,26964,26997,26928,27010,26954,26984,26987,26974,26963,27001,27014,26973,26979,26971,27463,27506,27584,27583,27603,27645,28322,28335,28371,28342,28354,28304,28317,28359,28357,28325,28312,28348,28346,28331,28369,28310,28316,28356,28372,28330,28327,28340,29006,29017,29033,29028,29001,29031,29020,29036,29030,29004,29029,29022,28998,29032,29014,29242,29266,29495,29509,29503,29502,29807,29786,29781,29791,29790,29761,29759,29785,29787,29788,30070,30072,30208,30192,30209,30194,30193,30202,30207,30196,30195,30430,30431,30555,30571,30566,30558,30563,30585,30570,30572,30556,30565,30568,30562,30702,30862,30896,30871,30872,30860,30857,30844,30865,30867,30847,31098,31103,31105,33836,31165,31260,31258,31264,31252,31263,31262,31391,31392,31607,31680,31584,31598,31591,31921,31923,31925,32147,32121,32145,32129,32143,32091,32622,32617,32618,32626,32681,32680,32676,32854,32856,32902,32900,33137,33136,33144,33125,33134,33139,33131,33145,33146,33126,33285,33351,33922,33911,33853,33841,33909,33894,33899,33865,33900,33883,33852,33845,33889,33891,33897,33901,33862,34398,34396,34399,34553,34579,34568,34567,34560,34558,34555,34562,34563,34566,34570,34905,35039,35028,35033,35036,35032,35037,35041,35018,35029,35026,35228,35299,35435,35442,35443,35430,35433,35440,35463,35452,35427,35488,35441,35461,35437,35426,35438,35436,35449,35451,35390,35432,35938,35978,35977,36042,36039,36040,36036,36018,36035,36034,36037,36321,36319,36328,36335,36339,36346,36330,36324,36326,36530,36611,36617,36606,36618,36767,36786,36939,36938,36947,36930,36948,36924,36949,36944,36935,36943,36942,36941,36945,36926,36929,37138,37143,37228,37226,37225,37321,37431,37463,37432,37437,37440,37438,37467,37451,37476,37457,37428,37449,37453,37445,37433,37439,37466,38296,38552,38548,38549,38605,38603,38601,38602,38647,38651,38649,38646,38742,38772,38774,38928,38929,38931,38922,38930,38924,39164,39156,39165,39166,39347,39345,39348,39649,40169,40578,40718,40723,40736,20711,20718,20709,20694,20717,20698,20693,20687,20689,20721,20686,20713,20834,20979,21123,21122,21297,21421,22014,22016,22043,22039,22013,22036,22022,22025,22029,22030,22007,22038,22047,22024,22032,22006,22296,22294,22645,22654,22659,22675,22666,22649,22661,22653,22781,22821,22818,22820,22890,22889,23265,23270,23273,23255,23254,23256,23267,23413,23518,23527,23521,23525,23526,23528,23522,23524,23519,23565,23650,23940,23943,24155,24163,24149,24151,24148,24275,24278,24330,24390,24432,24505,24903,24895,24907,24951,24930,24931,24927,24922,24920,24949,25130,25735,25688,25684,25764,25720,25695,25722,25681,25703,25652,25709,25723,25970,26017,26071,26070,26274,26280,26269,27036,27048,27029,27073,27054,27091,27083,27035,27063,27067,27051,27060,27088,27085,27053,27084,27046,27075,27043,27465,27468,27699,28467,28436,28414,28435,28404,28457,28478,28448,28460,28431,28418,28450,28415,28399,28422,28465,28472,28466,28451,28437,28459,28463,28552,28458,28396,28417,28402,28364,28407,29076,29081,29053,29066,29060,29074,29246,29330,29334,29508,29520,29796,29795,29802,29808,29805,29956,30097,30247,30221,30219,30217,30227,30433,30435,30596,30589,30591,30561,30913,30879,30887,30899,30889,30883,31118,31119,31117,31278,31281,31402,31401,31469,31471,31649,31637,31627,31605,31639,31645,31636,31631,31672,31623,31620,31929,31933,31934,32187,32176,32156,32189,32190,32160,32202,32180,32178,32177,32186,32162,32191,32181,32184,32173,32210,32199,32172,32624,32736,32737,32735,32862,32858,32903,33104,33152,33167,33160,33162,33151,33154,33255,33274,33287,33300,33310,33355,33993,33983,33990,33988,33945,33950,33970,33948,33995,33976,33984,34003,33936,33980,34001,33994,34623,34588,34619,34594,34597,34612,34584,34645,34615,34601,35059,35074,35060,35065,35064,35069,35048,35098,35055,35494,35468,35486,35491,35469,35489,35475,35492,35498,35493,35496,35480,35473,35482,35495,35946,35981,35980,36051,36049,36050,36203,36249,36245,36348,36628,36626,36629,36627,36771,36960,36952,36956,36963,36953,36958,36962,36957,36955,37145,37144,37150,37237,37240,37239,37236,37496,37504,37509,37528,37526,37499,37523,37532,37544,37500,37521,38305,38312,38313,38307,38309,38308,38553,38556,38555,38604,38610,38656,38780,38789,38902,38935,38936,39087,39089,39171,39173,39180,39177,39361,39599,39600,39654,39745,39746,40180,40182,40179,40636,40763,40778,20740,20736,20731,20725,20729,20738,20744,20745,20741,20956,21127,21128,21129,21133,21130,21232,21426,22062,22075,22073,22066,22079,22068,22057,22099,22094,22103,22132,22070,22063,22064,22656,22687,22686,22707,22684,22702,22697,22694,22893,23305,23291,23307,23285,23308,23304,23534,23532,23529,23531,23652,23653,23965,23956,24162,24159,24161,24290,24282,24287,24285,24291,24288,24392,24433,24503,24501,24950,24935,24942,24925,24917,24962,24956,24944,24939,24958,24999,24976,25003,24974,25004,24986,24996,24980,25006,25134,25705,25711,25721,25758,25778,25736,25744,25776,25765,25747,25749,25769,25746,25774,25773,25771,25754,25772,25753,25762,25779,25973,25975,25976,26286,26283,26292,26289,27171,27167,27112,27137,27166,27161,27133,27169,27155,27146,27123,27138,27141,27117,27153,27472,27470,27556,27589,27590,28479,28540,28548,28497,28518,28500,28550,28525,28507,28536,28526,28558,28538,28528,28516,28567,28504,28373,28527,28512,28511,29087,29100,29105,29096,29270,29339,29518,29527,29801,29835,29827,29822,29824,30079,30240,30249,30239,30244,30246,30241,30242,30362,30394,30436,30606,30599,30604,30609,30603,30923,30917,30906,30922,30910,30933,30908,30928,31295,31292,31296,31293,31287,31291,31407,31406,31661,31665,31684,31668,31686,31687,31681,31648,31692,31946,32224,32244,32239,32251,32216,32236,32221,32232,32227,32218,32222,32233,32158,32217,32242,32249,32629,32631,32687,32745,32806,33179,33180,33181,33184,33178,33176,34071,34109,34074,34030,34092,34093,34067,34065,34083,34081,34068,34028,34085,34047,34054,34690,34676,34678,34656,34662,34680,34664,34649,34647,34636,34643,34907,34909,35088,35079,35090,35091,35093,35082,35516,35538,35527,35524,35477,35531,35576,35506,35529,35522,35519,35504,35542,35533,35510,35513,35547,35916,35918,35948,36064,36062,36070,36068,36076,36077,36066,36067,36060,36074,36065,36205,36255,36259,36395,36368,36381,36386,36367,36393,36383,36385,36382,36538,36637,36635,36639,36649,36646,36650,36636,36638,36645,36969,36974,36968,36973,36983,37168,37165,37159,37169,37255,37257,37259,37251,37573,37563,37559,37610,37548,37604,37569,37555,37564,37586,37575,37616,37554,38317,38321,38660,38662,38663,38665,38752,38797,38795,38799,38945,38955,38940,39091,39178,39187,39186,39192,39389,39376,39391,39387,39377,39381,39378,39385,39607,39662,39663,39719,39749,39748,39799,39791,40198,40201,40195,40617,40638,40654,22696,40786,20754,20760,20756,20752,20757,20864,20906,20957,21137,21139,21235,22105,22123,22137,22121,22116,22136,22122,22120,22117,22129,22127,22124,22114,22134,22721,22718,22727,22725,22894,23325,23348,23416,23536,23566,24394,25010,24977,25001,24970,25037,25014,25022,25034,25032,25136,25797,25793,25803,25787,25788,25818,25796,25799,25794,25805,25791,25810,25812,25790,25972,26310,26313,26297,26308,26311,26296,27197,27192,27194,27225,27243,27224,27193,27204,27234,27233,27211,27207,27189,27231,27208,27481,27511,27653,28610,28593,28577,28611,28580,28609,28583,28595,28608,28601,28598,28582,28576,28596,29118,29129,29136,29138,29128,29141,29113,29134,29145,29148,29123,29124,29544,29852,29859,29848,29855,29854,29922,29964,29965,30260,30264,30266,30439,30437,30624,30622,30623,30629,30952,30938,30956,30951,31142,31309,31310,31302,31308,31307,31418,31705,31761,31689,31716,31707,31713,31721,31718,31957,31958,32266,32273,32264,32283,32291,32286,32285,32265,32272,32633,32690,32752,32753,32750,32808,33203,33193,33192,33275,33288,33368,33369,34122,34137,34120,34152,34153,34115,34121,34157,34154,34142,34691,34719,34718,34722,34701,34913,35114,35122,35109,35115,35105,35242,35238,35558,35578,35563,35569,35584,35548,35559,35566,35582,35585,35586,35575,35565,35571,35574,35580,35947,35949,35987,36084,36420,36401,36404,36418,36409,36405,36667,36655,36664,36659,36776,36774,36981,36980,36984,36978,36988,36986,37172,37266,37664,37686,37624,37683,37679,37666,37628,37675,37636,37658,37648,37670,37665,37653,37678,37657,38331,38567,38568,38570,38613,38670,38673,38678,38669,38675,38671,38747,38748,38758,38808,38960,38968,38971,38967,38957,38969,38948,39184,39208,39198,39195,39201,39194,39405,39394,39409,39608,39612,39675,39661,39720,39825,40213,40227,40230,40232,40210,40219,40664,40660,40845,40860,20778,20767,20769,20786,21237,22158,22144,22160,22149,22151,22159,22741,22739,22737,22734,23344,23338,23332,23418,23607,23656,23996,23994,23997,23992,24171,24396,24509,25033,25026,25031,25062,25035,25138,25140,25806,25802,25816,25824,25840,25830,25836,25841,25826,25837,25986,25987,26329,26326,27264,27284,27268,27298,27292,27355,27299,27262,27287,27280,27296,27484,27566,27610,27656,28632,28657,28639,28640,28635,28644,28651,28655,28544,28652,28641,28649,28629,28654,28656,29159,29151,29166,29158,29157,29165,29164,29172,29152,29237,29254,29552,29554,29865,29872,29862,29864,30278,30274,30284,30442,30643,30634,30640,30636,30631,30637,30703,30967,30970,30964,30959,30977,31143,31146,31319,31423,31751,31757,31742,31735,31756,31712,31968,31964,31966,31970,31967,31961,31965,32302,32318,32326,32311,32306,32323,32299,32317,32305,32325,32321,32308,32313,32328,32309,32319,32303,32580,32755,32764,32881,32882,32880,32879,32883,33222,33219,33210,33218,33216,33215,33213,33225,33214,33256,33289,33393,34218,34180,34174,34204,34193,34196,34223,34203,34183,34216,34186,34407,34752,34769,34739,34770,34758,34731,34747,34746,34760,34763,35131,35126,35140,35128,35133,35244,35598,35607,35609,35611,35594,35616,35613,35588,35600,35905,35903,35955,36090,36093,36092,36088,36091,36264,36425,36427,36424,36426,36676,36670,36674,36677,36671,36991,36989,36996,36993,36994,36992,37177,37283,37278,37276,37709,37762,37672,37749,37706,37733,37707,37656,37758,37740,37723,37744,37722,37716,38346,38347,38348,38344,38342,38577,38584,38614,38684,38686,38816,38867,38982,39094,39221,39425,39423,39854,39851,39850,39853,40251,40255,40587,40655,40670,40668,40669,40667,40766,40779,21474,22165,22190,22745,22744,23352,24413,25059,25139,25844,25842,25854,25862,25850,25851,25847,26039,26332,26406,27315,27308,27331,27323,27320,27330,27310,27311,27487,27512,27567,28681,28683,28670,28678,28666,28689,28687,29179,29180,29182,29176,29559,29557,29863,29887,29973,30294,30296,30290,30653,30655,30651,30652,30990,31150,31329,31330,31328,31428,31429,31787,31783,31786,31774,31779,31777,31975,32340,32341,32350,32346,32353,32338,32345,32584,32761,32763,32887,32886,33229,33231,33290,34255,34217,34253,34256,34249,34224,34234,34233,34214,34799,34796,34802,34784,35206,35250,35316,35624,35641,35628,35627,35920,36101,36441,36451,36454,36452,36447,36437,36544,36681,36685,36999,36995,37e3,37291,37292,37328,37780,37770,37782,37794,37811,37806,37804,37808,37784,37786,37783,38356,38358,38352,38357,38626,38620,38617,38619,38622,38692,38819,38822,38829,38905,38989,38991,38988,38990,38995,39098,39230,39231,39229,39214,39333,39438,39617,39683,39686,39759,39758,39757,39882,39881,39933,39880,39872,40273,40285,40288,40672,40725,40748,20787,22181,22750,22751,22754,23541,40848,24300,25074,25079,25078,25077,25856,25871,26336,26333,27365,27357,27354,27347,28699,28703,28712,28698,28701,28693,28696,29190,29197,29272,29346,29560,29562,29885,29898,29923,30087,30086,30303,30305,30663,31001,31153,31339,31337,31806,31807,31800,31805,31799,31808,32363,32365,32377,32361,32362,32645,32371,32694,32697,32696,33240,34281,34269,34282,34261,34276,34277,34295,34811,34821,34829,34809,34814,35168,35167,35158,35166,35649,35676,35672,35657,35674,35662,35663,35654,35673,36104,36106,36476,36466,36487,36470,36460,36474,36468,36692,36686,36781,37002,37003,37297,37294,37857,37841,37855,37827,37832,37852,37853,37846,37858,37837,37848,37860,37847,37864,38364,38580,38627,38698,38695,38753,38876,38907,39006,39e3,39003,39100,39237,39241,39446,39449,39693,39912,39911,39894,39899,40329,40289,40306,40298,40300,40594,40599,40595,40628,21240,22184,22199,22198,22196,22204,22756,23360,23363,23421,23542,24009,25080,25082,25880,25876,25881,26342,26407,27372,28734,28720,28722,29200,29563,29903,30306,30309,31014,31018,31020,31019,31431,31478,31820,31811,31821,31983,31984,36782,32381,32380,32386,32588,32768,33242,33382,34299,34297,34321,34298,34310,34315,34311,34314,34836,34837,35172,35258,35320,35696,35692,35686,35695,35679,35691,36111,36109,36489,36481,36485,36482,37300,37323,37912,37891,37885,38369,38704,39108,39250,39249,39336,39467,39472,39479,39477,39955,39949,40569,40629,40680,40751,40799,40803,40801,20791,20792,22209,22208,22210,22804,23660,24013,25084,25086,25885,25884,26005,26345,27387,27396,27386,27570,28748,29211,29351,29910,29908,30313,30675,31824,32399,32396,32700,34327,34349,34330,34851,34850,34849,34847,35178,35180,35261,35700,35703,35709,36115,36490,36493,36491,36703,36783,37306,37934,37939,37941,37946,37944,37938,37931,38370,38712,38713,38706,38911,39015,39013,39255,39493,39491,39488,39486,39631,39764,39761,39981,39973,40367,40372,40386,40376,40605,40687,40729,40796,40806,40807,20796,20795,22216,22218,22217,23423,24020,24018,24398,25087,25892,27402,27489,28753,28760,29568,29924,30090,30318,30316,31155,31840,31839,32894,32893,33247,35186,35183,35324,35712,36118,36119,36497,36499,36705,37192,37956,37969,37970,38717,38718,38851,38849,39019,39253,39509,39501,39634,39706,40009,39985,39998,39995,40403,40407,40756,40812,40810,40852,22220,24022,25088,25891,25899,25898,26348,27408,29914,31434,31844,31843,31845,32403,32406,32404,33250,34360,34367,34865,35722,37008,37007,37987,37984,37988,38760,39023,39260,39514,39515,39511,39635,39636,39633,40020,40023,40022,40421,40607,40692,22225,22761,25900,28766,30321,30322,30679,32592,32648,34870,34873,34914,35731,35730,35734,33399,36123,37312,37994,38722,38728,38724,38854,39024,39519,39714,39768,40031,40441,40442,40572,40573,40711,40823,40818,24307,27414,28771,31852,31854,34875,35264,36513,37313,38002,38e3,39025,39262,39638,39715,40652,28772,30682,35738,38007,38857,39522,39525,32412,35740,36522,37317,38013,38014,38012,40055,40056,40695,35924,38015,40474,29224,39530,39729,40475,40478,31858,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,20022,20031,20101,20128,20866,20886,20907,21241,21304,21353,21430,22794,23424,24027,12083,24191,24308,24400,24417,25908,26080,30098,30326,36789,38582,168,710,12541,12542,12445,12446,12291,20189,12293,12294,12295,12540,65339,65341,10045,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,8679,8632,8633,12751,131276,20058,131210,20994,17553,40880,20872,40881,161287,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,65506,65508,65287,65282,12849,8470,8481,12443,12444,11904,11908,11910,11911,11912,11914,11916,11917,11925,11932,11933,11941,11943,11946,11948,11950,11958,11964,11966,11974,11978,11980,11981,11983,11990,11991,11998,12003,null,null,null,643,592,603,596,629,339,248,331,650,618,20034,20060,20981,21274,21378,19975,19980,20039,20109,22231,64012,23662,24435,19983,20871,19982,20014,20115,20162,20169,20168,20888,21244,21356,21433,22304,22787,22828,23568,24063,26081,27571,27596,27668,29247,20017,20028,20200,20188,20201,20193,20189,20186,21004,21276,21324,22306,22307,22807,22831,23425,23428,23570,23611,23668,23667,24068,24192,24194,24521,25097,25168,27669,27702,27715,27711,27707,29358,29360,29578,31160,32906,38430,20238,20248,20268,20213,20244,20209,20224,20215,20232,20253,20226,20229,20258,20243,20228,20212,20242,20913,21011,21001,21008,21158,21282,21279,21325,21386,21511,22241,22239,22318,22314,22324,22844,22912,22908,22917,22907,22910,22903,22911,23382,23573,23589,23676,23674,23675,23678,24031,24181,24196,24322,24346,24436,24533,24532,24527,25180,25182,25188,25185,25190,25186,25177,25184,25178,25189,26095,26094,26430,26425,26424,26427,26426,26431,26428,26419,27672,27718,27730,27740,27727,27722,27732,27723,27724,28785,29278,29364,29365,29582,29994,30335,31349,32593,33400,33404,33408,33405,33407,34381,35198,37017,37015,37016,37019,37012,38434,38436,38432,38435,20310,20283,20322,20297,20307,20324,20286,20327,20306,20319,20289,20312,20269,20275,20287,20321,20879,20921,21020,21022,21025,21165,21166,21257,21347,21362,21390,21391,21552,21559,21546,21588,21573,21529,21532,21541,21528,21565,21583,21569,21544,21540,21575,22254,22247,22245,22337,22341,22348,22345,22347,22354,22790,22848,22950,22936,22944,22935,22926,22946,22928,22927,22951,22945,23438,23442,23592,23594,23693,23695,23688,23691,23689,23698,23690,23686,23699,23701,24032,24074,24078,24203,24201,24204,24200,24205,24325,24349,24440,24438,24530,24529,24528,24557,24552,24558,24563,24545,24548,24547,24570,24559,24567,24571,24576,24564,25146,25219,25228,25230,25231,25236,25223,25201,25211,25210,25200,25217,25224,25207,25213,25202,25204,25911,26096,26100,26099,26098,26101,26437,26439,26457,26453,26444,26440,26461,26445,26458,26443,27600,27673,27674,27768,27751,27755,27780,27787,27791,27761,27759,27753,27802,27757,27783,27797,27804,27750,27763,27749,27771,27790,28788,28794,29283,29375,29373,29379,29382,29377,29370,29381,29589,29591,29587,29588,29586,30010,30009,30100,30101,30337,31037,32820,32917,32921,32912,32914,32924,33424,33423,33413,33422,33425,33427,33418,33411,33412,35960,36809,36799,37023,37025,37029,37022,37031,37024,38448,38440,38447,38445,20019,20376,20348,20357,20349,20352,20359,20342,20340,20361,20356,20343,20300,20375,20330,20378,20345,20353,20344,20368,20380,20372,20382,20370,20354,20373,20331,20334,20894,20924,20926,21045,21042,21043,21062,21041,21180,21258,21259,21308,21394,21396,21639,21631,21633,21649,21634,21640,21611,21626,21630,21605,21612,21620,21606,21645,21615,21601,21600,21656,21603,21607,21604,22263,22265,22383,22386,22381,22379,22385,22384,22390,22400,22389,22395,22387,22388,22370,22376,22397,22796,22853,22965,22970,22991,22990,22962,22988,22977,22966,22972,22979,22998,22961,22973,22976,22984,22964,22983,23394,23397,23443,23445,23620,23623,23726,23716,23712,23733,23727,23720,23724,23711,23715,23725,23714,23722,23719,23709,23717,23734,23728,23718,24087,24084,24089,24360,24354,24355,24356,24404,24450,24446,24445,24542,24549,24621,24614,24601,24626,24587,24628,24586,24599,24627,24602,24606,24620,24610,24589,24592,24622,24595,24593,24588,24585,24604,25108,25149,25261,25268,25297,25278,25258,25270,25290,25262,25267,25263,25275,25257,25264,25272,25917,26024,26043,26121,26108,26116,26130,26120,26107,26115,26123,26125,26117,26109,26129,26128,26358,26378,26501,26476,26510,26514,26486,26491,26520,26502,26500,26484,26509,26508,26490,26527,26513,26521,26499,26493,26497,26488,26489,26516,27429,27520,27518,27614,27677,27795,27884,27883,27886,27865,27830,27860,27821,27879,27831,27856,27842,27834,27843,27846,27885,27890,27858,27869,27828,27786,27805,27776,27870,27840,27952,27853,27847,27824,27897,27855,27881,27857,28820,28824,28805,28819,28806,28804,28817,28822,28802,28826,28803,29290,29398,29387,29400,29385,29404,29394,29396,29402,29388,29393,29604,29601,29613,29606,29602,29600,29612,29597,29917,29928,30015,30016,30014,30092,30104,30383,30451,30449,30448,30453,30712,30716,30713,30715,30714,30711,31042,31039,31173,31352,31355,31483,31861,31997,32821,32911,32942,32931,32952,32949,32941,33312,33440,33472,33451,33434,33432,33435,33461,33447,33454,33468,33438,33466,33460,33448,33441,33449,33474,33444,33475,33462,33442,34416,34415,34413,34414,35926,36818,36811,36819,36813,36822,36821,36823,37042,37044,37039,37043,37040,38457,38461,38460,38458,38467,20429,20421,20435,20402,20425,20427,20417,20436,20444,20441,20411,20403,20443,20423,20438,20410,20416,20409,20460,21060,21065,21184,21186,21309,21372,21399,21398,21401,21400,21690,21665,21677,21669,21711,21699,33549,21687,21678,21718,21686,21701,21702,21664,21616,21692,21666,21694,21618,21726,21680,22453,22430,22431,22436,22412,22423,22429,22427,22420,22424,22415,22425,22437,22426,22421,22772,22797,22867,23009,23006,23022,23040,23025,23005,23034,23037,23036,23030,23012,23026,23031,23003,23017,23027,23029,23008,23038,23028,23021,23464,23628,23760,23768,23756,23767,23755,23771,23774,23770,23753,23751,23754,23766,23763,23764,23759,23752,23750,23758,23775,23800,24057,24097,24098,24099,24096,24100,24240,24228,24226,24219,24227,24229,24327,24366,24406,24454,24631,24633,24660,24690,24670,24645,24659,24647,24649,24667,24652,24640,24642,24671,24612,24644,24664,24678,24686,25154,25155,25295,25357,25355,25333,25358,25347,25323,25337,25359,25356,25336,25334,25344,25363,25364,25338,25365,25339,25328,25921,25923,26026,26047,26166,26145,26162,26165,26140,26150,26146,26163,26155,26170,26141,26164,26169,26158,26383,26384,26561,26610,26568,26554,26588,26555,26616,26584,26560,26551,26565,26603,26596,26591,26549,26573,26547,26615,26614,26606,26595,26562,26553,26574,26599,26608,26546,26620,26566,26605,26572,26542,26598,26587,26618,26569,26570,26563,26602,26571,27432,27522,27524,27574,27606,27608,27616,27680,27681,27944,27956,27949,27935,27964,27967,27922,27914,27866,27955,27908,27929,27962,27930,27921,27904,27933,27970,27905,27928,27959,27907,27919,27968,27911,27936,27948,27912,27938,27913,27920,28855,28831,28862,28849,28848,28833,28852,28853,28841,29249,29257,29258,29292,29296,29299,29294,29386,29412,29416,29419,29407,29418,29414,29411,29573,29644,29634,29640,29637,29625,29622,29621,29620,29675,29631,29639,29630,29635,29638,29624,29643,29932,29934,29998,30023,30024,30119,30122,30329,30404,30472,30467,30468,30469,30474,30455,30459,30458,30695,30696,30726,30737,30738,30725,30736,30735,30734,30729,30723,30739,31050,31052,31051,31045,31044,31189,31181,31183,31190,31182,31360,31358,31441,31488,31489,31866,31864,31865,31871,31872,31873,32003,32008,32001,32600,32657,32653,32702,32775,32782,32783,32788,32823,32984,32967,32992,32977,32968,32962,32976,32965,32995,32985,32988,32970,32981,32969,32975,32983,32998,32973,33279,33313,33428,33497,33534,33529,33543,33512,33536,33493,33594,33515,33494,33524,33516,33505,33522,33525,33548,33531,33526,33520,33514,33508,33504,33530,33523,33517,34423,34420,34428,34419,34881,34894,34919,34922,34921,35283,35332,35335,36210,36835,36833,36846,36832,37105,37053,37055,37077,37061,37054,37063,37067,37064,37332,37331,38484,38479,38481,38483,38474,38478,20510,20485,20487,20499,20514,20528,20507,20469,20468,20531,20535,20524,20470,20471,20503,20508,20512,20519,20533,20527,20529,20494,20826,20884,20883,20938,20932,20933,20936,20942,21089,21082,21074,21086,21087,21077,21090,21197,21262,21406,21798,21730,21783,21778,21735,21747,21732,21786,21759,21764,21768,21739,21777,21765,21745,21770,21755,21751,21752,21728,21774,21763,21771,22273,22274,22476,22578,22485,22482,22458,22470,22461,22460,22456,22454,22463,22471,22480,22457,22465,22798,22858,23065,23062,23085,23086,23061,23055,23063,23050,23070,23091,23404,23463,23469,23468,23555,23638,23636,23788,23807,23790,23793,23799,23808,23801,24105,24104,24232,24238,24234,24236,24371,24368,24423,24669,24666,24679,24641,24738,24712,24704,24722,24705,24733,24707,24725,24731,24727,24711,24732,24718,25113,25158,25330,25360,25430,25388,25412,25413,25398,25411,25572,25401,25419,25418,25404,25385,25409,25396,25432,25428,25433,25389,25415,25395,25434,25425,25400,25431,25408,25416,25930,25926,26054,26051,26052,26050,26186,26207,26183,26193,26386,26387,26655,26650,26697,26674,26675,26683,26699,26703,26646,26673,26652,26677,26667,26669,26671,26702,26692,26676,26653,26642,26644,26662,26664,26670,26701,26682,26661,26656,27436,27439,27437,27441,27444,27501,32898,27528,27622,27620,27624,27619,27618,27623,27685,28026,28003,28004,28022,27917,28001,28050,27992,28002,28013,28015,28049,28045,28143,28031,28038,27998,28007,28e3,28055,28016,28028,27999,28034,28056,27951,28008,28043,28030,28032,28036,27926,28035,28027,28029,28021,28048,28892,28883,28881,28893,28875,32569,28898,28887,28882,28894,28896,28884,28877,28869,28870,28871,28890,28878,28897,29250,29304,29303,29302,29440,29434,29428,29438,29430,29427,29435,29441,29651,29657,29669,29654,29628,29671,29667,29673,29660,29650,29659,29652,29661,29658,29655,29656,29672,29918,29919,29940,29941,29985,30043,30047,30128,30145,30139,30148,30144,30143,30134,30138,30346,30409,30493,30491,30480,30483,30482,30499,30481,30485,30489,30490,30498,30503,30755,30764,30754,30773,30767,30760,30766,30763,30753,30761,30771,30762,30769,31060,31067,31055,31068,31059,31058,31057,31211,31212,31200,31214,31213,31210,31196,31198,31197,31366,31369,31365,31371,31372,31370,31367,31448,31504,31492,31507,31493,31503,31496,31498,31502,31497,31506,31876,31889,31882,31884,31880,31885,31877,32030,32029,32017,32014,32024,32022,32019,32031,32018,32015,32012,32604,32609,32606,32608,32605,32603,32662,32658,32707,32706,32704,32790,32830,32825,33018,33010,33017,33013,33025,33019,33024,33281,33327,33317,33587,33581,33604,33561,33617,33573,33622,33599,33601,33574,33564,33570,33602,33614,33563,33578,33544,33596,33613,33558,33572,33568,33591,33583,33577,33607,33605,33612,33619,33566,33580,33611,33575,33608,34387,34386,34466,34472,34454,34445,34449,34462,34439,34455,34438,34443,34458,34437,34469,34457,34465,34471,34453,34456,34446,34461,34448,34452,34883,34884,34925,34933,34934,34930,34944,34929,34943,34927,34947,34942,34932,34940,35346,35911,35927,35963,36004,36003,36214,36216,36277,36279,36278,36561,36563,36862,36853,36866,36863,36859,36868,36860,36854,37078,37088,37081,37082,37091,37087,37093,37080,37083,37079,37084,37092,37200,37198,37199,37333,37346,37338,38492,38495,38588,39139,39647,39727,20095,20592,20586,20577,20574,20576,20563,20555,20573,20594,20552,20557,20545,20571,20554,20578,20501,20549,20575,20585,20587,20579,20580,20550,20544,20590,20595,20567,20561,20944,21099,21101,21100,21102,21206,21203,21293,21404,21877,21878,21820,21837,21840,21812,21802,21841,21858,21814,21813,21808,21842,21829,21772,21810,21861,21838,21817,21832,21805,21819,21824,21835,22282,22279,22523,22548,22498,22518,22492,22516,22528,22509,22525,22536,22520,22539,22515,22479,22535,22510,22499,22514,22501,22508,22497,22542,22524,22544,22503,22529,22540,22513,22505,22512,22541,22532,22876,23136,23128,23125,23143,23134,23096,23093,23149,23120,23135,23141,23148,23123,23140,23127,23107,23133,23122,23108,23131,23112,23182,23102,23117,23097,23116,23152,23145,23111,23121,23126,23106,23132,23410,23406,23489,23488,23641,23838,23819,23837,23834,23840,23820,23848,23821,23846,23845,23823,23856,23826,23843,23839,23854,24126,24116,24241,24244,24249,24242,24243,24374,24376,24475,24470,24479,24714,24720,24710,24766,24752,24762,24787,24788,24783,24804,24793,24797,24776,24753,24795,24759,24778,24767,24771,24781,24768,25394,25445,25482,25474,25469,25533,25502,25517,25501,25495,25515,25486,25455,25479,25488,25454,25519,25461,25500,25453,25518,25468,25508,25403,25503,25464,25477,25473,25489,25485,25456,25939,26061,26213,26209,26203,26201,26204,26210,26392,26745,26759,26768,26780,26733,26734,26798,26795,26966,26735,26787,26796,26793,26741,26740,26802,26767,26743,26770,26748,26731,26738,26794,26752,26737,26750,26779,26774,26763,26784,26761,26788,26744,26747,26769,26764,26762,26749,27446,27443,27447,27448,27537,27535,27533,27534,27532,27690,28096,28075,28084,28083,28276,28076,28137,28130,28087,28150,28116,28160,28104,28128,28127,28118,28094,28133,28124,28125,28123,28148,28106,28093,28141,28144,28090,28117,28098,28111,28105,28112,28146,28115,28157,28119,28109,28131,28091,28922,28941,28919,28951,28916,28940,28912,28932,28915,28944,28924,28927,28934,28947,28928,28920,28918,28939,28930,28942,29310,29307,29308,29311,29469,29463,29447,29457,29464,29450,29448,29439,29455,29470,29576,29686,29688,29685,29700,29697,29693,29703,29696,29690,29692,29695,29708,29707,29684,29704,30052,30051,30158,30162,30159,30155,30156,30161,30160,30351,30345,30419,30521,30511,30509,30513,30514,30516,30515,30525,30501,30523,30517,30792,30802,30793,30797,30794,30796,30758,30789,30800,31076,31079,31081,31082,31075,31083,31073,31163,31226,31224,31222,31223,31375,31380,31376,31541,31559,31540,31525,31536,31522,31524,31539,31512,31530,31517,31537,31531,31533,31535,31538,31544,31514,31523,31892,31896,31894,31907,32053,32061,32056,32054,32058,32069,32044,32041,32065,32071,32062,32063,32074,32059,32040,32611,32661,32668,32669,32667,32714,32715,32717,32720,32721,32711,32719,32713,32799,32798,32795,32839,32835,32840,33048,33061,33049,33051,33069,33055,33068,33054,33057,33045,33063,33053,33058,33297,33336,33331,33338,33332,33330,33396,33680,33699,33704,33677,33658,33651,33700,33652,33679,33665,33685,33689,33653,33684,33705,33661,33667,33676,33693,33691,33706,33675,33662,33701,33711,33672,33687,33712,33663,33702,33671,33710,33654,33690,34393,34390,34495,34487,34498,34497,34501,34490,34480,34504,34489,34483,34488,34508,34484,34491,34492,34499,34493,34494,34898,34953,34965,34984,34978,34986,34970,34961,34977,34975,34968,34983,34969,34971,34967,34980,34988,34956,34963,34958,35202,35286,35289,35285,35376,35367,35372,35358,35897,35899,35932,35933,35965,36005,36221,36219,36217,36284,36290,36281,36287,36289,36568,36574,36573,36572,36567,36576,36577,36900,36875,36881,36892,36876,36897,37103,37098,37104,37108,37106,37107,37076,37099,37100,37097,37206,37208,37210,37203,37205,37356,37364,37361,37363,37368,37348,37369,37354,37355,37367,37352,37358,38266,38278,38280,38524,38509,38507,38513,38511,38591,38762,38916,39141,39319,20635,20629,20628,20638,20619,20643,20611,20620,20622,20637,20584,20636,20626,20610,20615,20831,20948,21266,21265,21412,21415,21905,21928,21925,21933,21879,22085,21922,21907,21896,21903,21941,21889,21923,21906,21924,21885,21900,21926,21887,21909,21921,21902,22284,22569,22583,22553,22558,22567,22563,22568,22517,22600,22565,22556,22555,22579,22591,22582,22574,22585,22584,22573,22572,22587,22881,23215,23188,23199,23162,23202,23198,23160,23206,23164,23205,23212,23189,23214,23095,23172,23178,23191,23171,23179,23209,23163,23165,23180,23196,23183,23187,23197,23530,23501,23499,23508,23505,23498,23502,23564,23600,23863,23875,23915,23873,23883,23871,23861,23889,23886,23893,23859,23866,23890,23869,23857,23897,23874,23865,23881,23864,23868,23858,23862,23872,23877,24132,24129,24408,24486,24485,24491,24777,24761,24780,24802,24782,24772,24852,24818,24842,24854,24837,24821,24851,24824,24828,24830,24769,24835,24856,24861,24848,24831,24836,24843,25162,25492,25521,25520,25550,25573,25576,25583,25539,25757,25587,25546,25568,25590,25557,25586,25589,25697,25567,25534,25565,25564,25540,25560,25555,25538,25543,25548,25547,25544,25584,25559,25561,25906,25959,25962,25956,25948,25960,25957,25996,26013,26014,26030,26064,26066,26236,26220,26235,26240,26225,26233,26218,26226,26369,26892,26835,26884,26844,26922,26860,26858,26865,26895,26838,26871,26859,26852,26870,26899,26896,26867,26849,26887,26828,26888,26992,26804,26897,26863,26822,26900,26872,26832,26877,26876,26856,26891,26890,26903,26830,26824,26845,26846,26854,26868,26833,26886,26836,26857,26901,26917,26823,27449,27451,27455,27452,27540,27543,27545,27541,27581,27632,27634,27635,27696,28156,28230,28231,28191,28233,28296,28220,28221,28229,28258,28203,28223,28225,28253,28275,28188,28211,28235,28224,28241,28219,28163,28206,28254,28264,28252,28257,28209,28200,28256,28273,28267,28217,28194,28208,28243,28261,28199,28280,28260,28279,28245,28281,28242,28262,28213,28214,28250,28960,28958,28975,28923,28974,28977,28963,28965,28962,28978,28959,28968,28986,28955,29259,29274,29320,29321,29318,29317,29323,29458,29451,29488,29474,29489,29491,29479,29490,29485,29478,29475,29493,29452,29742,29740,29744,29739,29718,29722,29729,29741,29745,29732,29731,29725,29737,29728,29746,29947,29999,30063,30060,30183,30170,30177,30182,30173,30175,30180,30167,30357,30354,30426,30534,30535,30532,30541,30533,30538,30542,30539,30540,30686,30700,30816,30820,30821,30812,30829,30833,30826,30830,30832,30825,30824,30814,30818,31092,31091,31090,31088,31234,31242,31235,31244,31236,31385,31462,31460,31562,31547,31556,31560,31564,31566,31552,31576,31557,31906,31902,31912,31905,32088,32111,32099,32083,32086,32103,32106,32079,32109,32092,32107,32082,32084,32105,32081,32095,32078,32574,32575,32613,32614,32674,32672,32673,32727,32849,32847,32848,33022,32980,33091,33098,33106,33103,33095,33085,33101,33082,33254,33262,33271,33272,33273,33284,33340,33341,33343,33397,33595,33743,33785,33827,33728,33768,33810,33767,33764,33788,33782,33808,33734,33736,33771,33763,33727,33793,33757,33765,33752,33791,33761,33739,33742,33750,33781,33737,33801,33807,33758,33809,33798,33730,33779,33749,33786,33735,33745,33770,33811,33731,33772,33774,33732,33787,33751,33762,33819,33755,33790,34520,34530,34534,34515,34531,34522,34538,34525,34539,34524,34540,34537,34519,34536,34513,34888,34902,34901,35002,35031,35001,35e3,35008,35006,34998,35004,34999,35005,34994,35073,35017,35221,35224,35223,35293,35290,35291,35406,35405,35385,35417,35392,35415,35416,35396,35397,35410,35400,35409,35402,35404,35407,35935,35969,35968,36026,36030,36016,36025,36021,36228,36224,36233,36312,36307,36301,36295,36310,36316,36303,36309,36313,36296,36311,36293,36591,36599,36602,36601,36582,36590,36581,36597,36583,36584,36598,36587,36593,36588,36596,36585,36909,36916,36911,37126,37164,37124,37119,37116,37128,37113,37115,37121,37120,37127,37125,37123,37217,37220,37215,37218,37216,37377,37386,37413,37379,37402,37414,37391,37388,37376,37394,37375,37373,37382,37380,37415,37378,37404,37412,37401,37399,37381,37398,38267,38285,38284,38288,38535,38526,38536,38537,38531,38528,38594,38600,38595,38641,38640,38764,38768,38766,38919,39081,39147,40166,40697,20099,20100,20150,20669,20671,20678,20654,20676,20682,20660,20680,20674,20656,20673,20666,20657,20683,20681,20662,20664,20951,21114,21112,21115,21116,21955,21979,21964,21968,21963,21962,21981,21952,21972,21956,21993,21951,21970,21901,21967,21973,21986,21974,21960,22002,21965,21977,21954,22292,22611,22632,22628,22607,22605,22601,22639,22613,22606,22621,22617,22629,22619,22589,22627,22641,22780,23239,23236,23243,23226,23224,23217,23221,23216,23231,23240,23227,23238,23223,23232,23242,23220,23222,23245,23225,23184,23510,23512,23513,23583,23603,23921,23907,23882,23909,23922,23916,23902,23912,23911,23906,24048,24143,24142,24138,24141,24139,24261,24268,24262,24267,24263,24384,24495,24493,24823,24905,24906,24875,24901,24886,24882,24878,24902,24879,24911,24873,24896,25120,37224,25123,25125,25124,25541,25585,25579,25616,25618,25609,25632,25636,25651,25667,25631,25621,25624,25657,25655,25634,25635,25612,25638,25648,25640,25665,25653,25647,25610,25626,25664,25637,25639,25611,25575,25627,25646,25633,25614,25967,26002,26067,26246,26252,26261,26256,26251,26250,26265,26260,26232,26400,26982,26975,26936,26958,26978,26993,26943,26949,26986,26937,26946,26967,26969,27002,26952,26953,26933,26988,26931,26941,26981,26864,27e3,26932,26985,26944,26991,26948,26998,26968,26945,26996,26956,26939,26955,26935,26972,26959,26961,26930,26962,26927,27003,26940,27462,27461,27459,27458,27464,27457,27547,64013,27643,27644,27641,27639,27640,28315,28374,28360,28303,28352,28319,28307,28308,28320,28337,28345,28358,28370,28349,28353,28318,28361,28343,28336,28365,28326,28367,28338,28350,28355,28380,28376,28313,28306,28302,28301,28324,28321,28351,28339,28368,28362,28311,28334,28323,28999,29012,29010,29027,29024,28993,29021,29026,29042,29048,29034,29025,28994,29016,28995,29003,29040,29023,29008,29011,28996,29005,29018,29263,29325,29324,29329,29328,29326,29500,29506,29499,29498,29504,29514,29513,29764,29770,29771,29778,29777,29783,29760,29775,29776,29774,29762,29766,29773,29780,29921,29951,29950,29949,29981,30073,30071,27011,30191,30223,30211,30199,30206,30204,30201,30200,30224,30203,30198,30189,30197,30205,30361,30389,30429,30549,30559,30560,30546,30550,30554,30569,30567,30548,30553,30573,30688,30855,30874,30868,30863,30852,30869,30853,30854,30881,30851,30841,30873,30848,30870,30843,31100,31106,31101,31097,31249,31256,31257,31250,31255,31253,31266,31251,31259,31248,31395,31394,31390,31467,31590,31588,31597,31604,31593,31602,31589,31603,31601,31600,31585,31608,31606,31587,31922,31924,31919,32136,32134,32128,32141,32127,32133,32122,32142,32123,32131,32124,32140,32148,32132,32125,32146,32621,32619,32615,32616,32620,32678,32677,32679,32731,32732,32801,33124,33120,33143,33116,33129,33115,33122,33138,26401,33118,33142,33127,33135,33092,33121,33309,33353,33348,33344,33346,33349,34033,33855,33878,33910,33913,33935,33933,33893,33873,33856,33926,33895,33840,33869,33917,33882,33881,33908,33907,33885,34055,33886,33847,33850,33844,33914,33859,33912,33842,33861,33833,33753,33867,33839,33858,33837,33887,33904,33849,33870,33868,33874,33903,33989,33934,33851,33863,33846,33843,33896,33918,33860,33835,33888,33876,33902,33872,34571,34564,34551,34572,34554,34518,34549,34637,34552,34574,34569,34561,34550,34573,34565,35030,35019,35021,35022,35038,35035,35034,35020,35024,35205,35227,35295,35301,35300,35297,35296,35298,35292,35302,35446,35462,35455,35425,35391,35447,35458,35460,35445,35459,35457,35444,35450,35900,35915,35914,35941,35940,35942,35974,35972,35973,36044,36200,36201,36241,36236,36238,36239,36237,36243,36244,36240,36242,36336,36320,36332,36337,36334,36304,36329,36323,36322,36327,36338,36331,36340,36614,36607,36609,36608,36613,36615,36616,36610,36619,36946,36927,36932,36937,36925,37136,37133,37135,37137,37142,37140,37131,37134,37230,37231,37448,37458,37424,37434,37478,37427,37477,37470,37507,37422,37450,37446,37485,37484,37455,37472,37479,37487,37430,37473,37488,37425,37460,37475,37456,37490,37454,37459,37452,37462,37426,38303,38300,38302,38299,38546,38547,38545,38551,38606,38650,38653,38648,38645,38771,38775,38776,38770,38927,38925,38926,39084,39158,39161,39343,39346,39344,39349,39597,39595,39771,40170,40173,40167,40576,40701,20710,20692,20695,20712,20723,20699,20714,20701,20708,20691,20716,20720,20719,20707,20704,20952,21120,21121,21225,21227,21296,21420,22055,22037,22028,22034,22012,22031,22044,22017,22035,22018,22010,22045,22020,22015,22009,22665,22652,22672,22680,22662,22657,22655,22644,22667,22650,22663,22673,22670,22646,22658,22664,22651,22676,22671,22782,22891,23260,23278,23269,23253,23274,23258,23277,23275,23283,23266,23264,23259,23276,23262,23261,23257,23272,23263,23415,23520,23523,23651,23938,23936,23933,23942,23930,23937,23927,23946,23945,23944,23934,23932,23949,23929,23935,24152,24153,24147,24280,24273,24279,24270,24284,24277,24281,24274,24276,24388,24387,24431,24502,24876,24872,24897,24926,24945,24947,24914,24915,24946,24940,24960,24948,24916,24954,24923,24933,24891,24938,24929,24918,25129,25127,25131,25643,25677,25691,25693,25716,25718,25714,25715,25725,25717,25702,25766,25678,25730,25694,25692,25675,25683,25696,25680,25727,25663,25708,25707,25689,25701,25719,25971,26016,26273,26272,26271,26373,26372,26402,27057,27062,27081,27040,27086,27030,27056,27052,27068,27025,27033,27022,27047,27021,27049,27070,27055,27071,27076,27069,27044,27092,27065,27082,27034,27087,27059,27027,27050,27041,27038,27097,27031,27024,27074,27061,27045,27078,27466,27469,27467,27550,27551,27552,27587,27588,27646,28366,28405,28401,28419,28453,28408,28471,28411,28462,28425,28494,28441,28442,28455,28440,28475,28434,28397,28426,28470,28531,28409,28398,28461,28480,28464,28476,28469,28395,28423,28430,28483,28421,28413,28406,28473,28444,28412,28474,28447,28429,28446,28424,28449,29063,29072,29065,29056,29061,29058,29071,29051,29062,29057,29079,29252,29267,29335,29333,29331,29507,29517,29521,29516,29794,29811,29809,29813,29810,29799,29806,29952,29954,29955,30077,30096,30230,30216,30220,30229,30225,30218,30228,30392,30593,30588,30597,30594,30574,30592,30575,30590,30595,30898,30890,30900,30893,30888,30846,30891,30878,30885,30880,30892,30882,30884,31128,31114,31115,31126,31125,31124,31123,31127,31112,31122,31120,31275,31306,31280,31279,31272,31270,31400,31403,31404,31470,31624,31644,31626,31633,31632,31638,31629,31628,31643,31630,31621,31640,21124,31641,31652,31618,31931,31935,31932,31930,32167,32183,32194,32163,32170,32193,32192,32197,32157,32206,32196,32198,32203,32204,32175,32185,32150,32188,32159,32166,32174,32169,32161,32201,32627,32738,32739,32741,32734,32804,32861,32860,33161,33158,33155,33159,33165,33164,33163,33301,33943,33956,33953,33951,33978,33998,33986,33964,33966,33963,33977,33972,33985,33997,33962,33946,33969,34e3,33949,33959,33979,33954,33940,33991,33996,33947,33961,33967,33960,34006,33944,33974,33999,33952,34007,34004,34002,34011,33968,33937,34401,34611,34595,34600,34667,34624,34606,34590,34593,34585,34587,34627,34604,34625,34622,34630,34592,34610,34602,34605,34620,34578,34618,34609,34613,34626,34598,34599,34616,34596,34586,34608,34577,35063,35047,35057,35058,35066,35070,35054,35068,35062,35067,35056,35052,35051,35229,35233,35231,35230,35305,35307,35304,35499,35481,35467,35474,35471,35478,35901,35944,35945,36053,36047,36055,36246,36361,36354,36351,36365,36349,36362,36355,36359,36358,36357,36350,36352,36356,36624,36625,36622,36621,37155,37148,37152,37154,37151,37149,37146,37156,37153,37147,37242,37234,37241,37235,37541,37540,37494,37531,37498,37536,37524,37546,37517,37542,37530,37547,37497,37527,37503,37539,37614,37518,37506,37525,37538,37501,37512,37537,37514,37510,37516,37529,37543,37502,37511,37545,37533,37515,37421,38558,38561,38655,38744,38781,38778,38782,38787,38784,38786,38779,38788,38785,38783,38862,38861,38934,39085,39086,39170,39168,39175,39325,39324,39363,39353,39355,39354,39362,39357,39367,39601,39651,39655,39742,39743,39776,39777,39775,40177,40178,40181,40615,20735,20739,20784,20728,20742,20743,20726,20734,20747,20748,20733,20746,21131,21132,21233,21231,22088,22082,22092,22069,22081,22090,22089,22086,22104,22106,22080,22067,22077,22060,22078,22072,22058,22074,22298,22699,22685,22705,22688,22691,22703,22700,22693,22689,22783,23295,23284,23293,23287,23286,23299,23288,23298,23289,23297,23303,23301,23311,23655,23961,23959,23967,23954,23970,23955,23957,23968,23964,23969,23962,23966,24169,24157,24160,24156,32243,24283,24286,24289,24393,24498,24971,24963,24953,25009,25008,24994,24969,24987,24979,25007,25005,24991,24978,25002,24993,24973,24934,25011,25133,25710,25712,25750,25760,25733,25751,25756,25743,25739,25738,25740,25763,25759,25704,25777,25752,25974,25978,25977,25979,26034,26035,26293,26288,26281,26290,26295,26282,26287,27136,27142,27159,27109,27128,27157,27121,27108,27168,27135,27116,27106,27163,27165,27134,27175,27122,27118,27156,27127,27111,27200,27144,27110,27131,27149,27132,27115,27145,27140,27160,27173,27151,27126,27174,27143,27124,27158,27473,27557,27555,27554,27558,27649,27648,27647,27650,28481,28454,28542,28551,28614,28562,28557,28553,28556,28514,28495,28549,28506,28566,28534,28524,28546,28501,28530,28498,28496,28503,28564,28563,28509,28416,28513,28523,28541,28519,28560,28499,28555,28521,28543,28565,28515,28535,28522,28539,29106,29103,29083,29104,29088,29082,29097,29109,29085,29093,29086,29092,29089,29098,29084,29095,29107,29336,29338,29528,29522,29534,29535,29536,29533,29531,29537,29530,29529,29538,29831,29833,29834,29830,29825,29821,29829,29832,29820,29817,29960,29959,30078,30245,30238,30233,30237,30236,30243,30234,30248,30235,30364,30365,30366,30363,30605,30607,30601,30600,30925,30907,30927,30924,30929,30926,30932,30920,30915,30916,30921,31130,31137,31136,31132,31138,31131,27510,31289,31410,31412,31411,31671,31691,31678,31660,31694,31663,31673,31690,31669,31941,31944,31948,31947,32247,32219,32234,32231,32215,32225,32259,32250,32230,32246,32241,32240,32238,32223,32630,32684,32688,32685,32749,32747,32746,32748,32742,32744,32868,32871,33187,33183,33182,33173,33186,33177,33175,33302,33359,33363,33362,33360,33358,33361,34084,34107,34063,34048,34089,34062,34057,34061,34079,34058,34087,34076,34043,34091,34042,34056,34060,34036,34090,34034,34069,34039,34027,34035,34044,34066,34026,34025,34070,34046,34088,34077,34094,34050,34045,34078,34038,34097,34086,34023,34024,34032,34031,34041,34072,34080,34096,34059,34073,34095,34402,34646,34659,34660,34679,34785,34675,34648,34644,34651,34642,34657,34650,34641,34654,34669,34666,34640,34638,34655,34653,34671,34668,34682,34670,34652,34661,34639,34683,34677,34658,34663,34665,34906,35077,35084,35092,35083,35095,35096,35097,35078,35094,35089,35086,35081,35234,35236,35235,35309,35312,35308,35535,35526,35512,35539,35537,35540,35541,35515,35543,35518,35520,35525,35544,35523,35514,35517,35545,35902,35917,35983,36069,36063,36057,36072,36058,36061,36071,36256,36252,36257,36251,36384,36387,36389,36388,36398,36373,36379,36374,36369,36377,36390,36391,36372,36370,36376,36371,36380,36375,36378,36652,36644,36632,36634,36640,36643,36630,36631,36979,36976,36975,36967,36971,37167,37163,37161,37162,37170,37158,37166,37253,37254,37258,37249,37250,37252,37248,37584,37571,37572,37568,37593,37558,37583,37617,37599,37592,37609,37591,37597,37580,37615,37570,37608,37578,37576,37582,37606,37581,37589,37577,37600,37598,37607,37585,37587,37557,37601,37574,37556,38268,38316,38315,38318,38320,38564,38562,38611,38661,38664,38658,38746,38794,38798,38792,38864,38863,38942,38941,38950,38953,38952,38944,38939,38951,39090,39176,39162,39185,39188,39190,39191,39189,39388,39373,39375,39379,39380,39374,39369,39382,39384,39371,39383,39372,39603,39660,39659,39667,39666,39665,39750,39747,39783,39796,39793,39782,39798,39797,39792,39784,39780,39788,40188,40186,40189,40191,40183,40199,40192,40185,40187,40200,40197,40196,40579,40659,40719,40720,20764,20755,20759,20762,20753,20958,21300,21473,22128,22112,22126,22131,22118,22115,22125,22130,22110,22135,22300,22299,22728,22717,22729,22719,22714,22722,22716,22726,23319,23321,23323,23329,23316,23315,23312,23318,23336,23322,23328,23326,23535,23980,23985,23977,23975,23989,23984,23982,23978,23976,23986,23981,23983,23988,24167,24168,24166,24175,24297,24295,24294,24296,24293,24395,24508,24989,25e3,24982,25029,25012,25030,25025,25036,25018,25023,25016,24972,25815,25814,25808,25807,25801,25789,25737,25795,25819,25843,25817,25907,25983,25980,26018,26312,26302,26304,26314,26315,26319,26301,26299,26298,26316,26403,27188,27238,27209,27239,27186,27240,27198,27229,27245,27254,27227,27217,27176,27226,27195,27199,27201,27242,27236,27216,27215,27220,27247,27241,27232,27196,27230,27222,27221,27213,27214,27206,27477,27476,27478,27559,27562,27563,27592,27591,27652,27651,27654,28589,28619,28579,28615,28604,28622,28616,28510,28612,28605,28574,28618,28584,28676,28581,28590,28602,28588,28586,28623,28607,28600,28578,28617,28587,28621,28591,28594,28592,29125,29122,29119,29112,29142,29120,29121,29131,29140,29130,29127,29135,29117,29144,29116,29126,29146,29147,29341,29342,29545,29542,29543,29548,29541,29547,29546,29823,29850,29856,29844,29842,29845,29857,29963,30080,30255,30253,30257,30269,30259,30268,30261,30258,30256,30395,30438,30618,30621,30625,30620,30619,30626,30627,30613,30617,30615,30941,30953,30949,30954,30942,30947,30939,30945,30946,30957,30943,30944,31140,31300,31304,31303,31414,31416,31413,31409,31415,31710,31715,31719,31709,31701,31717,31706,31720,31737,31700,31722,31714,31708,31723,31704,31711,31954,31956,31959,31952,31953,32274,32289,32279,32268,32287,32288,32275,32270,32284,32277,32282,32290,32267,32271,32278,32269,32276,32293,32292,32579,32635,32636,32634,32689,32751,32810,32809,32876,33201,33190,33198,33209,33205,33195,33200,33196,33204,33202,33207,33191,33266,33365,33366,33367,34134,34117,34155,34125,34131,34145,34136,34112,34118,34148,34113,34146,34116,34129,34119,34147,34110,34139,34161,34126,34158,34165,34133,34151,34144,34188,34150,34141,34132,34149,34156,34403,34405,34404,34715,34703,34711,34707,34706,34696,34689,34710,34712,34681,34695,34723,34693,34704,34705,34717,34692,34708,34716,34714,34697,35102,35110,35120,35117,35118,35111,35121,35106,35113,35107,35119,35116,35103,35313,35552,35554,35570,35572,35573,35549,35604,35556,35551,35568,35528,35550,35553,35560,35583,35567,35579,35985,35986,35984,36085,36078,36081,36080,36083,36204,36206,36261,36263,36403,36414,36408,36416,36421,36406,36412,36413,36417,36400,36415,36541,36662,36654,36661,36658,36665,36663,36660,36982,36985,36987,36998,37114,37171,37173,37174,37267,37264,37265,37261,37263,37671,37662,37640,37663,37638,37647,37754,37688,37692,37659,37667,37650,37633,37702,37677,37646,37645,37579,37661,37626,37669,37651,37625,37623,37684,37634,37668,37631,37673,37689,37685,37674,37652,37644,37643,37630,37641,37632,37627,37654,38332,38349,38334,38329,38330,38326,38335,38325,38333,38569,38612,38667,38674,38672,38809,38807,38804,38896,38904,38965,38959,38962,39204,39199,39207,39209,39326,39406,39404,39397,39396,39408,39395,39402,39401,39399,39609,39615,39604,39611,39670,39674,39673,39671,39731,39808,39813,39815,39804,39806,39803,39810,39827,39826,39824,39802,39829,39805,39816,40229,40215,40224,40222,40212,40233,40221,40216,40226,40208,40217,40223,40584,40582,40583,40622,40621,40661,40662,40698,40722,40765,20774,20773,20770,20772,20768,20777,21236,22163,22156,22157,22150,22148,22147,22142,22146,22143,22145,22742,22740,22735,22738,23341,23333,23346,23331,23340,23335,23334,23343,23342,23419,23537,23538,23991,24172,24170,24510,24507,25027,25013,25020,25063,25056,25061,25060,25064,25054,25839,25833,25827,25835,25828,25832,25985,25984,26038,26074,26322,27277,27286,27265,27301,27273,27295,27291,27297,27294,27271,27283,27278,27285,27267,27304,27300,27281,27263,27302,27290,27269,27276,27282,27483,27565,27657,28620,28585,28660,28628,28643,28636,28653,28647,28646,28638,28658,28637,28642,28648,29153,29169,29160,29170,29156,29168,29154,29555,29550,29551,29847,29874,29867,29840,29866,29869,29873,29861,29871,29968,29969,29970,29967,30084,30275,30280,30281,30279,30372,30441,30645,30635,30642,30647,30646,30644,30641,30632,30704,30963,30973,30978,30971,30972,30962,30981,30969,30974,30980,31147,31144,31324,31323,31318,31320,31316,31322,31422,31424,31425,31749,31759,31730,31744,31743,31739,31758,31732,31755,31731,31746,31753,31747,31745,31736,31741,31750,31728,31729,31760,31754,31976,32301,32316,32322,32307,38984,32312,32298,32329,32320,32327,32297,32332,32304,32315,32310,32324,32314,32581,32639,32638,32637,32756,32754,32812,33211,33220,33228,33226,33221,33223,33212,33257,33371,33370,33372,34179,34176,34191,34215,34197,34208,34187,34211,34171,34212,34202,34206,34167,34172,34185,34209,34170,34168,34135,34190,34198,34182,34189,34201,34205,34177,34210,34178,34184,34181,34169,34166,34200,34192,34207,34408,34750,34730,34733,34757,34736,34732,34745,34741,34748,34734,34761,34755,34754,34764,34743,34735,34756,34762,34740,34742,34751,34744,34749,34782,34738,35125,35123,35132,35134,35137,35154,35127,35138,35245,35247,35246,35314,35315,35614,35608,35606,35601,35589,35595,35618,35599,35602,35605,35591,35597,35592,35590,35612,35603,35610,35919,35952,35954,35953,35951,35989,35988,36089,36207,36430,36429,36435,36432,36428,36423,36675,36672,36997,36990,37176,37274,37282,37275,37273,37279,37281,37277,37280,37793,37763,37807,37732,37718,37703,37756,37720,37724,37750,37705,37712,37713,37728,37741,37775,37708,37738,37753,37719,37717,37714,37711,37745,37751,37755,37729,37726,37731,37735,37760,37710,37721,38343,38336,38345,38339,38341,38327,38574,38576,38572,38688,38687,38680,38685,38681,38810,38817,38812,38814,38813,38869,38868,38897,38977,38980,38986,38985,38981,38979,39205,39211,39212,39210,39219,39218,39215,39213,39217,39216,39320,39331,39329,39426,39418,39412,39415,39417,39416,39414,39419,39421,39422,39420,39427,39614,39678,39677,39681,39676,39752,39834,39848,39838,39835,39846,39841,39845,39844,39814,39842,39840,39855,40243,40257,40295,40246,40238,40239,40241,40248,40240,40261,40258,40259,40254,40247,40256,40253,32757,40237,40586,40585,40589,40624,40648,40666,40699,40703,40740,40739,40738,40788,40864,20785,20781,20782,22168,22172,22167,22170,22173,22169,22896,23356,23657,23658,24e3,24173,24174,25048,25055,25069,25070,25073,25066,25072,25067,25046,25065,25855,25860,25853,25848,25857,25859,25852,26004,26075,26330,26331,26328,27333,27321,27325,27361,27334,27322,27318,27319,27335,27316,27309,27486,27593,27659,28679,28684,28685,28673,28677,28692,28686,28671,28672,28667,28710,28668,28663,28682,29185,29183,29177,29187,29181,29558,29880,29888,29877,29889,29886,29878,29883,29890,29972,29971,30300,30308,30297,30288,30291,30295,30298,30374,30397,30444,30658,30650,30975,30988,30995,30996,30985,30992,30994,30993,31149,31148,31327,31772,31785,31769,31776,31775,31789,31773,31782,31784,31778,31781,31792,32348,32336,32342,32355,32344,32354,32351,32337,32352,32343,32339,32693,32691,32759,32760,32885,33233,33234,33232,33375,33374,34228,34246,34240,34243,34242,34227,34229,34237,34247,34244,34239,34251,34254,34248,34245,34225,34230,34258,34340,34232,34231,34238,34409,34791,34790,34786,34779,34795,34794,34789,34783,34803,34788,34772,34780,34771,34797,34776,34787,34724,34775,34777,34817,34804,34792,34781,35155,35147,35151,35148,35142,35152,35153,35145,35626,35623,35619,35635,35632,35637,35655,35631,35644,35646,35633,35621,35639,35622,35638,35630,35620,35643,35645,35642,35906,35957,35993,35992,35991,36094,36100,36098,36096,36444,36450,36448,36439,36438,36446,36453,36455,36443,36442,36449,36445,36457,36436,36678,36679,36680,36683,37160,37178,37179,37182,37288,37285,37287,37295,37290,37813,37772,37778,37815,37787,37789,37769,37799,37774,37802,37790,37798,37781,37768,37785,37791,37773,37809,37777,37810,37796,37800,37812,37795,37797,38354,38355,38353,38579,38615,38618,24002,38623,38616,38621,38691,38690,38693,38828,38830,38824,38827,38820,38826,38818,38821,38871,38873,38870,38872,38906,38992,38993,38994,39096,39233,39228,39226,39439,39435,39433,39437,39428,39441,39434,39429,39431,39430,39616,39644,39688,39684,39685,39721,39733,39754,39756,39755,39879,39878,39875,39871,39873,39861,39864,39891,39862,39876,39865,39869,40284,40275,40271,40266,40283,40267,40281,40278,40268,40279,40274,40276,40287,40280,40282,40590,40588,40671,40705,40704,40726,40741,40747,40746,40745,40744,40780,40789,20788,20789,21142,21239,21428,22187,22189,22182,22183,22186,22188,22746,22749,22747,22802,23357,23358,23359,24003,24176,24511,25083,25863,25872,25869,25865,25868,25870,25988,26078,26077,26334,27367,27360,27340,27345,27353,27339,27359,27356,27344,27371,27343,27341,27358,27488,27568,27660,28697,28711,28704,28694,28715,28705,28706,28707,28713,28695,28708,28700,28714,29196,29194,29191,29186,29189,29349,29350,29348,29347,29345,29899,29893,29879,29891,29974,30304,30665,30666,30660,30705,31005,31003,31009,31004,30999,31006,31152,31335,31336,31795,31804,31801,31788,31803,31980,31978,32374,32373,32376,32368,32375,32367,32378,32370,32372,32360,32587,32586,32643,32646,32695,32765,32766,32888,33239,33237,33380,33377,33379,34283,34289,34285,34265,34273,34280,34266,34263,34284,34290,34296,34264,34271,34275,34268,34257,34288,34278,34287,34270,34274,34816,34810,34819,34806,34807,34825,34828,34827,34822,34812,34824,34815,34826,34818,35170,35162,35163,35159,35169,35164,35160,35165,35161,35208,35255,35254,35318,35664,35656,35658,35648,35667,35670,35668,35659,35669,35665,35650,35666,35671,35907,35959,35958,35994,36102,36103,36105,36268,36266,36269,36267,36461,36472,36467,36458,36463,36475,36546,36690,36689,36687,36688,36691,36788,37184,37183,37296,37293,37854,37831,37839,37826,37850,37840,37881,37868,37836,37849,37801,37862,37834,37844,37870,37859,37845,37828,37838,37824,37842,37863,38269,38362,38363,38625,38697,38699,38700,38696,38694,38835,38839,38838,38877,38878,38879,39004,39001,39005,38999,39103,39101,39099,39102,39240,39239,39235,39334,39335,39450,39445,39461,39453,39460,39451,39458,39456,39463,39459,39454,39452,39444,39618,39691,39690,39694,39692,39735,39914,39915,39904,39902,39908,39910,39906,39920,39892,39895,39916,39900,39897,39909,39893,39905,39898,40311,40321,40330,40324,40328,40305,40320,40312,40326,40331,40332,40317,40299,40308,40309,40304,40297,40325,40307,40315,40322,40303,40313,40319,40327,40296,40596,40593,40640,40700,40749,40768,40769,40781,40790,40791,40792,21303,22194,22197,22195,22755,23365,24006,24007,24302,24303,24512,24513,25081,25879,25878,25877,25875,26079,26344,26339,26340,27379,27376,27370,27368,27385,27377,27374,27375,28732,28725,28719,28727,28724,28721,28738,28728,28735,28730,28729,28736,28731,28723,28737,29203,29204,29352,29565,29564,29882,30379,30378,30398,30445,30668,30670,30671,30669,30706,31013,31011,31015,31016,31012,31017,31154,31342,31340,31341,31479,31817,31816,31818,31815,31813,31982,32379,32382,32385,32384,32698,32767,32889,33243,33241,33291,33384,33385,34338,34303,34305,34302,34331,34304,34294,34308,34313,34309,34316,34301,34841,34832,34833,34839,34835,34838,35171,35174,35257,35319,35680,35690,35677,35688,35683,35685,35687,35693,36270,36486,36488,36484,36697,36694,36695,36693,36696,36698,37005,37187,37185,37303,37301,37298,37299,37899,37907,37883,37920,37903,37908,37886,37909,37904,37928,37913,37901,37877,37888,37879,37895,37902,37910,37906,37882,37897,37880,37898,37887,37884,37900,37878,37905,37894,38366,38368,38367,38702,38703,38841,38843,38909,38910,39008,39010,39011,39007,39105,39106,39248,39246,39257,39244,39243,39251,39474,39476,39473,39468,39466,39478,39465,39470,39480,39469,39623,39626,39622,39696,39698,39697,39947,39944,39927,39941,39954,39928,4e4,39943,39950,39942,39959,39956,39945,40351,40345,40356,40349,40338,40344,40336,40347,40352,40340,40348,40362,40343,40353,40346,40354,40360,40350,40355,40383,40361,40342,40358,40359,40601,40603,40602,40677,40676,40679,40678,40752,40750,40795,40800,40798,40797,40793,40849,20794,20793,21144,21143,22211,22205,22206,23368,23367,24011,24015,24305,25085,25883,27394,27388,27395,27384,27392,28739,28740,28746,28744,28745,28741,28742,29213,29210,29209,29566,29975,30314,30672,31021,31025,31023,31828,31827,31986,32394,32391,32392,32395,32390,32397,32589,32699,32816,33245,34328,34346,34342,34335,34339,34332,34329,34343,34350,34337,34336,34345,34334,34341,34857,34845,34843,34848,34852,34844,34859,34890,35181,35177,35182,35179,35322,35705,35704,35653,35706,35707,36112,36116,36271,36494,36492,36702,36699,36701,37190,37188,37189,37305,37951,37947,37942,37929,37949,37948,37936,37945,37930,37943,37932,37952,37937,38373,38372,38371,38709,38714,38847,38881,39012,39113,39110,39104,39256,39254,39481,39485,39494,39492,39490,39489,39482,39487,39629,39701,39703,39704,39702,39738,39762,39979,39965,39964,39980,39971,39976,39977,39972,39969,40375,40374,40380,40385,40391,40394,40399,40382,40389,40387,40379,40373,40398,40377,40378,40364,40392,40369,40365,40396,40371,40397,40370,40570,40604,40683,40686,40685,40731,40728,40730,40753,40782,40805,40804,40850,20153,22214,22213,22219,22897,23371,23372,24021,24017,24306,25889,25888,25894,25890,27403,27400,27401,27661,28757,28758,28759,28754,29214,29215,29353,29567,29912,29909,29913,29911,30317,30381,31029,31156,31344,31345,31831,31836,31833,31835,31834,31988,31985,32401,32591,32647,33246,33387,34356,34357,34355,34348,34354,34358,34860,34856,34854,34858,34853,35185,35263,35262,35323,35710,35716,35714,35718,35717,35711,36117,36501,36500,36506,36498,36496,36502,36503,36704,36706,37191,37964,37968,37962,37963,37967,37959,37957,37960,37961,37958,38719,38883,39018,39017,39115,39252,39259,39502,39507,39508,39500,39503,39496,39498,39497,39506,39504,39632,39705,39723,39739,39766,39765,40006,40008,39999,40004,39993,39987,40001,39996,39991,39988,39986,39997,39990,40411,40402,40414,40410,40395,40400,40412,40401,40415,40425,40409,40408,40406,40437,40405,40413,40630,40688,40757,40755,40754,40770,40811,40853,40866,20797,21145,22760,22759,22898,23373,24024,34863,24399,25089,25091,25092,25897,25893,26006,26347,27409,27410,27407,27594,28763,28762,29218,29570,29569,29571,30320,30676,31847,31846,32405,33388,34362,34368,34361,34364,34353,34363,34366,34864,34866,34862,34867,35190,35188,35187,35326,35724,35726,35723,35720,35909,36121,36504,36708,36707,37308,37986,37973,37981,37975,37982,38852,38853,38912,39510,39513,39710,39711,39712,40018,40024,40016,40010,40013,40011,40021,40025,40012,40014,40443,40439,40431,40419,40427,40440,40420,40438,40417,40430,40422,40434,40432,40418,40428,40436,40435,40424,40429,40642,40656,40690,40691,40710,40732,40760,40759,40758,40771,40783,40817,40816,40814,40815,22227,22221,23374,23661,25901,26349,26350,27411,28767,28769,28765,28768,29219,29915,29925,30677,31032,31159,31158,31850,32407,32649,33389,34371,34872,34871,34869,34891,35732,35733,36510,36511,36512,36509,37310,37309,37314,37995,37992,37993,38629,38726,38723,38727,38855,38885,39518,39637,39769,40035,40039,40038,40034,40030,40032,40450,40446,40455,40451,40454,40453,40448,40449,40457,40447,40445,40452,40608,40734,40774,40820,40821,40822,22228,25902,26040,27416,27417,27415,27418,28770,29222,29354,30680,30681,31033,31849,31851,31990,32410,32408,32411,32409,33248,33249,34374,34375,34376,35193,35194,35196,35195,35327,35736,35737,36517,36516,36515,37998,37997,37999,38001,38003,38729,39026,39263,40040,40046,40045,40459,40461,40464,40463,40466,40465,40609,40693,40713,40775,40824,40827,40826,40825,22302,28774,31855,34876,36274,36518,37315,38004,38008,38006,38005,39520,40052,40051,40049,40053,40468,40467,40694,40714,40868,28776,28773,31991,34410,34878,34877,34879,35742,35996,36521,36553,38731,39027,39028,39116,39265,39339,39524,39526,39527,39716,40469,40471,40776,25095,27422,29223,34380,36520,38018,38016,38017,39529,39528,39726,40473,29225,34379,35743,38019,40057,40631,30325,39531,40058,40477,28777,28778,40612,40830,40777,40856,30849,37561,35023,22715,24658,31911,23290,9556,9574,9559,9568,9580,9571,9562,9577,9565,9554,9572,9557,9566,9578,9569,9560,9575,9563,9555,9573,9558,9567,9579,9570,9561,9576,9564,9553,9552,9581,9582,9584,9583,65517,132423,37595,132575,147397,34124,17077,29679,20917,13897,149826,166372,37700,137691,33518,146632,30780,26436,25311,149811,166314,131744,158643,135941,20395,140525,20488,159017,162436,144896,150193,140563,20521,131966,24484,131968,131911,28379,132127,20605,20737,13434,20750,39020,14147,33814,149924,132231,20832,144308,20842,134143,139516,131813,140592,132494,143923,137603,23426,34685,132531,146585,20914,20920,40244,20937,20943,20945,15580,20947,150182,20915,20962,21314,20973,33741,26942,145197,24443,21003,21030,21052,21173,21079,21140,21177,21189,31765,34114,21216,34317,158483,21253,166622,21833,28377,147328,133460,147436,21299,21316,134114,27851,136998,26651,29653,24650,16042,14540,136936,29149,17570,21357,21364,165547,21374,21375,136598,136723,30694,21395,166555,21408,21419,21422,29607,153458,16217,29596,21441,21445,27721,20041,22526,21465,15019,134031,21472,147435,142755,21494,134263,21523,28793,21803,26199,27995,21613,158547,134516,21853,21647,21668,18342,136973,134877,15796,134477,166332,140952,21831,19693,21551,29719,21894,21929,22021,137431,147514,17746,148533,26291,135348,22071,26317,144010,26276,26285,22093,22095,30961,22257,38791,21502,22272,22255,22253,166758,13859,135759,22342,147877,27758,28811,22338,14001,158846,22502,136214,22531,136276,148323,22566,150517,22620,22698,13665,22752,22748,135740,22779,23551,22339,172368,148088,37843,13729,22815,26790,14019,28249,136766,23076,21843,136850,34053,22985,134478,158849,159018,137180,23001,137211,137138,159142,28017,137256,136917,23033,159301,23211,23139,14054,149929,23159,14088,23190,29797,23251,159649,140628,15749,137489,14130,136888,24195,21200,23414,25992,23420,162318,16388,18525,131588,23509,24928,137780,154060,132517,23539,23453,19728,23557,138052,23571,29646,23572,138405,158504,23625,18653,23685,23785,23791,23947,138745,138807,23824,23832,23878,138916,23738,24023,33532,14381,149761,139337,139635,33415,14390,15298,24110,27274,24181,24186,148668,134355,21414,20151,24272,21416,137073,24073,24308,164994,24313,24315,14496,24316,26686,37915,24333,131521,194708,15070,18606,135994,24378,157832,140240,24408,140401,24419,38845,159342,24434,37696,166454,24487,23990,15711,152144,139114,159992,140904,37334,131742,166441,24625,26245,137335,14691,15815,13881,22416,141236,31089,15936,24734,24740,24755,149890,149903,162387,29860,20705,23200,24932,33828,24898,194726,159442,24961,20980,132694,24967,23466,147383,141407,25043,166813,170333,25040,14642,141696,141505,24611,24924,25886,25483,131352,25285,137072,25301,142861,25452,149983,14871,25656,25592,136078,137212,25744,28554,142902,38932,147596,153373,25825,25829,38011,14950,25658,14935,25933,28438,150056,150051,25989,25965,25951,143486,26037,149824,19255,26065,16600,137257,26080,26083,24543,144384,26136,143863,143864,26180,143780,143781,26187,134773,26215,152038,26227,26228,138813,143921,165364,143816,152339,30661,141559,39332,26370,148380,150049,15147,27130,145346,26462,26471,26466,147917,168173,26583,17641,26658,28240,37436,26625,144358,159136,26717,144495,27105,27147,166623,26995,26819,144845,26881,26880,15666,14849,144956,15232,26540,26977,166474,17148,26934,27032,15265,132041,33635,20624,27129,144985,139562,27205,145155,27293,15347,26545,27336,168348,15373,27421,133411,24798,27445,27508,141261,28341,146139,132021,137560,14144,21537,146266,27617,147196,27612,27703,140427,149745,158545,27738,33318,27769,146876,17605,146877,147876,149772,149760,146633,14053,15595,134450,39811,143865,140433,32655,26679,159013,159137,159211,28054,27996,28284,28420,149887,147589,159346,34099,159604,20935,27804,28189,33838,166689,28207,146991,29779,147330,31180,28239,23185,143435,28664,14093,28573,146992,28410,136343,147517,17749,37872,28484,28508,15694,28532,168304,15675,28575,147780,28627,147601,147797,147513,147440,147380,147775,20959,147798,147799,147776,156125,28747,28798,28839,28801,28876,28885,28886,28895,16644,15848,29108,29078,148087,28971,28997,23176,29002,29038,23708,148325,29007,37730,148161,28972,148570,150055,150050,29114,166888,28861,29198,37954,29205,22801,37955,29220,37697,153093,29230,29248,149876,26813,29269,29271,15957,143428,26637,28477,29314,29482,29483,149539,165931,18669,165892,29480,29486,29647,29610,134202,158254,29641,29769,147938,136935,150052,26147,14021,149943,149901,150011,29687,29717,26883,150054,29753,132547,16087,29788,141485,29792,167602,29767,29668,29814,33721,29804,14128,29812,37873,27180,29826,18771,150156,147807,150137,166799,23366,166915,137374,29896,137608,29966,29929,29982,167641,137803,23511,167596,37765,30029,30026,30055,30062,151426,16132,150803,30094,29789,30110,30132,30210,30252,30289,30287,30319,30326,156661,30352,33263,14328,157969,157966,30369,30373,30391,30412,159647,33890,151709,151933,138780,30494,30502,30528,25775,152096,30552,144044,30639,166244,166248,136897,30708,30729,136054,150034,26826,30895,30919,30931,38565,31022,153056,30935,31028,30897,161292,36792,34948,166699,155779,140828,31110,35072,26882,31104,153687,31133,162617,31036,31145,28202,160038,16040,31174,168205,31188],"euc-kr":[44034,44035,44037,44038,44043,44044,44045,44046,44047,44056,44062,44063,44065,44066,44067,44069,44070,44071,44072,44073,44074,44075,44078,44082,44083,44084,null,null,null,null,null,null,44085,44086,44087,44090,44091,44093,44094,44095,44097,44098,44099,44100,44101,44102,44103,44104,44105,44106,44108,44110,44111,44112,44113,44114,44115,44117,null,null,null,null,null,null,44118,44119,44121,44122,44123,44125,44126,44127,44128,44129,44130,44131,44132,44133,44134,44135,44136,44137,44138,44139,44140,44141,44142,44143,44146,44147,44149,44150,44153,44155,44156,44157,44158,44159,44162,44167,44168,44173,44174,44175,44177,44178,44179,44181,44182,44183,44184,44185,44186,44187,44190,44194,44195,44196,44197,44198,44199,44203,44205,44206,44209,44210,44211,44212,44213,44214,44215,44218,44222,44223,44224,44226,44227,44229,44230,44231,44233,44234,44235,44237,44238,44239,44240,44241,44242,44243,44244,44246,44248,44249,44250,44251,44252,44253,44254,44255,44258,44259,44261,44262,44265,44267,44269,44270,44274,44276,44279,44280,44281,44282,44283,44286,44287,44289,44290,44291,44293,44295,44296,44297,44298,44299,44302,44304,44306,44307,44308,44309,44310,44311,44313,44314,44315,44317,44318,44319,44321,44322,44323,44324,44325,44326,44327,44328,44330,44331,44334,44335,44336,44337,44338,44339,null,null,null,null,null,null,44342,44343,44345,44346,44347,44349,44350,44351,44352,44353,44354,44355,44358,44360,44362,44363,44364,44365,44366,44367,44369,44370,44371,44373,44374,44375,null,null,null,null,null,null,44377,44378,44379,44380,44381,44382,44383,44384,44386,44388,44389,44390,44391,44392,44393,44394,44395,44398,44399,44401,44402,44407,44408,44409,44410,44414,44416,44419,44420,44421,44422,44423,44426,44427,44429,44430,44431,44433,44434,44435,44436,44437,44438,44439,44440,44441,44442,44443,44446,44447,44448,44449,44450,44451,44453,44454,44455,44456,44457,44458,44459,44460,44461,44462,44463,44464,44465,44466,44467,44468,44469,44470,44472,44473,44474,44475,44476,44477,44478,44479,44482,44483,44485,44486,44487,44489,44490,44491,44492,44493,44494,44495,44498,44500,44501,44502,44503,44504,44505,44506,44507,44509,44510,44511,44513,44514,44515,44517,44518,44519,44520,44521,44522,44523,44524,44525,44526,44527,44528,44529,44530,44531,44532,44533,44534,44535,44538,44539,44541,44542,44546,44547,44548,44549,44550,44551,44554,44556,44558,44559,44560,44561,44562,44563,44565,44566,44567,44568,44569,44570,44571,44572,null,null,null,null,null,null,44573,44574,44575,44576,44577,44578,44579,44580,44581,44582,44583,44584,44585,44586,44587,44588,44589,44590,44591,44594,44595,44597,44598,44601,44603,44604,null,null,null,null,null,null,44605,44606,44607,44610,44612,44615,44616,44617,44619,44623,44625,44626,44627,44629,44631,44632,44633,44634,44635,44638,44642,44643,44644,44646,44647,44650,44651,44653,44654,44655,44657,44658,44659,44660,44661,44662,44663,44666,44670,44671,44672,44673,44674,44675,44678,44679,44680,44681,44682,44683,44685,44686,44687,44688,44689,44690,44691,44692,44693,44694,44695,44696,44697,44698,44699,44700,44701,44702,44703,44704,44705,44706,44707,44708,44709,44710,44711,44712,44713,44714,44715,44716,44717,44718,44719,44720,44721,44722,44723,44724,44725,44726,44727,44728,44729,44730,44731,44735,44737,44738,44739,44741,44742,44743,44744,44745,44746,44747,44750,44754,44755,44756,44757,44758,44759,44762,44763,44765,44766,44767,44768,44769,44770,44771,44772,44773,44774,44775,44777,44778,44780,44782,44783,44784,44785,44786,44787,44789,44790,44791,44793,44794,44795,44797,44798,44799,44800,44801,44802,44803,44804,44805,null,null,null,null,null,null,44806,44809,44810,44811,44812,44814,44815,44817,44818,44819,44820,44821,44822,44823,44824,44825,44826,44827,44828,44829,44830,44831,44832,44833,44834,44835,null,null,null,null,null,null,44836,44837,44838,44839,44840,44841,44842,44843,44846,44847,44849,44851,44853,44854,44855,44856,44857,44858,44859,44862,44864,44868,44869,44870,44871,44874,44875,44876,44877,44878,44879,44881,44882,44883,44884,44885,44886,44887,44888,44889,44890,44891,44894,44895,44896,44897,44898,44899,44902,44903,44904,44905,44906,44907,44908,44909,44910,44911,44912,44913,44914,44915,44916,44917,44918,44919,44920,44922,44923,44924,44925,44926,44927,44929,44930,44931,44933,44934,44935,44937,44938,44939,44940,44941,44942,44943,44946,44947,44948,44950,44951,44952,44953,44954,44955,44957,44958,44959,44960,44961,44962,44963,44964,44965,44966,44967,44968,44969,44970,44971,44972,44973,44974,44975,44976,44977,44978,44979,44980,44981,44982,44983,44986,44987,44989,44990,44991,44993,44994,44995,44996,44997,44998,45002,45004,45007,45008,45009,45010,45011,45013,45014,45015,45016,45017,45018,45019,45021,45022,45023,45024,45025,null,null,null,null,null,null,45026,45027,45028,45029,45030,45031,45034,45035,45036,45037,45038,45039,45042,45043,45045,45046,45047,45049,45050,45051,45052,45053,45054,45055,45058,45059,null,null,null,null,null,null,45061,45062,45063,45064,45065,45066,45067,45069,45070,45071,45073,45074,45075,45077,45078,45079,45080,45081,45082,45083,45086,45087,45088,45089,45090,45091,45092,45093,45094,45095,45097,45098,45099,45100,45101,45102,45103,45104,45105,45106,45107,45108,45109,45110,45111,45112,45113,45114,45115,45116,45117,45118,45119,45120,45121,45122,45123,45126,45127,45129,45131,45133,45135,45136,45137,45138,45142,45144,45146,45147,45148,45150,45151,45152,45153,45154,45155,45156,45157,45158,45159,45160,45161,45162,45163,45164,45165,45166,45167,45168,45169,45170,45171,45172,45173,45174,45175,45176,45177,45178,45179,45182,45183,45185,45186,45187,45189,45190,45191,45192,45193,45194,45195,45198,45200,45202,45203,45204,45205,45206,45207,45211,45213,45214,45219,45220,45221,45222,45223,45226,45232,45234,45238,45239,45241,45242,45243,45245,45246,45247,45248,45249,45250,45251,45254,45258,45259,45260,45261,45262,45263,45266,null,null,null,null,null,null,45267,45269,45270,45271,45273,45274,45275,45276,45277,45278,45279,45281,45282,45283,45284,45286,45287,45288,45289,45290,45291,45292,45293,45294,45295,45296,null,null,null,null,null,null,45297,45298,45299,45300,45301,45302,45303,45304,45305,45306,45307,45308,45309,45310,45311,45312,45313,45314,45315,45316,45317,45318,45319,45322,45325,45326,45327,45329,45332,45333,45334,45335,45338,45342,45343,45344,45345,45346,45350,45351,45353,45354,45355,45357,45358,45359,45360,45361,45362,45363,45366,45370,45371,45372,45373,45374,45375,45378,45379,45381,45382,45383,45385,45386,45387,45388,45389,45390,45391,45394,45395,45398,45399,45401,45402,45403,45405,45406,45407,45409,45410,45411,45412,45413,45414,45415,45416,45417,45418,45419,45420,45421,45422,45423,45424,45425,45426,45427,45428,45429,45430,45431,45434,45435,45437,45438,45439,45441,45443,45444,45445,45446,45447,45450,45452,45454,45455,45456,45457,45461,45462,45463,45465,45466,45467,45469,45470,45471,45472,45473,45474,45475,45476,45477,45478,45479,45481,45482,45483,45484,45485,45486,45487,45488,45489,45490,45491,45492,45493,45494,45495,45496,null,null,null,null,null,null,45497,45498,45499,45500,45501,45502,45503,45504,45505,45506,45507,45508,45509,45510,45511,45512,45513,45514,45515,45517,45518,45519,45521,45522,45523,45525,null,null,null,null,null,null,45526,45527,45528,45529,45530,45531,45534,45536,45537,45538,45539,45540,45541,45542,45543,45546,45547,45549,45550,45551,45553,45554,45555,45556,45557,45558,45559,45560,45562,45564,45566,45567,45568,45569,45570,45571,45574,45575,45577,45578,45581,45582,45583,45584,45585,45586,45587,45590,45592,45594,45595,45596,45597,45598,45599,45601,45602,45603,45604,45605,45606,45607,45608,45609,45610,45611,45612,45613,45614,45615,45616,45617,45618,45619,45621,45622,45623,45624,45625,45626,45627,45629,45630,45631,45632,45633,45634,45635,45636,45637,45638,45639,45640,45641,45642,45643,45644,45645,45646,45647,45648,45649,45650,45651,45652,45653,45654,45655,45657,45658,45659,45661,45662,45663,45665,45666,45667,45668,45669,45670,45671,45674,45675,45676,45677,45678,45679,45680,45681,45682,45683,45686,45687,45688,45689,45690,45691,45693,45694,45695,45696,45697,45698,45699,45702,45703,45704,45706,45707,45708,45709,45710,null,null,null,null,null,null,45711,45714,45715,45717,45718,45719,45723,45724,45725,45726,45727,45730,45732,45735,45736,45737,45739,45741,45742,45743,45745,45746,45747,45749,45750,45751,null,null,null,null,null,null,45752,45753,45754,45755,45756,45757,45758,45759,45760,45761,45762,45763,45764,45765,45766,45767,45770,45771,45773,45774,45775,45777,45779,45780,45781,45782,45783,45786,45788,45790,45791,45792,45793,45795,45799,45801,45802,45808,45809,45810,45814,45820,45821,45822,45826,45827,45829,45830,45831,45833,45834,45835,45836,45837,45838,45839,45842,45846,45847,45848,45849,45850,45851,45853,45854,45855,45856,45857,45858,45859,45860,45861,45862,45863,45864,45865,45866,45867,45868,45869,45870,45871,45872,45873,45874,45875,45876,45877,45878,45879,45880,45881,45882,45883,45884,45885,45886,45887,45888,45889,45890,45891,45892,45893,45894,45895,45896,45897,45898,45899,45900,45901,45902,45903,45904,45905,45906,45907,45911,45913,45914,45917,45920,45921,45922,45923,45926,45928,45930,45932,45933,45935,45938,45939,45941,45942,45943,45945,45946,45947,45948,45949,45950,45951,45954,45958,45959,45960,45961,45962,45963,45965,null,null,null,null,null,null,45966,45967,45969,45970,45971,45973,45974,45975,45976,45977,45978,45979,45980,45981,45982,45983,45986,45987,45988,45989,45990,45991,45993,45994,45995,45997,null,null,null,null,null,null,45998,45999,46e3,46001,46002,46003,46004,46005,46006,46007,46008,46009,46010,46011,46012,46013,46014,46015,46016,46017,46018,46019,46022,46023,46025,46026,46029,46031,46033,46034,46035,46038,46040,46042,46044,46046,46047,46049,46050,46051,46053,46054,46055,46057,46058,46059,46060,46061,46062,46063,46064,46065,46066,46067,46068,46069,46070,46071,46072,46073,46074,46075,46077,46078,46079,46080,46081,46082,46083,46084,46085,46086,46087,46088,46089,46090,46091,46092,46093,46094,46095,46097,46098,46099,46100,46101,46102,46103,46105,46106,46107,46109,46110,46111,46113,46114,46115,46116,46117,46118,46119,46122,46124,46125,46126,46127,46128,46129,46130,46131,46133,46134,46135,46136,46137,46138,46139,46140,46141,46142,46143,46144,46145,46146,46147,46148,46149,46150,46151,46152,46153,46154,46155,46156,46157,46158,46159,46162,46163,46165,46166,46167,46169,46170,46171,46172,46173,46174,46175,46178,46180,46182,null,null,null,null,null,null,46183,46184,46185,46186,46187,46189,46190,46191,46192,46193,46194,46195,46196,46197,46198,46199,46200,46201,46202,46203,46204,46205,46206,46207,46209,46210,null,null,null,null,null,null,46211,46212,46213,46214,46215,46217,46218,46219,46220,46221,46222,46223,46224,46225,46226,46227,46228,46229,46230,46231,46232,46233,46234,46235,46236,46238,46239,46240,46241,46242,46243,46245,46246,46247,46249,46250,46251,46253,46254,46255,46256,46257,46258,46259,46260,46262,46264,46266,46267,46268,46269,46270,46271,46273,46274,46275,46277,46278,46279,46281,46282,46283,46284,46285,46286,46287,46289,46290,46291,46292,46294,46295,46296,46297,46298,46299,46302,46303,46305,46306,46309,46311,46312,46313,46314,46315,46318,46320,46322,46323,46324,46325,46326,46327,46329,46330,46331,46332,46333,46334,46335,46336,46337,46338,46339,46340,46341,46342,46343,46344,46345,46346,46347,46348,46349,46350,46351,46352,46353,46354,46355,46358,46359,46361,46362,46365,46366,46367,46368,46369,46370,46371,46374,46379,46380,46381,46382,46383,46386,46387,46389,46390,46391,46393,46394,46395,46396,46397,46398,46399,46402,46406,null,null,null,null,null,null,46407,46408,46409,46410,46414,46415,46417,46418,46419,46421,46422,46423,46424,46425,46426,46427,46430,46434,46435,46436,46437,46438,46439,46440,46441,46442,null,null,null,null,null,null,46443,46444,46445,46446,46447,46448,46449,46450,46451,46452,46453,46454,46455,46456,46457,46458,46459,46460,46461,46462,46463,46464,46465,46466,46467,46468,46469,46470,46471,46472,46473,46474,46475,46476,46477,46478,46479,46480,46481,46482,46483,46484,46485,46486,46487,46488,46489,46490,46491,46492,46493,46494,46495,46498,46499,46501,46502,46503,46505,46508,46509,46510,46511,46514,46518,46519,46520,46521,46522,46526,46527,46529,46530,46531,46533,46534,46535,46536,46537,46538,46539,46542,46546,46547,46548,46549,46550,46551,46553,46554,46555,46556,46557,46558,46559,46560,46561,46562,46563,46564,46565,46566,46567,46568,46569,46570,46571,46573,46574,46575,46576,46577,46578,46579,46580,46581,46582,46583,46584,46585,46586,46587,46588,46589,46590,46591,46592,46593,46594,46595,46596,46597,46598,46599,46600,46601,46602,46603,46604,46605,46606,46607,46610,46611,46613,46614,46615,46617,46618,46619,46620,46621,null,null,null,null,null,null,46622,46623,46624,46625,46626,46627,46628,46630,46631,46632,46633,46634,46635,46637,46638,46639,46640,46641,46642,46643,46645,46646,46647,46648,46649,46650,null,null,null,null,null,null,46651,46652,46653,46654,46655,46656,46657,46658,46659,46660,46661,46662,46663,46665,46666,46667,46668,46669,46670,46671,46672,46673,46674,46675,46676,46677,46678,46679,46680,46681,46682,46683,46684,46685,46686,46687,46688,46689,46690,46691,46693,46694,46695,46697,46698,46699,46700,46701,46702,46703,46704,46705,46706,46707,46708,46709,46710,46711,46712,46713,46714,46715,46716,46717,46718,46719,46720,46721,46722,46723,46724,46725,46726,46727,46728,46729,46730,46731,46732,46733,46734,46735,46736,46737,46738,46739,46740,46741,46742,46743,46744,46745,46746,46747,46750,46751,46753,46754,46755,46757,46758,46759,46760,46761,46762,46765,46766,46767,46768,46770,46771,46772,46773,46774,46775,46776,46777,46778,46779,46780,46781,46782,46783,46784,46785,46786,46787,46788,46789,46790,46791,46792,46793,46794,46795,46796,46797,46798,46799,46800,46801,46802,46803,46805,46806,46807,46808,46809,46810,46811,46812,46813,null,null,null,null,null,null,46814,46815,46816,46817,46818,46819,46820,46821,46822,46823,46824,46825,46826,46827,46828,46829,46830,46831,46833,46834,46835,46837,46838,46839,46841,46842,null,null,null,null,null,null,46843,46844,46845,46846,46847,46850,46851,46852,46854,46855,46856,46857,46858,46859,46860,46861,46862,46863,46864,46865,46866,46867,46868,46869,46870,46871,46872,46873,46874,46875,46876,46877,46878,46879,46880,46881,46882,46883,46884,46885,46886,46887,46890,46891,46893,46894,46897,46898,46899,46900,46901,46902,46903,46906,46908,46909,46910,46911,46912,46913,46914,46915,46917,46918,46919,46921,46922,46923,46925,46926,46927,46928,46929,46930,46931,46934,46935,46936,46937,46938,46939,46940,46941,46942,46943,46945,46946,46947,46949,46950,46951,46953,46954,46955,46956,46957,46958,46959,46962,46964,46966,46967,46968,46969,46970,46971,46974,46975,46977,46978,46979,46981,46982,46983,46984,46985,46986,46987,46990,46995,46996,46997,47002,47003,47005,47006,47007,47009,47010,47011,47012,47013,47014,47015,47018,47022,47023,47024,47025,47026,47027,47030,47031,47033,47034,47035,47036,47037,47038,47039,47040,47041,null,null,null,null,null,null,47042,47043,47044,47045,47046,47048,47050,47051,47052,47053,47054,47055,47056,47057,47058,47059,47060,47061,47062,47063,47064,47065,47066,47067,47068,47069,null,null,null,null,null,null,47070,47071,47072,47073,47074,47075,47076,47077,47078,47079,47080,47081,47082,47083,47086,47087,47089,47090,47091,47093,47094,47095,47096,47097,47098,47099,47102,47106,47107,47108,47109,47110,47114,47115,47117,47118,47119,47121,47122,47123,47124,47125,47126,47127,47130,47132,47134,47135,47136,47137,47138,47139,47142,47143,47145,47146,47147,47149,47150,47151,47152,47153,47154,47155,47158,47162,47163,47164,47165,47166,47167,47169,47170,47171,47173,47174,47175,47176,47177,47178,47179,47180,47181,47182,47183,47184,47186,47188,47189,47190,47191,47192,47193,47194,47195,47198,47199,47201,47202,47203,47205,47206,47207,47208,47209,47210,47211,47214,47216,47218,47219,47220,47221,47222,47223,47225,47226,47227,47229,47230,47231,47232,47233,47234,47235,47236,47237,47238,47239,47240,47241,47242,47243,47244,47246,47247,47248,47249,47250,47251,47252,47253,47254,47255,47256,47257,47258,47259,47260,47261,47262,47263,null,null,null,null,null,null,47264,47265,47266,47267,47268,47269,47270,47271,47273,47274,47275,47276,47277,47278,47279,47281,47282,47283,47285,47286,47287,47289,47290,47291,47292,47293,null,null,null,null,null,null,47294,47295,47298,47300,47302,47303,47304,47305,47306,47307,47309,47310,47311,47313,47314,47315,47317,47318,47319,47320,47321,47322,47323,47324,47326,47328,47330,47331,47332,47333,47334,47335,47338,47339,47341,47342,47343,47345,47346,47347,47348,47349,47350,47351,47354,47356,47358,47359,47360,47361,47362,47363,47365,47366,47367,47368,47369,47370,47371,47372,47373,47374,47375,47376,47377,47378,47379,47380,47381,47382,47383,47385,47386,47387,47388,47389,47390,47391,47393,47394,47395,47396,47397,47398,47399,47400,47401,47402,47403,47404,47405,47406,47407,47408,47409,47410,47411,47412,47413,47414,47415,47416,47417,47418,47419,47422,47423,47425,47426,47427,47429,47430,47431,47432,47433,47434,47435,47437,47438,47440,47442,47443,47444,47445,47446,47447,47450,47451,47453,47454,47455,47457,47458,47459,47460,47461,47462,47463,47466,47468,47470,47471,47472,47473,47474,47475,47478,47479,47481,47482,47483,47485,null,null,null,null,null,null,47486,47487,47488,47489,47490,47491,47494,47496,47499,47500,47503,47504,47505,47506,47507,47508,47509,47510,47511,47512,47513,47514,47515,47516,47517,47518,null,null,null,null,null,null,47519,47520,47521,47522,47523,47524,47525,47526,47527,47528,47529,47530,47531,47534,47535,47537,47538,47539,47541,47542,47543,47544,47545,47546,47547,47550,47552,47554,47555,47556,47557,47558,47559,47562,47563,47565,47571,47572,47573,47574,47575,47578,47580,47583,47584,47586,47590,47591,47593,47594,47595,47597,47598,47599,47600,47601,47602,47603,47606,47611,47612,47613,47614,47615,47618,47619,47620,47621,47622,47623,47625,47626,47627,47628,47629,47630,47631,47632,47633,47634,47635,47636,47638,47639,47640,47641,47642,47643,47644,47645,47646,47647,47648,47649,47650,47651,47652,47653,47654,47655,47656,47657,47658,47659,47660,47661,47662,47663,47664,47665,47666,47667,47668,47669,47670,47671,47674,47675,47677,47678,47679,47681,47683,47684,47685,47686,47687,47690,47692,47695,47696,47697,47698,47702,47703,47705,47706,47707,47709,47710,47711,47712,47713,47714,47715,47718,47722,47723,47724,47725,47726,47727,null,null,null,null,null,null,47730,47731,47733,47734,47735,47737,47738,47739,47740,47741,47742,47743,47744,47745,47746,47750,47752,47753,47754,47755,47757,47758,47759,47760,47761,47762,null,null,null,null,null,null,47763,47764,47765,47766,47767,47768,47769,47770,47771,47772,47773,47774,47775,47776,47777,47778,47779,47780,47781,47782,47783,47786,47789,47790,47791,47793,47795,47796,47797,47798,47799,47802,47804,47806,47807,47808,47809,47810,47811,47813,47814,47815,47817,47818,47819,47820,47821,47822,47823,47824,47825,47826,47827,47828,47829,47830,47831,47834,47835,47836,47837,47838,47839,47840,47841,47842,47843,47844,47845,47846,47847,47848,47849,47850,47851,47852,47853,47854,47855,47856,47857,47858,47859,47860,47861,47862,47863,47864,47865,47866,47867,47869,47870,47871,47873,47874,47875,47877,47878,47879,47880,47881,47882,47883,47884,47886,47888,47890,47891,47892,47893,47894,47895,47897,47898,47899,47901,47902,47903,47905,47906,47907,47908,47909,47910,47911,47912,47914,47916,47917,47918,47919,47920,47921,47922,47923,47927,47929,47930,47935,47936,47937,47938,47939,47942,47944,47946,47947,47948,47950,47953,47954,null,null,null,null,null,null,47955,47957,47958,47959,47961,47962,47963,47964,47965,47966,47967,47968,47970,47972,47973,47974,47975,47976,47977,47978,47979,47981,47982,47983,47984,47985,null,null,null,null,null,null,47986,47987,47988,47989,47990,47991,47992,47993,47994,47995,47996,47997,47998,47999,48e3,48001,48002,48003,48004,48005,48006,48007,48009,48010,48011,48013,48014,48015,48017,48018,48019,48020,48021,48022,48023,48024,48025,48026,48027,48028,48029,48030,48031,48032,48033,48034,48035,48037,48038,48039,48041,48042,48043,48045,48046,48047,48048,48049,48050,48051,48053,48054,48056,48057,48058,48059,48060,48061,48062,48063,48065,48066,48067,48069,48070,48071,48073,48074,48075,48076,48077,48078,48079,48081,48082,48084,48085,48086,48087,48088,48089,48090,48091,48092,48093,48094,48095,48096,48097,48098,48099,48100,48101,48102,48103,48104,48105,48106,48107,48108,48109,48110,48111,48112,48113,48114,48115,48116,48117,48118,48119,48122,48123,48125,48126,48129,48131,48132,48133,48134,48135,48138,48142,48144,48146,48147,48153,48154,48160,48161,48162,48163,48166,48168,48170,48171,48172,48174,48175,48178,48179,48181,null,null,null,null,null,null,48182,48183,48185,48186,48187,48188,48189,48190,48191,48194,48198,48199,48200,48202,48203,48206,48207,48209,48210,48211,48212,48213,48214,48215,48216,48217,null,null,null,null,null,null,48218,48219,48220,48222,48223,48224,48225,48226,48227,48228,48229,48230,48231,48232,48233,48234,48235,48236,48237,48238,48239,48240,48241,48242,48243,48244,48245,48246,48247,48248,48249,48250,48251,48252,48253,48254,48255,48256,48257,48258,48259,48262,48263,48265,48266,48269,48271,48272,48273,48274,48275,48278,48280,48283,48284,48285,48286,48287,48290,48291,48293,48294,48297,48298,48299,48300,48301,48302,48303,48306,48310,48311,48312,48313,48314,48315,48318,48319,48321,48322,48323,48325,48326,48327,48328,48329,48330,48331,48332,48334,48338,48339,48340,48342,48343,48345,48346,48347,48349,48350,48351,48352,48353,48354,48355,48356,48357,48358,48359,48360,48361,48362,48363,48364,48365,48366,48367,48368,48369,48370,48371,48375,48377,48378,48379,48381,48382,48383,48384,48385,48386,48387,48390,48392,48394,48395,48396,48397,48398,48399,48401,48402,48403,48405,48406,48407,48408,48409,48410,48411,48412,48413,null,null,null,null,null,null,48414,48415,48416,48417,48418,48419,48421,48422,48423,48424,48425,48426,48427,48429,48430,48431,48432,48433,48434,48435,48436,48437,48438,48439,48440,48441,null,null,null,null,null,null,48442,48443,48444,48445,48446,48447,48449,48450,48451,48452,48453,48454,48455,48458,48459,48461,48462,48463,48465,48466,48467,48468,48469,48470,48471,48474,48475,48476,48477,48478,48479,48480,48481,48482,48483,48485,48486,48487,48489,48490,48491,48492,48493,48494,48495,48496,48497,48498,48499,48500,48501,48502,48503,48504,48505,48506,48507,48508,48509,48510,48511,48514,48515,48517,48518,48523,48524,48525,48526,48527,48530,48532,48534,48535,48536,48539,48541,48542,48543,48544,48545,48546,48547,48549,48550,48551,48552,48553,48554,48555,48556,48557,48558,48559,48561,48562,48563,48564,48565,48566,48567,48569,48570,48571,48572,48573,48574,48575,48576,48577,48578,48579,48580,48581,48582,48583,48584,48585,48586,48587,48588,48589,48590,48591,48592,48593,48594,48595,48598,48599,48601,48602,48603,48605,48606,48607,48608,48609,48610,48611,48612,48613,48614,48615,48616,48618,48619,48620,48621,48622,48623,48625,null,null,null,null,null,null,48626,48627,48629,48630,48631,48633,48634,48635,48636,48637,48638,48639,48641,48642,48644,48646,48647,48648,48649,48650,48651,48654,48655,48657,48658,48659,null,null,null,null,null,null,48661,48662,48663,48664,48665,48666,48667,48670,48672,48673,48674,48675,48676,48677,48678,48679,48680,48681,48682,48683,48684,48685,48686,48687,48688,48689,48690,48691,48692,48693,48694,48695,48696,48697,48698,48699,48700,48701,48702,48703,48704,48705,48706,48707,48710,48711,48713,48714,48715,48717,48719,48720,48721,48722,48723,48726,48728,48732,48733,48734,48735,48738,48739,48741,48742,48743,48745,48747,48748,48749,48750,48751,48754,48758,48759,48760,48761,48762,48766,48767,48769,48770,48771,48773,48774,48775,48776,48777,48778,48779,48782,48786,48787,48788,48789,48790,48791,48794,48795,48796,48797,48798,48799,48800,48801,48802,48803,48804,48805,48806,48807,48809,48810,48811,48812,48813,48814,48815,48816,48817,48818,48819,48820,48821,48822,48823,48824,48825,48826,48827,48828,48829,48830,48831,48832,48833,48834,48835,48836,48837,48838,48839,48840,48841,48842,48843,48844,48845,48846,48847,48850,48851,null,null,null,null,null,null,48853,48854,48857,48858,48859,48860,48861,48862,48863,48865,48866,48870,48871,48872,48873,48874,48875,48877,48878,48879,48880,48881,48882,48883,48884,48885,null,null,null,null,null,null,48886,48887,48888,48889,48890,48891,48892,48893,48894,48895,48896,48898,48899,48900,48901,48902,48903,48906,48907,48908,48909,48910,48911,48912,48913,48914,48915,48916,48917,48918,48919,48922,48926,48927,48928,48929,48930,48931,48932,48933,48934,48935,48936,48937,48938,48939,48940,48941,48942,48943,48944,48945,48946,48947,48948,48949,48950,48951,48952,48953,48954,48955,48956,48957,48958,48959,48962,48963,48965,48966,48967,48969,48970,48971,48972,48973,48974,48975,48978,48979,48980,48982,48983,48984,48985,48986,48987,48988,48989,48990,48991,48992,48993,48994,48995,48996,48997,48998,48999,49e3,49001,49002,49003,49004,49005,49006,49007,49008,49009,49010,49011,49012,49013,49014,49015,49016,49017,49018,49019,49020,49021,49022,49023,49024,49025,49026,49027,49028,49029,49030,49031,49032,49033,49034,49035,49036,49037,49038,49039,49040,49041,49042,49043,49045,49046,49047,49048,49049,49050,49051,49052,49053,null,null,null,null,null,null,49054,49055,49056,49057,49058,49059,49060,49061,49062,49063,49064,49065,49066,49067,49068,49069,49070,49071,49073,49074,49075,49076,49077,49078,49079,49080,null,null,null,null,null,null,49081,49082,49083,49084,49085,49086,49087,49088,49089,49090,49091,49092,49094,49095,49096,49097,49098,49099,49102,49103,49105,49106,49107,49109,49110,49111,49112,49113,49114,49115,49117,49118,49120,49122,49123,49124,49125,49126,49127,49128,49129,49130,49131,49132,49133,49134,49135,49136,49137,49138,49139,49140,49141,49142,49143,49144,49145,49146,49147,49148,49149,49150,49151,49152,49153,49154,49155,49156,49157,49158,49159,49160,49161,49162,49163,49164,49165,49166,49167,49168,49169,49170,49171,49172,49173,49174,49175,49176,49177,49178,49179,49180,49181,49182,49183,49184,49185,49186,49187,49188,49189,49190,49191,49192,49193,49194,49195,49196,49197,49198,49199,49200,49201,49202,49203,49204,49205,49206,49207,49208,49209,49210,49211,49213,49214,49215,49216,49217,49218,49219,49220,49221,49222,49223,49224,49225,49226,49227,49228,49229,49230,49231,49232,49234,49235,49236,49237,49238,49239,49241,49242,49243,null,null,null,null,null,null,49245,49246,49247,49249,49250,49251,49252,49253,49254,49255,49258,49259,49260,49261,49262,49263,49264,49265,49266,49267,49268,49269,49270,49271,49272,49273,null,null,null,null,null,null,49274,49275,49276,49277,49278,49279,49280,49281,49282,49283,49284,49285,49286,49287,49288,49289,49290,49291,49292,49293,49294,49295,49298,49299,49301,49302,49303,49305,49306,49307,49308,49309,49310,49311,49314,49316,49318,49319,49320,49321,49322,49323,49326,49329,49330,49335,49336,49337,49338,49339,49342,49346,49347,49348,49350,49351,49354,49355,49357,49358,49359,49361,49362,49363,49364,49365,49366,49367,49370,49374,49375,49376,49377,49378,49379,49382,49383,49385,49386,49387,49389,49390,49391,49392,49393,49394,49395,49398,49400,49402,49403,49404,49405,49406,49407,49409,49410,49411,49413,49414,49415,49417,49418,49419,49420,49421,49422,49423,49425,49426,49427,49428,49430,49431,49432,49433,49434,49435,49441,49442,49445,49448,49449,49450,49451,49454,49458,49459,49460,49461,49463,49466,49467,49469,49470,49471,49473,49474,49475,49476,49477,49478,49479,49482,49486,49487,49488,49489,49490,49491,49494,49495,null,null,null,null,null,null,49497,49498,49499,49501,49502,49503,49504,49505,49506,49507,49510,49514,49515,49516,49517,49518,49519,49521,49522,49523,49525,49526,49527,49529,49530,49531,null,null,null,null,null,null,49532,49533,49534,49535,49536,49537,49538,49539,49540,49542,49543,49544,49545,49546,49547,49551,49553,49554,49555,49557,49559,49560,49561,49562,49563,49566,49568,49570,49571,49572,49574,49575,49578,49579,49581,49582,49583,49585,49586,49587,49588,49589,49590,49591,49592,49593,49594,49595,49596,49598,49599,49600,49601,49602,49603,49605,49606,49607,49609,49610,49611,49613,49614,49615,49616,49617,49618,49619,49621,49622,49625,49626,49627,49628,49629,49630,49631,49633,49634,49635,49637,49638,49639,49641,49642,49643,49644,49645,49646,49647,49650,49652,49653,49654,49655,49656,49657,49658,49659,49662,49663,49665,49666,49667,49669,49670,49671,49672,49673,49674,49675,49678,49680,49682,49683,49684,49685,49686,49687,49690,49691,49693,49694,49697,49698,49699,49700,49701,49702,49703,49706,49708,49710,49712,49715,49717,49718,49719,49720,49721,49722,49723,49724,49725,49726,49727,49728,49729,49730,49731,49732,49733,null,null,null,null,null,null,49734,49735,49737,49738,49739,49740,49741,49742,49743,49746,49747,49749,49750,49751,49753,49754,49755,49756,49757,49758,49759,49761,49762,49763,49764,49766,null,null,null,null,null,null,49767,49768,49769,49770,49771,49774,49775,49777,49778,49779,49781,49782,49783,49784,49785,49786,49787,49790,49792,49794,49795,49796,49797,49798,49799,49802,49803,49804,49805,49806,49807,49809,49810,49811,49812,49813,49814,49815,49817,49818,49820,49822,49823,49824,49825,49826,49827,49830,49831,49833,49834,49835,49838,49839,49840,49841,49842,49843,49846,49848,49850,49851,49852,49853,49854,49855,49856,49857,49858,49859,49860,49861,49862,49863,49864,49865,49866,49867,49868,49869,49870,49871,49872,49873,49874,49875,49876,49877,49878,49879,49880,49881,49882,49883,49886,49887,49889,49890,49893,49894,49895,49896,49897,49898,49902,49904,49906,49907,49908,49909,49911,49914,49917,49918,49919,49921,49922,49923,49924,49925,49926,49927,49930,49931,49934,49935,49936,49937,49938,49942,49943,49945,49946,49947,49949,49950,49951,49952,49953,49954,49955,49958,49959,49962,49963,49964,49965,49966,49967,49968,49969,49970,null,null,null,null,null,null,49971,49972,49973,49974,49975,49976,49977,49978,49979,49980,49981,49982,49983,49984,49985,49986,49987,49988,49990,49991,49992,49993,49994,49995,49996,49997,null,null,null,null,null,null,49998,49999,5e4,50001,50002,50003,50004,50005,50006,50007,50008,50009,50010,50011,50012,50013,50014,50015,50016,50017,50018,50019,50020,50021,50022,50023,50026,50027,50029,50030,50031,50033,50035,50036,50037,50038,50039,50042,50043,50046,50047,50048,50049,50050,50051,50053,50054,50055,50057,50058,50059,50061,50062,50063,50064,50065,50066,50067,50068,50069,50070,50071,50072,50073,50074,50075,50076,50077,50078,50079,50080,50081,50082,50083,50084,50085,50086,50087,50088,50089,50090,50091,50092,50093,50094,50095,50096,50097,50098,50099,50100,50101,50102,50103,50104,50105,50106,50107,50108,50109,50110,50111,50113,50114,50115,50116,50117,50118,50119,50120,50121,50122,50123,50124,50125,50126,50127,50128,50129,50130,50131,50132,50133,50134,50135,50138,50139,50141,50142,50145,50147,50148,50149,50150,50151,50154,50155,50156,50158,50159,50160,50161,50162,50163,50166,50167,50169,50170,50171,50172,50173,50174,null,null,null,null,null,null,50175,50176,50177,50178,50179,50180,50181,50182,50183,50185,50186,50187,50188,50189,50190,50191,50193,50194,50195,50196,50197,50198,50199,50200,50201,50202,null,null,null,null,null,null,50203,50204,50205,50206,50207,50208,50209,50210,50211,50213,50214,50215,50216,50217,50218,50219,50221,50222,50223,50225,50226,50227,50229,50230,50231,50232,50233,50234,50235,50238,50239,50240,50241,50242,50243,50244,50245,50246,50247,50249,50250,50251,50252,50253,50254,50255,50256,50257,50258,50259,50260,50261,50262,50263,50264,50265,50266,50267,50268,50269,50270,50271,50272,50273,50274,50275,50278,50279,50281,50282,50283,50285,50286,50287,50288,50289,50290,50291,50294,50295,50296,50298,50299,50300,50301,50302,50303,50305,50306,50307,50308,50309,50310,50311,50312,50313,50314,50315,50316,50317,50318,50319,50320,50321,50322,50323,50325,50326,50327,50328,50329,50330,50331,50333,50334,50335,50336,50337,50338,50339,50340,50341,50342,50343,50344,50345,50346,50347,50348,50349,50350,50351,50352,50353,50354,50355,50356,50357,50358,50359,50361,50362,50363,50365,50366,50367,50368,50369,50370,50371,50372,50373,null,null,null,null,null,null,50374,50375,50376,50377,50378,50379,50380,50381,50382,50383,50384,50385,50386,50387,50388,50389,50390,50391,50392,50393,50394,50395,50396,50397,50398,50399,null,null,null,null,null,null,50400,50401,50402,50403,50404,50405,50406,50407,50408,50410,50411,50412,50413,50414,50415,50418,50419,50421,50422,50423,50425,50427,50428,50429,50430,50434,50435,50436,50437,50438,50439,50440,50441,50442,50443,50445,50446,50447,50449,50450,50451,50453,50454,50455,50456,50457,50458,50459,50461,50462,50463,50464,50465,50466,50467,50468,50469,50470,50471,50474,50475,50477,50478,50479,50481,50482,50483,50484,50485,50486,50487,50490,50492,50494,50495,50496,50497,50498,50499,50502,50503,50507,50511,50512,50513,50514,50518,50522,50523,50524,50527,50530,50531,50533,50534,50535,50537,50538,50539,50540,50541,50542,50543,50546,50550,50551,50552,50553,50554,50555,50558,50559,50561,50562,50563,50565,50566,50568,50569,50570,50571,50574,50576,50578,50579,50580,50582,50585,50586,50587,50589,50590,50591,50593,50594,50595,50596,50597,50598,50599,50600,50602,50603,50604,50605,50606,50607,50608,50609,50610,50611,50614,null,null,null,null,null,null,50615,50618,50623,50624,50625,50626,50627,50635,50637,50639,50642,50643,50645,50646,50647,50649,50650,50651,50652,50653,50654,50655,50658,50660,50662,50663,null,null,null,null,null,null,50664,50665,50666,50667,50671,50673,50674,50675,50677,50680,50681,50682,50683,50690,50691,50692,50697,50698,50699,50701,50702,50703,50705,50706,50707,50708,50709,50710,50711,50714,50717,50718,50719,50720,50721,50722,50723,50726,50727,50729,50730,50731,50735,50737,50738,50742,50744,50746,50748,50749,50750,50751,50754,50755,50757,50758,50759,50761,50762,50763,50764,50765,50766,50767,50770,50774,50775,50776,50777,50778,50779,50782,50783,50785,50786,50787,50788,50789,50790,50791,50792,50793,50794,50795,50797,50798,50800,50802,50803,50804,50805,50806,50807,50810,50811,50813,50814,50815,50817,50818,50819,50820,50821,50822,50823,50826,50828,50830,50831,50832,50833,50834,50835,50838,50839,50841,50842,50843,50845,50846,50847,50848,50849,50850,50851,50854,50856,50858,50859,50860,50861,50862,50863,50866,50867,50869,50870,50871,50875,50876,50877,50878,50879,50882,50884,50886,50887,50888,50889,50890,50891,50894,null,null,null,null,null,null,50895,50897,50898,50899,50901,50902,50903,50904,50905,50906,50907,50910,50911,50914,50915,50916,50917,50918,50919,50922,50923,50925,50926,50927,50929,50930,null,null,null,null,null,null,50931,50932,50933,50934,50935,50938,50939,50940,50942,50943,50944,50945,50946,50947,50950,50951,50953,50954,50955,50957,50958,50959,50960,50961,50962,50963,50966,50968,50970,50971,50972,50973,50974,50975,50978,50979,50981,50982,50983,50985,50986,50987,50988,50989,50990,50991,50994,50996,50998,51e3,51001,51002,51003,51006,51007,51009,51010,51011,51013,51014,51015,51016,51017,51019,51022,51024,51033,51034,51035,51037,51038,51039,51041,51042,51043,51044,51045,51046,51047,51049,51050,51052,51053,51054,51055,51056,51057,51058,51059,51062,51063,51065,51066,51067,51071,51072,51073,51074,51078,51083,51084,51085,51087,51090,51091,51093,51097,51099,51100,51101,51102,51103,51106,51111,51112,51113,51114,51115,51118,51119,51121,51122,51123,51125,51126,51127,51128,51129,51130,51131,51134,51138,51139,51140,51141,51142,51143,51146,51147,51149,51151,51153,51154,51155,51156,51157,51158,51159,51161,51162,51163,51164,null,null,null,null,null,null,51166,51167,51168,51169,51170,51171,51173,51174,51175,51177,51178,51179,51181,51182,51183,51184,51185,51186,51187,51188,51189,51190,51191,51192,51193,51194,null,null,null,null,null,null,51195,51196,51197,51198,51199,51202,51203,51205,51206,51207,51209,51211,51212,51213,51214,51215,51218,51220,51223,51224,51225,51226,51227,51230,51231,51233,51234,51235,51237,51238,51239,51240,51241,51242,51243,51246,51248,51250,51251,51252,51253,51254,51255,51257,51258,51259,51261,51262,51263,51265,51266,51267,51268,51269,51270,51271,51274,51275,51278,51279,51280,51281,51282,51283,51285,51286,51287,51288,51289,51290,51291,51292,51293,51294,51295,51296,51297,51298,51299,51300,51301,51302,51303,51304,51305,51306,51307,51308,51309,51310,51311,51314,51315,51317,51318,51319,51321,51323,51324,51325,51326,51327,51330,51332,51336,51337,51338,51342,51343,51344,51345,51346,51347,51349,51350,51351,51352,51353,51354,51355,51356,51358,51360,51362,51363,51364,51365,51366,51367,51369,51370,51371,51372,51373,51374,51375,51376,51377,51378,51379,51380,51381,51382,51383,51384,51385,51386,51387,51390,51391,51392,51393,null,null,null,null,null,null,51394,51395,51397,51398,51399,51401,51402,51403,51405,51406,51407,51408,51409,51410,51411,51414,51416,51418,51419,51420,51421,51422,51423,51426,51427,51429,null,null,null,null,null,null,51430,51431,51432,51433,51434,51435,51436,51437,51438,51439,51440,51441,51442,51443,51444,51446,51447,51448,51449,51450,51451,51454,51455,51457,51458,51459,51463,51464,51465,51466,51467,51470,12288,12289,12290,183,8229,8230,168,12291,173,8213,8741,65340,8764,8216,8217,8220,8221,12308,12309,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,177,215,247,8800,8804,8805,8734,8756,176,8242,8243,8451,8491,65504,65505,65509,9794,9792,8736,8869,8978,8706,8711,8801,8786,167,8251,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8594,8592,8593,8595,8596,12307,8810,8811,8730,8765,8733,8757,8747,8748,8712,8715,8838,8839,8834,8835,8746,8745,8743,8744,65506,51472,51474,51475,51476,51477,51478,51479,51481,51482,51483,51484,51485,51486,51487,51488,51489,51490,51491,51492,51493,51494,51495,51496,51497,51498,51499,null,null,null,null,null,null,51501,51502,51503,51504,51505,51506,51507,51509,51510,51511,51512,51513,51514,51515,51516,51517,51518,51519,51520,51521,51522,51523,51524,51525,51526,51527,null,null,null,null,null,null,51528,51529,51530,51531,51532,51533,51534,51535,51538,51539,51541,51542,51543,51545,51546,51547,51548,51549,51550,51551,51554,51556,51557,51558,51559,51560,51561,51562,51563,51565,51566,51567,8658,8660,8704,8707,180,65374,711,728,733,730,729,184,731,161,191,720,8750,8721,8719,164,8457,8240,9665,9664,9655,9654,9828,9824,9825,9829,9831,9827,8857,9672,9635,9680,9681,9618,9636,9637,9640,9639,9638,9641,9832,9743,9742,9756,9758,182,8224,8225,8597,8599,8601,8598,8600,9837,9833,9834,9836,12927,12828,8470,13255,8482,13250,13272,8481,8364,174,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,51569,51570,51571,51573,51574,51575,51576,51577,51578,51579,51581,51582,51583,51584,51585,51586,51587,51588,51589,51590,51591,51594,51595,51597,51598,51599,null,null,null,null,null,null,51601,51602,51603,51604,51605,51606,51607,51610,51612,51614,51615,51616,51617,51618,51619,51620,51621,51622,51623,51624,51625,51626,51627,51628,51629,51630,null,null,null,null,null,null,51631,51632,51633,51634,51635,51636,51637,51638,51639,51640,51641,51642,51643,51644,51645,51646,51647,51650,51651,51653,51654,51657,51659,51660,51661,51662,51663,51666,51668,51671,51672,51675,65281,65282,65283,65284,65285,65286,65287,65288,65289,65290,65291,65292,65293,65294,65295,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,65306,65307,65308,65309,65310,65311,65312,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65339,65510,65341,65342,65343,65344,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,65371,65372,65373,65507,51678,51679,51681,51683,51685,51686,51688,51689,51690,51691,51694,51698,51699,51700,51701,51702,51703,51706,51707,51709,51710,51711,51713,51714,51715,51716,null,null,null,null,null,null,51717,51718,51719,51722,51726,51727,51728,51729,51730,51731,51733,51734,51735,51737,51738,51739,51740,51741,51742,51743,51744,51745,51746,51747,51748,51749,null,null,null,null,null,null,51750,51751,51752,51754,51755,51756,51757,51758,51759,51760,51761,51762,51763,51764,51765,51766,51767,51768,51769,51770,51771,51772,51773,51774,51775,51776,51777,51778,51779,51780,51781,51782,12593,12594,12595,12596,12597,12598,12599,12600,12601,12602,12603,12604,12605,12606,12607,12608,12609,12610,12611,12612,12613,12614,12615,12616,12617,12618,12619,12620,12621,12622,12623,12624,12625,12626,12627,12628,12629,12630,12631,12632,12633,12634,12635,12636,12637,12638,12639,12640,12641,12642,12643,12644,12645,12646,12647,12648,12649,12650,12651,12652,12653,12654,12655,12656,12657,12658,12659,12660,12661,12662,12663,12664,12665,12666,12667,12668,12669,12670,12671,12672,12673,12674,12675,12676,12677,12678,12679,12680,12681,12682,12683,12684,12685,12686,51783,51784,51785,51786,51787,51790,51791,51793,51794,51795,51797,51798,51799,51800,51801,51802,51803,51806,51810,51811,51812,51813,51814,51815,51817,51818,null,null,null,null,null,null,51819,51820,51821,51822,51823,51824,51825,51826,51827,51828,51829,51830,51831,51832,51833,51834,51835,51836,51838,51839,51840,51841,51842,51843,51845,51846,null,null,null,null,null,null,51847,51848,51849,51850,51851,51852,51853,51854,51855,51856,51857,51858,51859,51860,51861,51862,51863,51865,51866,51867,51868,51869,51870,51871,51872,51873,51874,51875,51876,51877,51878,51879,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,null,null,null,null,null,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,null,null,null,null,null,null,null,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,null,null,null,null,null,null,null,null,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,null,null,null,null,null,null,51880,51881,51882,51883,51884,51885,51886,51887,51888,51889,51890,51891,51892,51893,51894,51895,51896,51897,51898,51899,51902,51903,51905,51906,51907,51909,null,null,null,null,null,null,51910,51911,51912,51913,51914,51915,51918,51920,51922,51924,51925,51926,51927,51930,51931,51932,51933,51934,51935,51937,51938,51939,51940,51941,51942,51943,null,null,null,null,null,null,51944,51945,51946,51947,51949,51950,51951,51952,51953,51954,51955,51957,51958,51959,51960,51961,51962,51963,51964,51965,51966,51967,51968,51969,51970,51971,51972,51973,51974,51975,51977,51978,9472,9474,9484,9488,9496,9492,9500,9516,9508,9524,9532,9473,9475,9487,9491,9499,9495,9507,9523,9515,9531,9547,9504,9519,9512,9527,9535,9501,9520,9509,9528,9538,9490,9489,9498,9497,9494,9493,9486,9485,9502,9503,9505,9506,9510,9511,9513,9514,9517,9518,9521,9522,9525,9526,9529,9530,9533,9534,9536,9537,9539,9540,9541,9542,9543,9544,9545,9546,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,51979,51980,51981,51982,51983,51985,51986,51987,51989,51990,51991,51993,51994,51995,51996,51997,51998,51999,52002,52003,52004,52005,52006,52007,52008,52009,null,null,null,null,null,null,52010,52011,52012,52013,52014,52015,52016,52017,52018,52019,52020,52021,52022,52023,52024,52025,52026,52027,52028,52029,52030,52031,52032,52034,52035,52036,null,null,null,null,null,null,52037,52038,52039,52042,52043,52045,52046,52047,52049,52050,52051,52052,52053,52054,52055,52058,52059,52060,52062,52063,52064,52065,52066,52067,52069,52070,52071,52072,52073,52074,52075,52076,13205,13206,13207,8467,13208,13252,13219,13220,13221,13222,13209,13210,13211,13212,13213,13214,13215,13216,13217,13218,13258,13197,13198,13199,13263,13192,13193,13256,13223,13224,13232,13233,13234,13235,13236,13237,13238,13239,13240,13241,13184,13185,13186,13187,13188,13242,13243,13244,13245,13246,13247,13200,13201,13202,13203,13204,8486,13248,13249,13194,13195,13196,13270,13253,13229,13230,13231,13275,13225,13226,13227,13228,13277,13264,13267,13251,13257,13276,13254,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52077,52078,52079,52080,52081,52082,52083,52084,52085,52086,52087,52090,52091,52092,52093,52094,52095,52096,52097,52098,52099,52100,52101,52102,52103,52104,null,null,null,null,null,null,52105,52106,52107,52108,52109,52110,52111,52112,52113,52114,52115,52116,52117,52118,52119,52120,52121,52122,52123,52125,52126,52127,52128,52129,52130,52131,null,null,null,null,null,null,52132,52133,52134,52135,52136,52137,52138,52139,52140,52141,52142,52143,52144,52145,52146,52147,52148,52149,52150,52151,52153,52154,52155,52156,52157,52158,52159,52160,52161,52162,52163,52164,198,208,170,294,null,306,null,319,321,216,338,186,222,358,330,null,12896,12897,12898,12899,12900,12901,12902,12903,12904,12905,12906,12907,12908,12909,12910,12911,12912,12913,12914,12915,12916,12917,12918,12919,12920,12921,12922,12923,9424,9425,9426,9427,9428,9429,9430,9431,9432,9433,9434,9435,9436,9437,9438,9439,9440,9441,9442,9443,9444,9445,9446,9447,9448,9449,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9322,9323,9324,9325,9326,189,8531,8532,188,190,8539,8540,8541,8542,52165,52166,52167,52168,52169,52170,52171,52172,52173,52174,52175,52176,52177,52178,52179,52181,52182,52183,52184,52185,52186,52187,52188,52189,52190,52191,null,null,null,null,null,null,52192,52193,52194,52195,52197,52198,52200,52202,52203,52204,52205,52206,52207,52208,52209,52210,52211,52212,52213,52214,52215,52216,52217,52218,52219,52220,null,null,null,null,null,null,52221,52222,52223,52224,52225,52226,52227,52228,52229,52230,52231,52232,52233,52234,52235,52238,52239,52241,52242,52243,52245,52246,52247,52248,52249,52250,52251,52254,52255,52256,52259,52260,230,273,240,295,305,307,312,320,322,248,339,223,254,359,331,329,12800,12801,12802,12803,12804,12805,12806,12807,12808,12809,12810,12811,12812,12813,12814,12815,12816,12817,12818,12819,12820,12821,12822,12823,12824,12825,12826,12827,9372,9373,9374,9375,9376,9377,9378,9379,9380,9381,9382,9383,9384,9385,9386,9387,9388,9389,9390,9391,9392,9393,9394,9395,9396,9397,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345,9346,185,178,179,8308,8319,8321,8322,8323,8324,52261,52262,52266,52267,52269,52271,52273,52274,52275,52276,52277,52278,52279,52282,52287,52288,52289,52290,52291,52294,52295,52297,52298,52299,52301,52302,null,null,null,null,null,null,52303,52304,52305,52306,52307,52310,52314,52315,52316,52317,52318,52319,52321,52322,52323,52325,52327,52329,52330,52331,52332,52333,52334,52335,52337,52338,null,null,null,null,null,null,52339,52340,52342,52343,52344,52345,52346,52347,52348,52349,52350,52351,52352,52353,52354,52355,52356,52357,52358,52359,52360,52361,52362,52363,52364,52365,52366,52367,52368,52369,52370,52371,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,null,null,null,null,null,null,null,null,null,null,null,52372,52373,52374,52375,52378,52379,52381,52382,52383,52385,52386,52387,52388,52389,52390,52391,52394,52398,52399,52400,52401,52402,52403,52406,52407,52409,null,null,null,null,null,null,52410,52411,52413,52414,52415,52416,52417,52418,52419,52422,52424,52426,52427,52428,52429,52430,52431,52433,52434,52435,52437,52438,52439,52440,52441,52442,null,null,null,null,null,null,52443,52444,52445,52446,52447,52448,52449,52450,52451,52453,52454,52455,52456,52457,52458,52459,52461,52462,52463,52465,52466,52467,52468,52469,52470,52471,52472,52473,52474,52475,52476,52477,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,null,null,null,null,null,null,null,null,52478,52479,52480,52482,52483,52484,52485,52486,52487,52490,52491,52493,52494,52495,52497,52498,52499,52500,52501,52502,52503,52506,52508,52510,52511,52512,null,null,null,null,null,null,52513,52514,52515,52517,52518,52519,52521,52522,52523,52525,52526,52527,52528,52529,52530,52531,52532,52533,52534,52535,52536,52538,52539,52540,52541,52542,null,null,null,null,null,null,52543,52544,52545,52546,52547,52548,52549,52550,52551,52552,52553,52554,52555,52556,52557,52558,52559,52560,52561,52562,52563,52564,52565,52566,52567,52568,52569,52570,52571,52573,52574,52575,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,null,null,null,null,null,null,null,null,null,null,null,null,null,52577,52578,52579,52581,52582,52583,52584,52585,52586,52587,52590,52592,52594,52595,52596,52597,52598,52599,52601,52602,52603,52604,52605,52606,52607,52608,null,null,null,null,null,null,52609,52610,52611,52612,52613,52614,52615,52617,52618,52619,52620,52621,52622,52623,52624,52625,52626,52627,52630,52631,52633,52634,52635,52637,52638,52639,null,null,null,null,null,null,52640,52641,52642,52643,52646,52648,52650,52651,52652,52653,52654,52655,52657,52658,52659,52660,52661,52662,52663,52664,52665,52666,52667,52668,52669,52670,52671,52672,52673,52674,52675,52677,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52678,52679,52680,52681,52682,52683,52685,52686,52687,52689,52690,52691,52692,52693,52694,52695,52696,52697,52698,52699,52700,52701,52702,52703,52704,52705,null,null,null,null,null,null,52706,52707,52708,52709,52710,52711,52713,52714,52715,52717,52718,52719,52721,52722,52723,52724,52725,52726,52727,52730,52732,52734,52735,52736,52737,52738,null,null,null,null,null,null,52739,52741,52742,52743,52745,52746,52747,52749,52750,52751,52752,52753,52754,52755,52757,52758,52759,52760,52762,52763,52764,52765,52766,52767,52770,52771,52773,52774,52775,52777,52778,52779,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52780,52781,52782,52783,52786,52788,52790,52791,52792,52793,52794,52795,52796,52797,52798,52799,52800,52801,52802,52803,52804,52805,52806,52807,52808,52809,null,null,null,null,null,null,52810,52811,52812,52813,52814,52815,52816,52817,52818,52819,52820,52821,52822,52823,52826,52827,52829,52830,52834,52835,52836,52837,52838,52839,52842,52844,null,null,null,null,null,null,52846,52847,52848,52849,52850,52851,52854,52855,52857,52858,52859,52861,52862,52863,52864,52865,52866,52867,52870,52872,52874,52875,52876,52877,52878,52879,52882,52883,52885,52886,52887,52889,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52890,52891,52892,52893,52894,52895,52898,52902,52903,52904,52905,52906,52907,52910,52911,52912,52913,52914,52915,52916,52917,52918,52919,52920,52921,52922,null,null,null,null,null,null,52923,52924,52925,52926,52927,52928,52930,52931,52932,52933,52934,52935,52936,52937,52938,52939,52940,52941,52942,52943,52944,52945,52946,52947,52948,52949,null,null,null,null,null,null,52950,52951,52952,52953,52954,52955,52956,52957,52958,52959,52960,52961,52962,52963,52966,52967,52969,52970,52973,52974,52975,52976,52977,52978,52979,52982,52986,52987,52988,52989,52990,52991,44032,44033,44036,44039,44040,44041,44042,44048,44049,44050,44051,44052,44053,44054,44055,44057,44058,44059,44060,44061,44064,44068,44076,44077,44079,44080,44081,44088,44089,44092,44096,44107,44109,44116,44120,44124,44144,44145,44148,44151,44152,44154,44160,44161,44163,44164,44165,44166,44169,44170,44171,44172,44176,44180,44188,44189,44191,44192,44193,44200,44201,44202,44204,44207,44208,44216,44217,44219,44220,44221,44225,44228,44232,44236,44245,44247,44256,44257,44260,44263,44264,44266,44268,44271,44272,44273,44275,44277,44278,44284,44285,44288,44292,44294,52994,52995,52997,52998,52999,53001,53002,53003,53004,53005,53006,53007,53010,53012,53014,53015,53016,53017,53018,53019,53021,53022,53023,53025,53026,53027,null,null,null,null,null,null,53029,53030,53031,53032,53033,53034,53035,53038,53042,53043,53044,53045,53046,53047,53049,53050,53051,53052,53053,53054,53055,53056,53057,53058,53059,53060,null,null,null,null,null,null,53061,53062,53063,53064,53065,53066,53067,53068,53069,53070,53071,53072,53073,53074,53075,53078,53079,53081,53082,53083,53085,53086,53087,53088,53089,53090,53091,53094,53096,53098,53099,53100,44300,44301,44303,44305,44312,44316,44320,44329,44332,44333,44340,44341,44344,44348,44356,44357,44359,44361,44368,44372,44376,44385,44387,44396,44397,44400,44403,44404,44405,44406,44411,44412,44413,44415,44417,44418,44424,44425,44428,44432,44444,44445,44452,44471,44480,44481,44484,44488,44496,44497,44499,44508,44512,44516,44536,44537,44540,44543,44544,44545,44552,44553,44555,44557,44564,44592,44593,44596,44599,44600,44602,44608,44609,44611,44613,44614,44618,44620,44621,44622,44624,44628,44630,44636,44637,44639,44640,44641,44645,44648,44649,44652,44656,44664,53101,53102,53103,53106,53107,53109,53110,53111,53113,53114,53115,53116,53117,53118,53119,53121,53122,53123,53124,53126,53127,53128,53129,53130,53131,53133,null,null,null,null,null,null,53134,53135,53136,53137,53138,53139,53140,53141,53142,53143,53144,53145,53146,53147,53148,53149,53150,53151,53152,53154,53155,53156,53157,53158,53159,53161,null,null,null,null,null,null,53162,53163,53164,53165,53166,53167,53169,53170,53171,53172,53173,53174,53175,53176,53177,53178,53179,53180,53181,53182,53183,53184,53185,53186,53187,53189,53190,53191,53192,53193,53194,53195,44665,44667,44668,44669,44676,44677,44684,44732,44733,44734,44736,44740,44748,44749,44751,44752,44753,44760,44761,44764,44776,44779,44781,44788,44792,44796,44807,44808,44813,44816,44844,44845,44848,44850,44852,44860,44861,44863,44865,44866,44867,44872,44873,44880,44892,44893,44900,44901,44921,44928,44932,44936,44944,44945,44949,44956,44984,44985,44988,44992,44999,45e3,45001,45003,45005,45006,45012,45020,45032,45033,45040,45041,45044,45048,45056,45057,45060,45068,45072,45076,45084,45085,45096,45124,45125,45128,45130,45132,45134,45139,45140,45141,45143,45145,53196,53197,53198,53199,53200,53201,53202,53203,53204,53205,53206,53207,53208,53209,53210,53211,53212,53213,53214,53215,53218,53219,53221,53222,53223,53225,null,null,null,null,null,null,53226,53227,53228,53229,53230,53231,53234,53236,53238,53239,53240,53241,53242,53243,53245,53246,53247,53249,53250,53251,53253,53254,53255,53256,53257,53258,null,null,null,null,null,null,53259,53260,53261,53262,53263,53264,53266,53267,53268,53269,53270,53271,53273,53274,53275,53276,53277,53278,53279,53280,53281,53282,53283,53284,53285,53286,53287,53288,53289,53290,53291,53292,45149,45180,45181,45184,45188,45196,45197,45199,45201,45208,45209,45210,45212,45215,45216,45217,45218,45224,45225,45227,45228,45229,45230,45231,45233,45235,45236,45237,45240,45244,45252,45253,45255,45256,45257,45264,45265,45268,45272,45280,45285,45320,45321,45323,45324,45328,45330,45331,45336,45337,45339,45340,45341,45347,45348,45349,45352,45356,45364,45365,45367,45368,45369,45376,45377,45380,45384,45392,45393,45396,45397,45400,45404,45408,45432,45433,45436,45440,45442,45448,45449,45451,45453,45458,45459,45460,45464,45468,45480,45516,45520,45524,45532,45533,53294,53295,53296,53297,53298,53299,53302,53303,53305,53306,53307,53309,53310,53311,53312,53313,53314,53315,53318,53320,53322,53323,53324,53325,53326,53327,null,null,null,null,null,null,53329,53330,53331,53333,53334,53335,53337,53338,53339,53340,53341,53342,53343,53345,53346,53347,53348,53349,53350,53351,53352,53353,53354,53355,53358,53359,null,null,null,null,null,null,53361,53362,53363,53365,53366,53367,53368,53369,53370,53371,53374,53375,53376,53378,53379,53380,53381,53382,53383,53384,53385,53386,53387,53388,53389,53390,53391,53392,53393,53394,53395,53396,45535,45544,45545,45548,45552,45561,45563,45565,45572,45573,45576,45579,45580,45588,45589,45591,45593,45600,45620,45628,45656,45660,45664,45672,45673,45684,45685,45692,45700,45701,45705,45712,45713,45716,45720,45721,45722,45728,45729,45731,45733,45734,45738,45740,45744,45748,45768,45769,45772,45776,45778,45784,45785,45787,45789,45794,45796,45797,45798,45800,45803,45804,45805,45806,45807,45811,45812,45813,45815,45816,45817,45818,45819,45823,45824,45825,45828,45832,45840,45841,45843,45844,45845,45852,45908,45909,45910,45912,45915,45916,45918,45919,45924,45925,53397,53398,53399,53400,53401,53402,53403,53404,53405,53406,53407,53408,53409,53410,53411,53414,53415,53417,53418,53419,53421,53422,53423,53424,53425,53426,null,null,null,null,null,null,53427,53430,53432,53434,53435,53436,53437,53438,53439,53442,53443,53445,53446,53447,53450,53451,53452,53453,53454,53455,53458,53462,53463,53464,53465,53466,null,null,null,null,null,null,53467,53470,53471,53473,53474,53475,53477,53478,53479,53480,53481,53482,53483,53486,53490,53491,53492,53493,53494,53495,53497,53498,53499,53500,53501,53502,53503,53504,53505,53506,53507,53508,45927,45929,45931,45934,45936,45937,45940,45944,45952,45953,45955,45956,45957,45964,45968,45972,45984,45985,45992,45996,46020,46021,46024,46027,46028,46030,46032,46036,46037,46039,46041,46043,46045,46048,46052,46056,46076,46096,46104,46108,46112,46120,46121,46123,46132,46160,46161,46164,46168,46176,46177,46179,46181,46188,46208,46216,46237,46244,46248,46252,46261,46263,46265,46272,46276,46280,46288,46293,46300,46301,46304,46307,46308,46310,46316,46317,46319,46321,46328,46356,46357,46360,46363,46364,46372,46373,46375,46376,46377,46378,46384,46385,46388,46392,53509,53510,53511,53512,53513,53514,53515,53516,53518,53519,53520,53521,53522,53523,53524,53525,53526,53527,53528,53529,53530,53531,53532,53533,53534,53535,null,null,null,null,null,null,53536,53537,53538,53539,53540,53541,53542,53543,53544,53545,53546,53547,53548,53549,53550,53551,53554,53555,53557,53558,53559,53561,53563,53564,53565,53566,null,null,null,null,null,null,53567,53570,53574,53575,53576,53577,53578,53579,53582,53583,53585,53586,53587,53589,53590,53591,53592,53593,53594,53595,53598,53600,53602,53603,53604,53605,53606,53607,53609,53610,53611,53613,46400,46401,46403,46404,46405,46411,46412,46413,46416,46420,46428,46429,46431,46432,46433,46496,46497,46500,46504,46506,46507,46512,46513,46515,46516,46517,46523,46524,46525,46528,46532,46540,46541,46543,46544,46545,46552,46572,46608,46609,46612,46616,46629,46636,46644,46664,46692,46696,46748,46749,46752,46756,46763,46764,46769,46804,46832,46836,46840,46848,46849,46853,46888,46889,46892,46895,46896,46904,46905,46907,46916,46920,46924,46932,46933,46944,46948,46952,46960,46961,46963,46965,46972,46973,46976,46980,46988,46989,46991,46992,46993,46994,46998,46999,53614,53615,53616,53617,53618,53619,53620,53621,53622,53623,53624,53625,53626,53627,53629,53630,53631,53632,53633,53634,53635,53637,53638,53639,53641,53642,null,null,null,null,null,null,53643,53644,53645,53646,53647,53648,53649,53650,53651,53652,53653,53654,53655,53656,53657,53658,53659,53660,53661,53662,53663,53666,53667,53669,53670,53671,null,null,null,null,null,null,53673,53674,53675,53676,53677,53678,53679,53682,53684,53686,53687,53688,53689,53691,53693,53694,53695,53697,53698,53699,53700,53701,53702,53703,53704,53705,53706,53707,53708,53709,53710,53711,47e3,47001,47004,47008,47016,47017,47019,47020,47021,47028,47029,47032,47047,47049,47084,47085,47088,47092,47100,47101,47103,47104,47105,47111,47112,47113,47116,47120,47128,47129,47131,47133,47140,47141,47144,47148,47156,47157,47159,47160,47161,47168,47172,47185,47187,47196,47197,47200,47204,47212,47213,47215,47217,47224,47228,47245,47272,47280,47284,47288,47296,47297,47299,47301,47308,47312,47316,47325,47327,47329,47336,47337,47340,47344,47352,47353,47355,47357,47364,47384,47392,47420,47421,47424,47428,47436,47439,47441,47448,47449,47452,47456,47464,47465,53712,53713,53714,53715,53716,53717,53718,53719,53721,53722,53723,53724,53725,53726,53727,53728,53729,53730,53731,53732,53733,53734,53735,53736,53737,53738,null,null,null,null,null,null,53739,53740,53741,53742,53743,53744,53745,53746,53747,53749,53750,53751,53753,53754,53755,53756,53757,53758,53759,53760,53761,53762,53763,53764,53765,53766,null,null,null,null,null,null,53768,53770,53771,53772,53773,53774,53775,53777,53778,53779,53780,53781,53782,53783,53784,53785,53786,53787,53788,53789,53790,53791,53792,53793,53794,53795,53796,53797,53798,53799,53800,53801,47467,47469,47476,47477,47480,47484,47492,47493,47495,47497,47498,47501,47502,47532,47533,47536,47540,47548,47549,47551,47553,47560,47561,47564,47566,47567,47568,47569,47570,47576,47577,47579,47581,47582,47585,47587,47588,47589,47592,47596,47604,47605,47607,47608,47609,47610,47616,47617,47624,47637,47672,47673,47676,47680,47682,47688,47689,47691,47693,47694,47699,47700,47701,47704,47708,47716,47717,47719,47720,47721,47728,47729,47732,47736,47747,47748,47749,47751,47756,47784,47785,47787,47788,47792,47794,47800,47801,47803,47805,47812,47816,47832,47833,47868,53802,53803,53806,53807,53809,53810,53811,53813,53814,53815,53816,53817,53818,53819,53822,53824,53826,53827,53828,53829,53830,53831,53833,53834,53835,53836,null,null,null,null,null,null,53837,53838,53839,53840,53841,53842,53843,53844,53845,53846,53847,53848,53849,53850,53851,53853,53854,53855,53856,53857,53858,53859,53861,53862,53863,53864,null,null,null,null,null,null,53865,53866,53867,53868,53869,53870,53871,53872,53873,53874,53875,53876,53877,53878,53879,53880,53881,53882,53883,53884,53885,53886,53887,53890,53891,53893,53894,53895,53897,53898,53899,53900,47872,47876,47885,47887,47889,47896,47900,47904,47913,47915,47924,47925,47926,47928,47931,47932,47933,47934,47940,47941,47943,47945,47949,47951,47952,47956,47960,47969,47971,47980,48008,48012,48016,48036,48040,48044,48052,48055,48064,48068,48072,48080,48083,48120,48121,48124,48127,48128,48130,48136,48137,48139,48140,48141,48143,48145,48148,48149,48150,48151,48152,48155,48156,48157,48158,48159,48164,48165,48167,48169,48173,48176,48177,48180,48184,48192,48193,48195,48196,48197,48201,48204,48205,48208,48221,48260,48261,48264,48267,48268,48270,48276,48277,48279,53901,53902,53903,53906,53907,53908,53910,53911,53912,53913,53914,53915,53917,53918,53919,53921,53922,53923,53925,53926,53927,53928,53929,53930,53931,53933,null,null,null,null,null,null,53934,53935,53936,53938,53939,53940,53941,53942,53943,53946,53947,53949,53950,53953,53955,53956,53957,53958,53959,53962,53964,53965,53966,53967,53968,53969,null,null,null,null,null,null,53970,53971,53973,53974,53975,53977,53978,53979,53981,53982,53983,53984,53985,53986,53987,53990,53991,53992,53993,53994,53995,53996,53997,53998,53999,54002,54003,54005,54006,54007,54009,54010,48281,48282,48288,48289,48292,48295,48296,48304,48305,48307,48308,48309,48316,48317,48320,48324,48333,48335,48336,48337,48341,48344,48348,48372,48373,48374,48376,48380,48388,48389,48391,48393,48400,48404,48420,48428,48448,48456,48457,48460,48464,48472,48473,48484,48488,48512,48513,48516,48519,48520,48521,48522,48528,48529,48531,48533,48537,48538,48540,48548,48560,48568,48596,48597,48600,48604,48617,48624,48628,48632,48640,48643,48645,48652,48653,48656,48660,48668,48669,48671,48708,48709,48712,48716,48718,48724,48725,48727,48729,48730,48731,48736,48737,48740,54011,54012,54013,54014,54015,54018,54020,54022,54023,54024,54025,54026,54027,54031,54033,54034,54035,54037,54039,54040,54041,54042,54043,54046,54050,54051,null,null,null,null,null,null,54052,54054,54055,54058,54059,54061,54062,54063,54065,54066,54067,54068,54069,54070,54071,54074,54078,54079,54080,54081,54082,54083,54086,54087,54088,54089,null,null,null,null,null,null,54090,54091,54092,54093,54094,54095,54096,54097,54098,54099,54100,54101,54102,54103,54104,54105,54106,54107,54108,54109,54110,54111,54112,54113,54114,54115,54116,54117,54118,54119,54120,54121,48744,48746,48752,48753,48755,48756,48757,48763,48764,48765,48768,48772,48780,48781,48783,48784,48785,48792,48793,48808,48848,48849,48852,48855,48856,48864,48867,48868,48869,48876,48897,48904,48905,48920,48921,48923,48924,48925,48960,48961,48964,48968,48976,48977,48981,49044,49072,49093,49100,49101,49104,49108,49116,49119,49121,49212,49233,49240,49244,49248,49256,49257,49296,49297,49300,49304,49312,49313,49315,49317,49324,49325,49327,49328,49331,49332,49333,49334,49340,49341,49343,49344,49345,49349,49352,49353,49356,49360,49368,49369,49371,49372,49373,49380,54122,54123,54124,54125,54126,54127,54128,54129,54130,54131,54132,54133,54134,54135,54136,54137,54138,54139,54142,54143,54145,54146,54147,54149,54150,54151,null,null,null,null,null,null,54152,54153,54154,54155,54158,54162,54163,54164,54165,54166,54167,54170,54171,54173,54174,54175,54177,54178,54179,54180,54181,54182,54183,54186,54188,54190,null,null,null,null,null,null,54191,54192,54193,54194,54195,54197,54198,54199,54201,54202,54203,54205,54206,54207,54208,54209,54210,54211,54214,54215,54218,54219,54220,54221,54222,54223,54225,54226,54227,54228,54229,54230,49381,49384,49388,49396,49397,49399,49401,49408,49412,49416,49424,49429,49436,49437,49438,49439,49440,49443,49444,49446,49447,49452,49453,49455,49456,49457,49462,49464,49465,49468,49472,49480,49481,49483,49484,49485,49492,49493,49496,49500,49508,49509,49511,49512,49513,49520,49524,49528,49541,49548,49549,49550,49552,49556,49558,49564,49565,49567,49569,49573,49576,49577,49580,49584,49597,49604,49608,49612,49620,49623,49624,49632,49636,49640,49648,49649,49651,49660,49661,49664,49668,49676,49677,49679,49681,49688,49689,49692,49695,49696,49704,49705,49707,49709,54231,54233,54234,54235,54236,54237,54238,54239,54240,54242,54244,54245,54246,54247,54248,54249,54250,54251,54254,54255,54257,54258,54259,54261,54262,54263,null,null,null,null,null,null,54264,54265,54266,54267,54270,54272,54274,54275,54276,54277,54278,54279,54281,54282,54283,54284,54285,54286,54287,54288,54289,54290,54291,54292,54293,54294,null,null,null,null,null,null,54295,54296,54297,54298,54299,54300,54302,54303,54304,54305,54306,54307,54308,54309,54310,54311,54312,54313,54314,54315,54316,54317,54318,54319,54320,54321,54322,54323,54324,54325,54326,54327,49711,49713,49714,49716,49736,49744,49745,49748,49752,49760,49765,49772,49773,49776,49780,49788,49789,49791,49793,49800,49801,49808,49816,49819,49821,49828,49829,49832,49836,49837,49844,49845,49847,49849,49884,49885,49888,49891,49892,49899,49900,49901,49903,49905,49910,49912,49913,49915,49916,49920,49928,49929,49932,49933,49939,49940,49941,49944,49948,49956,49957,49960,49961,49989,50024,50025,50028,50032,50034,50040,50041,50044,50045,50052,50056,50060,50112,50136,50137,50140,50143,50144,50146,50152,50153,50157,50164,50165,50168,50184,50192,50212,50220,50224,54328,54329,54330,54331,54332,54333,54334,54335,54337,54338,54339,54341,54342,54343,54344,54345,54346,54347,54348,54349,54350,54351,54352,54353,54354,54355,null,null,null,null,null,null,54356,54357,54358,54359,54360,54361,54362,54363,54365,54366,54367,54369,54370,54371,54373,54374,54375,54376,54377,54378,54379,54380,54382,54384,54385,54386,null,null,null,null,null,null,54387,54388,54389,54390,54391,54394,54395,54397,54398,54401,54403,54404,54405,54406,54407,54410,54412,54414,54415,54416,54417,54418,54419,54421,54422,54423,54424,54425,54426,54427,54428,54429,50228,50236,50237,50248,50276,50277,50280,50284,50292,50293,50297,50304,50324,50332,50360,50364,50409,50416,50417,50420,50424,50426,50431,50432,50433,50444,50448,50452,50460,50472,50473,50476,50480,50488,50489,50491,50493,50500,50501,50504,50505,50506,50508,50509,50510,50515,50516,50517,50519,50520,50521,50525,50526,50528,50529,50532,50536,50544,50545,50547,50548,50549,50556,50557,50560,50564,50567,50572,50573,50575,50577,50581,50583,50584,50588,50592,50601,50612,50613,50616,50617,50619,50620,50621,50622,50628,50629,50630,50631,50632,50633,50634,50636,50638,54430,54431,54432,54433,54434,54435,54436,54437,54438,54439,54440,54442,54443,54444,54445,54446,54447,54448,54449,54450,54451,54452,54453,54454,54455,54456,null,null,null,null,null,null,54457,54458,54459,54460,54461,54462,54463,54464,54465,54466,54467,54468,54469,54470,54471,54472,54473,54474,54475,54477,54478,54479,54481,54482,54483,54485,null,null,null,null,null,null,54486,54487,54488,54489,54490,54491,54493,54494,54496,54497,54498,54499,54500,54501,54502,54503,54505,54506,54507,54509,54510,54511,54513,54514,54515,54516,54517,54518,54519,54521,54522,54524,50640,50641,50644,50648,50656,50657,50659,50661,50668,50669,50670,50672,50676,50678,50679,50684,50685,50686,50687,50688,50689,50693,50694,50695,50696,50700,50704,50712,50713,50715,50716,50724,50725,50728,50732,50733,50734,50736,50739,50740,50741,50743,50745,50747,50752,50753,50756,50760,50768,50769,50771,50772,50773,50780,50781,50784,50796,50799,50801,50808,50809,50812,50816,50824,50825,50827,50829,50836,50837,50840,50844,50852,50853,50855,50857,50864,50865,50868,50872,50873,50874,50880,50881,50883,50885,50892,50893,50896,50900,50908,50909,50912,50913,50920,54526,54527,54528,54529,54530,54531,54533,54534,54535,54537,54538,54539,54541,54542,54543,54544,54545,54546,54547,54550,54552,54553,54554,54555,54556,54557,null,null,null,null,null,null,54558,54559,54560,54561,54562,54563,54564,54565,54566,54567,54568,54569,54570,54571,54572,54573,54574,54575,54576,54577,54578,54579,54580,54581,54582,54583,null,null,null,null,null,null,54584,54585,54586,54587,54590,54591,54593,54594,54595,54597,54598,54599,54600,54601,54602,54603,54606,54608,54610,54611,54612,54613,54614,54615,54618,54619,54621,54622,54623,54625,54626,54627,50921,50924,50928,50936,50937,50941,50948,50949,50952,50956,50964,50965,50967,50969,50976,50977,50980,50984,50992,50993,50995,50997,50999,51004,51005,51008,51012,51018,51020,51021,51023,51025,51026,51027,51028,51029,51030,51031,51032,51036,51040,51048,51051,51060,51061,51064,51068,51069,51070,51075,51076,51077,51079,51080,51081,51082,51086,51088,51089,51092,51094,51095,51096,51098,51104,51105,51107,51108,51109,51110,51116,51117,51120,51124,51132,51133,51135,51136,51137,51144,51145,51148,51150,51152,51160,51165,51172,51176,51180,51200,51201,51204,51208,51210,54628,54630,54631,54634,54636,54638,54639,54640,54641,54642,54643,54646,54647,54649,54650,54651,54653,54654,54655,54656,54657,54658,54659,54662,54666,54667,null,null,null,null,null,null,54668,54669,54670,54671,54673,54674,54675,54676,54677,54678,54679,54680,54681,54682,54683,54684,54685,54686,54687,54688,54689,54690,54691,54692,54694,54695,null,null,null,null,null,null,54696,54697,54698,54699,54700,54701,54702,54703,54704,54705,54706,54707,54708,54709,54710,54711,54712,54713,54714,54715,54716,54717,54718,54719,54720,54721,54722,54723,54724,54725,54726,54727,51216,51217,51219,51221,51222,51228,51229,51232,51236,51244,51245,51247,51249,51256,51260,51264,51272,51273,51276,51277,51284,51312,51313,51316,51320,51322,51328,51329,51331,51333,51334,51335,51339,51340,51341,51348,51357,51359,51361,51368,51388,51389,51396,51400,51404,51412,51413,51415,51417,51424,51425,51428,51445,51452,51453,51456,51460,51461,51462,51468,51469,51471,51473,51480,51500,51508,51536,51537,51540,51544,51552,51553,51555,51564,51568,51572,51580,51592,51593,51596,51600,51608,51609,51611,51613,51648,51649,51652,51655,51656,51658,51664,51665,51667,54730,54731,54733,54734,54735,54737,54739,54740,54741,54742,54743,54746,54748,54750,54751,54752,54753,54754,54755,54758,54759,54761,54762,54763,54765,54766,null,null,null,null,null,null,54767,54768,54769,54770,54771,54774,54776,54778,54779,54780,54781,54782,54783,54786,54787,54789,54790,54791,54793,54794,54795,54796,54797,54798,54799,54802,null,null,null,null,null,null,54806,54807,54808,54809,54810,54811,54813,54814,54815,54817,54818,54819,54821,54822,54823,54824,54825,54826,54827,54828,54830,54831,54832,54833,54834,54835,54836,54837,54838,54839,54842,54843,51669,51670,51673,51674,51676,51677,51680,51682,51684,51687,51692,51693,51695,51696,51697,51704,51705,51708,51712,51720,51721,51723,51724,51725,51732,51736,51753,51788,51789,51792,51796,51804,51805,51807,51808,51809,51816,51837,51844,51864,51900,51901,51904,51908,51916,51917,51919,51921,51923,51928,51929,51936,51948,51956,51976,51984,51988,51992,52e3,52001,52033,52040,52041,52044,52048,52056,52057,52061,52068,52088,52089,52124,52152,52180,52196,52199,52201,52236,52237,52240,52244,52252,52253,52257,52258,52263,52264,52265,52268,52270,52272,52280,52281,52283,54845,54846,54847,54849,54850,54851,54852,54854,54855,54858,54860,54862,54863,54864,54866,54867,54870,54871,54873,54874,54875,54877,54878,54879,54880,54881,null,null,null,null,null,null,54882,54883,54884,54885,54886,54888,54890,54891,54892,54893,54894,54895,54898,54899,54901,54902,54903,54904,54905,54906,54907,54908,54909,54910,54911,54912,null,null,null,null,null,null,54913,54914,54916,54918,54919,54920,54921,54922,54923,54926,54927,54929,54930,54931,54933,54934,54935,54936,54937,54938,54939,54940,54942,54944,54946,54947,54948,54949,54950,54951,54953,54954,52284,52285,52286,52292,52293,52296,52300,52308,52309,52311,52312,52313,52320,52324,52326,52328,52336,52341,52376,52377,52380,52384,52392,52393,52395,52396,52397,52404,52405,52408,52412,52420,52421,52423,52425,52432,52436,52452,52460,52464,52481,52488,52489,52492,52496,52504,52505,52507,52509,52516,52520,52524,52537,52572,52576,52580,52588,52589,52591,52593,52600,52616,52628,52629,52632,52636,52644,52645,52647,52649,52656,52676,52684,52688,52712,52716,52720,52728,52729,52731,52733,52740,52744,52748,52756,52761,52768,52769,52772,52776,52784,52785,52787,52789,54955,54957,54958,54959,54961,54962,54963,54964,54965,54966,54967,54968,54970,54972,54973,54974,54975,54976,54977,54978,54979,54982,54983,54985,54986,54987,null,null,null,null,null,null,54989,54990,54991,54992,54994,54995,54997,54998,55e3,55002,55003,55004,55005,55006,55007,55009,55010,55011,55013,55014,55015,55017,55018,55019,55020,55021,null,null,null,null,null,null,55022,55023,55025,55026,55027,55028,55030,55031,55032,55033,55034,55035,55038,55039,55041,55042,55043,55045,55046,55047,55048,55049,55050,55051,55052,55053,55054,55055,55056,55058,55059,55060,52824,52825,52828,52831,52832,52833,52840,52841,52843,52845,52852,52853,52856,52860,52868,52869,52871,52873,52880,52881,52884,52888,52896,52897,52899,52900,52901,52908,52909,52929,52964,52965,52968,52971,52972,52980,52981,52983,52984,52985,52992,52993,52996,53e3,53008,53009,53011,53013,53020,53024,53028,53036,53037,53039,53040,53041,53048,53076,53077,53080,53084,53092,53093,53095,53097,53104,53105,53108,53112,53120,53125,53132,53153,53160,53168,53188,53216,53217,53220,53224,53232,53233,53235,53237,53244,53248,53252,53265,53272,53293,53300,53301,53304,53308,55061,55062,55063,55066,55067,55069,55070,55071,55073,55074,55075,55076,55077,55078,55079,55082,55084,55086,55087,55088,55089,55090,55091,55094,55095,55097,null,null,null,null,null,null,55098,55099,55101,55102,55103,55104,55105,55106,55107,55109,55110,55112,55114,55115,55116,55117,55118,55119,55122,55123,55125,55130,55131,55132,55133,55134,null,null,null,null,null,null,55135,55138,55140,55142,55143,55144,55146,55147,55149,55150,55151,55153,55154,55155,55157,55158,55159,55160,55161,55162,55163,55166,55167,55168,55170,55171,55172,55173,55174,55175,55178,55179,53316,53317,53319,53321,53328,53332,53336,53344,53356,53357,53360,53364,53372,53373,53377,53412,53413,53416,53420,53428,53429,53431,53433,53440,53441,53444,53448,53449,53456,53457,53459,53460,53461,53468,53469,53472,53476,53484,53485,53487,53488,53489,53496,53517,53552,53553,53556,53560,53562,53568,53569,53571,53572,53573,53580,53581,53584,53588,53596,53597,53599,53601,53608,53612,53628,53636,53640,53664,53665,53668,53672,53680,53681,53683,53685,53690,53692,53696,53720,53748,53752,53767,53769,53776,53804,53805,53808,53812,53820,53821,53823,53825,53832,53852,55181,55182,55183,55185,55186,55187,55188,55189,55190,55191,55194,55196,55198,55199,55200,55201,55202,55203,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,53860,53888,53889,53892,53896,53904,53905,53909,53916,53920,53924,53932,53937,53944,53945,53948,53951,53952,53954,53960,53961,53963,53972,53976,53980,53988,53989,54e3,54001,54004,54008,54016,54017,54019,54021,54028,54029,54030,54032,54036,54038,54044,54045,54047,54048,54049,54053,54056,54057,54060,54064,54072,54073,54075,54076,54077,54084,54085,54140,54141,54144,54148,54156,54157,54159,54160,54161,54168,54169,54172,54176,54184,54185,54187,54189,54196,54200,54204,54212,54213,54216,54217,54224,54232,54241,54243,54252,54253,54256,54260,54268,54269,54271,54273,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,54280,54301,54336,54340,54364,54368,54372,54381,54383,54392,54393,54396,54399,54400,54402,54408,54409,54411,54413,54420,54441,54476,54480,54484,54492,54495,54504,54508,54512,54520,54523,54525,54532,54536,54540,54548,54549,54551,54588,54589,54592,54596,54604,54605,54607,54609,54616,54617,54620,54624,54629,54632,54633,54635,54637,54644,54645,54648,54652,54660,54661,54663,54664,54665,54672,54693,54728,54729,54732,54736,54738,54744,54745,54747,54749,54756,54757,54760,54764,54772,54773,54775,54777,54784,54785,54788,54792,54800,54801,54803,54804,54805,54812,54816,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,54820,54829,54840,54841,54844,54848,54853,54856,54857,54859,54861,54865,54868,54869,54872,54876,54887,54889,54896,54897,54900,54915,54917,54924,54925,54928,54932,54941,54943,54945,54952,54956,54960,54969,54971,54980,54981,54984,54988,54993,54996,54999,55001,55008,55012,55016,55024,55029,55036,55037,55040,55044,55057,55064,55065,55068,55072,55080,55081,55083,55085,55092,55093,55096,55100,55108,55111,55113,55120,55121,55124,55126,55127,55128,55129,55136,55137,55139,55141,55145,55148,55152,55156,55164,55165,55169,55176,55177,55180,55184,55192,55193,55195,55197,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20285,20339,20551,20729,21152,21487,21621,21733,22025,23233,23478,26247,26550,26551,26607,27468,29634,30146,31292,33499,33540,34903,34952,35382,36040,36303,36603,36838,39381,21051,21364,21508,24682,24932,27580,29647,33050,35258,35282,38307,20355,21002,22718,22904,23014,24178,24185,25031,25536,26438,26604,26751,28567,30286,30475,30965,31240,31487,31777,32925,33390,33393,35563,38291,20075,21917,26359,28212,30883,31469,33883,35088,34638,38824,21208,22350,22570,23884,24863,25022,25121,25954,26577,27204,28187,29976,30131,30435,30640,32058,37039,37969,37970,40853,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21283,23724,30002,32987,37440,38296,21083,22536,23004,23713,23831,24247,24378,24394,24951,27743,30074,30086,31968,32115,32177,32652,33108,33313,34193,35137,35611,37628,38477,40007,20171,20215,20491,20977,22607,24887,24894,24936,25913,27114,28433,30117,30342,30422,31623,33445,33995,63744,37799,38283,21888,23458,22353,63745,31923,32697,37301,20520,21435,23621,24040,25298,25454,25818,25831,28192,28844,31067,36317,36382,63746,36989,37445,37624,20094,20214,20581,24062,24314,24838,26967,33137,34388,36423,37749,39467,20062,20625,26480,26688,20745,21133,21138,27298,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30652,37392,40660,21163,24623,36850,20552,25001,25581,25802,26684,27268,28608,33160,35233,38548,22533,29309,29356,29956,32121,32365,32937,35211,35700,36963,40273,25225,27770,28500,32080,32570,35363,20860,24906,31645,35609,37463,37772,20140,20435,20510,20670,20742,21185,21197,21375,22384,22659,24218,24465,24950,25004,25806,25964,26223,26299,26356,26775,28039,28805,28913,29855,29861,29898,30169,30828,30956,31455,31478,32069,32147,32789,32831,33051,33686,35686,36629,36885,37857,38915,38968,39514,39912,20418,21843,22586,22865,23395,23622,24760,25106,26690,26800,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26856,28330,30028,30328,30926,31293,31995,32363,32380,35336,35489,35903,38542,40388,21476,21481,21578,21617,22266,22993,23396,23611,24235,25335,25911,25925,25970,26272,26543,27073,27837,30204,30352,30590,31295,32660,32771,32929,33167,33510,33533,33776,34241,34865,34996,35493,63747,36764,37678,38599,39015,39640,40723,21741,26011,26354,26767,31296,35895,40288,22256,22372,23825,26118,26801,26829,28414,29736,34974,39908,27752,63748,39592,20379,20844,20849,21151,23380,24037,24656,24685,25329,25511,25915,29657,31354,34467,36002,38799,20018,23521,25096,26524,29916,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31185,33747,35463,35506,36328,36942,37707,38982,24275,27112,34303,37101,63749,20896,23448,23532,24931,26874,27454,28748,29743,29912,31649,32592,33733,35264,36011,38364,39208,21038,24669,25324,36866,20362,20809,21281,22745,24291,26336,27960,28826,29378,29654,31568,33009,37979,21350,25499,32619,20054,20608,22602,22750,24618,24871,25296,27088,39745,23439,32024,32945,36703,20132,20689,21676,21932,23308,23968,24039,25898,25934,26657,27211,29409,30350,30703,32094,32761,33184,34126,34527,36611,36686,37066,39171,39509,39851,19992,20037,20061,20167,20465,20855,21246,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21312,21475,21477,21646,22036,22389,22434,23495,23943,24272,25084,25304,25937,26552,26601,27083,27472,27590,27628,27714,28317,28792,29399,29590,29699,30655,30697,31350,32127,32777,33276,33285,33290,33503,34914,35635,36092,36544,36881,37041,37476,37558,39378,39493,40169,40407,40860,22283,23616,33738,38816,38827,40628,21531,31384,32676,35033,36557,37089,22528,23624,25496,31391,23470,24339,31353,31406,33422,36524,20518,21048,21240,21367,22280,25331,25458,27402,28099,30519,21413,29527,34152,36470,38357,26426,27331,28528,35437,36556,39243,63750,26231,27512,36020,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,39740,63751,21483,22317,22862,25542,27131,29674,30789,31418,31429,31998,33909,35215,36211,36917,38312,21243,22343,30023,31584,33740,37406,63752,27224,20811,21067,21127,25119,26840,26997,38553,20677,21156,21220,25027,26020,26681,27135,29822,31563,33465,33771,35250,35641,36817,39241,63753,20170,22935,25810,26129,27278,29748,31105,31165,33449,34942,34943,35167,63754,37670,20235,21450,24613,25201,27762,32026,32102,20120,20834,30684,32943,20225,20238,20854,20864,21980,22120,22331,22522,22524,22804,22855,22931,23492,23696,23822,24049,24190,24524,25216,26071,26083,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26398,26399,26462,26827,26820,27231,27450,27683,27773,27778,28103,29592,29734,29738,29826,29859,30072,30079,30849,30959,31041,31047,31048,31098,31637,32e3,32186,32648,32774,32813,32908,35352,35663,35912,36215,37665,37668,39138,39249,39438,39439,39525,40594,32202,20342,21513,25326,26708,37329,21931,20794,63755,63756,23068,25062,63757,25295,25343,63758,63759,63760,63761,63762,63763,37027,63764,63765,63766,63767,63768,35582,63769,63770,63771,63772,26262,63773,29014,63774,63775,38627,63776,25423,25466,21335,63777,26511,26976,28275,63778,30007,63779,63780,63781,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32013,63782,63783,34930,22218,23064,63784,63785,63786,63787,63788,20035,63789,20839,22856,26608,32784,63790,22899,24180,25754,31178,24565,24684,25288,25467,23527,23511,21162,63791,22900,24361,24594,63792,63793,63794,29785,63795,63796,63797,63798,63799,63800,39377,63801,63802,63803,63804,63805,63806,63807,63808,63809,63810,63811,28611,63812,63813,33215,36786,24817,63814,63815,33126,63816,63817,23615,63818,63819,63820,63821,63822,63823,63824,63825,23273,35365,26491,32016,63826,63827,63828,63829,63830,63831,33021,63832,63833,23612,27877,21311,28346,22810,33590,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20025,20150,20294,21934,22296,22727,24406,26039,26086,27264,27573,28237,30701,31471,31774,32222,34507,34962,37170,37723,25787,28606,29562,30136,36948,21846,22349,25018,25812,26311,28129,28251,28525,28601,30192,32835,33213,34113,35203,35527,35674,37663,27795,30035,31572,36367,36957,21776,22530,22616,24162,25095,25758,26848,30070,31958,34739,40680,20195,22408,22382,22823,23565,23729,24118,24453,25140,25825,29619,33274,34955,36024,38538,40667,23429,24503,24755,20498,20992,21040,22294,22581,22615,23566,23648,23798,23947,24230,24466,24764,25361,25481,25623,26691,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26873,27330,28120,28193,28372,28644,29182,30428,30585,31153,31291,33796,35241,36077,36339,36424,36867,36884,36947,37117,37709,38518,38876,27602,28678,29272,29346,29544,30563,31167,31716,32411,35712,22697,24775,25958,26109,26302,27788,28958,29129,35930,38931,20077,31361,20189,20908,20941,21205,21516,24999,26481,26704,26847,27934,28540,30140,30643,31461,33012,33891,37509,20828,26007,26460,26515,30168,31431,33651,63834,35910,36887,38957,23663,33216,33434,36929,36975,37389,24471,23965,27225,29128,30331,31561,34276,35588,37159,39472,21895,25078,63835,30313,32645,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,34367,34746,35064,37007,63836,27931,28889,29662,32097,33853,63837,37226,39409,63838,20098,21365,27396,27410,28734,29211,34349,40478,21068,36771,23888,25829,25900,27414,28651,31811,32412,34253,35172,35261,25289,33240,34847,24266,26391,28010,29436,29701,29807,34690,37086,20358,23821,24480,33802,20919,25504,30053,20142,20486,20841,20937,26753,27153,31918,31921,31975,33391,35538,36635,37327,20406,20791,21237,21570,24300,24942,25150,26053,27354,28670,31018,34268,34851,38317,39522,39530,40599,40654,21147,26310,27511,28701,31019,36706,38722,24976,25088,25891,28451,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29001,29833,32244,32879,34030,36646,36899,37706,20925,21015,21155,27916,28872,35010,24265,25986,27566,28610,31806,29557,20196,20278,22265,63839,23738,23994,24604,29618,31533,32666,32718,32838,36894,37428,38646,38728,38936,40801,20363,28583,31150,37300,38583,21214,63840,25736,25796,27347,28510,28696,29200,30439,32769,34310,34396,36335,36613,38706,39791,40442,40565,30860,31103,32160,33737,37636,40575,40595,35542,22751,24324,26407,28711,29903,31840,32894,20769,28712,29282,30922,36034,36058,36084,38647,20102,20698,23534,24278,26009,29134,30274,30637,32842,34044,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36988,39719,40845,22744,23105,23650,27155,28122,28431,30267,32047,32311,34078,35128,37860,38475,21129,26066,26611,27060,27969,28316,28687,29705,29792,30041,30244,30827,35628,39006,20845,25134,38520,20374,20523,23833,28138,32184,36650,24459,24900,26647,63841,38534,21202,32907,20956,20940,26974,31260,32190,33777,38517,20442,21033,21400,21519,21774,23653,24743,26446,26792,28012,29313,29432,29702,29827,63842,30178,31852,32633,32696,33673,35023,35041,37324,37328,38626,39881,21533,28542,29136,29848,34298,36522,38563,40023,40607,26519,28107,29747,33256,38678,30764,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31435,31520,31890,25705,29802,30194,30908,30952,39340,39764,40635,23518,24149,28448,33180,33707,37e3,19975,21325,23081,24018,24398,24930,25405,26217,26364,28415,28459,28771,30622,33836,34067,34875,36627,39237,39995,21788,25273,26411,27819,33545,35178,38778,20129,22916,24536,24537,26395,32178,32596,33426,33579,33725,36638,37017,22475,22969,23186,23504,26151,26522,26757,27599,29028,32629,36023,36067,36993,39749,33032,35978,38476,39488,40613,23391,27667,29467,30450,30431,33804,20906,35219,20813,20885,21193,26825,27796,30468,30496,32191,32236,38754,40629,28357,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,34065,20901,21517,21629,26126,26269,26919,28319,30399,30609,33559,33986,34719,37225,37528,40180,34946,20398,20882,21215,22982,24125,24917,25720,25721,26286,26576,27169,27597,27611,29279,29281,29761,30520,30683,32791,33468,33541,35584,35624,35980,26408,27792,29287,30446,30566,31302,40361,27519,27794,22818,26406,33945,21359,22675,22937,24287,25551,26164,26483,28218,29483,31447,33495,37672,21209,24043,25006,25035,25098,25287,25771,26080,26969,27494,27595,28961,29687,30045,32326,33310,33538,34154,35491,36031,38695,40289,22696,40664,20497,21006,21563,21839,25991,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,27766,32010,32011,32862,34442,38272,38639,21247,27797,29289,21619,23194,23614,23883,24396,24494,26410,26806,26979,28220,28228,30473,31859,32654,34183,35598,36855,38753,40692,23735,24758,24845,25003,25935,26107,26108,27665,27887,29599,29641,32225,38292,23494,34588,35600,21085,21338,25293,25615,25778,26420,27192,27850,29632,29854,31636,31893,32283,33162,33334,34180,36843,38649,39361,20276,21322,21453,21467,25292,25644,25856,26001,27075,27886,28504,29677,30036,30242,30436,30460,30928,30971,31020,32070,33324,34784,36820,38930,39151,21187,25300,25765,28196,28497,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30332,36299,37297,37474,39662,39747,20515,20621,22346,22952,23592,24135,24439,25151,25918,26041,26049,26121,26507,27036,28354,30917,32033,32938,33152,33323,33459,33953,34444,35370,35607,37030,38450,40848,20493,20467,63843,22521,24472,25308,25490,26479,28227,28953,30403,32972,32986,35060,35061,35097,36064,36649,37197,38506,20271,20336,24091,26575,26658,30333,30334,39748,24161,27146,29033,29140,30058,63844,32321,34115,34281,39132,20240,31567,32624,38309,20961,24070,26805,27710,27726,27867,29359,31684,33539,27861,29754,20731,21128,22721,25816,27287,29863,30294,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30887,34327,38370,38713,63845,21342,24321,35722,36776,36783,37002,21029,30629,40009,40712,19993,20482,20853,23643,24183,26142,26170,26564,26821,28851,29953,30149,31177,31453,36647,39200,39432,20445,22561,22577,23542,26222,27493,27921,28282,28541,29668,29995,33769,35036,35091,35676,36628,20239,20693,21264,21340,23443,24489,26381,31119,33145,33583,34068,35079,35206,36665,36667,39333,39954,26412,20086,20472,22857,23553,23791,23792,25447,26834,28925,29090,29739,32299,34028,34562,36898,37586,40179,19981,20184,20463,20613,21078,21103,21542,21648,22496,22827,23142,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,23386,23413,23500,24220,63846,25206,25975,26023,28014,28325,29238,31526,31807,32566,33104,33105,33178,33344,33433,33705,35331,36e3,36070,36091,36212,36282,37096,37340,38428,38468,39385,40167,21271,20998,21545,22132,22707,22868,22894,24575,24996,25198,26128,27774,28954,30406,31881,31966,32027,33452,36033,38640,63847,20315,24343,24447,25282,23849,26379,26842,30844,32323,40300,19989,20633,21269,21290,21329,22915,23138,24199,24754,24970,25161,25209,26e3,26503,27047,27604,27606,27607,27608,27832,63848,29749,30202,30738,30865,31189,31192,31875,32203,32737,32933,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,33086,33218,33778,34586,35048,35513,35692,36027,37145,38750,39131,40763,22188,23338,24428,25996,27315,27567,27996,28657,28693,29277,29613,36007,36051,38971,24977,27703,32856,39425,20045,20107,20123,20181,20282,20284,20351,20447,20735,21490,21496,21766,21987,22235,22763,22882,23057,23531,23546,23556,24051,24107,24473,24605,25448,26012,26031,26614,26619,26797,27515,27801,27863,28195,28681,29509,30722,31038,31040,31072,31169,31721,32023,32114,32902,33293,33678,34001,34503,35039,35408,35422,35613,36060,36198,36781,37034,39164,39391,40605,21066,63849,26388,63850,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20632,21034,23665,25955,27733,29642,29987,30109,31639,33948,37240,38704,20087,25746,27578,29022,34217,19977,63851,26441,26862,28183,33439,34072,34923,25591,28545,37394,39087,19978,20663,20687,20767,21830,21930,22039,23360,23577,23776,24120,24202,24224,24258,24819,26705,27233,28248,29245,29248,29376,30456,31077,31665,32724,35059,35316,35443,35937,36062,38684,22622,29885,36093,21959,63852,31329,32034,33394,29298,29983,29989,63853,31513,22661,22779,23996,24207,24246,24464,24661,25234,25471,25933,26257,26329,26360,26646,26866,29312,29790,31598,32110,32214,32626,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32997,33298,34223,35199,35475,36893,37604,40653,40736,22805,22893,24109,24796,26132,26227,26512,27728,28101,28511,30707,30889,33990,37323,37675,20185,20682,20808,21892,23307,23459,25159,25982,26059,28210,29053,29697,29764,29831,29887,30316,31146,32218,32341,32680,33146,33203,33337,34330,34796,35445,36323,36984,37521,37925,39245,39854,21352,23633,26964,27844,27945,28203,33292,34203,35131,35373,35498,38634,40807,21089,26297,27570,32406,34814,36109,38275,38493,25885,28041,29166,63854,22478,22995,23468,24615,24826,25104,26143,26207,29481,29689,30427,30465,31596,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32854,32882,33125,35488,37266,19990,21218,27506,27927,31237,31545,32048,63855,36016,21484,22063,22609,23477,23567,23569,24034,25152,25475,25620,26157,26803,27836,28040,28335,28703,28836,29138,29990,30095,30094,30233,31505,31712,31787,32032,32057,34092,34157,34311,35380,36877,36961,37045,37559,38902,39479,20439,23660,26463,28049,31903,32396,35606,36118,36895,23403,24061,25613,33984,36956,39137,29575,23435,24730,26494,28126,35359,35494,36865,38924,21047,63856,28753,30862,37782,34928,37335,20462,21463,22013,22234,22402,22781,23234,23432,23723,23744,24101,24833,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,25101,25163,25480,25628,25910,25976,27193,27530,27700,27929,28465,29159,29417,29560,29703,29874,30246,30561,31168,31319,31466,31929,32143,32172,32353,32670,33065,33585,33936,34010,34282,34966,35504,35728,36664,36930,36995,37228,37526,37561,38539,38567,38568,38614,38656,38920,39318,39635,39706,21460,22654,22809,23408,23487,28113,28506,29087,29729,29881,32901,33789,24033,24455,24490,24642,26092,26642,26991,27219,27529,27957,28147,29667,30462,30636,31565,32020,33059,33308,33600,34036,34147,35426,35524,37255,37662,38918,39348,25100,34899,36848,37477,23815,23847,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,23913,29791,33181,34664,28629,25342,32722,35126,35186,19998,20056,20711,21213,21319,25215,26119,32361,34821,38494,20365,21273,22070,22987,23204,23608,23630,23629,24066,24337,24643,26045,26159,26178,26558,26612,29468,30690,31034,32709,33940,33997,35222,35430,35433,35553,35925,35962,22516,23508,24335,24687,25325,26893,27542,28252,29060,31698,34645,35672,36606,39135,39166,20280,20353,20449,21627,23072,23480,24892,26032,26216,29180,30003,31070,32051,33102,33251,33688,34218,34254,34563,35338,36523,36763,63857,36805,22833,23460,23526,24713,23529,23563,24515,27777,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63858,28145,28683,29978,33455,35574,20160,21313,63859,38617,27663,20126,20420,20818,21854,23077,23784,25105,29273,33469,33706,34558,34905,35357,38463,38597,39187,40201,40285,22538,23731,23997,24132,24801,24853,25569,27138,28197,37122,37716,38990,39952,40823,23433,23736,25353,26191,26696,30524,38593,38797,38996,39839,26017,35585,36555,38332,21813,23721,24022,24245,26263,30284,33780,38343,22739,25276,29390,40232,20208,22830,24591,26171,27523,31207,40230,21395,21696,22467,23830,24859,26326,28079,30861,33406,38552,38724,21380,25212,25494,28082,32266,33099,38989,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,27387,32588,40367,40474,20063,20539,20918,22812,24825,25590,26928,29242,32822,63860,37326,24369,63861,63862,32004,33509,33903,33979,34277,36493,63863,20335,63864,63865,22756,23363,24665,25562,25880,25965,26264,63866,26954,27171,27915,28673,29036,30162,30221,31155,31344,63867,32650,63868,35140,63869,35731,37312,38525,63870,39178,22276,24481,26044,28417,30208,31142,35486,39341,39770,40812,20740,25014,25233,27277,33222,20547,22576,24422,28937,35328,35578,23420,34326,20474,20796,22196,22852,25513,28153,23978,26989,20870,20104,20313,63871,63872,63873,22914,63874,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63875,27487,27741,63876,29877,30998,63877,33287,33349,33593,36671,36701,63878,39192,63879,63880,63881,20134,63882,22495,24441,26131,63883,63884,30123,32377,35695,63885,36870,39515,22181,22567,23032,23071,23476,63886,24310,63887,63888,25424,25403,63889,26941,27783,27839,28046,28051,28149,28436,63890,28895,28982,29017,63891,29123,29141,63892,30799,30831,63893,31605,32227,63894,32303,63895,34893,36575,63896,63897,63898,37467,63899,40182,63900,63901,63902,24709,28037,63903,29105,63904,63905,38321,21421,63906,63907,63908,26579,63909,28814,28976,29744,33398,33490,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63910,38331,39653,40573,26308,63911,29121,33865,63912,63913,22603,63914,63915,23992,24433,63916,26144,26254,27001,27054,27704,27891,28214,28481,28634,28699,28719,29008,29151,29552,63917,29787,63918,29908,30408,31310,32403,63919,63920,33521,35424,36814,63921,37704,63922,38681,63923,63924,20034,20522,63925,21e3,21473,26355,27757,28618,29450,30591,31330,33454,34269,34306,63926,35028,35427,35709,35947,63927,37555,63928,38675,38928,20116,20237,20425,20658,21320,21566,21555,21978,22626,22714,22887,23067,23524,24735,63929,25034,25942,26111,26212,26791,27738,28595,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,28879,29100,29522,31613,34568,35492,39986,40711,23627,27779,29508,29577,37434,28331,29797,30239,31337,32277,34314,20800,22725,25793,29934,29973,30320,32705,37013,38605,39252,28198,29926,31401,31402,33253,34521,34680,35355,23113,23436,23451,26785,26880,28003,29609,29715,29740,30871,32233,32747,33048,33109,33694,35916,38446,38929,26352,24448,26106,26505,27754,29579,20525,23043,27498,30702,22806,23916,24013,29477,30031,63930,63931,20709,20985,22575,22829,22934,23002,23525,63932,63933,23970,25303,25622,25747,25854,63934,26332,63935,27208,63936,29183,29796,63937,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31368,31407,32327,32350,32768,33136,63938,34799,35201,35616,36953,63939,36992,39250,24958,27442,28020,32287,35109,36785,20433,20653,20887,21191,22471,22665,23481,24248,24898,27029,28044,28263,28342,29076,29794,29992,29996,32883,33592,33993,36362,37780,37854,63940,20110,20305,20598,20778,21448,21451,21491,23431,23507,23588,24858,24962,26100,29275,29591,29760,30402,31056,31121,31161,32006,32701,33419,34261,34398,36802,36935,37109,37354,38533,38632,38633,21206,24423,26093,26161,26671,29020,31286,37057,38922,20113,63941,27218,27550,28560,29065,32792,33464,34131,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36939,38549,38642,38907,34074,39729,20112,29066,38596,20803,21407,21729,22291,22290,22435,23195,23236,23491,24616,24895,25588,27781,27961,28274,28304,29232,29503,29783,33489,34945,36677,36960,63942,38498,39e3,40219,26376,36234,37470,20301,20553,20702,21361,22285,22996,23041,23561,24944,26256,28205,29234,29771,32239,32963,33806,33894,34111,34655,34907,35096,35586,36949,38859,39759,20083,20369,20754,20842,63943,21807,21929,23418,23461,24188,24189,24254,24736,24799,24840,24841,25540,25912,26377,63944,26580,26586,63945,26977,26978,27833,27943,63946,28216,63947,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,28641,29494,29495,63948,29788,30001,63949,30290,63950,63951,32173,33278,33848,35029,35480,35547,35565,36400,36418,36938,36926,36986,37193,37321,37742,63952,63953,22537,63954,27603,32905,32946,63955,63956,20801,22891,23609,63957,63958,28516,29607,32996,36103,63959,37399,38287,63960,63961,63962,63963,32895,25102,28700,32104,34701,63964,22432,24681,24903,27575,35518,37504,38577,20057,21535,28139,34093,38512,38899,39150,25558,27875,37009,20957,25033,33210,40441,20381,20506,20736,23452,24847,25087,25836,26885,27589,30097,30691,32681,33380,34191,34811,34915,35516,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,35696,37291,20108,20197,20234,63965,63966,22839,23016,63967,24050,24347,24411,24609,63968,63969,63970,63971,29246,29669,63972,30064,30157,63973,31227,63974,32780,32819,32900,33505,33617,63975,63976,36029,36019,36999,63977,63978,39156,39180,63979,63980,28727,30410,32714,32716,32764,35610,20154,20161,20995,21360,63981,21693,22240,23035,23493,24341,24525,28270,63982,63983,32106,33589,63984,34451,35469,63985,38765,38775,63986,63987,19968,20314,20350,22777,26085,28322,36920,37808,39353,20219,22764,22922,23001,24641,63988,63989,31252,63990,33615,36035,20837,21316,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63991,63992,63993,20173,21097,23381,33471,20180,21050,21672,22985,23039,23376,23383,23388,24675,24904,28363,28825,29038,29574,29943,30133,30913,32043,32773,33258,33576,34071,34249,35566,36039,38604,20316,21242,22204,26027,26152,28796,28856,29237,32189,33421,37196,38592,40306,23409,26855,27544,28538,30430,23697,26283,28507,31668,31786,34870,38620,19976,20183,21280,22580,22715,22767,22892,23559,24115,24196,24373,25484,26290,26454,27167,27299,27404,28479,29254,63994,29520,29835,31456,31911,33144,33247,33255,33674,33900,34083,34196,34255,35037,36115,37292,38263,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38556,20877,21705,22312,23472,25165,26448,26685,26771,28221,28371,28797,32289,35009,36001,36617,40779,40782,29229,31631,35533,37658,20295,20302,20786,21632,22992,24213,25269,26485,26990,27159,27822,28186,29401,29482,30141,31672,32053,33511,33785,33879,34295,35419,36015,36487,36889,37048,38606,40799,21219,21514,23265,23490,25688,25973,28404,29380,63995,30340,31309,31515,31821,32318,32735,33659,35627,36042,36196,36321,36447,36842,36857,36969,37841,20291,20346,20659,20840,20856,21069,21098,22625,22652,22880,23560,23637,24283,24731,25136,26643,27583,27656,28593,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29006,29728,3e4,30008,30033,30322,31564,31627,31661,31686,32399,35438,36670,36681,37439,37523,37666,37931,38651,39002,39019,39198,20999,25130,25240,27993,30308,31434,31680,32118,21344,23742,24215,28472,28857,31896,38673,39822,40670,25509,25722,34678,19969,20117,20141,20572,20597,21576,22979,23450,24128,24237,24311,24449,24773,25402,25919,25972,26060,26230,26232,26622,26984,27273,27491,27712,28096,28136,28191,28254,28702,28833,29582,29693,30010,30555,30855,31118,31243,31357,31934,32142,33351,35330,35562,35998,37165,37194,37336,37478,37580,37664,38662,38742,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38748,38914,40718,21046,21137,21884,22564,24093,24351,24716,25552,26799,28639,31085,31532,33229,34234,35069,35576,36420,37261,38500,38555,38717,38988,40778,20430,20806,20939,21161,22066,24340,24427,25514,25805,26089,26177,26362,26361,26397,26781,26839,27133,28437,28526,29031,29157,29226,29866,30522,31062,31066,31199,31264,31381,31895,31967,32068,32368,32903,34299,34468,35412,35519,36249,36481,36896,36973,37347,38459,38613,40165,26063,31751,36275,37827,23384,23562,21330,25305,29469,20519,23447,24478,24752,24939,26837,28121,29742,31278,32066,32156,32305,33131,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36394,36405,37758,37912,20304,22352,24038,24231,25387,32618,20027,20303,20367,20570,23005,32964,21610,21608,22014,22863,23449,24030,24282,26205,26417,26609,26666,27880,27954,28234,28557,28855,29664,30087,31820,32002,32044,32162,33311,34523,35387,35461,36208,36490,36659,36913,37198,37202,37956,39376,31481,31909,20426,20737,20934,22472,23535,23803,26201,27197,27994,28310,28652,28940,30063,31459,34850,36897,36981,38603,39423,33537,20013,20210,34886,37325,21373,27355,26987,27713,33914,22686,24974,26366,25327,28893,29969,30151,32338,33976,35657,36104,20043,21482,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21675,22320,22336,24535,25345,25351,25711,25903,26088,26234,26525,26547,27490,27744,27802,28460,30693,30757,31049,31063,32025,32930,33026,33267,33437,33463,34584,35468,63996,36100,36286,36978,30452,31257,31287,32340,32887,21767,21972,22645,25391,25634,26185,26187,26733,27035,27524,27941,28337,29645,29800,29857,30043,30137,30433,30494,30603,31206,32265,32285,33275,34095,34967,35386,36049,36587,36784,36914,37805,38499,38515,38663,20356,21489,23018,23241,24089,26702,29894,30142,31209,31378,33187,34541,36074,36300,36845,26015,26389,63997,22519,28503,32221,36655,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,37878,38598,24501,25074,28548,19988,20376,20511,21449,21983,23919,24046,27425,27492,30923,31642,63998,36425,36554,36974,25417,25662,30528,31364,37679,38015,40810,25776,28591,29158,29864,29914,31428,31762,32386,31922,32408,35738,36106,38013,39184,39244,21049,23519,25830,26413,32046,20717,21443,22649,24920,24921,25082,26028,31449,35730,35734,20489,20513,21109,21809,23100,24288,24432,24884,25950,26124,26166,26274,27085,28356,28466,29462,30241,31379,33081,33369,33750,33980,20661,22512,23488,23528,24425,25505,30758,32181,33756,34081,37319,37365,20874,26613,31574,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36012,20932,22971,24765,34389,20508,63999,21076,23610,24957,25114,25299,25842,26021,28364,30240,33034,36448,38495,38587,20191,21315,21912,22825,24029,25797,27849,28154,29588,31359,33307,34214,36068,36368,36983,37351,38369,38433,38854,20984,21746,21894,24505,25764,28552,32180,36639,36685,37941,20681,23574,27838,28155,29979,30651,31805,31844,35449,35522,22558,22974,24086,25463,29266,30090,30571,35548,36028,36626,24307,26228,28152,32893,33729,35531,38737,39894,64e3,21059,26367,28053,28399,32224,35558,36910,36958,39636,21021,21119,21736,24980,25220,25307,26786,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26898,26970,27189,28818,28966,30813,30977,30990,31186,31245,32918,33400,33493,33609,34121,35970,36229,37218,37259,37294,20419,22225,29165,30679,34560,35320,23544,24534,26449,37032,21474,22618,23541,24740,24961,25696,32317,32880,34085,37507,25774,20652,23828,26368,22684,25277,25512,26894,27e3,27166,28267,30394,31179,33467,33833,35535,36264,36861,37138,37195,37276,37648,37656,37786,38619,39478,39949,19985,30044,31069,31482,31569,31689,32302,33988,36441,36468,36600,36880,26149,26943,29763,20986,26414,40668,20805,24544,27798,34802,34909,34935,24756,33205,33795,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36101,21462,21561,22068,23094,23601,28810,32736,32858,33030,33261,36259,37257,39519,40434,20596,20164,21408,24827,28204,23652,20360,20516,21988,23769,24159,24677,26772,27835,28100,29118,30164,30196,30305,31258,31305,32199,32251,32622,33268,34473,36636,38601,39347,40786,21063,21189,39149,35242,19971,26578,28422,20405,23522,26517,27784,28024,29723,30759,37341,37756,34756,31204,31281,24555,20182,21668,21822,22702,22949,24816,25171,25302,26422,26965,33333,38464,39345,39389,20524,21331,21828,22396,64001,25176,64002,25826,26219,26589,28609,28655,29730,29752,35351,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,37944,21585,22022,22374,24392,24986,27470,28760,28845,32187,35477,22890,33067,25506,30472,32829,36010,22612,25645,27067,23445,24081,28271,64003,34153,20812,21488,22826,24608,24907,27526,27760,27888,31518,32974,33492,36294,37040,39089,64004,25799,28580,25745,25860,20814,21520,22303,35342,24927,26742,64005,30171,31570,32113,36890,22534,27084,33151,35114,36864,38969,20600,22871,22956,25237,36879,39722,24925,29305,38358,22369,23110,24052,25226,25773,25850,26487,27874,27966,29228,29750,30772,32631,33453,36315,38935,21028,22338,26495,29256,29923,36009,36774,37393,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38442,20843,21485,25420,20329,21764,24726,25943,27803,28031,29260,29437,31255,35207,35997,24429,28558,28921,33192,24846,20415,20559,25153,29255,31687,32232,32745,36941,38829,39449,36022,22378,24179,26544,33805,35413,21536,23318,24163,24290,24330,25987,32954,34109,38281,38491,20296,21253,21261,21263,21638,21754,22275,24067,24598,25243,25265,25429,64006,27873,28006,30129,30770,32990,33071,33502,33889,33970,34957,35090,36875,37610,39165,39825,24133,26292,26333,28689,29190,64007,20469,21117,24426,24915,26451,27161,28418,29922,31080,34920,35961,39111,39108,39491,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21697,31263,26963,35575,35914,39080,39342,24444,25259,30130,30382,34987,36991,38466,21305,24380,24517,27852,29644,30050,30091,31558,33534,39325,20047,36924,19979,20309,21414,22799,24264,26160,27827,29781,33655,34662,36032,36944,38686,39957,22737,23416,34384,35604,40372,23506,24680,24717,26097,27735,28450,28579,28698,32597,32752,38289,38290,38480,38867,21106,36676,20989,21547,21688,21859,21898,27323,28085,32216,33382,37532,38519,40569,21512,21704,30418,34532,38308,38356,38492,20130,20233,23022,23270,24055,24658,25239,26477,26689,27782,28207,32568,32923,33322,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,64008,64009,38917,20133,20565,21683,22419,22874,23401,23475,25032,26999,28023,28707,34809,35299,35442,35559,36994,39405,39608,21182,26680,20502,24184,26447,33607,34892,20139,21521,22190,29670,37141,38911,39177,39255,39321,22099,22687,34395,35377,25010,27382,29563,36562,27463,38570,39511,22869,29184,36203,38761,20436,23796,24358,25080,26203,27883,28843,29572,29625,29694,30505,30541,32067,32098,32291,33335,34898,64010,36066,37449,39023,23377,31348,34880,38913,23244,20448,21332,22846,23805,25406,28025,29433,33029,33031,33698,37583,38960,20136,20804,21009,22411,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,24418,27842,28366,28677,28752,28847,29074,29673,29801,33610,34722,34913,36872,37026,37795,39336,20846,24407,24800,24935,26291,34137,36426,37295,38795,20046,20114,21628,22741,22778,22909,23733,24359,25142,25160,26122,26215,27627,28009,28111,28246,28408,28564,28640,28649,28765,29392,29733,29786,29920,30355,31068,31946,32286,32993,33446,33899,33983,34382,34399,34676,35703,35946,37804,38912,39013,24785,25110,37239,23130,26127,28151,28222,29759,39746,24573,24794,31503,21700,24344,27742,27859,27946,28888,32005,34425,35340,40251,21270,21644,23301,27194,28779,30069,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31117,31166,33457,33775,35441,35649,36008,38772,64011,25844,25899,30906,30907,31339,20024,21914,22864,23462,24187,24739,25563,27489,26213,26707,28185,29029,29872,32008,36996,39529,39973,27963,28369,29502,35905,38346,20976,24140,24488,24653,24822,24880,24908,26179,26180,27045,27841,28255,28361,28514,29004,29852,30343,31681,31783,33618,34647,36945,38541,40643,21295,22238,24315,24458,24674,24724,25079,26214,26371,27292,28142,28590,28784,29546,32362,33214,33588,34516,35496,36036,21123,29554,23446,27243,37892,21742,22150,23389,25928,25989,26313,26783,28045,28102,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29243,32948,37237,39501,20399,20505,21402,21518,21564,21897,21957,24127,24460,26429,29030,29661,36869,21211,21235,22628,22734,28932,29071,29179,34224,35347,26248,34216,21927,26244,29002,33841,21321,21913,27585,24409,24509,25582,26249,28999,35569,36637,40638,20241,25658,28875,30054,34407,24676,35662,40440,20807,20982,21256,27958,33016,40657,26133,27427,28824,30165,21507,23673,32007,35350,27424,27453,27462,21560,24688,27965,32725,33288,20694,20958,21916,22123,22221,23020,23305,24076,24985,24984,25137,26206,26342,29081,29113,29114,29351,31143,31232,32690,35440,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],gb18030:[19970,19972,19973,19974,19983,19986,19991,19999,2e4,20001,20003,20006,20009,20014,20015,20017,20019,20021,20023,20028,20032,20033,20034,20036,20038,20042,20049,20053,20055,20058,20059,20066,20067,20068,20069,20071,20072,20074,20075,20076,20077,20078,20079,20082,20084,20085,20086,20087,20088,20089,20090,20091,20092,20093,20095,20096,20097,20098,20099,20100,20101,20103,20106,20112,20118,20119,20121,20124,20125,20126,20131,20138,20143,20144,20145,20148,20150,20151,20152,20153,20156,20157,20158,20168,20172,20175,20176,20178,20186,20187,20188,20192,20194,20198,20199,20201,20205,20206,20207,20209,20212,20216,20217,20218,20220,20222,20224,20226,20227,20228,20229,20230,20231,20232,20235,20236,20242,20243,20244,20245,20246,20252,20253,20257,20259,20264,20265,20268,20269,20270,20273,20275,20277,20279,20281,20283,20286,20287,20288,20289,20290,20292,20293,20295,20296,20297,20298,20299,20300,20306,20308,20310,20321,20322,20326,20328,20330,20331,20333,20334,20337,20338,20341,20343,20344,20345,20346,20349,20352,20353,20354,20357,20358,20359,20362,20364,20366,20368,20370,20371,20373,20374,20376,20377,20378,20380,20382,20383,20385,20386,20388,20395,20397,20400,20401,20402,20403,20404,20406,20407,20408,20409,20410,20411,20412,20413,20414,20416,20417,20418,20422,20423,20424,20425,20427,20428,20429,20434,20435,20436,20437,20438,20441,20443,20448,20450,20452,20453,20455,20459,20460,20464,20466,20468,20469,20470,20471,20473,20475,20476,20477,20479,20480,20481,20482,20483,20484,20485,20486,20487,20488,20489,20490,20491,20494,20496,20497,20499,20501,20502,20503,20507,20509,20510,20512,20514,20515,20516,20519,20523,20527,20528,20529,20530,20531,20532,20533,20534,20535,20536,20537,20539,20541,20543,20544,20545,20546,20548,20549,20550,20553,20554,20555,20557,20560,20561,20562,20563,20564,20566,20567,20568,20569,20571,20573,20574,20575,20576,20577,20578,20579,20580,20582,20583,20584,20585,20586,20587,20589,20590,20591,20592,20593,20594,20595,20596,20597,20600,20601,20602,20604,20605,20609,20610,20611,20612,20614,20615,20617,20618,20619,20620,20622,20623,20624,20625,20626,20627,20628,20629,20630,20631,20632,20633,20634,20635,20636,20637,20638,20639,20640,20641,20642,20644,20646,20650,20651,20653,20654,20655,20656,20657,20659,20660,20661,20662,20663,20664,20665,20668,20669,20670,20671,20672,20673,20674,20675,20676,20677,20678,20679,20680,20681,20682,20683,20684,20685,20686,20688,20689,20690,20691,20692,20693,20695,20696,20697,20699,20700,20701,20702,20703,20704,20705,20706,20707,20708,20709,20712,20713,20714,20715,20719,20720,20721,20722,20724,20726,20727,20728,20729,20730,20732,20733,20734,20735,20736,20737,20738,20739,20740,20741,20744,20745,20746,20748,20749,20750,20751,20752,20753,20755,20756,20757,20758,20759,20760,20761,20762,20763,20764,20765,20766,20767,20768,20770,20771,20772,20773,20774,20775,20776,20777,20778,20779,20780,20781,20782,20783,20784,20785,20786,20787,20788,20789,20790,20791,20792,20793,20794,20795,20796,20797,20798,20802,20807,20810,20812,20814,20815,20816,20818,20819,20823,20824,20825,20827,20829,20830,20831,20832,20833,20835,20836,20838,20839,20841,20842,20847,20850,20858,20862,20863,20867,20868,20870,20871,20874,20875,20878,20879,20880,20881,20883,20884,20888,20890,20893,20894,20895,20897,20899,20902,20903,20904,20905,20906,20909,20910,20916,20920,20921,20922,20926,20927,20929,20930,20931,20933,20936,20938,20941,20942,20944,20946,20947,20948,20949,20950,20951,20952,20953,20954,20956,20958,20959,20962,20963,20965,20966,20967,20968,20969,20970,20972,20974,20977,20978,20980,20983,20990,20996,20997,21001,21003,21004,21007,21008,21011,21012,21013,21020,21022,21023,21025,21026,21027,21029,21030,21031,21034,21036,21039,21041,21042,21044,21045,21052,21054,21060,21061,21062,21063,21064,21065,21067,21070,21071,21074,21075,21077,21079,21080,21081,21082,21083,21085,21087,21088,21090,21091,21092,21094,21096,21099,21100,21101,21102,21104,21105,21107,21108,21109,21110,21111,21112,21113,21114,21115,21116,21118,21120,21123,21124,21125,21126,21127,21129,21130,21131,21132,21133,21134,21135,21137,21138,21140,21141,21142,21143,21144,21145,21146,21148,21156,21157,21158,21159,21166,21167,21168,21172,21173,21174,21175,21176,21177,21178,21179,21180,21181,21184,21185,21186,21188,21189,21190,21192,21194,21196,21197,21198,21199,21201,21203,21204,21205,21207,21209,21210,21211,21212,21213,21214,21216,21217,21218,21219,21221,21222,21223,21224,21225,21226,21227,21228,21229,21230,21231,21233,21234,21235,21236,21237,21238,21239,21240,21243,21244,21245,21249,21250,21251,21252,21255,21257,21258,21259,21260,21262,21265,21266,21267,21268,21272,21275,21276,21278,21279,21282,21284,21285,21287,21288,21289,21291,21292,21293,21295,21296,21297,21298,21299,21300,21301,21302,21303,21304,21308,21309,21312,21314,21316,21318,21323,21324,21325,21328,21332,21336,21337,21339,21341,21349,21352,21354,21356,21357,21362,21366,21369,21371,21372,21373,21374,21376,21377,21379,21383,21384,21386,21390,21391,21392,21393,21394,21395,21396,21398,21399,21401,21403,21404,21406,21408,21409,21412,21415,21418,21419,21420,21421,21423,21424,21425,21426,21427,21428,21429,21431,21432,21433,21434,21436,21437,21438,21440,21443,21444,21445,21446,21447,21454,21455,21456,21458,21459,21461,21466,21468,21469,21470,21473,21474,21479,21492,21498,21502,21503,21504,21506,21509,21511,21515,21524,21528,21529,21530,21532,21538,21540,21541,21546,21552,21555,21558,21559,21562,21565,21567,21569,21570,21572,21573,21575,21577,21580,21581,21582,21583,21585,21594,21597,21598,21599,21600,21601,21603,21605,21607,21609,21610,21611,21612,21613,21614,21615,21616,21620,21625,21626,21630,21631,21633,21635,21637,21639,21640,21641,21642,21645,21649,21651,21655,21656,21660,21662,21663,21664,21665,21666,21669,21678,21680,21682,21685,21686,21687,21689,21690,21692,21694,21699,21701,21706,21707,21718,21720,21723,21728,21729,21730,21731,21732,21739,21740,21743,21744,21745,21748,21749,21750,21751,21752,21753,21755,21758,21760,21762,21763,21764,21765,21768,21770,21771,21772,21773,21774,21778,21779,21781,21782,21783,21784,21785,21786,21788,21789,21790,21791,21793,21797,21798,21800,21801,21803,21805,21810,21812,21813,21814,21816,21817,21818,21819,21821,21824,21826,21829,21831,21832,21835,21836,21837,21838,21839,21841,21842,21843,21844,21847,21848,21849,21850,21851,21853,21854,21855,21856,21858,21859,21864,21865,21867,21871,21872,21873,21874,21875,21876,21881,21882,21885,21887,21893,21894,21900,21901,21902,21904,21906,21907,21909,21910,21911,21914,21915,21918,21920,21921,21922,21923,21924,21925,21926,21928,21929,21930,21931,21932,21933,21934,21935,21936,21938,21940,21942,21944,21946,21948,21951,21952,21953,21954,21955,21958,21959,21960,21962,21963,21966,21967,21968,21973,21975,21976,21977,21978,21979,21982,21984,21986,21991,21993,21997,21998,22e3,22001,22004,22006,22008,22009,22010,22011,22012,22015,22018,22019,22020,22021,22022,22023,22026,22027,22029,22032,22033,22034,22035,22036,22037,22038,22039,22041,22042,22044,22045,22048,22049,22050,22053,22054,22056,22057,22058,22059,22062,22063,22064,22067,22069,22071,22072,22074,22076,22077,22078,22080,22081,22082,22083,22084,22085,22086,22087,22088,22089,22090,22091,22095,22096,22097,22098,22099,22101,22102,22106,22107,22109,22110,22111,22112,22113,22115,22117,22118,22119,22125,22126,22127,22128,22130,22131,22132,22133,22135,22136,22137,22138,22141,22142,22143,22144,22145,22146,22147,22148,22151,22152,22153,22154,22155,22156,22157,22160,22161,22162,22164,22165,22166,22167,22168,22169,22170,22171,22172,22173,22174,22175,22176,22177,22178,22180,22181,22182,22183,22184,22185,22186,22187,22188,22189,22190,22192,22193,22194,22195,22196,22197,22198,22200,22201,22202,22203,22205,22206,22207,22208,22209,22210,22211,22212,22213,22214,22215,22216,22217,22219,22220,22221,22222,22223,22224,22225,22226,22227,22229,22230,22232,22233,22236,22243,22245,22246,22247,22248,22249,22250,22252,22254,22255,22258,22259,22262,22263,22264,22267,22268,22272,22273,22274,22277,22279,22283,22284,22285,22286,22287,22288,22289,22290,22291,22292,22293,22294,22295,22296,22297,22298,22299,22301,22302,22304,22305,22306,22308,22309,22310,22311,22315,22321,22322,22324,22325,22326,22327,22328,22332,22333,22335,22337,22339,22340,22341,22342,22344,22345,22347,22354,22355,22356,22357,22358,22360,22361,22370,22371,22373,22375,22380,22382,22384,22385,22386,22388,22389,22392,22393,22394,22397,22398,22399,22400,22401,22407,22408,22409,22410,22413,22414,22415,22416,22417,22420,22421,22422,22423,22424,22425,22426,22428,22429,22430,22431,22437,22440,22442,22444,22447,22448,22449,22451,22453,22454,22455,22457,22458,22459,22460,22461,22462,22463,22464,22465,22468,22469,22470,22471,22472,22473,22474,22476,22477,22480,22481,22483,22486,22487,22491,22492,22494,22497,22498,22499,22501,22502,22503,22504,22505,22506,22507,22508,22510,22512,22513,22514,22515,22517,22518,22519,22523,22524,22526,22527,22529,22531,22532,22533,22536,22537,22538,22540,22542,22543,22544,22546,22547,22548,22550,22551,22552,22554,22555,22556,22557,22559,22562,22563,22565,22566,22567,22568,22569,22571,22572,22573,22574,22575,22577,22578,22579,22580,22582,22583,22584,22585,22586,22587,22588,22589,22590,22591,22592,22593,22594,22595,22597,22598,22599,22600,22601,22602,22603,22606,22607,22608,22610,22611,22613,22614,22615,22617,22618,22619,22620,22621,22623,22624,22625,22626,22627,22628,22630,22631,22632,22633,22634,22637,22638,22639,22640,22641,22642,22643,22644,22645,22646,22647,22648,22649,22650,22651,22652,22653,22655,22658,22660,22662,22663,22664,22666,22667,22668,22669,22670,22671,22672,22673,22676,22677,22678,22679,22680,22683,22684,22685,22688,22689,22690,22691,22692,22693,22694,22695,22698,22699,22700,22701,22702,22703,22704,22705,22706,22707,22708,22709,22710,22711,22712,22713,22714,22715,22717,22718,22719,22720,22722,22723,22724,22726,22727,22728,22729,22730,22731,22732,22733,22734,22735,22736,22738,22739,22740,22742,22743,22744,22745,22746,22747,22748,22749,22750,22751,22752,22753,22754,22755,22757,22758,22759,22760,22761,22762,22765,22767,22769,22770,22772,22773,22775,22776,22778,22779,22780,22781,22782,22783,22784,22785,22787,22789,22790,22792,22793,22794,22795,22796,22798,22800,22801,22802,22803,22807,22808,22811,22813,22814,22816,22817,22818,22819,22822,22824,22828,22832,22834,22835,22837,22838,22843,22845,22846,22847,22848,22851,22853,22854,22858,22860,22861,22864,22866,22867,22873,22875,22876,22877,22878,22879,22881,22883,22884,22886,22887,22888,22889,22890,22891,22892,22893,22894,22895,22896,22897,22898,22901,22903,22906,22907,22908,22910,22911,22912,22917,22921,22923,22924,22926,22927,22928,22929,22932,22933,22936,22938,22939,22940,22941,22943,22944,22945,22946,22950,22951,22956,22957,22960,22961,22963,22964,22965,22966,22967,22968,22970,22972,22973,22975,22976,22977,22978,22979,22980,22981,22983,22984,22985,22988,22989,22990,22991,22997,22998,23001,23003,23006,23007,23008,23009,23010,23012,23014,23015,23017,23018,23019,23021,23022,23023,23024,23025,23026,23027,23028,23029,23030,23031,23032,23034,23036,23037,23038,23040,23042,23050,23051,23053,23054,23055,23056,23058,23060,23061,23062,23063,23065,23066,23067,23069,23070,23073,23074,23076,23078,23079,23080,23082,23083,23084,23085,23086,23087,23088,23091,23093,23095,23096,23097,23098,23099,23101,23102,23103,23105,23106,23107,23108,23109,23111,23112,23115,23116,23117,23118,23119,23120,23121,23122,23123,23124,23126,23127,23128,23129,23131,23132,23133,23134,23135,23136,23137,23139,23140,23141,23142,23144,23145,23147,23148,23149,23150,23151,23152,23153,23154,23155,23160,23161,23163,23164,23165,23166,23168,23169,23170,23171,23172,23173,23174,23175,23176,23177,23178,23179,23180,23181,23182,23183,23184,23185,23187,23188,23189,23190,23191,23192,23193,23196,23197,23198,23199,23200,23201,23202,23203,23204,23205,23206,23207,23208,23209,23211,23212,23213,23214,23215,23216,23217,23220,23222,23223,23225,23226,23227,23228,23229,23231,23232,23235,23236,23237,23238,23239,23240,23242,23243,23245,23246,23247,23248,23249,23251,23253,23255,23257,23258,23259,23261,23262,23263,23266,23268,23269,23271,23272,23274,23276,23277,23278,23279,23280,23282,23283,23284,23285,23286,23287,23288,23289,23290,23291,23292,23293,23294,23295,23296,23297,23298,23299,23300,23301,23302,23303,23304,23306,23307,23308,23309,23310,23311,23312,23313,23314,23315,23316,23317,23320,23321,23322,23323,23324,23325,23326,23327,23328,23329,23330,23331,23332,23333,23334,23335,23336,23337,23338,23339,23340,23341,23342,23343,23344,23345,23347,23349,23350,23352,23353,23354,23355,23356,23357,23358,23359,23361,23362,23363,23364,23365,23366,23367,23368,23369,23370,23371,23372,23373,23374,23375,23378,23382,23390,23392,23393,23399,23400,23403,23405,23406,23407,23410,23412,23414,23415,23416,23417,23419,23420,23422,23423,23426,23430,23434,23437,23438,23440,23441,23442,23444,23446,23455,23463,23464,23465,23468,23469,23470,23471,23473,23474,23479,23482,23483,23484,23488,23489,23491,23496,23497,23498,23499,23501,23502,23503,23505,23508,23509,23510,23511,23512,23513,23514,23515,23516,23520,23522,23523,23526,23527,23529,23530,23531,23532,23533,23535,23537,23538,23539,23540,23541,23542,23543,23549,23550,23552,23554,23555,23557,23559,23560,23563,23564,23565,23566,23568,23570,23571,23575,23577,23579,23582,23583,23584,23585,23587,23590,23592,23593,23594,23595,23597,23598,23599,23600,23602,23603,23605,23606,23607,23619,23620,23622,23623,23628,23629,23634,23635,23636,23638,23639,23640,23642,23643,23644,23645,23647,23650,23652,23655,23656,23657,23658,23659,23660,23661,23664,23666,23667,23668,23669,23670,23671,23672,23675,23676,23677,23678,23680,23683,23684,23685,23686,23687,23689,23690,23691,23694,23695,23698,23699,23701,23709,23710,23711,23712,23713,23716,23717,23718,23719,23720,23722,23726,23727,23728,23730,23732,23734,23737,23738,23739,23740,23742,23744,23746,23747,23749,23750,23751,23752,23753,23754,23756,23757,23758,23759,23760,23761,23763,23764,23765,23766,23767,23768,23770,23771,23772,23773,23774,23775,23776,23778,23779,23783,23785,23787,23788,23790,23791,23793,23794,23795,23796,23797,23798,23799,23800,23801,23802,23804,23805,23806,23807,23808,23809,23812,23813,23816,23817,23818,23819,23820,23821,23823,23824,23825,23826,23827,23829,23831,23832,23833,23834,23836,23837,23839,23840,23841,23842,23843,23845,23848,23850,23851,23852,23855,23856,23857,23858,23859,23861,23862,23863,23864,23865,23866,23867,23868,23871,23872,23873,23874,23875,23876,23877,23878,23880,23881,23885,23886,23887,23888,23889,23890,23891,23892,23893,23894,23895,23897,23898,23900,23902,23903,23904,23905,23906,23907,23908,23909,23910,23911,23912,23914,23917,23918,23920,23921,23922,23923,23925,23926,23927,23928,23929,23930,23931,23932,23933,23934,23935,23936,23937,23939,23940,23941,23942,23943,23944,23945,23946,23947,23948,23949,23950,23951,23952,23953,23954,23955,23956,23957,23958,23959,23960,23962,23963,23964,23966,23967,23968,23969,23970,23971,23972,23973,23974,23975,23976,23977,23978,23979,23980,23981,23982,23983,23984,23985,23986,23987,23988,23989,23990,23992,23993,23994,23995,23996,23997,23998,23999,24e3,24001,24002,24003,24004,24006,24007,24008,24009,24010,24011,24012,24014,24015,24016,24017,24018,24019,24020,24021,24022,24023,24024,24025,24026,24028,24031,24032,24035,24036,24042,24044,24045,24048,24053,24054,24056,24057,24058,24059,24060,24063,24064,24068,24071,24073,24074,24075,24077,24078,24082,24083,24087,24094,24095,24096,24097,24098,24099,24100,24101,24104,24105,24106,24107,24108,24111,24112,24114,24115,24116,24117,24118,24121,24122,24126,24127,24128,24129,24131,24134,24135,24136,24137,24138,24139,24141,24142,24143,24144,24145,24146,24147,24150,24151,24152,24153,24154,24156,24157,24159,24160,24163,24164,24165,24166,24167,24168,24169,24170,24171,24172,24173,24174,24175,24176,24177,24181,24183,24185,24190,24193,24194,24195,24197,24200,24201,24204,24205,24206,24210,24216,24219,24221,24225,24226,24227,24228,24232,24233,24234,24235,24236,24238,24239,24240,24241,24242,24244,24250,24251,24252,24253,24255,24256,24257,24258,24259,24260,24261,24262,24263,24264,24267,24268,24269,24270,24271,24272,24276,24277,24279,24280,24281,24282,24284,24285,24286,24287,24288,24289,24290,24291,24292,24293,24294,24295,24297,24299,24300,24301,24302,24303,24304,24305,24306,24307,24309,24312,24313,24315,24316,24317,24325,24326,24327,24329,24332,24333,24334,24336,24338,24340,24342,24345,24346,24348,24349,24350,24353,24354,24355,24356,24360,24363,24364,24366,24368,24370,24371,24372,24373,24374,24375,24376,24379,24381,24382,24383,24385,24386,24387,24388,24389,24390,24391,24392,24393,24394,24395,24396,24397,24398,24399,24401,24404,24409,24410,24411,24412,24414,24415,24416,24419,24421,24423,24424,24427,24430,24431,24434,24436,24437,24438,24440,24442,24445,24446,24447,24451,24454,24461,24462,24463,24465,24467,24468,24470,24474,24475,24477,24478,24479,24480,24482,24483,24484,24485,24486,24487,24489,24491,24492,24495,24496,24497,24498,24499,24500,24502,24504,24505,24506,24507,24510,24511,24512,24513,24514,24519,24520,24522,24523,24526,24531,24532,24533,24538,24539,24540,24542,24543,24546,24547,24549,24550,24552,24553,24556,24559,24560,24562,24563,24564,24566,24567,24569,24570,24572,24583,24584,24585,24587,24588,24592,24593,24595,24599,24600,24602,24606,24607,24610,24611,24612,24620,24621,24622,24624,24625,24626,24627,24628,24630,24631,24632,24633,24634,24637,24638,24640,24644,24645,24646,24647,24648,24649,24650,24652,24654,24655,24657,24659,24660,24662,24663,24664,24667,24668,24670,24671,24672,24673,24677,24678,24686,24689,24690,24692,24693,24695,24702,24704,24705,24706,24709,24710,24711,24712,24714,24715,24718,24719,24720,24721,24723,24725,24727,24728,24729,24732,24734,24737,24738,24740,24741,24743,24745,24746,24750,24752,24755,24757,24758,24759,24761,24762,24765,24766,24767,24768,24769,24770,24771,24772,24775,24776,24777,24780,24781,24782,24783,24784,24786,24787,24788,24790,24791,24793,24795,24798,24801,24802,24803,24804,24805,24810,24817,24818,24821,24823,24824,24827,24828,24829,24830,24831,24834,24835,24836,24837,24839,24842,24843,24844,24848,24849,24850,24851,24852,24854,24855,24856,24857,24859,24860,24861,24862,24865,24866,24869,24872,24873,24874,24876,24877,24878,24879,24880,24881,24882,24883,24884,24885,24886,24887,24888,24889,24890,24891,24892,24893,24894,24896,24897,24898,24899,24900,24901,24902,24903,24905,24907,24909,24911,24912,24914,24915,24916,24918,24919,24920,24921,24922,24923,24924,24926,24927,24928,24929,24931,24932,24933,24934,24937,24938,24939,24940,24941,24942,24943,24945,24946,24947,24948,24950,24952,24953,24954,24955,24956,24957,24958,24959,24960,24961,24962,24963,24964,24965,24966,24967,24968,24969,24970,24972,24973,24975,24976,24977,24978,24979,24981,24982,24983,24984,24985,24986,24987,24988,24990,24991,24992,24993,24994,24995,24996,24997,24998,25002,25003,25005,25006,25007,25008,25009,25010,25011,25012,25013,25014,25016,25017,25018,25019,25020,25021,25023,25024,25025,25027,25028,25029,25030,25031,25033,25036,25037,25038,25039,25040,25043,25045,25046,25047,25048,25049,25050,25051,25052,25053,25054,25055,25056,25057,25058,25059,25060,25061,25063,25064,25065,25066,25067,25068,25069,25070,25071,25072,25073,25074,25075,25076,25078,25079,25080,25081,25082,25083,25084,25085,25086,25088,25089,25090,25091,25092,25093,25095,25097,25107,25108,25113,25116,25117,25118,25120,25123,25126,25127,25128,25129,25131,25133,25135,25136,25137,25138,25141,25142,25144,25145,25146,25147,25148,25154,25156,25157,25158,25162,25167,25168,25173,25174,25175,25177,25178,25180,25181,25182,25183,25184,25185,25186,25188,25189,25192,25201,25202,25204,25205,25207,25208,25210,25211,25213,25217,25218,25219,25221,25222,25223,25224,25227,25228,25229,25230,25231,25232,25236,25241,25244,25245,25246,25251,25254,25255,25257,25258,25261,25262,25263,25264,25266,25267,25268,25270,25271,25272,25274,25278,25280,25281,25283,25291,25295,25297,25301,25309,25310,25312,25313,25316,25322,25323,25328,25330,25333,25336,25337,25338,25339,25344,25347,25348,25349,25350,25354,25355,25356,25357,25359,25360,25362,25363,25364,25365,25367,25368,25369,25372,25382,25383,25385,25388,25389,25390,25392,25393,25395,25396,25397,25398,25399,25400,25403,25404,25406,25407,25408,25409,25412,25415,25416,25418,25425,25426,25427,25428,25430,25431,25432,25433,25434,25435,25436,25437,25440,25444,25445,25446,25448,25450,25451,25452,25455,25456,25458,25459,25460,25461,25464,25465,25468,25469,25470,25471,25473,25475,25476,25477,25478,25483,25485,25489,25491,25492,25493,25495,25497,25498,25499,25500,25501,25502,25503,25505,25508,25510,25515,25519,25521,25522,25525,25526,25529,25531,25533,25535,25536,25537,25538,25539,25541,25543,25544,25546,25547,25548,25553,25555,25556,25557,25559,25560,25561,25562,25563,25564,25565,25567,25570,25572,25573,25574,25575,25576,25579,25580,25582,25583,25584,25585,25587,25589,25591,25593,25594,25595,25596,25598,25603,25604,25606,25607,25608,25609,25610,25613,25614,25617,25618,25621,25622,25623,25624,25625,25626,25629,25631,25634,25635,25636,25637,25639,25640,25641,25643,25646,25647,25648,25649,25650,25651,25653,25654,25655,25656,25657,25659,25660,25662,25664,25666,25667,25673,25675,25676,25677,25678,25679,25680,25681,25683,25685,25686,25687,25689,25690,25691,25692,25693,25695,25696,25697,25698,25699,25700,25701,25702,25704,25706,25707,25708,25710,25711,25712,25713,25714,25715,25716,25717,25718,25719,25723,25724,25725,25726,25727,25728,25729,25731,25734,25736,25737,25738,25739,25740,25741,25742,25743,25744,25747,25748,25751,25752,25754,25755,25756,25757,25759,25760,25761,25762,25763,25765,25766,25767,25768,25770,25771,25775,25777,25778,25779,25780,25782,25785,25787,25789,25790,25791,25793,25795,25796,25798,25799,25800,25801,25802,25803,25804,25807,25809,25811,25812,25813,25814,25817,25818,25819,25820,25821,25823,25824,25825,25827,25829,25831,25832,25833,25834,25835,25836,25837,25838,25839,25840,25841,25842,25843,25844,25845,25846,25847,25848,25849,25850,25851,25852,25853,25854,25855,25857,25858,25859,25860,25861,25862,25863,25864,25866,25867,25868,25869,25870,25871,25872,25873,25875,25876,25877,25878,25879,25881,25882,25883,25884,25885,25886,25887,25888,25889,25890,25891,25892,25894,25895,25896,25897,25898,25900,25901,25904,25905,25906,25907,25911,25914,25916,25917,25920,25921,25922,25923,25924,25926,25927,25930,25931,25933,25934,25936,25938,25939,25940,25943,25944,25946,25948,25951,25952,25953,25956,25957,25959,25960,25961,25962,25965,25966,25967,25969,25971,25973,25974,25976,25977,25978,25979,25980,25981,25982,25983,25984,25985,25986,25987,25988,25989,25990,25992,25993,25994,25997,25998,25999,26002,26004,26005,26006,26008,26010,26013,26014,26016,26018,26019,26022,26024,26026,26028,26030,26033,26034,26035,26036,26037,26038,26039,26040,26042,26043,26046,26047,26048,26050,26055,26056,26057,26058,26061,26064,26065,26067,26068,26069,26072,26073,26074,26075,26076,26077,26078,26079,26081,26083,26084,26090,26091,26098,26099,26100,26101,26104,26105,26107,26108,26109,26110,26111,26113,26116,26117,26119,26120,26121,26123,26125,26128,26129,26130,26134,26135,26136,26138,26139,26140,26142,26145,26146,26147,26148,26150,26153,26154,26155,26156,26158,26160,26162,26163,26167,26168,26169,26170,26171,26173,26175,26176,26178,26180,26181,26182,26183,26184,26185,26186,26189,26190,26192,26193,26200,26201,26203,26204,26205,26206,26208,26210,26211,26213,26215,26217,26218,26219,26220,26221,26225,26226,26227,26229,26232,26233,26235,26236,26237,26239,26240,26241,26243,26245,26246,26248,26249,26250,26251,26253,26254,26255,26256,26258,26259,26260,26261,26264,26265,26266,26267,26268,26270,26271,26272,26273,26274,26275,26276,26277,26278,26281,26282,26283,26284,26285,26287,26288,26289,26290,26291,26293,26294,26295,26296,26298,26299,26300,26301,26303,26304,26305,26306,26307,26308,26309,26310,26311,26312,26313,26314,26315,26316,26317,26318,26319,26320,26321,26322,26323,26324,26325,26326,26327,26328,26330,26334,26335,26336,26337,26338,26339,26340,26341,26343,26344,26346,26347,26348,26349,26350,26351,26353,26357,26358,26360,26362,26363,26365,26369,26370,26371,26372,26373,26374,26375,26380,26382,26383,26385,26386,26387,26390,26392,26393,26394,26396,26398,26400,26401,26402,26403,26404,26405,26407,26409,26414,26416,26418,26419,26422,26423,26424,26425,26427,26428,26430,26431,26433,26436,26437,26439,26442,26443,26445,26450,26452,26453,26455,26456,26457,26458,26459,26461,26466,26467,26468,26470,26471,26475,26476,26478,26481,26484,26486,26488,26489,26490,26491,26493,26496,26498,26499,26501,26502,26504,26506,26508,26509,26510,26511,26513,26514,26515,26516,26518,26521,26523,26527,26528,26529,26532,26534,26537,26540,26542,26545,26546,26548,26553,26554,26555,26556,26557,26558,26559,26560,26562,26565,26566,26567,26568,26569,26570,26571,26572,26573,26574,26581,26582,26583,26587,26591,26593,26595,26596,26598,26599,26600,26602,26603,26605,26606,26610,26613,26614,26615,26616,26617,26618,26619,26620,26622,26625,26626,26627,26628,26630,26637,26640,26642,26644,26645,26648,26649,26650,26651,26652,26654,26655,26656,26658,26659,26660,26661,26662,26663,26664,26667,26668,26669,26670,26671,26672,26673,26676,26677,26678,26682,26683,26687,26695,26699,26701,26703,26706,26710,26711,26712,26713,26714,26715,26716,26717,26718,26719,26730,26732,26733,26734,26735,26736,26737,26738,26739,26741,26744,26745,26746,26747,26748,26749,26750,26751,26752,26754,26756,26759,26760,26761,26762,26763,26764,26765,26766,26768,26769,26770,26772,26773,26774,26776,26777,26778,26779,26780,26781,26782,26783,26784,26785,26787,26788,26789,26793,26794,26795,26796,26798,26801,26802,26804,26806,26807,26808,26809,26810,26811,26812,26813,26814,26815,26817,26819,26820,26821,26822,26823,26824,26826,26828,26830,26831,26832,26833,26835,26836,26838,26839,26841,26843,26844,26845,26846,26847,26849,26850,26852,26853,26854,26855,26856,26857,26858,26859,26860,26861,26863,26866,26867,26868,26870,26871,26872,26875,26877,26878,26879,26880,26882,26883,26884,26886,26887,26888,26889,26890,26892,26895,26897,26899,26900,26901,26902,26903,26904,26905,26906,26907,26908,26909,26910,26913,26914,26915,26917,26918,26919,26920,26921,26922,26923,26924,26926,26927,26929,26930,26931,26933,26934,26935,26936,26938,26939,26940,26942,26944,26945,26947,26948,26949,26950,26951,26952,26953,26954,26955,26956,26957,26958,26959,26960,26961,26962,26963,26965,26966,26968,26969,26971,26972,26975,26977,26978,26980,26981,26983,26984,26985,26986,26988,26989,26991,26992,26994,26995,26996,26997,26998,27002,27003,27005,27006,27007,27009,27011,27013,27018,27019,27020,27022,27023,27024,27025,27026,27027,27030,27031,27033,27034,27037,27038,27039,27040,27041,27042,27043,27044,27045,27046,27049,27050,27052,27054,27055,27056,27058,27059,27061,27062,27064,27065,27066,27068,27069,27070,27071,27072,27074,27075,27076,27077,27078,27079,27080,27081,27083,27085,27087,27089,27090,27091,27093,27094,27095,27096,27097,27098,27100,27101,27102,27105,27106,27107,27108,27109,27110,27111,27112,27113,27114,27115,27116,27118,27119,27120,27121,27123,27124,27125,27126,27127,27128,27129,27130,27131,27132,27134,27136,27137,27138,27139,27140,27141,27142,27143,27144,27145,27147,27148,27149,27150,27151,27152,27153,27154,27155,27156,27157,27158,27161,27162,27163,27164,27165,27166,27168,27170,27171,27172,27173,27174,27175,27177,27179,27180,27181,27182,27184,27186,27187,27188,27190,27191,27192,27193,27194,27195,27196,27199,27200,27201,27202,27203,27205,27206,27208,27209,27210,27211,27212,27213,27214,27215,27217,27218,27219,27220,27221,27222,27223,27226,27228,27229,27230,27231,27232,27234,27235,27236,27238,27239,27240,27241,27242,27243,27244,27245,27246,27247,27248,27250,27251,27252,27253,27254,27255,27256,27258,27259,27261,27262,27263,27265,27266,27267,27269,27270,27271,27272,27273,27274,27275,27276,27277,27279,27282,27283,27284,27285,27286,27288,27289,27290,27291,27292,27293,27294,27295,27297,27298,27299,27300,27301,27302,27303,27304,27306,27309,27310,27311,27312,27313,27314,27315,27316,27317,27318,27319,27320,27321,27322,27323,27324,27325,27326,27327,27328,27329,27330,27331,27332,27333,27334,27335,27336,27337,27338,27339,27340,27341,27342,27343,27344,27345,27346,27347,27348,27349,27350,27351,27352,27353,27354,27355,27356,27357,27358,27359,27360,27361,27362,27363,27364,27365,27366,27367,27368,27369,27370,27371,27372,27373,27374,27375,27376,27377,27378,27379,27380,27381,27382,27383,27384,27385,27386,27387,27388,27389,27390,27391,27392,27393,27394,27395,27396,27397,27398,27399,27400,27401,27402,27403,27404,27405,27406,27407,27408,27409,27410,27411,27412,27413,27414,27415,27416,27417,27418,27419,27420,27421,27422,27423,27429,27430,27432,27433,27434,27435,27436,27437,27438,27439,27440,27441,27443,27444,27445,27446,27448,27451,27452,27453,27455,27456,27457,27458,27460,27461,27464,27466,27467,27469,27470,27471,27472,27473,27474,27475,27476,27477,27478,27479,27480,27482,27483,27484,27485,27486,27487,27488,27489,27496,27497,27499,27500,27501,27502,27503,27504,27505,27506,27507,27508,27509,27510,27511,27512,27514,27517,27518,27519,27520,27525,27528,27532,27534,27535,27536,27537,27540,27541,27543,27544,27545,27548,27549,27550,27551,27552,27554,27555,27556,27557,27558,27559,27560,27561,27563,27564,27565,27566,27567,27568,27569,27570,27574,27576,27577,27578,27579,27580,27581,27582,27584,27587,27588,27590,27591,27592,27593,27594,27596,27598,27600,27601,27608,27610,27612,27613,27614,27615,27616,27618,27619,27620,27621,27622,27623,27624,27625,27628,27629,27630,27632,27633,27634,27636,27638,27639,27640,27642,27643,27644,27646,27647,27648,27649,27650,27651,27652,27656,27657,27658,27659,27660,27662,27666,27671,27676,27677,27678,27680,27683,27685,27691,27692,27693,27697,27699,27702,27703,27705,27706,27707,27708,27710,27711,27715,27716,27717,27720,27723,27724,27725,27726,27727,27729,27730,27731,27734,27736,27737,27738,27746,27747,27749,27750,27751,27755,27756,27757,27758,27759,27761,27763,27765,27767,27768,27770,27771,27772,27775,27776,27780,27783,27786,27787,27789,27790,27793,27794,27797,27798,27799,27800,27802,27804,27805,27806,27808,27810,27816,27820,27823,27824,27828,27829,27830,27831,27834,27840,27841,27842,27843,27846,27847,27848,27851,27853,27854,27855,27857,27858,27864,27865,27866,27868,27869,27871,27876,27878,27879,27881,27884,27885,27890,27892,27897,27903,27904,27906,27907,27909,27910,27912,27913,27914,27917,27919,27920,27921,27923,27924,27925,27926,27928,27932,27933,27935,27936,27937,27938,27939,27940,27942,27944,27945,27948,27949,27951,27952,27956,27958,27959,27960,27962,27967,27968,27970,27972,27977,27980,27984,27989,27990,27991,27992,27995,27997,27999,28001,28002,28004,28005,28007,28008,28011,28012,28013,28016,28017,28018,28019,28021,28022,28025,28026,28027,28029,28030,28031,28032,28033,28035,28036,28038,28039,28042,28043,28045,28047,28048,28050,28054,28055,28056,28057,28058,28060,28066,28069,28076,28077,28080,28081,28083,28084,28086,28087,28089,28090,28091,28092,28093,28094,28097,28098,28099,28104,28105,28106,28109,28110,28111,28112,28114,28115,28116,28117,28119,28122,28123,28124,28127,28130,28131,28133,28135,28136,28137,28138,28141,28143,28144,28146,28148,28149,28150,28152,28154,28157,28158,28159,28160,28161,28162,28163,28164,28166,28167,28168,28169,28171,28175,28178,28179,28181,28184,28185,28187,28188,28190,28191,28194,28198,28199,28200,28202,28204,28206,28208,28209,28211,28213,28214,28215,28217,28219,28220,28221,28222,28223,28224,28225,28226,28229,28230,28231,28232,28233,28234,28235,28236,28239,28240,28241,28242,28245,28247,28249,28250,28252,28253,28254,28256,28257,28258,28259,28260,28261,28262,28263,28264,28265,28266,28268,28269,28271,28272,28273,28274,28275,28276,28277,28278,28279,28280,28281,28282,28283,28284,28285,28288,28289,28290,28292,28295,28296,28298,28299,28300,28301,28302,28305,28306,28307,28308,28309,28310,28311,28313,28314,28315,28317,28318,28320,28321,28323,28324,28326,28328,28329,28331,28332,28333,28334,28336,28339,28341,28344,28345,28348,28350,28351,28352,28355,28356,28357,28358,28360,28361,28362,28364,28365,28366,28368,28370,28374,28376,28377,28379,28380,28381,28387,28391,28394,28395,28396,28397,28398,28399,28400,28401,28402,28403,28405,28406,28407,28408,28410,28411,28412,28413,28414,28415,28416,28417,28419,28420,28421,28423,28424,28426,28427,28428,28429,28430,28432,28433,28434,28438,28439,28440,28441,28442,28443,28444,28445,28446,28447,28449,28450,28451,28453,28454,28455,28456,28460,28462,28464,28466,28468,28469,28471,28472,28473,28474,28475,28476,28477,28479,28480,28481,28482,28483,28484,28485,28488,28489,28490,28492,28494,28495,28496,28497,28498,28499,28500,28501,28502,28503,28505,28506,28507,28509,28511,28512,28513,28515,28516,28517,28519,28520,28521,28522,28523,28524,28527,28528,28529,28531,28533,28534,28535,28537,28539,28541,28542,28543,28544,28545,28546,28547,28549,28550,28551,28554,28555,28559,28560,28561,28562,28563,28564,28565,28566,28567,28568,28569,28570,28571,28573,28574,28575,28576,28578,28579,28580,28581,28582,28584,28585,28586,28587,28588,28589,28590,28591,28592,28593,28594,28596,28597,28599,28600,28602,28603,28604,28605,28606,28607,28609,28611,28612,28613,28614,28615,28616,28618,28619,28620,28621,28622,28623,28624,28627,28628,28629,28630,28631,28632,28633,28634,28635,28636,28637,28639,28642,28643,28644,28645,28646,28647,28648,28649,28650,28651,28652,28653,28656,28657,28658,28659,28660,28661,28662,28663,28664,28665,28666,28667,28668,28669,28670,28671,28672,28673,28674,28675,28676,28677,28678,28679,28680,28681,28682,28683,28684,28685,28686,28687,28688,28690,28691,28692,28693,28694,28695,28696,28697,28700,28701,28702,28703,28704,28705,28706,28708,28709,28710,28711,28712,28713,28714,28715,28716,28717,28718,28719,28720,28721,28722,28723,28724,28726,28727,28728,28730,28731,28732,28733,28734,28735,28736,28737,28738,28739,28740,28741,28742,28743,28744,28745,28746,28747,28749,28750,28752,28753,28754,28755,28756,28757,28758,28759,28760,28761,28762,28763,28764,28765,28767,28768,28769,28770,28771,28772,28773,28774,28775,28776,28777,28778,28782,28785,28786,28787,28788,28791,28793,28794,28795,28797,28801,28802,28803,28804,28806,28807,28808,28811,28812,28813,28815,28816,28817,28819,28823,28824,28826,28827,28830,28831,28832,28833,28834,28835,28836,28837,28838,28839,28840,28841,28842,28848,28850,28852,28853,28854,28858,28862,28863,28868,28869,28870,28871,28873,28875,28876,28877,28878,28879,28880,28881,28882,28883,28884,28885,28886,28887,28890,28892,28893,28894,28896,28897,28898,28899,28901,28906,28910,28912,28913,28914,28915,28916,28917,28918,28920,28922,28923,28924,28926,28927,28928,28929,28930,28931,28932,28933,28934,28935,28936,28939,28940,28941,28942,28943,28945,28946,28948,28951,28955,28956,28957,28958,28959,28960,28961,28962,28963,28964,28965,28967,28968,28969,28970,28971,28972,28973,28974,28978,28979,28980,28981,28983,28984,28985,28986,28987,28988,28989,28990,28991,28992,28993,28994,28995,28996,28998,28999,29e3,29001,29003,29005,29007,29008,29009,29010,29011,29012,29013,29014,29015,29016,29017,29018,29019,29021,29023,29024,29025,29026,29027,29029,29033,29034,29035,29036,29037,29039,29040,29041,29044,29045,29046,29047,29049,29051,29052,29054,29055,29056,29057,29058,29059,29061,29062,29063,29064,29065,29067,29068,29069,29070,29072,29073,29074,29075,29077,29078,29079,29082,29083,29084,29085,29086,29089,29090,29091,29092,29093,29094,29095,29097,29098,29099,29101,29102,29103,29104,29105,29106,29108,29110,29111,29112,29114,29115,29116,29117,29118,29119,29120,29121,29122,29124,29125,29126,29127,29128,29129,29130,29131,29132,29133,29135,29136,29137,29138,29139,29142,29143,29144,29145,29146,29147,29148,29149,29150,29151,29153,29154,29155,29156,29158,29160,29161,29162,29163,29164,29165,29167,29168,29169,29170,29171,29172,29173,29174,29175,29176,29178,29179,29180,29181,29182,29183,29184,29185,29186,29187,29188,29189,29191,29192,29193,29194,29195,29196,29197,29198,29199,29200,29201,29202,29203,29204,29205,29206,29207,29208,29209,29210,29211,29212,29214,29215,29216,29217,29218,29219,29220,29221,29222,29223,29225,29227,29229,29230,29231,29234,29235,29236,29242,29244,29246,29248,29249,29250,29251,29252,29253,29254,29257,29258,29259,29262,29263,29264,29265,29267,29268,29269,29271,29272,29274,29276,29278,29280,29283,29284,29285,29288,29290,29291,29292,29293,29296,29297,29299,29300,29302,29303,29304,29307,29308,29309,29314,29315,29317,29318,29319,29320,29321,29324,29326,29328,29329,29331,29332,29333,29334,29335,29336,29337,29338,29339,29340,29341,29342,29344,29345,29346,29347,29348,29349,29350,29351,29352,29353,29354,29355,29358,29361,29362,29363,29365,29370,29371,29372,29373,29374,29375,29376,29381,29382,29383,29385,29386,29387,29388,29391,29393,29395,29396,29397,29398,29400,29402,29403,58566,58567,58568,58569,58570,58571,58572,58573,58574,58575,58576,58577,58578,58579,58580,58581,58582,58583,58584,58585,58586,58587,58588,58589,58590,58591,58592,58593,58594,58595,58596,58597,58598,58599,58600,58601,58602,58603,58604,58605,58606,58607,58608,58609,58610,58611,58612,58613,58614,58615,58616,58617,58618,58619,58620,58621,58622,58623,58624,58625,58626,58627,58628,58629,58630,58631,58632,58633,58634,58635,58636,58637,58638,58639,58640,58641,58642,58643,58644,58645,58646,58647,58648,58649,58650,58651,58652,58653,58654,58655,58656,58657,58658,58659,58660,58661,12288,12289,12290,183,713,711,168,12291,12293,8212,65374,8214,8230,8216,8217,8220,8221,12308,12309,12296,12297,12298,12299,12300,12301,12302,12303,12310,12311,12304,12305,177,215,247,8758,8743,8744,8721,8719,8746,8745,8712,8759,8730,8869,8741,8736,8978,8857,8747,8750,8801,8780,8776,8765,8733,8800,8814,8815,8804,8805,8734,8757,8756,9794,9792,176,8242,8243,8451,65284,164,65504,65505,8240,167,8470,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,8251,8594,8592,8593,8595,12307,58662,58663,58664,58665,58666,58667,58668,58669,58670,58671,58672,58673,58674,58675,58676,58677,58678,58679,58680,58681,58682,58683,58684,58685,58686,58687,58688,58689,58690,58691,58692,58693,58694,58695,58696,58697,58698,58699,58700,58701,58702,58703,58704,58705,58706,58707,58708,58709,58710,58711,58712,58713,58714,58715,58716,58717,58718,58719,58720,58721,58722,58723,58724,58725,58726,58727,58728,58729,58730,58731,58732,58733,58734,58735,58736,58737,58738,58739,58740,58741,58742,58743,58744,58745,58746,58747,58748,58749,58750,58751,58752,58753,58754,58755,58756,58757,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,59238,59239,59240,59241,59242,59243,9352,9353,9354,9355,9356,9357,9358,9359,9360,9361,9362,9363,9364,9365,9366,9367,9368,9369,9370,9371,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345,9346,9347,9348,9349,9350,9351,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,8364,59245,12832,12833,12834,12835,12836,12837,12838,12839,12840,12841,59246,59247,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,8554,8555,59248,59249,58758,58759,58760,58761,58762,58763,58764,58765,58766,58767,58768,58769,58770,58771,58772,58773,58774,58775,58776,58777,58778,58779,58780,58781,58782,58783,58784,58785,58786,58787,58788,58789,58790,58791,58792,58793,58794,58795,58796,58797,58798,58799,58800,58801,58802,58803,58804,58805,58806,58807,58808,58809,58810,58811,58812,58813,58814,58815,58816,58817,58818,58819,58820,58821,58822,58823,58824,58825,58826,58827,58828,58829,58830,58831,58832,58833,58834,58835,58836,58837,58838,58839,58840,58841,58842,58843,58844,58845,58846,58847,58848,58849,58850,58851,58852,12288,65281,65282,65283,65509,65285,65286,65287,65288,65289,65290,65291,65292,65293,65294,65295,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,65306,65307,65308,65309,65310,65311,65312,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65339,65340,65341,65342,65343,65344,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,65371,65372,65373,65507,58854,58855,58856,58857,58858,58859,58860,58861,58862,58863,58864,58865,58866,58867,58868,58869,58870,58871,58872,58873,58874,58875,58876,58877,58878,58879,58880,58881,58882,58883,58884,58885,58886,58887,58888,58889,58890,58891,58892,58893,58894,58895,58896,58897,58898,58899,58900,58901,58902,58903,58904,58905,58906,58907,58908,58909,58910,58911,58912,58913,58914,58915,58916,58917,58918,58919,58920,58921,58922,58923,58924,58925,58926,58927,58928,58929,58930,58931,58932,58933,58934,58935,58936,58937,58938,58939,58940,58941,58942,58943,58944,58945,58946,58947,58948,58949,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,59250,59251,59252,59253,59254,59255,59256,59257,59258,59259,59260,58950,58951,58952,58953,58954,58955,58956,58957,58958,58959,58960,58961,58962,58963,58964,58965,58966,58967,58968,58969,58970,58971,58972,58973,58974,58975,58976,58977,58978,58979,58980,58981,58982,58983,58984,58985,58986,58987,58988,58989,58990,58991,58992,58993,58994,58995,58996,58997,58998,58999,59e3,59001,59002,59003,59004,59005,59006,59007,59008,59009,59010,59011,59012,59013,59014,59015,59016,59017,59018,59019,59020,59021,59022,59023,59024,59025,59026,59027,59028,59029,59030,59031,59032,59033,59034,59035,59036,59037,59038,59039,59040,59041,59042,59043,59044,59045,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,59261,59262,59263,59264,59265,59266,59267,59268,59046,59047,59048,59049,59050,59051,59052,59053,59054,59055,59056,59057,59058,59059,59060,59061,59062,59063,59064,59065,59066,59067,59068,59069,59070,59071,59072,59073,59074,59075,59076,59077,59078,59079,59080,59081,59082,59083,59084,59085,59086,59087,59088,59089,59090,59091,59092,59093,59094,59095,59096,59097,59098,59099,59100,59101,59102,59103,59104,59105,59106,59107,59108,59109,59110,59111,59112,59113,59114,59115,59116,59117,59118,59119,59120,59121,59122,59123,59124,59125,59126,59127,59128,59129,59130,59131,59132,59133,59134,59135,59136,59137,59138,59139,59140,59141,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,59269,59270,59271,59272,59273,59274,59275,59276,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,59277,59278,59279,59280,59281,59282,59283,65077,65078,65081,65082,65087,65088,65085,65086,65089,65090,65091,65092,59284,59285,65083,65084,65079,65080,65073,59286,65075,65076,59287,59288,59289,59290,59291,59292,59293,59294,59295,59142,59143,59144,59145,59146,59147,59148,59149,59150,59151,59152,59153,59154,59155,59156,59157,59158,59159,59160,59161,59162,59163,59164,59165,59166,59167,59168,59169,59170,59171,59172,59173,59174,59175,59176,59177,59178,59179,59180,59181,59182,59183,59184,59185,59186,59187,59188,59189,59190,59191,59192,59193,59194,59195,59196,59197,59198,59199,59200,59201,59202,59203,59204,59205,59206,59207,59208,59209,59210,59211,59212,59213,59214,59215,59216,59217,59218,59219,59220,59221,59222,59223,59224,59225,59226,59227,59228,59229,59230,59231,59232,59233,59234,59235,59236,59237,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,59296,59297,59298,59299,59300,59301,59302,59303,59304,59305,59306,59307,59308,59309,59310,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,59311,59312,59313,59314,59315,59316,59317,59318,59319,59320,59321,59322,59323,714,715,729,8211,8213,8229,8245,8453,8457,8598,8599,8600,8601,8725,8735,8739,8786,8806,8807,8895,9552,9553,9554,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,9581,9582,9583,9584,9585,9586,9587,9601,9602,9603,9604,9605,9606,9607,9608,9609,9610,9611,9612,9613,9614,9615,9619,9620,9621,9660,9661,9698,9699,9700,9701,9737,8853,12306,12317,12318,59324,59325,59326,59327,59328,59329,59330,59331,59332,59333,59334,257,225,462,224,275,233,283,232,299,237,464,236,333,243,466,242,363,250,468,249,470,472,474,476,252,234,593,7743,324,328,505,609,59337,59338,59339,59340,12549,12550,12551,12552,12553,12554,12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,12579,12580,12581,12582,12583,12584,12585,59341,59342,59343,59344,59345,59346,59347,59348,59349,59350,59351,59352,59353,59354,59355,59356,59357,59358,59359,59360,59361,12321,12322,12323,12324,12325,12326,12327,12328,12329,12963,13198,13199,13212,13213,13214,13217,13252,13262,13265,13266,13269,65072,65506,65508,59362,8481,12849,59363,8208,59364,59365,59366,12540,12443,12444,12541,12542,12294,12445,12446,65097,65098,65099,65100,65101,65102,65103,65104,65105,65106,65108,65109,65110,65111,65113,65114,65115,65116,65117,65118,65119,65120,65121,65122,65123,65124,65125,65126,65128,65129,65130,65131,12350,12272,12273,12274,12275,12276,12277,12278,12279,12280,12281,12282,12283,12295,59380,59381,59382,59383,59384,59385,59386,59387,59388,59389,59390,59391,59392,9472,9473,9474,9475,9476,9477,9478,9479,9480,9481,9482,9483,9484,9485,9486,9487,9488,9489,9490,9491,9492,9493,9494,9495,9496,9497,9498,9499,9500,9501,9502,9503,9504,9505,9506,9507,9508,9509,9510,9511,9512,9513,9514,9515,9516,9517,9518,9519,9520,9521,9522,9523,9524,9525,9526,9527,9528,9529,9530,9531,9532,9533,9534,9535,9536,9537,9538,9539,9540,9541,9542,9543,9544,9545,9546,9547,59393,59394,59395,59396,59397,59398,59399,59400,59401,59402,59403,59404,59405,59406,59407,29404,29405,29407,29410,29411,29412,29413,29414,29415,29418,29419,29429,29430,29433,29437,29438,29439,29440,29442,29444,29445,29446,29447,29448,29449,29451,29452,29453,29455,29456,29457,29458,29460,29464,29465,29466,29471,29472,29475,29476,29478,29479,29480,29485,29487,29488,29490,29491,29493,29494,29498,29499,29500,29501,29504,29505,29506,29507,29508,29509,29510,29511,29512,29513,29514,29515,29516,29518,29519,29521,29523,29524,29525,29526,29528,29529,29530,29531,29532,29533,29534,29535,29537,29538,29539,29540,29541,29542,29543,29544,29545,29546,29547,29550,29552,29553,57344,57345,57346,57347,57348,57349,57350,57351,57352,57353,57354,57355,57356,57357,57358,57359,57360,57361,57362,57363,57364,57365,57366,57367,57368,57369,57370,57371,57372,57373,57374,57375,57376,57377,57378,57379,57380,57381,57382,57383,57384,57385,57386,57387,57388,57389,57390,57391,57392,57393,57394,57395,57396,57397,57398,57399,57400,57401,57402,57403,57404,57405,57406,57407,57408,57409,57410,57411,57412,57413,57414,57415,57416,57417,57418,57419,57420,57421,57422,57423,57424,57425,57426,57427,57428,57429,57430,57431,57432,57433,57434,57435,57436,57437,29554,29555,29556,29557,29558,29559,29560,29561,29562,29563,29564,29565,29567,29568,29569,29570,29571,29573,29574,29576,29578,29580,29581,29583,29584,29586,29587,29588,29589,29591,29592,29593,29594,29596,29597,29598,29600,29601,29603,29604,29605,29606,29607,29608,29610,29612,29613,29617,29620,29621,29622,29624,29625,29628,29629,29630,29631,29633,29635,29636,29637,29638,29639,29643,29644,29646,29650,29651,29652,29653,29654,29655,29656,29658,29659,29660,29661,29663,29665,29666,29667,29668,29670,29672,29674,29675,29676,29678,29679,29680,29681,29683,29684,29685,29686,29687,57438,57439,57440,57441,57442,57443,57444,57445,57446,57447,57448,57449,57450,57451,57452,57453,57454,57455,57456,57457,57458,57459,57460,57461,57462,57463,57464,57465,57466,57467,57468,57469,57470,57471,57472,57473,57474,57475,57476,57477,57478,57479,57480,57481,57482,57483,57484,57485,57486,57487,57488,57489,57490,57491,57492,57493,57494,57495,57496,57497,57498,57499,57500,57501,57502,57503,57504,57505,57506,57507,57508,57509,57510,57511,57512,57513,57514,57515,57516,57517,57518,57519,57520,57521,57522,57523,57524,57525,57526,57527,57528,57529,57530,57531,29688,29689,29690,29691,29692,29693,29694,29695,29696,29697,29698,29700,29703,29704,29707,29708,29709,29710,29713,29714,29715,29716,29717,29718,29719,29720,29721,29724,29725,29726,29727,29728,29729,29731,29732,29735,29737,29739,29741,29743,29745,29746,29751,29752,29753,29754,29755,29757,29758,29759,29760,29762,29763,29764,29765,29766,29767,29768,29769,29770,29771,29772,29773,29774,29775,29776,29777,29778,29779,29780,29782,29784,29789,29792,29793,29794,29795,29796,29797,29798,29799,29800,29801,29802,29803,29804,29806,29807,29809,29810,29811,29812,29813,29816,29817,29818,57532,57533,57534,57535,57536,57537,57538,57539,57540,57541,57542,57543,57544,57545,57546,57547,57548,57549,57550,57551,57552,57553,57554,57555,57556,57557,57558,57559,57560,57561,57562,57563,57564,57565,57566,57567,57568,57569,57570,57571,57572,57573,57574,57575,57576,57577,57578,57579,57580,57581,57582,57583,57584,57585,57586,57587,57588,57589,57590,57591,57592,57593,57594,57595,57596,57597,57598,57599,57600,57601,57602,57603,57604,57605,57606,57607,57608,57609,57610,57611,57612,57613,57614,57615,57616,57617,57618,57619,57620,57621,57622,57623,57624,57625,29819,29820,29821,29823,29826,29828,29829,29830,29832,29833,29834,29836,29837,29839,29841,29842,29843,29844,29845,29846,29847,29848,29849,29850,29851,29853,29855,29856,29857,29858,29859,29860,29861,29862,29866,29867,29868,29869,29870,29871,29872,29873,29874,29875,29876,29877,29878,29879,29880,29881,29883,29884,29885,29886,29887,29888,29889,29890,29891,29892,29893,29894,29895,29896,29897,29898,29899,29900,29901,29902,29903,29904,29905,29907,29908,29909,29910,29911,29912,29913,29914,29915,29917,29919,29921,29925,29927,29928,29929,29930,29931,29932,29933,29936,29937,29938,57626,57627,57628,57629,57630,57631,57632,57633,57634,57635,57636,57637,57638,57639,57640,57641,57642,57643,57644,57645,57646,57647,57648,57649,57650,57651,57652,57653,57654,57655,57656,57657,57658,57659,57660,57661,57662,57663,57664,57665,57666,57667,57668,57669,57670,57671,57672,57673,57674,57675,57676,57677,57678,57679,57680,57681,57682,57683,57684,57685,57686,57687,57688,57689,57690,57691,57692,57693,57694,57695,57696,57697,57698,57699,57700,57701,57702,57703,57704,57705,57706,57707,57708,57709,57710,57711,57712,57713,57714,57715,57716,57717,57718,57719,29939,29941,29944,29945,29946,29947,29948,29949,29950,29952,29953,29954,29955,29957,29958,29959,29960,29961,29962,29963,29964,29966,29968,29970,29972,29973,29974,29975,29979,29981,29982,29984,29985,29986,29987,29988,29990,29991,29994,29998,30004,30006,30009,30012,30013,30015,30017,30018,30019,30020,30022,30023,30025,30026,30029,30032,30033,30034,30035,30037,30038,30039,30040,30045,30046,30047,30048,30049,30050,30051,30052,30055,30056,30057,30059,30060,30061,30062,30063,30064,30065,30067,30069,30070,30071,30074,30075,30076,30077,30078,30080,30081,30082,30084,30085,30087,57720,57721,57722,57723,57724,57725,57726,57727,57728,57729,57730,57731,57732,57733,57734,57735,57736,57737,57738,57739,57740,57741,57742,57743,57744,57745,57746,57747,57748,57749,57750,57751,57752,57753,57754,57755,57756,57757,57758,57759,57760,57761,57762,57763,57764,57765,57766,57767,57768,57769,57770,57771,57772,57773,57774,57775,57776,57777,57778,57779,57780,57781,57782,57783,57784,57785,57786,57787,57788,57789,57790,57791,57792,57793,57794,57795,57796,57797,57798,57799,57800,57801,57802,57803,57804,57805,57806,57807,57808,57809,57810,57811,57812,57813,30088,30089,30090,30092,30093,30094,30096,30099,30101,30104,30107,30108,30110,30114,30118,30119,30120,30121,30122,30125,30134,30135,30138,30139,30143,30144,30145,30150,30155,30156,30158,30159,30160,30161,30163,30167,30169,30170,30172,30173,30175,30176,30177,30181,30185,30188,30189,30190,30191,30194,30195,30197,30198,30199,30200,30202,30203,30205,30206,30210,30212,30214,30215,30216,30217,30219,30221,30222,30223,30225,30226,30227,30228,30230,30234,30236,30237,30238,30241,30243,30247,30248,30252,30254,30255,30257,30258,30262,30263,30265,30266,30267,30269,30273,30274,30276,57814,57815,57816,57817,57818,57819,57820,57821,57822,57823,57824,57825,57826,57827,57828,57829,57830,57831,57832,57833,57834,57835,57836,57837,57838,57839,57840,57841,57842,57843,57844,57845,57846,57847,57848,57849,57850,57851,57852,57853,57854,57855,57856,57857,57858,57859,57860,57861,57862,57863,57864,57865,57866,57867,57868,57869,57870,57871,57872,57873,57874,57875,57876,57877,57878,57879,57880,57881,57882,57883,57884,57885,57886,57887,57888,57889,57890,57891,57892,57893,57894,57895,57896,57897,57898,57899,57900,57901,57902,57903,57904,57905,57906,57907,30277,30278,30279,30280,30281,30282,30283,30286,30287,30288,30289,30290,30291,30293,30295,30296,30297,30298,30299,30301,30303,30304,30305,30306,30308,30309,30310,30311,30312,30313,30314,30316,30317,30318,30320,30321,30322,30323,30324,30325,30326,30327,30329,30330,30332,30335,30336,30337,30339,30341,30345,30346,30348,30349,30351,30352,30354,30356,30357,30359,30360,30362,30363,30364,30365,30366,30367,30368,30369,30370,30371,30373,30374,30375,30376,30377,30378,30379,30380,30381,30383,30384,30387,30389,30390,30391,30392,30393,30394,30395,30396,30397,30398,30400,30401,30403,21834,38463,22467,25384,21710,21769,21696,30353,30284,34108,30702,33406,30861,29233,38552,38797,27688,23433,20474,25353,26263,23736,33018,26696,32942,26114,30414,20985,25942,29100,32753,34948,20658,22885,25034,28595,33453,25420,25170,21485,21543,31494,20843,30116,24052,25300,36299,38774,25226,32793,22365,38712,32610,29240,30333,26575,30334,25670,20336,36133,25308,31255,26001,29677,25644,25203,33324,39041,26495,29256,25198,25292,20276,29923,21322,21150,32458,37030,24110,26758,27036,33152,32465,26834,30917,34444,38225,20621,35876,33502,32990,21253,35090,21093,30404,30407,30409,30411,30412,30419,30421,30425,30426,30428,30429,30430,30432,30433,30434,30435,30436,30438,30439,30440,30441,30442,30443,30444,30445,30448,30451,30453,30454,30455,30458,30459,30461,30463,30464,30466,30467,30469,30470,30474,30476,30478,30479,30480,30481,30482,30483,30484,30485,30486,30487,30488,30491,30492,30493,30494,30497,30499,30500,30501,30503,30506,30507,30508,30510,30512,30513,30514,30515,30516,30521,30523,30525,30526,30527,30530,30532,30533,30534,30536,30537,30538,30539,30540,30541,30542,30543,30546,30547,30548,30549,30550,30551,30552,30553,30556,34180,38649,20445,22561,39281,23453,25265,25253,26292,35961,40077,29190,26479,30865,24754,21329,21271,36744,32972,36125,38049,20493,29384,22791,24811,28953,34987,22868,33519,26412,31528,23849,32503,29997,27893,36454,36856,36924,40763,27604,37145,31508,24444,30887,34006,34109,27605,27609,27606,24065,24199,30201,38381,25949,24330,24517,36767,22721,33218,36991,38491,38829,36793,32534,36140,25153,20415,21464,21342,36776,36777,36779,36941,26631,24426,33176,34920,40150,24971,21035,30250,24428,25996,28626,28392,23486,25672,20853,20912,26564,19993,31177,39292,28851,30557,30558,30559,30560,30564,30567,30569,30570,30573,30574,30575,30576,30577,30578,30579,30580,30581,30582,30583,30584,30586,30587,30588,30593,30594,30595,30598,30599,30600,30601,30602,30603,30607,30608,30611,30612,30613,30614,30615,30616,30617,30618,30619,30620,30621,30622,30625,30627,30628,30630,30632,30635,30637,30638,30639,30641,30642,30644,30646,30647,30648,30649,30650,30652,30654,30656,30657,30658,30659,30660,30661,30662,30663,30664,30665,30666,30667,30668,30670,30671,30672,30673,30674,30675,30676,30677,30678,30680,30681,30682,30685,30686,30687,30688,30689,30692,30149,24182,29627,33760,25773,25320,38069,27874,21338,21187,25615,38082,31636,20271,24091,33334,33046,33162,28196,27850,39539,25429,21340,21754,34917,22496,19981,24067,27493,31807,37096,24598,25830,29468,35009,26448,25165,36130,30572,36393,37319,24425,33756,34081,39184,21442,34453,27531,24813,24808,28799,33485,33329,20179,27815,34255,25805,31961,27133,26361,33609,21397,31574,20391,20876,27979,23618,36461,25554,21449,33580,33590,26597,30900,25661,23519,23700,24046,35815,25286,26612,35962,25600,25530,34633,39307,35863,32544,38130,20135,38416,39076,26124,29462,30694,30696,30698,30703,30704,30705,30706,30708,30709,30711,30713,30714,30715,30716,30723,30724,30725,30726,30727,30728,30730,30731,30734,30735,30736,30739,30741,30745,30747,30750,30752,30753,30754,30756,30760,30762,30763,30766,30767,30769,30770,30771,30773,30774,30781,30783,30785,30786,30787,30788,30790,30792,30793,30794,30795,30797,30799,30801,30803,30804,30808,30809,30810,30811,30812,30814,30815,30816,30817,30818,30819,30820,30821,30822,30823,30824,30825,30831,30832,30833,30834,30835,30836,30837,30838,30840,30841,30842,30843,30845,30846,30847,30848,30849,30850,30851,22330,23581,24120,38271,20607,32928,21378,25950,30021,21809,20513,36229,25220,38046,26397,22066,28526,24034,21557,28818,36710,25199,25764,25507,24443,28552,37108,33251,36784,23576,26216,24561,27785,38472,36225,34924,25745,31216,22478,27225,25104,21576,20056,31243,24809,28548,35802,25215,36894,39563,31204,21507,30196,25345,21273,27744,36831,24347,39536,32827,40831,20360,23610,36196,32709,26021,28861,20805,20914,34411,23815,23456,25277,37228,30068,36364,31264,24833,31609,20167,32504,30597,19985,33261,21021,20986,27249,21416,36487,38148,38607,28353,38500,26970,30852,30853,30854,30856,30858,30859,30863,30864,30866,30868,30869,30870,30873,30877,30878,30880,30882,30884,30886,30888,30889,30890,30891,30892,30893,30894,30895,30901,30902,30903,30904,30906,30907,30908,30909,30911,30912,30914,30915,30916,30918,30919,30920,30924,30925,30926,30927,30929,30930,30931,30934,30935,30936,30938,30939,30940,30941,30942,30943,30944,30945,30946,30947,30948,30949,30950,30951,30953,30954,30955,30957,30958,30959,30960,30961,30963,30965,30966,30968,30969,30971,30972,30973,30974,30975,30976,30978,30979,30980,30982,30983,30984,30985,30986,30987,30988,30784,20648,30679,25616,35302,22788,25571,24029,31359,26941,20256,33337,21912,20018,30126,31383,24162,24202,38383,21019,21561,28810,25462,38180,22402,26149,26943,37255,21767,28147,32431,34850,25139,32496,30133,33576,30913,38604,36766,24904,29943,35789,27492,21050,36176,27425,32874,33905,22257,21254,20174,19995,20945,31895,37259,31751,20419,36479,31713,31388,25703,23828,20652,33030,30209,31929,28140,32736,26449,23384,23544,30923,25774,25619,25514,25387,38169,25645,36798,31572,30249,25171,22823,21574,27513,20643,25140,24102,27526,20195,36151,34955,24453,36910,30989,30990,30991,30992,30993,30994,30996,30997,30998,30999,31e3,31001,31002,31003,31004,31005,31007,31008,31009,31010,31011,31013,31014,31015,31016,31017,31018,31019,31020,31021,31022,31023,31024,31025,31026,31027,31029,31030,31031,31032,31033,31037,31039,31042,31043,31044,31045,31047,31050,31051,31052,31053,31054,31055,31056,31057,31058,31060,31061,31064,31065,31073,31075,31076,31078,31081,31082,31083,31084,31086,31088,31089,31090,31091,31092,31093,31094,31097,31099,31100,31101,31102,31103,31106,31107,31110,31111,31112,31113,31115,31116,31117,31118,31120,31121,31122,24608,32829,25285,20025,21333,37112,25528,32966,26086,27694,20294,24814,28129,35806,24377,34507,24403,25377,20826,33633,26723,20992,25443,36424,20498,23707,31095,23548,21040,31291,24764,36947,30423,24503,24471,30340,36460,28783,30331,31561,30634,20979,37011,22564,20302,28404,36842,25932,31515,29380,28068,32735,23265,25269,24213,22320,33922,31532,24093,24351,36882,32532,39072,25474,28359,30872,28857,20856,38747,22443,30005,20291,30008,24215,24806,22880,28096,27583,30857,21500,38613,20939,20993,25481,21514,38035,35843,36300,29241,30879,34678,36845,35853,21472,31123,31124,31125,31126,31127,31128,31129,31131,31132,31133,31134,31135,31136,31137,31138,31139,31140,31141,31142,31144,31145,31146,31147,31148,31149,31150,31151,31152,31153,31154,31156,31157,31158,31159,31160,31164,31167,31170,31172,31173,31175,31176,31178,31180,31182,31183,31184,31187,31188,31190,31191,31193,31194,31195,31196,31197,31198,31200,31201,31202,31205,31208,31210,31212,31214,31217,31218,31219,31220,31221,31222,31223,31225,31226,31228,31230,31231,31233,31236,31237,31239,31240,31241,31242,31244,31247,31248,31249,31250,31251,31253,31254,31256,31257,31259,31260,19969,30447,21486,38025,39030,40718,38189,23450,35746,20002,19996,20908,33891,25026,21160,26635,20375,24683,20923,27934,20828,25238,26007,38497,35910,36887,30168,37117,30563,27602,29322,29420,35835,22581,30585,36172,26460,38208,32922,24230,28193,22930,31471,30701,38203,27573,26029,32526,22534,20817,38431,23545,22697,21544,36466,25958,39039,22244,38045,30462,36929,25479,21702,22810,22842,22427,36530,26421,36346,33333,21057,24816,22549,34558,23784,40517,20420,39069,35769,23077,24694,21380,25212,36943,37122,39295,24681,32780,20799,32819,23572,39285,27953,20108,31261,31263,31265,31266,31268,31269,31270,31271,31272,31273,31274,31275,31276,31277,31278,31279,31280,31281,31282,31284,31285,31286,31288,31290,31294,31296,31297,31298,31299,31300,31301,31303,31304,31305,31306,31307,31308,31309,31310,31311,31312,31314,31315,31316,31317,31318,31320,31321,31322,31323,31324,31325,31326,31327,31328,31329,31330,31331,31332,31333,31334,31335,31336,31337,31338,31339,31340,31341,31342,31343,31345,31346,31347,31349,31355,31356,31357,31358,31362,31365,31367,31369,31370,31371,31372,31374,31375,31376,31379,31380,31385,31386,31387,31390,31393,31394,36144,21457,32602,31567,20240,20047,38400,27861,29648,34281,24070,30058,32763,27146,30718,38034,32321,20961,28902,21453,36820,33539,36137,29359,39277,27867,22346,33459,26041,32938,25151,38450,22952,20223,35775,32442,25918,33778,38750,21857,39134,32933,21290,35837,21536,32954,24223,27832,36153,33452,37210,21545,27675,20998,32439,22367,28954,27774,31881,22859,20221,24575,24868,31914,20016,23553,26539,34562,23792,38155,39118,30127,28925,36898,20911,32541,35773,22857,20964,20315,21542,22827,25975,32932,23413,25206,25282,36752,24133,27679,31526,20239,20440,26381,31395,31396,31399,31401,31402,31403,31406,31407,31408,31409,31410,31412,31413,31414,31415,31416,31417,31418,31419,31420,31421,31422,31424,31425,31426,31427,31428,31429,31430,31431,31432,31433,31434,31436,31437,31438,31439,31440,31441,31442,31443,31444,31445,31447,31448,31450,31451,31452,31453,31457,31458,31460,31463,31464,31465,31466,31467,31468,31470,31472,31473,31474,31475,31476,31477,31478,31479,31480,31483,31484,31486,31488,31489,31490,31493,31495,31497,31500,31501,31502,31504,31506,31507,31510,31511,31512,31514,31516,31517,31519,31521,31522,31523,31527,31529,31533,28014,28074,31119,34993,24343,29995,25242,36741,20463,37340,26023,33071,33105,24220,33104,36212,21103,35206,36171,22797,20613,20184,38428,29238,33145,36127,23500,35747,38468,22919,32538,21648,22134,22030,35813,25913,27010,38041,30422,28297,24178,29976,26438,26577,31487,32925,36214,24863,31174,25954,36195,20872,21018,38050,32568,32923,32434,23703,28207,26464,31705,30347,39640,33167,32660,31957,25630,38224,31295,21578,21733,27468,25601,25096,40509,33011,30105,21106,38761,33883,26684,34532,38401,38548,38124,20010,21508,32473,26681,36319,32789,26356,24218,32697,31535,31536,31538,31540,31541,31542,31543,31545,31547,31549,31551,31552,31553,31554,31555,31556,31558,31560,31562,31565,31566,31571,31573,31575,31577,31580,31582,31583,31585,31587,31588,31589,31590,31591,31592,31593,31594,31595,31596,31597,31599,31600,31603,31604,31606,31608,31610,31612,31613,31615,31617,31618,31619,31620,31622,31623,31624,31625,31626,31627,31628,31630,31631,31633,31634,31635,31638,31640,31641,31642,31643,31646,31647,31648,31651,31652,31653,31662,31663,31664,31666,31667,31669,31670,31671,31673,31674,31675,31676,31677,31678,31679,31680,31682,31683,31684,22466,32831,26775,24037,25915,21151,24685,40858,20379,36524,20844,23467,24339,24041,27742,25329,36129,20849,38057,21246,27807,33503,29399,22434,26500,36141,22815,36764,33735,21653,31629,20272,27837,23396,22993,40723,21476,34506,39592,35895,32929,25925,39038,22266,38599,21038,29916,21072,23521,25346,35074,20054,25296,24618,26874,20851,23448,20896,35266,31649,39302,32592,24815,28748,36143,20809,24191,36891,29808,35268,22317,30789,24402,40863,38394,36712,39740,35809,30328,26690,26588,36330,36149,21053,36746,28378,26829,38149,37101,22269,26524,35065,36807,21704,31685,31688,31689,31690,31691,31693,31694,31695,31696,31698,31700,31701,31702,31703,31704,31707,31708,31710,31711,31712,31714,31715,31716,31719,31720,31721,31723,31724,31725,31727,31728,31730,31731,31732,31733,31734,31736,31737,31738,31739,31741,31743,31744,31745,31746,31747,31748,31749,31750,31752,31753,31754,31757,31758,31760,31761,31762,31763,31764,31765,31767,31768,31769,31770,31771,31772,31773,31774,31776,31777,31778,31779,31780,31781,31784,31785,31787,31788,31789,31790,31791,31792,31793,31794,31795,31796,31797,31798,31799,31801,31802,31803,31804,31805,31806,31810,39608,23401,28023,27686,20133,23475,39559,37219,25e3,37039,38889,21547,28085,23506,20989,21898,32597,32752,25788,25421,26097,25022,24717,28938,27735,27721,22831,26477,33322,22741,22158,35946,27627,37085,22909,32791,21495,28009,21621,21917,33655,33743,26680,31166,21644,20309,21512,30418,35977,38402,27827,28088,36203,35088,40548,36154,22079,40657,30165,24456,29408,24680,21756,20136,27178,34913,24658,36720,21700,28888,34425,40511,27946,23439,24344,32418,21897,20399,29492,21564,21402,20505,21518,21628,20046,24573,29786,22774,33899,32993,34676,29392,31946,28246,31811,31812,31813,31814,31815,31816,31817,31818,31819,31820,31822,31823,31824,31825,31826,31827,31828,31829,31830,31831,31832,31833,31834,31835,31836,31837,31838,31839,31840,31841,31842,31843,31844,31845,31846,31847,31848,31849,31850,31851,31852,31853,31854,31855,31856,31857,31858,31861,31862,31863,31864,31865,31866,31870,31871,31872,31873,31874,31875,31876,31877,31878,31879,31880,31882,31883,31884,31885,31886,31887,31888,31891,31892,31894,31897,31898,31899,31904,31905,31907,31910,31911,31912,31913,31915,31916,31917,31919,31920,31924,31925,31926,31927,31928,31930,31931,24359,34382,21804,25252,20114,27818,25143,33457,21719,21326,29502,28369,30011,21010,21270,35805,27088,24458,24576,28142,22351,27426,29615,26707,36824,32531,25442,24739,21796,30186,35938,28949,28067,23462,24187,33618,24908,40644,30970,34647,31783,30343,20976,24822,29004,26179,24140,24653,35854,28784,25381,36745,24509,24674,34516,22238,27585,24724,24935,21321,24800,26214,36159,31229,20250,28905,27719,35763,35826,32472,33636,26127,23130,39746,27985,28151,35905,27963,20249,28779,33719,25110,24785,38669,36135,31096,20987,22334,22522,26426,30072,31293,31215,31637,31935,31936,31938,31939,31940,31942,31945,31947,31950,31951,31952,31953,31954,31955,31956,31960,31962,31963,31965,31966,31969,31970,31971,31972,31973,31974,31975,31977,31978,31979,31980,31981,31982,31984,31985,31986,31987,31988,31989,31990,31991,31993,31994,31996,31997,31998,31999,32e3,32001,32002,32003,32004,32005,32006,32007,32008,32009,32011,32012,32013,32014,32015,32016,32017,32018,32019,32020,32021,32022,32023,32024,32025,32026,32027,32028,32029,32030,32031,32033,32035,32036,32037,32038,32040,32041,32042,32044,32045,32046,32048,32049,32050,32051,32052,32053,32054,32908,39269,36857,28608,35749,40481,23020,32489,32521,21513,26497,26840,36753,31821,38598,21450,24613,30142,27762,21363,23241,32423,25380,20960,33034,24049,34015,25216,20864,23395,20238,31085,21058,24760,27982,23492,23490,35745,35760,26082,24524,38469,22931,32487,32426,22025,26551,22841,20339,23478,21152,33626,39050,36158,30002,38078,20551,31292,20215,26550,39550,23233,27516,30417,22362,23574,31546,38388,29006,20860,32937,33392,22904,32516,33575,26816,26604,30897,30839,25315,25441,31616,20461,21098,20943,33616,27099,37492,36341,36145,35265,38190,31661,20214,32055,32056,32057,32058,32059,32060,32061,32062,32063,32064,32065,32066,32067,32068,32069,32070,32071,32072,32073,32074,32075,32076,32077,32078,32079,32080,32081,32082,32083,32084,32085,32086,32087,32088,32089,32090,32091,32092,32093,32094,32095,32096,32097,32098,32099,32100,32101,32102,32103,32104,32105,32106,32107,32108,32109,32111,32112,32113,32114,32115,32116,32117,32118,32120,32121,32122,32123,32124,32125,32126,32127,32128,32129,32130,32131,32132,32133,32134,32135,32136,32137,32138,32139,32140,32141,32142,32143,32144,32145,32146,32147,32148,32149,32150,32151,32152,20581,33328,21073,39279,28176,28293,28071,24314,20725,23004,23558,27974,27743,30086,33931,26728,22870,35762,21280,37233,38477,34121,26898,30977,28966,33014,20132,37066,27975,39556,23047,22204,25605,38128,30699,20389,33050,29409,35282,39290,32564,32478,21119,25945,37237,36735,36739,21483,31382,25581,25509,30342,31224,34903,38454,25130,21163,33410,26708,26480,25463,30571,31469,27905,32467,35299,22992,25106,34249,33445,30028,20511,20171,30117,35819,23626,24062,31563,26020,37329,20170,27941,35167,32039,38182,20165,35880,36827,38771,26187,31105,36817,28908,28024,32153,32154,32155,32156,32157,32158,32159,32160,32161,32162,32163,32164,32165,32167,32168,32169,32170,32171,32172,32173,32175,32176,32177,32178,32179,32180,32181,32182,32183,32184,32185,32186,32187,32188,32189,32190,32191,32192,32193,32194,32195,32196,32197,32198,32199,32200,32201,32202,32203,32204,32205,32206,32207,32208,32209,32210,32211,32212,32213,32214,32215,32216,32217,32218,32219,32220,32221,32222,32223,32224,32225,32226,32227,32228,32229,32230,32231,32232,32233,32234,32235,32236,32237,32238,32239,32240,32241,32242,32243,32244,32245,32246,32247,32248,32249,32250,23613,21170,33606,20834,33550,30555,26230,40120,20140,24778,31934,31923,32463,20117,35686,26223,39048,38745,22659,25964,38236,24452,30153,38742,31455,31454,20928,28847,31384,25578,31350,32416,29590,38893,20037,28792,20061,37202,21417,25937,26087,33276,33285,21646,23601,30106,38816,25304,29401,30141,23621,39545,33738,23616,21632,30697,20030,27822,32858,25298,25454,24040,20855,36317,36382,38191,20465,21477,24807,28844,21095,25424,40515,23071,20518,30519,21367,32482,25733,25899,25225,25496,20500,29237,35273,20915,35776,32477,22343,33740,38055,20891,21531,23803,32251,32252,32253,32254,32255,32256,32257,32258,32259,32260,32261,32262,32263,32264,32265,32266,32267,32268,32269,32270,32271,32272,32273,32274,32275,32276,32277,32278,32279,32280,32281,32282,32283,32284,32285,32286,32287,32288,32289,32290,32291,32292,32293,32294,32295,32296,32297,32298,32299,32300,32301,32302,32303,32304,32305,32306,32307,32308,32309,32310,32311,32312,32313,32314,32316,32317,32318,32319,32320,32322,32323,32324,32325,32326,32328,32329,32330,32331,32332,32333,32334,32335,32336,32337,32338,32339,32340,32341,32342,32343,32344,32345,32346,32347,32348,32349,20426,31459,27994,37089,39567,21888,21654,21345,21679,24320,25577,26999,20975,24936,21002,22570,21208,22350,30733,30475,24247,24951,31968,25179,25239,20130,28821,32771,25335,28900,38752,22391,33499,26607,26869,30933,39063,31185,22771,21683,21487,28212,20811,21051,23458,35838,32943,21827,22438,24691,22353,21549,31354,24656,23380,25511,25248,21475,25187,23495,26543,21741,31391,33510,37239,24211,35044,22840,22446,25358,36328,33007,22359,31607,20393,24555,23485,27454,21281,31568,29378,26694,30719,30518,26103,20917,20111,30420,23743,31397,33909,22862,39745,20608,32350,32351,32352,32353,32354,32355,32356,32357,32358,32359,32360,32361,32362,32363,32364,32365,32366,32367,32368,32369,32370,32371,32372,32373,32374,32375,32376,32377,32378,32379,32380,32381,32382,32383,32384,32385,32387,32388,32389,32390,32391,32392,32393,32394,32395,32396,32397,32398,32399,32400,32401,32402,32403,32404,32405,32406,32407,32408,32409,32410,32412,32413,32414,32430,32436,32443,32444,32470,32484,32492,32505,32522,32528,32542,32567,32569,32571,32572,32573,32574,32575,32576,32577,32579,32582,32583,32584,32585,32586,32587,32588,32589,32590,32591,32594,32595,39304,24871,28291,22372,26118,25414,22256,25324,25193,24275,38420,22403,25289,21895,34593,33098,36771,21862,33713,26469,36182,34013,23146,26639,25318,31726,38417,20848,28572,35888,25597,35272,25042,32518,28866,28389,29701,27028,29436,24266,37070,26391,28010,25438,21171,29282,32769,20332,23013,37226,28889,28061,21202,20048,38647,38253,34174,30922,32047,20769,22418,25794,32907,31867,27882,26865,26974,20919,21400,26792,29313,40654,31729,29432,31163,28435,29702,26446,37324,40100,31036,33673,33620,21519,26647,20029,21385,21169,30782,21382,21033,20616,20363,20432,32598,32601,32603,32604,32605,32606,32608,32611,32612,32613,32614,32615,32619,32620,32621,32623,32624,32627,32629,32630,32631,32632,32634,32635,32636,32637,32639,32640,32642,32643,32644,32645,32646,32647,32648,32649,32651,32653,32655,32656,32657,32658,32659,32661,32662,32663,32664,32665,32667,32668,32672,32674,32675,32677,32678,32680,32681,32682,32683,32684,32685,32686,32689,32691,32692,32693,32694,32695,32698,32699,32702,32704,32706,32707,32708,32710,32711,32712,32713,32715,32717,32719,32720,32721,32722,32723,32726,32727,32729,32730,32731,32732,32733,32734,32738,32739,30178,31435,31890,27813,38582,21147,29827,21737,20457,32852,33714,36830,38256,24265,24604,28063,24088,25947,33080,38142,24651,28860,32451,31918,20937,26753,31921,33391,20004,36742,37327,26238,20142,35845,25769,32842,20698,30103,29134,23525,36797,28518,20102,25730,38243,24278,26009,21015,35010,28872,21155,29454,29747,26519,30967,38678,20020,37051,40158,28107,20955,36161,21533,25294,29618,33777,38646,40836,38083,20278,32666,20940,28789,38517,23725,39046,21478,20196,28316,29705,27060,30827,39311,30041,21016,30244,27969,26611,20845,40857,32843,21657,31548,31423,32740,32743,32744,32746,32747,32748,32749,32751,32754,32756,32757,32758,32759,32760,32761,32762,32765,32766,32767,32770,32775,32776,32777,32778,32782,32783,32785,32787,32794,32795,32797,32798,32799,32801,32803,32804,32811,32812,32813,32814,32815,32816,32818,32820,32825,32826,32828,32830,32832,32833,32836,32837,32839,32840,32841,32846,32847,32848,32849,32851,32853,32854,32855,32857,32859,32860,32861,32862,32863,32864,32865,32866,32867,32868,32869,32870,32871,32872,32875,32876,32877,32878,32879,32880,32882,32883,32884,32885,32886,32887,32888,32889,32890,32891,32892,32893,38534,22404,25314,38471,27004,23044,25602,31699,28431,38475,33446,21346,39045,24208,28809,25523,21348,34383,40065,40595,30860,38706,36335,36162,40575,28510,31108,24405,38470,25134,39540,21525,38109,20387,26053,23653,23649,32533,34385,27695,24459,29575,28388,32511,23782,25371,23402,28390,21365,20081,25504,30053,25249,36718,20262,20177,27814,32438,35770,33821,34746,32599,36923,38179,31657,39585,35064,33853,27931,39558,32476,22920,40635,29595,30721,34434,39532,39554,22043,21527,22475,20080,40614,21334,36808,33033,30610,39314,34542,28385,34067,26364,24930,28459,32894,32897,32898,32901,32904,32906,32909,32910,32911,32912,32913,32914,32916,32917,32919,32921,32926,32931,32934,32935,32936,32940,32944,32947,32949,32950,32952,32953,32955,32965,32967,32968,32969,32970,32971,32975,32976,32977,32978,32979,32980,32981,32984,32991,32992,32994,32995,32998,33006,33013,33015,33017,33019,33022,33023,33024,33025,33027,33028,33029,33031,33032,33035,33036,33045,33047,33049,33051,33052,33053,33055,33056,33057,33058,33059,33060,33061,33062,33063,33064,33065,33066,33067,33069,33070,33072,33075,33076,33077,33079,33081,33082,33083,33084,33085,33087,35881,33426,33579,30450,27667,24537,33725,29483,33541,38170,27611,30683,38086,21359,33538,20882,24125,35980,36152,20040,29611,26522,26757,37238,38665,29028,27809,30473,23186,38209,27599,32654,26151,23504,22969,23194,38376,38391,20204,33804,33945,27308,30431,38192,29467,26790,23391,30511,37274,38753,31964,36855,35868,24357,31859,31192,35269,27852,34588,23494,24130,26825,30496,32501,20885,20813,21193,23081,32517,38754,33495,25551,30596,34256,31186,28218,24217,22937,34065,28781,27665,25279,30399,25935,24751,38397,26126,34719,40483,38125,21517,21629,35884,25720,33088,33089,33090,33091,33092,33093,33095,33097,33101,33102,33103,33106,33110,33111,33112,33115,33116,33117,33118,33119,33121,33122,33123,33124,33126,33128,33130,33131,33132,33135,33138,33139,33141,33142,33143,33144,33153,33155,33156,33157,33158,33159,33161,33163,33164,33165,33166,33168,33170,33171,33172,33173,33174,33175,33177,33178,33182,33183,33184,33185,33186,33188,33189,33191,33193,33195,33196,33197,33198,33199,33200,33201,33202,33204,33205,33206,33207,33208,33209,33212,33213,33214,33215,33220,33221,33223,33224,33225,33227,33229,33230,33231,33232,33233,33234,33235,25721,34321,27169,33180,30952,25705,39764,25273,26411,33707,22696,40664,27819,28448,23518,38476,35851,29279,26576,25287,29281,20137,22982,27597,22675,26286,24149,21215,24917,26408,30446,30566,29287,31302,25343,21738,21584,38048,37027,23068,32435,27670,20035,22902,32784,22856,21335,30007,38590,22218,25376,33041,24700,38393,28118,21602,39297,20869,23273,33021,22958,38675,20522,27877,23612,25311,20320,21311,33147,36870,28346,34091,25288,24180,30910,25781,25467,24565,23064,37247,40479,23615,25423,32834,23421,21870,38218,38221,28037,24744,26592,29406,20957,23425,33236,33237,33238,33239,33240,33241,33242,33243,33244,33245,33246,33247,33248,33249,33250,33252,33253,33254,33256,33257,33259,33262,33263,33264,33265,33266,33269,33270,33271,33272,33273,33274,33277,33279,33283,33287,33288,33289,33290,33291,33294,33295,33297,33299,33301,33302,33303,33304,33305,33306,33309,33312,33316,33317,33318,33319,33321,33326,33330,33338,33340,33341,33343,33344,33345,33346,33347,33349,33350,33352,33354,33356,33357,33358,33360,33361,33362,33363,33364,33365,33366,33367,33369,33371,33372,33373,33374,33376,33377,33378,33379,33380,33381,33382,33383,33385,25319,27870,29275,25197,38062,32445,33043,27987,20892,24324,22900,21162,24594,22899,26262,34384,30111,25386,25062,31983,35834,21734,27431,40485,27572,34261,21589,20598,27812,21866,36276,29228,24085,24597,29750,25293,25490,29260,24472,28227,27966,25856,28504,30424,30928,30460,30036,21028,21467,20051,24222,26049,32810,32982,25243,21638,21032,28846,34957,36305,27873,21624,32986,22521,35060,36180,38506,37197,20329,27803,21943,30406,30768,25256,28921,28558,24429,34028,26842,30844,31735,33192,26379,40527,25447,30896,22383,30738,38713,25209,25259,21128,29749,27607,33386,33387,33388,33389,33393,33397,33398,33399,33400,33403,33404,33408,33409,33411,33413,33414,33415,33417,33420,33424,33427,33428,33429,33430,33434,33435,33438,33440,33442,33443,33447,33458,33461,33462,33466,33467,33468,33471,33472,33474,33475,33477,33478,33481,33488,33494,33497,33498,33501,33506,33511,33512,33513,33514,33516,33517,33518,33520,33522,33523,33525,33526,33528,33530,33532,33533,33534,33535,33536,33546,33547,33549,33552,33554,33555,33558,33560,33561,33565,33566,33567,33568,33569,33570,33571,33572,33573,33574,33577,33578,33582,33584,33586,33591,33595,33597,21860,33086,30130,30382,21305,30174,20731,23617,35692,31687,20559,29255,39575,39128,28418,29922,31080,25735,30629,25340,39057,36139,21697,32856,20050,22378,33529,33805,24179,20973,29942,35780,23631,22369,27900,39047,23110,30772,39748,36843,31893,21078,25169,38138,20166,33670,33889,33769,33970,22484,26420,22275,26222,28006,35889,26333,28689,26399,27450,26646,25114,22971,19971,20932,28422,26578,27791,20854,26827,22855,27495,30054,23822,33040,40784,26071,31048,31041,39569,36215,23682,20062,20225,21551,22865,30732,22120,27668,36804,24323,27773,27875,35755,25488,33598,33599,33601,33602,33604,33605,33608,33610,33611,33612,33613,33614,33619,33621,33622,33623,33624,33625,33629,33634,33648,33649,33650,33651,33652,33653,33654,33657,33658,33662,33663,33664,33665,33666,33667,33668,33671,33672,33674,33675,33676,33677,33679,33680,33681,33684,33685,33686,33687,33689,33690,33693,33695,33697,33698,33699,33700,33701,33702,33703,33708,33709,33710,33711,33717,33723,33726,33727,33730,33731,33732,33734,33736,33737,33739,33741,33742,33744,33745,33746,33747,33749,33751,33753,33754,33755,33758,33762,33763,33764,33766,33767,33768,33771,33772,33773,24688,27965,29301,25190,38030,38085,21315,36801,31614,20191,35878,20094,40660,38065,38067,21069,28508,36963,27973,35892,22545,23884,27424,27465,26538,21595,33108,32652,22681,34103,24378,25250,27207,38201,25970,24708,26725,30631,20052,20392,24039,38808,25772,32728,23789,20431,31373,20999,33540,19988,24623,31363,38054,20405,20146,31206,29748,21220,33465,25810,31165,23517,27777,38738,36731,27682,20542,21375,28165,25806,26228,27696,24773,39031,35831,24198,29756,31351,31179,19992,37041,29699,27714,22234,37195,27845,36235,21306,34502,26354,36527,23624,39537,28192,33774,33775,33779,33780,33781,33782,33783,33786,33787,33788,33790,33791,33792,33794,33797,33799,33800,33801,33802,33808,33810,33811,33812,33813,33814,33815,33817,33818,33819,33822,33823,33824,33825,33826,33827,33833,33834,33835,33836,33837,33838,33839,33840,33842,33843,33844,33845,33846,33847,33849,33850,33851,33854,33855,33856,33857,33858,33859,33860,33861,33863,33864,33865,33866,33867,33868,33869,33870,33871,33872,33874,33875,33876,33877,33878,33880,33885,33886,33887,33888,33890,33892,33893,33894,33895,33896,33898,33902,33903,33904,33906,33908,33911,33913,33915,33916,21462,23094,40843,36259,21435,22280,39079,26435,37275,27849,20840,30154,25331,29356,21048,21149,32570,28820,30264,21364,40522,27063,30830,38592,35033,32676,28982,29123,20873,26579,29924,22756,25880,22199,35753,39286,25200,32469,24825,28909,22764,20161,20154,24525,38887,20219,35748,20995,22922,32427,25172,20173,26085,25102,33592,33993,33635,34701,29076,28342,23481,32466,20887,25545,26580,32905,33593,34837,20754,23418,22914,36785,20083,27741,20837,35109,36719,38446,34122,29790,38160,38384,28070,33509,24369,25746,27922,33832,33134,40131,22622,36187,19977,21441,33917,33918,33919,33920,33921,33923,33924,33925,33926,33930,33933,33935,33936,33937,33938,33939,33940,33941,33942,33944,33946,33947,33949,33950,33951,33952,33954,33955,33956,33957,33958,33959,33960,33961,33962,33963,33964,33965,33966,33968,33969,33971,33973,33974,33975,33979,33980,33982,33984,33986,33987,33989,33990,33991,33992,33995,33996,33998,33999,34002,34004,34005,34007,34008,34009,34010,34011,34012,34014,34017,34018,34020,34023,34024,34025,34026,34027,34029,34030,34031,34033,34034,34035,34036,34037,34038,34039,34040,34041,34042,34043,34045,34046,34048,34049,34050,20254,25955,26705,21971,20007,25620,39578,25195,23234,29791,33394,28073,26862,20711,33678,30722,26432,21049,27801,32433,20667,21861,29022,31579,26194,29642,33515,26441,23665,21024,29053,34923,38378,38485,25797,36193,33203,21892,27733,25159,32558,22674,20260,21830,36175,26188,19978,23578,35059,26786,25422,31245,28903,33421,21242,38902,23569,21736,37045,32461,22882,36170,34503,33292,33293,36198,25668,23556,24913,28041,31038,35774,30775,30003,21627,20280,36523,28145,23072,32453,31070,27784,23457,23158,29978,32958,24910,28183,22768,29983,29989,29298,21319,32499,34051,34052,34053,34054,34055,34056,34057,34058,34059,34061,34062,34063,34064,34066,34068,34069,34070,34072,34073,34075,34076,34077,34078,34080,34082,34083,34084,34085,34086,34087,34088,34089,34090,34093,34094,34095,34096,34097,34098,34099,34100,34101,34102,34110,34111,34112,34113,34114,34116,34117,34118,34119,34123,34124,34125,34126,34127,34128,34129,34130,34131,34132,34133,34135,34136,34138,34139,34140,34141,34143,34144,34145,34146,34147,34149,34150,34151,34153,34154,34155,34156,34157,34158,34159,34160,34161,34163,34165,34166,34167,34168,34172,34173,34175,34176,34177,30465,30427,21097,32988,22307,24072,22833,29422,26045,28287,35799,23608,34417,21313,30707,25342,26102,20160,39135,34432,23454,35782,21490,30690,20351,23630,39542,22987,24335,31034,22763,19990,26623,20107,25325,35475,36893,21183,26159,21980,22124,36866,20181,20365,37322,39280,27663,24066,24643,23460,35270,35797,25910,25163,39318,23432,23551,25480,21806,21463,30246,20861,34092,26530,26803,27530,25234,36755,21460,33298,28113,30095,20070,36174,23408,29087,34223,26257,26329,32626,34560,40653,40736,23646,26415,36848,26641,26463,25101,31446,22661,24246,25968,28465,34178,34179,34182,34184,34185,34186,34187,34188,34189,34190,34192,34193,34194,34195,34196,34197,34198,34199,34200,34201,34202,34205,34206,34207,34208,34209,34210,34211,34213,34214,34215,34217,34219,34220,34221,34225,34226,34227,34228,34229,34230,34232,34234,34235,34236,34237,34238,34239,34240,34242,34243,34244,34245,34246,34247,34248,34250,34251,34252,34253,34254,34257,34258,34260,34262,34263,34264,34265,34266,34267,34269,34270,34271,34272,34273,34274,34275,34277,34278,34279,34280,34282,34283,34284,34285,34286,34287,34288,34289,34290,34291,34292,34293,34294,34295,34296,24661,21047,32781,25684,34928,29993,24069,26643,25332,38684,21452,29245,35841,27700,30561,31246,21550,30636,39034,33308,35828,30805,26388,28865,26031,25749,22070,24605,31169,21496,19997,27515,32902,23546,21987,22235,20282,20284,39282,24051,26494,32824,24578,39042,36865,23435,35772,35829,25628,33368,25822,22013,33487,37221,20439,32032,36895,31903,20723,22609,28335,23487,35785,32899,37240,33948,31639,34429,38539,38543,32485,39635,30862,23681,31319,36930,38567,31071,23385,25439,31499,34001,26797,21766,32553,29712,32034,38145,25152,22604,20182,23427,22905,22612,34297,34298,34300,34301,34302,34304,34305,34306,34307,34308,34310,34311,34312,34313,34314,34315,34316,34317,34318,34319,34320,34322,34323,34324,34325,34327,34328,34329,34330,34331,34332,34333,34334,34335,34336,34337,34338,34339,34340,34341,34342,34344,34346,34347,34348,34349,34350,34351,34352,34353,34354,34355,34356,34357,34358,34359,34361,34362,34363,34365,34366,34367,34368,34369,34370,34371,34372,34373,34374,34375,34376,34377,34378,34379,34380,34386,34387,34389,34390,34391,34392,34393,34395,34396,34397,34399,34400,34401,34403,34404,34405,34406,34407,34408,34409,34410,29549,25374,36427,36367,32974,33492,25260,21488,27888,37214,22826,24577,27760,22349,25674,36138,30251,28393,22363,27264,30192,28525,35885,35848,22374,27631,34962,30899,25506,21497,28845,27748,22616,25642,22530,26848,33179,21776,31958,20504,36538,28108,36255,28907,25487,28059,28372,32486,33796,26691,36867,28120,38518,35752,22871,29305,34276,33150,30140,35466,26799,21076,36386,38161,25552,39064,36420,21884,20307,26367,22159,24789,28053,21059,23625,22825,28155,22635,3e4,29980,24684,33300,33094,25361,26465,36834,30522,36339,36148,38081,24086,21381,21548,28867,34413,34415,34416,34418,34419,34420,34421,34422,34423,34424,34435,34436,34437,34438,34439,34440,34441,34446,34447,34448,34449,34450,34452,34454,34455,34456,34457,34458,34459,34462,34463,34464,34465,34466,34469,34470,34475,34477,34478,34482,34483,34487,34488,34489,34491,34492,34493,34494,34495,34497,34498,34499,34501,34504,34508,34509,34514,34515,34517,34518,34519,34522,34524,34525,34528,34529,34530,34531,34533,34534,34535,34536,34538,34539,34540,34543,34549,34550,34551,34554,34555,34556,34557,34559,34561,34564,34565,34566,34571,34572,34574,34575,34576,34577,34580,34582,27712,24311,20572,20141,24237,25402,33351,36890,26704,37230,30643,21516,38108,24420,31461,26742,25413,31570,32479,30171,20599,25237,22836,36879,20984,31171,31361,22270,24466,36884,28034,23648,22303,21520,20820,28237,22242,25512,39059,33151,34581,35114,36864,21534,23663,33216,25302,25176,33073,40501,38464,39534,39548,26925,22949,25299,21822,25366,21703,34521,27964,23043,29926,34972,27498,22806,35916,24367,28286,29609,39037,20024,28919,23436,30871,25405,26202,30358,24779,23451,23113,19975,33109,27754,29579,20129,26505,32593,24448,26106,26395,24536,22916,23041,34585,34587,34589,34591,34592,34596,34598,34599,34600,34602,34603,34604,34605,34607,34608,34610,34611,34613,34614,34616,34617,34618,34620,34621,34624,34625,34626,34627,34628,34629,34630,34634,34635,34637,34639,34640,34641,34642,34644,34645,34646,34648,34650,34651,34652,34653,34654,34655,34657,34658,34662,34663,34664,34665,34666,34667,34668,34669,34671,34673,34674,34675,34677,34679,34680,34681,34682,34687,34688,34689,34692,34694,34695,34697,34698,34700,34702,34703,34704,34705,34706,34708,34709,34710,34712,34713,34714,34715,34716,34717,34718,34720,34721,34722,34723,34724,24013,24494,21361,38886,36829,26693,22260,21807,24799,20026,28493,32500,33479,33806,22996,20255,20266,23614,32428,26410,34074,21619,30031,32963,21890,39759,20301,28205,35859,23561,24944,21355,30239,28201,34442,25991,38395,32441,21563,31283,32010,38382,21985,32705,29934,25373,34583,28065,31389,25105,26017,21351,25569,27779,24043,21596,38056,20044,27745,35820,23627,26080,33436,26791,21566,21556,27595,27494,20116,25410,21320,33310,20237,20398,22366,25098,38654,26212,29289,21247,21153,24735,35823,26132,29081,26512,35199,30802,30717,26224,22075,21560,38177,29306,34725,34726,34727,34729,34730,34734,34736,34737,34738,34740,34742,34743,34744,34745,34747,34748,34750,34751,34753,34754,34755,34756,34757,34759,34760,34761,34764,34765,34766,34767,34768,34772,34773,34774,34775,34776,34777,34778,34780,34781,34782,34783,34785,34786,34787,34788,34790,34791,34792,34793,34795,34796,34797,34799,34800,34801,34802,34803,34804,34805,34806,34807,34808,34810,34811,34812,34813,34815,34816,34817,34818,34820,34821,34822,34823,34824,34825,34827,34828,34829,34830,34831,34832,34833,34834,34836,34839,34840,34841,34842,34844,34845,34846,34847,34848,34851,31232,24687,24076,24713,33181,22805,24796,29060,28911,28330,27728,29312,27268,34989,24109,20064,23219,21916,38115,27927,31995,38553,25103,32454,30606,34430,21283,38686,36758,26247,23777,20384,29421,19979,21414,22799,21523,25472,38184,20808,20185,40092,32420,21688,36132,34900,33335,38386,28046,24358,23244,26174,38505,29616,29486,21439,33146,39301,32673,23466,38519,38480,32447,30456,21410,38262,39321,31665,35140,28248,20065,32724,31077,35814,24819,21709,20139,39033,24055,27233,20687,21521,35937,33831,30813,38660,21066,21742,22179,38144,28040,23477,28102,26195,34852,34853,34854,34855,34856,34857,34858,34859,34860,34861,34862,34863,34864,34865,34867,34868,34869,34870,34871,34872,34874,34875,34877,34878,34879,34881,34882,34883,34886,34887,34888,34889,34890,34891,34894,34895,34896,34897,34898,34899,34901,34902,34904,34906,34907,34908,34909,34910,34911,34912,34918,34919,34922,34925,34927,34929,34931,34932,34933,34934,34936,34937,34938,34939,34940,34944,34947,34950,34951,34953,34954,34956,34958,34959,34960,34961,34963,34964,34965,34967,34968,34969,34970,34971,34973,34974,34975,34976,34977,34979,34981,34982,34983,34984,34985,34986,23567,23389,26657,32918,21880,31505,25928,26964,20123,27463,34638,38795,21327,25375,25658,37034,26012,32961,35856,20889,26800,21368,34809,25032,27844,27899,35874,23633,34218,33455,38156,27427,36763,26032,24571,24515,20449,34885,26143,33125,29481,24826,20852,21009,22411,24418,37026,34892,37266,24184,26447,24615,22995,20804,20982,33016,21256,27769,38596,29066,20241,20462,32670,26429,21957,38152,31168,34966,32483,22687,25100,38656,34394,22040,39035,24464,35768,33988,37207,21465,26093,24207,30044,24676,32110,23167,32490,32493,36713,21927,23459,24748,26059,29572,34988,34990,34991,34992,34994,34995,34996,34997,34998,35e3,35001,35002,35003,35005,35006,35007,35008,35011,35012,35015,35016,35018,35019,35020,35021,35023,35024,35025,35027,35030,35031,35034,35035,35036,35037,35038,35040,35041,35046,35047,35049,35050,35051,35052,35053,35054,35055,35058,35061,35062,35063,35066,35067,35069,35071,35072,35073,35075,35076,35077,35078,35079,35080,35081,35083,35084,35085,35086,35087,35089,35092,35093,35094,35095,35096,35100,35101,35102,35103,35104,35106,35107,35108,35110,35111,35112,35113,35116,35117,35118,35119,35121,35122,35123,35125,35127,36873,30307,30505,32474,38772,34203,23398,31348,38634,34880,21195,29071,24490,26092,35810,23547,39535,24033,27529,27739,35757,35759,36874,36805,21387,25276,40486,40493,21568,20011,33469,29273,34460,23830,34905,28079,38597,21713,20122,35766,28937,21693,38409,28895,28153,30416,20005,30740,34578,23721,24310,35328,39068,38414,28814,27839,22852,25513,30524,34893,28436,33395,22576,29141,21388,30746,38593,21761,24422,28976,23476,35866,39564,27523,22830,40495,31207,26472,25196,20335,30113,32650,27915,38451,27687,20208,30162,20859,26679,28478,36992,33136,22934,29814,35128,35129,35130,35131,35132,35133,35134,35135,35136,35138,35139,35141,35142,35143,35144,35145,35146,35147,35148,35149,35150,35151,35152,35153,35154,35155,35156,35157,35158,35159,35160,35161,35162,35163,35164,35165,35168,35169,35170,35171,35172,35173,35175,35176,35177,35178,35179,35180,35181,35182,35183,35184,35185,35186,35187,35188,35189,35190,35191,35192,35193,35194,35196,35197,35198,35200,35202,35204,35205,35207,35208,35209,35210,35211,35212,35213,35214,35215,35216,35217,35218,35219,35220,35221,35222,35223,35224,35225,35226,35227,35228,35229,35230,35231,35232,35233,25671,23591,36965,31377,35875,23002,21676,33280,33647,35201,32768,26928,22094,32822,29239,37326,20918,20063,39029,25494,19994,21494,26355,33099,22812,28082,19968,22777,21307,25558,38129,20381,20234,34915,39056,22839,36951,31227,20202,33008,30097,27778,23452,23016,24413,26885,34433,20506,24050,20057,30691,20197,33402,25233,26131,37009,23673,20159,24441,33222,36920,32900,30123,20134,35028,24847,27589,24518,20041,30410,28322,35811,35758,35850,35793,24322,32764,32716,32462,33589,33643,22240,27575,38899,38452,23035,21535,38134,28139,23493,39278,23609,24341,38544,35234,35235,35236,35237,35238,35239,35240,35241,35242,35243,35244,35245,35246,35247,35248,35249,35250,35251,35252,35253,35254,35255,35256,35257,35258,35259,35260,35261,35262,35263,35264,35267,35277,35283,35284,35285,35287,35288,35289,35291,35293,35295,35296,35297,35298,35300,35303,35304,35305,35306,35308,35309,35310,35312,35313,35314,35316,35317,35318,35319,35320,35321,35322,35323,35324,35325,35326,35327,35329,35330,35331,35332,35333,35334,35336,35337,35338,35339,35340,35341,35342,35343,35344,35345,35346,35347,35348,35349,35350,35351,35352,35353,35354,35355,35356,35357,21360,33521,27185,23156,40560,24212,32552,33721,33828,33829,33639,34631,36814,36194,30408,24433,39062,30828,26144,21727,25317,20323,33219,30152,24248,38605,36362,34553,21647,27891,28044,27704,24703,21191,29992,24189,20248,24736,24551,23588,30001,37038,38080,29369,27833,28216,37193,26377,21451,21491,20305,37321,35825,21448,24188,36802,28132,20110,30402,27014,34398,24858,33286,20313,20446,36926,40060,24841,28189,28180,38533,20104,23089,38632,19982,23679,31161,23431,35821,32701,29577,22495,33419,37057,21505,36935,21947,23786,24481,24840,27442,29425,32946,35465,35358,35359,35360,35361,35362,35363,35364,35365,35366,35367,35368,35369,35370,35371,35372,35373,35374,35375,35376,35377,35378,35379,35380,35381,35382,35383,35384,35385,35386,35387,35388,35389,35391,35392,35393,35394,35395,35396,35397,35398,35399,35401,35402,35403,35404,35405,35406,35407,35408,35409,35410,35411,35412,35413,35414,35415,35416,35417,35418,35419,35420,35421,35422,35423,35424,35425,35426,35427,35428,35429,35430,35431,35432,35433,35434,35435,35436,35437,35438,35439,35440,35441,35442,35443,35444,35445,35446,35447,35448,35450,35451,35452,35453,35454,35455,35456,28020,23507,35029,39044,35947,39533,40499,28170,20900,20803,22435,34945,21407,25588,36757,22253,21592,22278,29503,28304,32536,36828,33489,24895,24616,38498,26352,32422,36234,36291,38053,23731,31908,26376,24742,38405,32792,20113,37095,21248,38504,20801,36816,34164,37213,26197,38901,23381,21277,30776,26434,26685,21705,28798,23472,36733,20877,22312,21681,25874,26242,36190,36163,33039,33900,36973,31967,20991,34299,26531,26089,28577,34468,36481,22122,36896,30338,28790,29157,36131,25321,21017,27901,36156,24590,22686,24974,26366,36192,25166,21939,28195,26413,36711,35457,35458,35459,35460,35461,35462,35463,35464,35467,35468,35469,35470,35471,35472,35473,35474,35476,35477,35478,35479,35480,35481,35482,35483,35484,35485,35486,35487,35488,35489,35490,35491,35492,35493,35494,35495,35496,35497,35498,35499,35500,35501,35502,35503,35504,35505,35506,35507,35508,35509,35510,35511,35512,35513,35514,35515,35516,35517,35518,35519,35520,35521,35522,35523,35524,35525,35526,35527,35528,35529,35530,35531,35532,35533,35534,35535,35536,35537,35538,35539,35540,35541,35542,35543,35544,35545,35546,35547,35548,35549,35550,35551,35552,35553,35554,35555,38113,38392,30504,26629,27048,21643,20045,28856,35784,25688,25995,23429,31364,20538,23528,30651,27617,35449,31896,27838,30415,26025,36759,23853,23637,34360,26632,21344,25112,31449,28251,32509,27167,31456,24432,28467,24352,25484,28072,26454,19976,24080,36134,20183,32960,30260,38556,25307,26157,25214,27836,36213,29031,32617,20806,32903,21484,36974,25240,21746,34544,36761,32773,38167,34071,36825,27993,29645,26015,30495,29956,30759,33275,36126,38024,20390,26517,30137,35786,38663,25391,38215,38453,33976,25379,30529,24449,29424,20105,24596,25972,25327,27491,25919,35556,35557,35558,35559,35560,35561,35562,35563,35564,35565,35566,35567,35568,35569,35570,35571,35572,35573,35574,35575,35576,35577,35578,35579,35580,35581,35582,35583,35584,35585,35586,35587,35588,35589,35590,35592,35593,35594,35595,35596,35597,35598,35599,35600,35601,35602,35603,35604,35605,35606,35607,35608,35609,35610,35611,35612,35613,35614,35615,35616,35617,35618,35619,35620,35621,35623,35624,35625,35626,35627,35628,35629,35630,35631,35632,35633,35634,35635,35636,35637,35638,35639,35640,35641,35642,35643,35644,35645,35646,35647,35648,35649,35650,35651,35652,35653,24103,30151,37073,35777,33437,26525,25903,21553,34584,30693,32930,33026,27713,20043,32455,32844,30452,26893,27542,25191,20540,20356,22336,25351,27490,36286,21482,26088,32440,24535,25370,25527,33267,33268,32622,24092,23769,21046,26234,31209,31258,36136,28825,30164,28382,27835,31378,20013,30405,24544,38047,34935,32456,31181,32959,37325,20210,20247,33311,21608,24030,27954,35788,31909,36724,32920,24090,21650,30385,23449,26172,39588,29664,26666,34523,26417,29482,35832,35803,36880,31481,28891,29038,25284,30633,22065,20027,33879,26609,21161,34496,36142,38136,31569,35654,35655,35656,35657,35658,35659,35660,35661,35662,35663,35664,35665,35666,35667,35668,35669,35670,35671,35672,35673,35674,35675,35676,35677,35678,35679,35680,35681,35682,35683,35684,35685,35687,35688,35689,35690,35691,35693,35694,35695,35696,35697,35698,35699,35700,35701,35702,35703,35704,35705,35706,35707,35708,35709,35710,35711,35712,35713,35714,35715,35716,35717,35718,35719,35720,35721,35722,35723,35724,35725,35726,35727,35728,35729,35730,35731,35732,35733,35734,35735,35736,35737,35738,35739,35740,35741,35742,35743,35756,35761,35771,35783,35792,35818,35849,35870,20303,27880,31069,39547,25235,29226,25341,19987,30742,36716,25776,36186,31686,26729,24196,35013,22918,25758,22766,29366,26894,38181,36861,36184,22368,32512,35846,20934,25417,25305,21331,26700,29730,33537,37196,21828,30528,28796,27978,20857,21672,36164,23039,28363,28100,23388,32043,20180,31869,28371,23376,33258,28173,23383,39683,26837,36394,23447,32508,24635,32437,37049,36208,22863,25549,31199,36275,21330,26063,31062,35781,38459,32452,38075,32386,22068,37257,26368,32618,23562,36981,26152,24038,20304,26590,20570,20316,22352,24231,59408,59409,59410,59411,59412,35896,35897,35898,35899,35900,35901,35902,35903,35904,35906,35907,35908,35909,35912,35914,35915,35917,35918,35919,35920,35921,35922,35923,35924,35926,35927,35928,35929,35931,35932,35933,35934,35935,35936,35939,35940,35941,35942,35943,35944,35945,35948,35949,35950,35951,35952,35953,35954,35956,35957,35958,35959,35963,35964,35965,35966,35967,35968,35969,35971,35972,35974,35975,35976,35979,35981,35982,35983,35984,35985,35986,35987,35989,35990,35991,35993,35994,35995,35996,35997,35998,35999,36e3,36001,36002,36003,36004,36005,36006,36007,36008,36009,36010,36011,36012,36013,20109,19980,20800,19984,24319,21317,19989,20120,19998,39730,23404,22121,20008,31162,20031,21269,20039,22829,29243,21358,27664,22239,32996,39319,27603,30590,40727,20022,20127,40720,20060,20073,20115,33416,23387,21868,22031,20164,21389,21405,21411,21413,21422,38757,36189,21274,21493,21286,21294,21310,36188,21350,21347,20994,21e3,21006,21037,21043,21055,21056,21068,21086,21089,21084,33967,21117,21122,21121,21136,21139,20866,32596,20155,20163,20169,20162,20200,20193,20203,20190,20251,20211,20258,20324,20213,20261,20263,20233,20267,20318,20327,25912,20314,20317,36014,36015,36016,36017,36018,36019,36020,36021,36022,36023,36024,36025,36026,36027,36028,36029,36030,36031,36032,36033,36034,36035,36036,36037,36038,36039,36040,36041,36042,36043,36044,36045,36046,36047,36048,36049,36050,36051,36052,36053,36054,36055,36056,36057,36058,36059,36060,36061,36062,36063,36064,36065,36066,36067,36068,36069,36070,36071,36072,36073,36074,36075,36076,36077,36078,36079,36080,36081,36082,36083,36084,36085,36086,36087,36088,36089,36090,36091,36092,36093,36094,36095,36096,36097,36098,36099,36100,36101,36102,36103,36104,36105,36106,36107,36108,36109,20319,20311,20274,20285,20342,20340,20369,20361,20355,20367,20350,20347,20394,20348,20396,20372,20454,20456,20458,20421,20442,20451,20444,20433,20447,20472,20521,20556,20467,20524,20495,20526,20525,20478,20508,20492,20517,20520,20606,20547,20565,20552,20558,20588,20603,20645,20647,20649,20666,20694,20742,20717,20716,20710,20718,20743,20747,20189,27709,20312,20325,20430,40864,27718,31860,20846,24061,40649,39320,20865,22804,21241,21261,35335,21264,20971,22809,20821,20128,20822,20147,34926,34980,20149,33044,35026,31104,23348,34819,32696,20907,20913,20925,20924,36110,36111,36112,36113,36114,36115,36116,36117,36118,36119,36120,36121,36122,36123,36124,36128,36177,36178,36183,36191,36197,36200,36201,36202,36204,36206,36207,36209,36210,36216,36217,36218,36219,36220,36221,36222,36223,36224,36226,36227,36230,36231,36232,36233,36236,36237,36238,36239,36240,36242,36243,36245,36246,36247,36248,36249,36250,36251,36252,36253,36254,36256,36257,36258,36260,36261,36262,36263,36264,36265,36266,36267,36268,36269,36270,36271,36272,36274,36278,36279,36281,36283,36285,36288,36289,36290,36293,36295,36296,36297,36298,36301,36304,36306,36307,36308,20935,20886,20898,20901,35744,35750,35751,35754,35764,35765,35767,35778,35779,35787,35791,35790,35794,35795,35796,35798,35800,35801,35804,35807,35808,35812,35816,35817,35822,35824,35827,35830,35833,35836,35839,35840,35842,35844,35847,35852,35855,35857,35858,35860,35861,35862,35865,35867,35864,35869,35871,35872,35873,35877,35879,35882,35883,35886,35887,35890,35891,35893,35894,21353,21370,38429,38434,38433,38449,38442,38461,38460,38466,38473,38484,38495,38503,38508,38514,38516,38536,38541,38551,38576,37015,37019,37021,37017,37036,37025,37044,37043,37046,37050,36309,36312,36313,36316,36320,36321,36322,36325,36326,36327,36329,36333,36334,36336,36337,36338,36340,36342,36348,36350,36351,36352,36353,36354,36355,36356,36358,36359,36360,36363,36365,36366,36368,36369,36370,36371,36373,36374,36375,36376,36377,36378,36379,36380,36384,36385,36388,36389,36390,36391,36392,36395,36397,36400,36402,36403,36404,36406,36407,36408,36411,36412,36414,36415,36419,36421,36422,36428,36429,36430,36431,36432,36435,36436,36437,36438,36439,36440,36442,36443,36444,36445,36446,36447,36448,36449,36450,36451,36452,36453,36455,36456,36458,36459,36462,36465,37048,37040,37071,37061,37054,37072,37060,37063,37075,37094,37090,37084,37079,37083,37099,37103,37118,37124,37154,37150,37155,37169,37167,37177,37187,37190,21005,22850,21154,21164,21165,21182,21759,21200,21206,21232,21471,29166,30669,24308,20981,20988,39727,21430,24321,30042,24047,22348,22441,22433,22654,22716,22725,22737,22313,22316,22314,22323,22329,22318,22319,22364,22331,22338,22377,22405,22379,22406,22396,22395,22376,22381,22390,22387,22445,22436,22412,22450,22479,22439,22452,22419,22432,22485,22488,22490,22489,22482,22456,22516,22511,22520,22500,22493,36467,36469,36471,36472,36473,36474,36475,36477,36478,36480,36482,36483,36484,36486,36488,36489,36490,36491,36492,36493,36494,36497,36498,36499,36501,36502,36503,36504,36505,36506,36507,36509,36511,36512,36513,36514,36515,36516,36517,36518,36519,36520,36521,36522,36525,36526,36528,36529,36531,36532,36533,36534,36535,36536,36537,36539,36540,36541,36542,36543,36544,36545,36546,36547,36548,36549,36550,36551,36552,36553,36554,36555,36556,36557,36559,36560,36561,36562,36563,36564,36565,36566,36567,36568,36569,36570,36571,36572,36573,36574,36575,36576,36577,36578,36579,36580,22539,22541,22525,22509,22528,22558,22553,22596,22560,22629,22636,22657,22665,22682,22656,39336,40729,25087,33401,33405,33407,33423,33418,33448,33412,33422,33425,33431,33433,33451,33464,33470,33456,33480,33482,33507,33432,33463,33454,33483,33484,33473,33449,33460,33441,33450,33439,33476,33486,33444,33505,33545,33527,33508,33551,33543,33500,33524,33490,33496,33548,33531,33491,33553,33562,33542,33556,33557,33504,33493,33564,33617,33627,33628,33544,33682,33596,33588,33585,33691,33630,33583,33615,33607,33603,33631,33600,33559,33632,33581,33594,33587,33638,33637,36581,36582,36583,36584,36585,36586,36587,36588,36589,36590,36591,36592,36593,36594,36595,36596,36597,36598,36599,36600,36601,36602,36603,36604,36605,36606,36607,36608,36609,36610,36611,36612,36613,36614,36615,36616,36617,36618,36619,36620,36621,36622,36623,36624,36625,36626,36627,36628,36629,36630,36631,36632,36633,36634,36635,36636,36637,36638,36639,36640,36641,36642,36643,36644,36645,36646,36647,36648,36649,36650,36651,36652,36653,36654,36655,36656,36657,36658,36659,36660,36661,36662,36663,36664,36665,36666,36667,36668,36669,36670,36671,36672,36673,36674,36675,36676,33640,33563,33641,33644,33642,33645,33646,33712,33656,33715,33716,33696,33706,33683,33692,33669,33660,33718,33705,33661,33720,33659,33688,33694,33704,33722,33724,33729,33793,33765,33752,22535,33816,33803,33757,33789,33750,33820,33848,33809,33798,33748,33759,33807,33795,33784,33785,33770,33733,33728,33830,33776,33761,33884,33873,33882,33881,33907,33927,33928,33914,33929,33912,33852,33862,33897,33910,33932,33934,33841,33901,33985,33997,34e3,34022,33981,34003,33994,33983,33978,34016,33953,33977,33972,33943,34021,34019,34060,29965,34104,34032,34105,34079,34106,36677,36678,36679,36680,36681,36682,36683,36684,36685,36686,36687,36688,36689,36690,36691,36692,36693,36694,36695,36696,36697,36698,36699,36700,36701,36702,36703,36704,36705,36706,36707,36708,36709,36714,36736,36748,36754,36765,36768,36769,36770,36772,36773,36774,36775,36778,36780,36781,36782,36783,36786,36787,36788,36789,36791,36792,36794,36795,36796,36799,36800,36803,36806,36809,36810,36811,36812,36813,36815,36818,36822,36823,36826,36832,36833,36835,36839,36844,36847,36849,36850,36852,36853,36854,36858,36859,36860,36862,36863,36871,36872,36876,36878,36883,36885,36888,34134,34107,34047,34044,34137,34120,34152,34148,34142,34170,30626,34115,34162,34171,34212,34216,34183,34191,34169,34222,34204,34181,34233,34231,34224,34259,34241,34268,34303,34343,34309,34345,34326,34364,24318,24328,22844,22849,32823,22869,22874,22872,21263,23586,23589,23596,23604,25164,25194,25247,25275,25290,25306,25303,25326,25378,25334,25401,25419,25411,25517,25590,25457,25466,25486,25524,25453,25516,25482,25449,25518,25532,25586,25592,25568,25599,25540,25566,25550,25682,25542,25534,25669,25665,25611,25627,25632,25612,25638,25633,25694,25732,25709,25750,36889,36892,36899,36900,36901,36903,36904,36905,36906,36907,36908,36912,36913,36914,36915,36916,36919,36921,36922,36925,36927,36928,36931,36933,36934,36936,36937,36938,36939,36940,36942,36948,36949,36950,36953,36954,36956,36957,36958,36959,36960,36961,36964,36966,36967,36969,36970,36971,36972,36975,36976,36977,36978,36979,36982,36983,36984,36985,36986,36987,36988,36990,36993,36996,36997,36998,36999,37001,37002,37004,37005,37006,37007,37008,37010,37012,37014,37016,37018,37020,37022,37023,37024,37028,37029,37031,37032,37033,37035,37037,37042,37047,37052,37053,37055,37056,25722,25783,25784,25753,25786,25792,25808,25815,25828,25826,25865,25893,25902,24331,24530,29977,24337,21343,21489,21501,21481,21480,21499,21522,21526,21510,21579,21586,21587,21588,21590,21571,21537,21591,21593,21539,21554,21634,21652,21623,21617,21604,21658,21659,21636,21622,21606,21661,21712,21677,21698,21684,21714,21671,21670,21715,21716,21618,21667,21717,21691,21695,21708,21721,21722,21724,21673,21674,21668,21725,21711,21726,21787,21735,21792,21757,21780,21747,21794,21795,21775,21777,21799,21802,21863,21903,21941,21833,21869,21825,21845,21823,21840,21820,37058,37059,37062,37064,37065,37067,37068,37069,37074,37076,37077,37078,37080,37081,37082,37086,37087,37088,37091,37092,37093,37097,37098,37100,37102,37104,37105,37106,37107,37109,37110,37111,37113,37114,37115,37116,37119,37120,37121,37123,37125,37126,37127,37128,37129,37130,37131,37132,37133,37134,37135,37136,37137,37138,37139,37140,37141,37142,37143,37144,37146,37147,37148,37149,37151,37152,37153,37156,37157,37158,37159,37160,37161,37162,37163,37164,37165,37166,37168,37170,37171,37172,37173,37174,37175,37176,37178,37179,37180,37181,37182,37183,37184,37185,37186,37188,21815,21846,21877,21878,21879,21811,21808,21852,21899,21970,21891,21937,21945,21896,21889,21919,21886,21974,21905,21883,21983,21949,21950,21908,21913,21994,22007,21961,22047,21969,21995,21996,21972,21990,21981,21956,21999,21989,22002,22003,21964,21965,21992,22005,21988,36756,22046,22024,22028,22017,22052,22051,22014,22016,22055,22061,22104,22073,22103,22060,22093,22114,22105,22108,22092,22100,22150,22116,22129,22123,22139,22140,22149,22163,22191,22228,22231,22237,22241,22261,22251,22265,22271,22276,22282,22281,22300,24079,24089,24084,24081,24113,24123,24124,37189,37191,37192,37201,37203,37204,37205,37206,37208,37209,37211,37212,37215,37216,37222,37223,37224,37227,37229,37235,37242,37243,37244,37248,37249,37250,37251,37252,37254,37256,37258,37262,37263,37267,37268,37269,37270,37271,37272,37273,37276,37277,37278,37279,37280,37281,37284,37285,37286,37287,37288,37289,37291,37292,37296,37297,37298,37299,37302,37303,37304,37305,37307,37308,37309,37310,37311,37312,37313,37314,37315,37316,37317,37318,37320,37323,37328,37330,37331,37332,37333,37334,37335,37336,37337,37338,37339,37341,37342,37343,37344,37345,37346,37347,37348,37349,24119,24132,24148,24155,24158,24161,23692,23674,23693,23696,23702,23688,23704,23705,23697,23706,23708,23733,23714,23741,23724,23723,23729,23715,23745,23735,23748,23762,23780,23755,23781,23810,23811,23847,23846,23854,23844,23838,23814,23835,23896,23870,23860,23869,23916,23899,23919,23901,23915,23883,23882,23913,23924,23938,23961,23965,35955,23991,24005,24435,24439,24450,24455,24457,24460,24469,24473,24476,24488,24493,24501,24508,34914,24417,29357,29360,29364,29367,29368,29379,29377,29390,29389,29394,29416,29423,29417,29426,29428,29431,29441,29427,29443,29434,37350,37351,37352,37353,37354,37355,37356,37357,37358,37359,37360,37361,37362,37363,37364,37365,37366,37367,37368,37369,37370,37371,37372,37373,37374,37375,37376,37377,37378,37379,37380,37381,37382,37383,37384,37385,37386,37387,37388,37389,37390,37391,37392,37393,37394,37395,37396,37397,37398,37399,37400,37401,37402,37403,37404,37405,37406,37407,37408,37409,37410,37411,37412,37413,37414,37415,37416,37417,37418,37419,37420,37421,37422,37423,37424,37425,37426,37427,37428,37429,37430,37431,37432,37433,37434,37435,37436,37437,37438,37439,37440,37441,37442,37443,37444,37445,29435,29463,29459,29473,29450,29470,29469,29461,29474,29497,29477,29484,29496,29489,29520,29517,29527,29536,29548,29551,29566,33307,22821,39143,22820,22786,39267,39271,39272,39273,39274,39275,39276,39284,39287,39293,39296,39300,39303,39306,39309,39312,39313,39315,39316,39317,24192,24209,24203,24214,24229,24224,24249,24245,24254,24243,36179,24274,24273,24283,24296,24298,33210,24516,24521,24534,24527,24579,24558,24580,24545,24548,24574,24581,24582,24554,24557,24568,24601,24629,24614,24603,24591,24589,24617,24619,24586,24639,24609,24696,24697,24699,24698,24642,37446,37447,37448,37449,37450,37451,37452,37453,37454,37455,37456,37457,37458,37459,37460,37461,37462,37463,37464,37465,37466,37467,37468,37469,37470,37471,37472,37473,37474,37475,37476,37477,37478,37479,37480,37481,37482,37483,37484,37485,37486,37487,37488,37489,37490,37491,37493,37494,37495,37496,37497,37498,37499,37500,37501,37502,37503,37504,37505,37506,37507,37508,37509,37510,37511,37512,37513,37514,37515,37516,37517,37519,37520,37521,37522,37523,37524,37525,37526,37527,37528,37529,37530,37531,37532,37533,37534,37535,37536,37537,37538,37539,37540,37541,37542,37543,24682,24701,24726,24730,24749,24733,24707,24722,24716,24731,24812,24763,24753,24797,24792,24774,24794,24756,24864,24870,24853,24867,24820,24832,24846,24875,24906,24949,25004,24980,24999,25015,25044,25077,24541,38579,38377,38379,38385,38387,38389,38390,38396,38398,38403,38404,38406,38408,38410,38411,38412,38413,38415,38418,38421,38422,38423,38425,38426,20012,29247,25109,27701,27732,27740,27722,27811,27781,27792,27796,27788,27752,27753,27764,27766,27782,27817,27856,27860,27821,27895,27896,27889,27863,27826,27872,27862,27898,27883,27886,27825,27859,27887,27902,37544,37545,37546,37547,37548,37549,37551,37552,37553,37554,37555,37556,37557,37558,37559,37560,37561,37562,37563,37564,37565,37566,37567,37568,37569,37570,37571,37572,37573,37574,37575,37577,37578,37579,37580,37581,37582,37583,37584,37585,37586,37587,37588,37589,37590,37591,37592,37593,37594,37595,37596,37597,37598,37599,37600,37601,37602,37603,37604,37605,37606,37607,37608,37609,37610,37611,37612,37613,37614,37615,37616,37617,37618,37619,37620,37621,37622,37623,37624,37625,37626,37627,37628,37629,37630,37631,37632,37633,37634,37635,37636,37637,37638,37639,37640,37641,27961,27943,27916,27971,27976,27911,27908,27929,27918,27947,27981,27950,27957,27930,27983,27986,27988,27955,28049,28015,28062,28064,27998,28051,28052,27996,28e3,28028,28003,28186,28103,28101,28126,28174,28095,28128,28177,28134,28125,28121,28182,28075,28172,28078,28203,28270,28238,28267,28338,28255,28294,28243,28244,28210,28197,28228,28383,28337,28312,28384,28461,28386,28325,28327,28349,28347,28343,28375,28340,28367,28303,28354,28319,28514,28486,28487,28452,28437,28409,28463,28470,28491,28532,28458,28425,28457,28553,28557,28556,28536,28530,28540,28538,28625,37642,37643,37644,37645,37646,37647,37648,37649,37650,37651,37652,37653,37654,37655,37656,37657,37658,37659,37660,37661,37662,37663,37664,37665,37666,37667,37668,37669,37670,37671,37672,37673,37674,37675,37676,37677,37678,37679,37680,37681,37682,37683,37684,37685,37686,37687,37688,37689,37690,37691,37692,37693,37695,37696,37697,37698,37699,37700,37701,37702,37703,37704,37705,37706,37707,37708,37709,37710,37711,37712,37713,37714,37715,37716,37717,37718,37719,37720,37721,37722,37723,37724,37725,37726,37727,37728,37729,37730,37731,37732,37733,37734,37735,37736,37737,37739,28617,28583,28601,28598,28610,28641,28654,28638,28640,28655,28698,28707,28699,28729,28725,28751,28766,23424,23428,23445,23443,23461,23480,29999,39582,25652,23524,23534,35120,23536,36423,35591,36790,36819,36821,36837,36846,36836,36841,36838,36851,36840,36869,36868,36875,36902,36881,36877,36886,36897,36917,36918,36909,36911,36932,36945,36946,36944,36968,36952,36962,36955,26297,36980,36989,36994,37e3,36995,37003,24400,24407,24406,24408,23611,21675,23632,23641,23409,23651,23654,32700,24362,24361,24365,33396,24380,39739,23662,22913,22915,22925,22953,22954,22947,37740,37741,37742,37743,37744,37745,37746,37747,37748,37749,37750,37751,37752,37753,37754,37755,37756,37757,37758,37759,37760,37761,37762,37763,37764,37765,37766,37767,37768,37769,37770,37771,37772,37773,37774,37776,37777,37778,37779,37780,37781,37782,37783,37784,37785,37786,37787,37788,37789,37790,37791,37792,37793,37794,37795,37796,37797,37798,37799,37800,37801,37802,37803,37804,37805,37806,37807,37808,37809,37810,37811,37812,37813,37814,37815,37816,37817,37818,37819,37820,37821,37822,37823,37824,37825,37826,37827,37828,37829,37830,37831,37832,37833,37835,37836,37837,22935,22986,22955,22942,22948,22994,22962,22959,22999,22974,23045,23046,23005,23048,23011,23e3,23033,23052,23049,23090,23092,23057,23075,23059,23104,23143,23114,23125,23100,23138,23157,33004,23210,23195,23159,23162,23230,23275,23218,23250,23252,23224,23264,23267,23281,23254,23270,23256,23260,23305,23319,23318,23346,23351,23360,23573,23580,23386,23397,23411,23377,23379,23394,39541,39543,39544,39546,39551,39549,39552,39553,39557,39560,39562,39568,39570,39571,39574,39576,39579,39580,39581,39583,39584,39586,39587,39589,39591,32415,32417,32419,32421,32424,32425,37838,37839,37840,37841,37842,37843,37844,37845,37847,37848,37849,37850,37851,37852,37853,37854,37855,37856,37857,37858,37859,37860,37861,37862,37863,37864,37865,37866,37867,37868,37869,37870,37871,37872,37873,37874,37875,37876,37877,37878,37879,37880,37881,37882,37883,37884,37885,37886,37887,37888,37889,37890,37891,37892,37893,37894,37895,37896,37897,37898,37899,37900,37901,37902,37903,37904,37905,37906,37907,37908,37909,37910,37911,37912,37913,37914,37915,37916,37917,37918,37919,37920,37921,37922,37923,37924,37925,37926,37927,37928,37929,37930,37931,37932,37933,37934,32429,32432,32446,32448,32449,32450,32457,32459,32460,32464,32468,32471,32475,32480,32481,32488,32491,32494,32495,32497,32498,32525,32502,32506,32507,32510,32513,32514,32515,32519,32520,32523,32524,32527,32529,32530,32535,32537,32540,32539,32543,32545,32546,32547,32548,32549,32550,32551,32554,32555,32556,32557,32559,32560,32561,32562,32563,32565,24186,30079,24027,30014,37013,29582,29585,29614,29602,29599,29647,29634,29649,29623,29619,29632,29641,29640,29669,29657,39036,29706,29673,29671,29662,29626,29682,29711,29738,29787,29734,29733,29736,29744,29742,29740,37935,37936,37937,37938,37939,37940,37941,37942,37943,37944,37945,37946,37947,37948,37949,37951,37952,37953,37954,37955,37956,37957,37958,37959,37960,37961,37962,37963,37964,37965,37966,37967,37968,37969,37970,37971,37972,37973,37974,37975,37976,37977,37978,37979,37980,37981,37982,37983,37984,37985,37986,37987,37988,37989,37990,37991,37992,37993,37994,37996,37997,37998,37999,38e3,38001,38002,38003,38004,38005,38006,38007,38008,38009,38010,38011,38012,38013,38014,38015,38016,38017,38018,38019,38020,38033,38038,38040,38087,38095,38099,38100,38106,38118,38139,38172,38176,29723,29722,29761,29788,29783,29781,29785,29815,29805,29822,29852,29838,29824,29825,29831,29835,29854,29864,29865,29840,29863,29906,29882,38890,38891,38892,26444,26451,26462,26440,26473,26533,26503,26474,26483,26520,26535,26485,26536,26526,26541,26507,26487,26492,26608,26633,26584,26634,26601,26544,26636,26585,26549,26586,26547,26589,26624,26563,26552,26594,26638,26561,26621,26674,26675,26720,26721,26702,26722,26692,26724,26755,26653,26709,26726,26689,26727,26688,26686,26698,26697,26665,26805,26767,26740,26743,26771,26731,26818,26990,26876,26911,26912,26873,38183,38195,38205,38211,38216,38219,38229,38234,38240,38254,38260,38261,38263,38264,38265,38266,38267,38268,38269,38270,38272,38273,38274,38275,38276,38277,38278,38279,38280,38281,38282,38283,38284,38285,38286,38287,38288,38289,38290,38291,38292,38293,38294,38295,38296,38297,38298,38299,38300,38301,38302,38303,38304,38305,38306,38307,38308,38309,38310,38311,38312,38313,38314,38315,38316,38317,38318,38319,38320,38321,38322,38323,38324,38325,38326,38327,38328,38329,38330,38331,38332,38333,38334,38335,38336,38337,38338,38339,38340,38341,38342,38343,38344,38345,38346,38347,26916,26864,26891,26881,26967,26851,26896,26993,26937,26976,26946,26973,27012,26987,27008,27032,27e3,26932,27084,27015,27016,27086,27017,26982,26979,27001,27035,27047,27067,27051,27053,27092,27057,27073,27082,27103,27029,27104,27021,27135,27183,27117,27159,27160,27237,27122,27204,27198,27296,27216,27227,27189,27278,27257,27197,27176,27224,27260,27281,27280,27305,27287,27307,29495,29522,27521,27522,27527,27524,27538,27539,27533,27546,27547,27553,27562,36715,36717,36721,36722,36723,36725,36726,36728,36727,36729,36730,36732,36734,36737,36738,36740,36743,36747,38348,38349,38350,38351,38352,38353,38354,38355,38356,38357,38358,38359,38360,38361,38362,38363,38364,38365,38366,38367,38368,38369,38370,38371,38372,38373,38374,38375,38380,38399,38407,38419,38424,38427,38430,38432,38435,38436,38437,38438,38439,38440,38441,38443,38444,38445,38447,38448,38455,38456,38457,38458,38462,38465,38467,38474,38478,38479,38481,38482,38483,38486,38487,38488,38489,38490,38492,38493,38494,38496,38499,38501,38502,38507,38509,38510,38511,38512,38513,38515,38520,38521,38522,38523,38524,38525,38526,38527,38528,38529,38530,38531,38532,38535,38537,38538,36749,36750,36751,36760,36762,36558,25099,25111,25115,25119,25122,25121,25125,25124,25132,33255,29935,29940,29951,29967,29969,29971,25908,26094,26095,26096,26122,26137,26482,26115,26133,26112,28805,26359,26141,26164,26161,26166,26165,32774,26207,26196,26177,26191,26198,26209,26199,26231,26244,26252,26279,26269,26302,26331,26332,26342,26345,36146,36147,36150,36155,36157,36160,36165,36166,36168,36169,36167,36173,36181,36185,35271,35274,35275,35276,35278,35279,35280,35281,29294,29343,29277,29286,29295,29310,29311,29316,29323,29325,29327,29330,25352,25394,25520,38540,38542,38545,38546,38547,38549,38550,38554,38555,38557,38558,38559,38560,38561,38562,38563,38564,38565,38566,38568,38569,38570,38571,38572,38573,38574,38575,38577,38578,38580,38581,38583,38584,38586,38587,38591,38594,38595,38600,38602,38603,38608,38609,38611,38612,38614,38615,38616,38617,38618,38619,38620,38621,38622,38623,38625,38626,38627,38628,38629,38630,38631,38635,38636,38637,38638,38640,38641,38642,38644,38645,38648,38650,38651,38652,38653,38655,38658,38659,38661,38666,38667,38668,38672,38673,38674,38676,38677,38679,38680,38681,38682,38683,38685,38687,38688,25663,25816,32772,27626,27635,27645,27637,27641,27653,27655,27654,27661,27669,27672,27673,27674,27681,27689,27684,27690,27698,25909,25941,25963,29261,29266,29270,29232,34402,21014,32927,32924,32915,32956,26378,32957,32945,32939,32941,32948,32951,32999,33e3,33001,33002,32987,32962,32964,32985,32973,32983,26384,32989,33003,33009,33012,33005,33037,33038,33010,33020,26389,33042,35930,33078,33054,33068,33048,33074,33096,33100,33107,33140,33113,33114,33137,33120,33129,33148,33149,33133,33127,22605,23221,33160,33154,33169,28373,33187,33194,33228,26406,33226,33211,38689,38690,38691,38692,38693,38694,38695,38696,38697,38699,38700,38702,38703,38705,38707,38708,38709,38710,38711,38714,38715,38716,38717,38719,38720,38721,38722,38723,38724,38725,38726,38727,38728,38729,38730,38731,38732,38733,38734,38735,38736,38737,38740,38741,38743,38744,38746,38748,38749,38751,38755,38756,38758,38759,38760,38762,38763,38764,38765,38766,38767,38768,38769,38770,38773,38775,38776,38777,38778,38779,38781,38782,38783,38784,38785,38786,38787,38788,38790,38791,38792,38793,38794,38796,38798,38799,38800,38803,38805,38806,38807,38809,38810,38811,38812,38813,33217,33190,27428,27447,27449,27459,27462,27481,39121,39122,39123,39125,39129,39130,27571,24384,27586,35315,26e3,40785,26003,26044,26054,26052,26051,26060,26062,26066,26070,28800,28828,28822,28829,28859,28864,28855,28843,28849,28904,28874,28944,28947,28950,28975,28977,29043,29020,29032,28997,29042,29002,29048,29050,29080,29107,29109,29096,29088,29152,29140,29159,29177,29213,29224,28780,28952,29030,29113,25150,25149,25155,25160,25161,31035,31040,31046,31049,31067,31068,31059,31066,31074,31063,31072,31087,31079,31098,31109,31114,31130,31143,31155,24529,24528,38814,38815,38817,38818,38820,38821,38822,38823,38824,38825,38826,38828,38830,38832,38833,38835,38837,38838,38839,38840,38841,38842,38843,38844,38845,38846,38847,38848,38849,38850,38851,38852,38853,38854,38855,38856,38857,38858,38859,38860,38861,38862,38863,38864,38865,38866,38867,38868,38869,38870,38871,38872,38873,38874,38875,38876,38877,38878,38879,38880,38881,38882,38883,38884,38885,38888,38894,38895,38896,38897,38898,38900,38903,38904,38905,38906,38907,38908,38909,38910,38911,38912,38913,38914,38915,38916,38917,38918,38919,38920,38921,38922,38923,38924,38925,38926,24636,24669,24666,24679,24641,24665,24675,24747,24838,24845,24925,25001,24989,25035,25041,25094,32896,32895,27795,27894,28156,30710,30712,30720,30729,30743,30744,30737,26027,30765,30748,30749,30777,30778,30779,30751,30780,30757,30764,30755,30761,30798,30829,30806,30807,30758,30800,30791,30796,30826,30875,30867,30874,30855,30876,30881,30883,30898,30905,30885,30932,30937,30921,30956,30962,30981,30964,30995,31012,31006,31028,40859,40697,40699,40700,30449,30468,30477,30457,30471,30472,30490,30498,30489,30509,30502,30517,30520,30544,30545,30535,30531,30554,30568,38927,38928,38929,38930,38931,38932,38933,38934,38935,38936,38937,38938,38939,38940,38941,38942,38943,38944,38945,38946,38947,38948,38949,38950,38951,38952,38953,38954,38955,38956,38957,38958,38959,38960,38961,38962,38963,38964,38965,38966,38967,38968,38969,38970,38971,38972,38973,38974,38975,38976,38977,38978,38979,38980,38981,38982,38983,38984,38985,38986,38987,38988,38989,38990,38991,38992,38993,38994,38995,38996,38997,38998,38999,39e3,39001,39002,39003,39004,39005,39006,39007,39008,39009,39010,39011,39012,39013,39014,39015,39016,39017,39018,39019,39020,39021,39022,30562,30565,30591,30605,30589,30592,30604,30609,30623,30624,30640,30645,30653,30010,30016,30030,30027,30024,30043,30066,30073,30083,32600,32609,32607,35400,32616,32628,32625,32633,32641,32638,30413,30437,34866,38021,38022,38023,38027,38026,38028,38029,38031,38032,38036,38039,38037,38042,38043,38044,38051,38052,38059,38058,38061,38060,38063,38064,38066,38068,38070,38071,38072,38073,38074,38076,38077,38079,38084,38088,38089,38090,38091,38092,38093,38094,38096,38097,38098,38101,38102,38103,38105,38104,38107,38110,38111,38112,38114,38116,38117,38119,38120,38122,39023,39024,39025,39026,39027,39028,39051,39054,39058,39061,39065,39075,39080,39081,39082,39083,39084,39085,39086,39087,39088,39089,39090,39091,39092,39093,39094,39095,39096,39097,39098,39099,39100,39101,39102,39103,39104,39105,39106,39107,39108,39109,39110,39111,39112,39113,39114,39115,39116,39117,39119,39120,39124,39126,39127,39131,39132,39133,39136,39137,39138,39139,39140,39141,39142,39145,39146,39147,39148,39149,39150,39151,39152,39153,39154,39155,39156,39157,39158,39159,39160,39161,39162,39163,39164,39165,39166,39167,39168,39169,39170,39171,39172,39173,39174,39175,38121,38123,38126,38127,38131,38132,38133,38135,38137,38140,38141,38143,38147,38146,38150,38151,38153,38154,38157,38158,38159,38162,38163,38164,38165,38166,38168,38171,38173,38174,38175,38178,38186,38187,38185,38188,38193,38194,38196,38198,38199,38200,38204,38206,38207,38210,38197,38212,38213,38214,38217,38220,38222,38223,38226,38227,38228,38230,38231,38232,38233,38235,38238,38239,38237,38241,38242,38244,38245,38246,38247,38248,38249,38250,38251,38252,38255,38257,38258,38259,38202,30695,30700,38601,31189,31213,31203,31211,31238,23879,31235,31234,31262,31252,39176,39177,39178,39179,39180,39182,39183,39185,39186,39187,39188,39189,39190,39191,39192,39193,39194,39195,39196,39197,39198,39199,39200,39201,39202,39203,39204,39205,39206,39207,39208,39209,39210,39211,39212,39213,39215,39216,39217,39218,39219,39220,39221,39222,39223,39224,39225,39226,39227,39228,39229,39230,39231,39232,39233,39234,39235,39236,39237,39238,39239,39240,39241,39242,39243,39244,39245,39246,39247,39248,39249,39250,39251,39254,39255,39256,39257,39258,39259,39260,39261,39262,39263,39264,39265,39266,39268,39270,39283,39288,39289,39291,39294,39298,39299,39305,31289,31287,31313,40655,39333,31344,30344,30350,30355,30361,30372,29918,29920,29996,40480,40482,40488,40489,40490,40491,40492,40498,40497,40502,40504,40503,40505,40506,40510,40513,40514,40516,40518,40519,40520,40521,40523,40524,40526,40529,40533,40535,40538,40539,40540,40542,40547,40550,40551,40552,40553,40554,40555,40556,40561,40557,40563,30098,30100,30102,30112,30109,30124,30115,30131,30132,30136,30148,30129,30128,30147,30146,30166,30157,30179,30184,30182,30180,30187,30183,30211,30193,30204,30207,30224,30208,30213,30220,30231,30218,30245,30232,30229,30233,39308,39310,39322,39323,39324,39325,39326,39327,39328,39329,39330,39331,39332,39334,39335,39337,39338,39339,39340,39341,39342,39343,39344,39345,39346,39347,39348,39349,39350,39351,39352,39353,39354,39355,39356,39357,39358,39359,39360,39361,39362,39363,39364,39365,39366,39367,39368,39369,39370,39371,39372,39373,39374,39375,39376,39377,39378,39379,39380,39381,39382,39383,39384,39385,39386,39387,39388,39389,39390,39391,39392,39393,39394,39395,39396,39397,39398,39399,39400,39401,39402,39403,39404,39405,39406,39407,39408,39409,39410,39411,39412,39413,39414,39415,39416,39417,30235,30268,30242,30240,30272,30253,30256,30271,30261,30275,30270,30259,30285,30302,30292,30300,30294,30315,30319,32714,31462,31352,31353,31360,31366,31368,31381,31398,31392,31404,31400,31405,31411,34916,34921,34930,34941,34943,34946,34978,35014,34999,35004,35017,35042,35022,35043,35045,35057,35098,35068,35048,35070,35056,35105,35097,35091,35099,35082,35124,35115,35126,35137,35174,35195,30091,32997,30386,30388,30684,32786,32788,32790,32796,32800,32802,32805,32806,32807,32809,32808,32817,32779,32821,32835,32838,32845,32850,32873,32881,35203,39032,39040,39043,39418,39419,39420,39421,39422,39423,39424,39425,39426,39427,39428,39429,39430,39431,39432,39433,39434,39435,39436,39437,39438,39439,39440,39441,39442,39443,39444,39445,39446,39447,39448,39449,39450,39451,39452,39453,39454,39455,39456,39457,39458,39459,39460,39461,39462,39463,39464,39465,39466,39467,39468,39469,39470,39471,39472,39473,39474,39475,39476,39477,39478,39479,39480,39481,39482,39483,39484,39485,39486,39487,39488,39489,39490,39491,39492,39493,39494,39495,39496,39497,39498,39499,39500,39501,39502,39503,39504,39505,39506,39507,39508,39509,39510,39511,39512,39513,39049,39052,39053,39055,39060,39066,39067,39070,39071,39073,39074,39077,39078,34381,34388,34412,34414,34431,34426,34428,34427,34472,34445,34443,34476,34461,34471,34467,34474,34451,34473,34486,34500,34485,34510,34480,34490,34481,34479,34505,34511,34484,34537,34545,34546,34541,34547,34512,34579,34526,34548,34527,34520,34513,34563,34567,34552,34568,34570,34573,34569,34595,34619,34590,34597,34606,34586,34622,34632,34612,34609,34601,34615,34623,34690,34594,34685,34686,34683,34656,34672,34636,34670,34699,34643,34659,34684,34660,34649,34661,34707,34735,34728,34770,39514,39515,39516,39517,39518,39519,39520,39521,39522,39523,39524,39525,39526,39527,39528,39529,39530,39531,39538,39555,39561,39565,39566,39572,39573,39577,39590,39593,39594,39595,39596,39597,39598,39599,39602,39603,39604,39605,39609,39611,39613,39614,39615,39619,39620,39622,39623,39624,39625,39626,39629,39630,39631,39632,39634,39636,39637,39638,39639,39641,39642,39643,39644,39645,39646,39648,39650,39651,39652,39653,39655,39656,39657,39658,39660,39662,39664,39665,39666,39667,39668,39669,39670,39671,39672,39674,39676,39677,39678,39679,39680,39681,39682,39684,39685,39686,34758,34696,34693,34733,34711,34691,34731,34789,34732,34741,34739,34763,34771,34749,34769,34752,34762,34779,34794,34784,34798,34838,34835,34814,34826,34843,34849,34873,34876,32566,32578,32580,32581,33296,31482,31485,31496,31491,31492,31509,31498,31531,31503,31559,31544,31530,31513,31534,31537,31520,31525,31524,31539,31550,31518,31576,31578,31557,31605,31564,31581,31584,31598,31611,31586,31602,31601,31632,31654,31655,31672,31660,31645,31656,31621,31658,31644,31650,31659,31668,31697,31681,31692,31709,31706,31717,31718,31722,31756,31742,31740,31759,31766,31755,39687,39689,39690,39691,39692,39693,39694,39696,39697,39698,39700,39701,39702,39703,39704,39705,39706,39707,39708,39709,39710,39712,39713,39714,39716,39717,39718,39719,39720,39721,39722,39723,39724,39725,39726,39728,39729,39731,39732,39733,39734,39735,39736,39737,39738,39741,39742,39743,39744,39750,39754,39755,39756,39758,39760,39762,39763,39765,39766,39767,39768,39769,39770,39771,39772,39773,39774,39775,39776,39777,39778,39779,39780,39781,39782,39783,39784,39785,39786,39787,39788,39789,39790,39791,39792,39793,39794,39795,39796,39797,39798,39799,39800,39801,39802,39803,31775,31786,31782,31800,31809,31808,33278,33281,33282,33284,33260,34884,33313,33314,33315,33325,33327,33320,33323,33336,33339,33331,33332,33342,33348,33353,33355,33359,33370,33375,33384,34942,34949,34952,35032,35039,35166,32669,32671,32679,32687,32688,32690,31868,25929,31889,31901,31900,31902,31906,31922,31932,31933,31937,31943,31948,31949,31944,31941,31959,31976,33390,26280,32703,32718,32725,32741,32737,32742,32745,32750,32755,31992,32119,32166,32174,32327,32411,40632,40628,36211,36228,36244,36241,36273,36199,36205,35911,35913,37194,37200,37198,37199,37220,39804,39805,39806,39807,39808,39809,39810,39811,39812,39813,39814,39815,39816,39817,39818,39819,39820,39821,39822,39823,39824,39825,39826,39827,39828,39829,39830,39831,39832,39833,39834,39835,39836,39837,39838,39839,39840,39841,39842,39843,39844,39845,39846,39847,39848,39849,39850,39851,39852,39853,39854,39855,39856,39857,39858,39859,39860,39861,39862,39863,39864,39865,39866,39867,39868,39869,39870,39871,39872,39873,39874,39875,39876,39877,39878,39879,39880,39881,39882,39883,39884,39885,39886,39887,39888,39889,39890,39891,39892,39893,39894,39895,39896,39897,39898,39899,37218,37217,37232,37225,37231,37245,37246,37234,37236,37241,37260,37253,37264,37261,37265,37282,37283,37290,37293,37294,37295,37301,37300,37306,35925,40574,36280,36331,36357,36441,36457,36277,36287,36284,36282,36292,36310,36311,36314,36318,36302,36303,36315,36294,36332,36343,36344,36323,36345,36347,36324,36361,36349,36372,36381,36383,36396,36398,36387,36399,36410,36416,36409,36405,36413,36401,36425,36417,36418,36433,36434,36426,36464,36470,36476,36463,36468,36485,36495,36500,36496,36508,36510,35960,35970,35978,35973,35992,35988,26011,35286,35294,35290,35292,39900,39901,39902,39903,39904,39905,39906,39907,39908,39909,39910,39911,39912,39913,39914,39915,39916,39917,39918,39919,39920,39921,39922,39923,39924,39925,39926,39927,39928,39929,39930,39931,39932,39933,39934,39935,39936,39937,39938,39939,39940,39941,39942,39943,39944,39945,39946,39947,39948,39949,39950,39951,39952,39953,39954,39955,39956,39957,39958,39959,39960,39961,39962,39963,39964,39965,39966,39967,39968,39969,39970,39971,39972,39973,39974,39975,39976,39977,39978,39979,39980,39981,39982,39983,39984,39985,39986,39987,39988,39989,39990,39991,39992,39993,39994,39995,35301,35307,35311,35390,35622,38739,38633,38643,38639,38662,38657,38664,38671,38670,38698,38701,38704,38718,40832,40835,40837,40838,40839,40840,40841,40842,40844,40702,40715,40717,38585,38588,38589,38606,38610,30655,38624,37518,37550,37576,37694,37738,37834,37775,37950,37995,40063,40066,40069,40070,40071,40072,31267,40075,40078,40080,40081,40082,40084,40085,40090,40091,40094,40095,40096,40097,40098,40099,40101,40102,40103,40104,40105,40107,40109,40110,40112,40113,40114,40115,40116,40117,40118,40119,40122,40123,40124,40125,40132,40133,40134,40135,40138,40139,39996,39997,39998,39999,4e4,40001,40002,40003,40004,40005,40006,40007,40008,40009,40010,40011,40012,40013,40014,40015,40016,40017,40018,40019,40020,40021,40022,40023,40024,40025,40026,40027,40028,40029,40030,40031,40032,40033,40034,40035,40036,40037,40038,40039,40040,40041,40042,40043,40044,40045,40046,40047,40048,40049,40050,40051,40052,40053,40054,40055,40056,40057,40058,40059,40061,40062,40064,40067,40068,40073,40074,40076,40079,40083,40086,40087,40088,40089,40093,40106,40108,40111,40121,40126,40127,40128,40129,40130,40136,40137,40145,40146,40154,40155,40160,40161,40140,40141,40142,40143,40144,40147,40148,40149,40151,40152,40153,40156,40157,40159,40162,38780,38789,38801,38802,38804,38831,38827,38819,38834,38836,39601,39600,39607,40536,39606,39610,39612,39617,39616,39621,39618,39627,39628,39633,39749,39747,39751,39753,39752,39757,39761,39144,39181,39214,39253,39252,39647,39649,39654,39663,39659,39675,39661,39673,39688,39695,39699,39711,39715,40637,40638,32315,40578,40583,40584,40587,40594,37846,40605,40607,40667,40668,40669,40672,40671,40674,40681,40679,40677,40682,40687,40738,40748,40751,40761,40759,40765,40766,40772,40163,40164,40165,40166,40167,40168,40169,40170,40171,40172,40173,40174,40175,40176,40177,40178,40179,40180,40181,40182,40183,40184,40185,40186,40187,40188,40189,40190,40191,40192,40193,40194,40195,40196,40197,40198,40199,40200,40201,40202,40203,40204,40205,40206,40207,40208,40209,40210,40211,40212,40213,40214,40215,40216,40217,40218,40219,40220,40221,40222,40223,40224,40225,40226,40227,40228,40229,40230,40231,40232,40233,40234,40235,40236,40237,40238,40239,40240,40241,40242,40243,40244,40245,40246,40247,40248,40249,40250,40251,40252,40253,40254,40255,40256,40257,40258,57908,57909,57910,57911,57912,57913,57914,57915,57916,57917,57918,57919,57920,57921,57922,57923,57924,57925,57926,57927,57928,57929,57930,57931,57932,57933,57934,57935,57936,57937,57938,57939,57940,57941,57942,57943,57944,57945,57946,57947,57948,57949,57950,57951,57952,57953,57954,57955,57956,57957,57958,57959,57960,57961,57962,57963,57964,57965,57966,57967,57968,57969,57970,57971,57972,57973,57974,57975,57976,57977,57978,57979,57980,57981,57982,57983,57984,57985,57986,57987,57988,57989,57990,57991,57992,57993,57994,57995,57996,57997,57998,57999,58e3,58001,40259,40260,40261,40262,40263,40264,40265,40266,40267,40268,40269,40270,40271,40272,40273,40274,40275,40276,40277,40278,40279,40280,40281,40282,40283,40284,40285,40286,40287,40288,40289,40290,40291,40292,40293,40294,40295,40296,40297,40298,40299,40300,40301,40302,40303,40304,40305,40306,40307,40308,40309,40310,40311,40312,40313,40314,40315,40316,40317,40318,40319,40320,40321,40322,40323,40324,40325,40326,40327,40328,40329,40330,40331,40332,40333,40334,40335,40336,40337,40338,40339,40340,40341,40342,40343,40344,40345,40346,40347,40348,40349,40350,40351,40352,40353,40354,58002,58003,58004,58005,58006,58007,58008,58009,58010,58011,58012,58013,58014,58015,58016,58017,58018,58019,58020,58021,58022,58023,58024,58025,58026,58027,58028,58029,58030,58031,58032,58033,58034,58035,58036,58037,58038,58039,58040,58041,58042,58043,58044,58045,58046,58047,58048,58049,58050,58051,58052,58053,58054,58055,58056,58057,58058,58059,58060,58061,58062,58063,58064,58065,58066,58067,58068,58069,58070,58071,58072,58073,58074,58075,58076,58077,58078,58079,58080,58081,58082,58083,58084,58085,58086,58087,58088,58089,58090,58091,58092,58093,58094,58095,40355,40356,40357,40358,40359,40360,40361,40362,40363,40364,40365,40366,40367,40368,40369,40370,40371,40372,40373,40374,40375,40376,40377,40378,40379,40380,40381,40382,40383,40384,40385,40386,40387,40388,40389,40390,40391,40392,40393,40394,40395,40396,40397,40398,40399,40400,40401,40402,40403,40404,40405,40406,40407,40408,40409,40410,40411,40412,40413,40414,40415,40416,40417,40418,40419,40420,40421,40422,40423,40424,40425,40426,40427,40428,40429,40430,40431,40432,40433,40434,40435,40436,40437,40438,40439,40440,40441,40442,40443,40444,40445,40446,40447,40448,40449,40450,58096,58097,58098,58099,58100,58101,58102,58103,58104,58105,58106,58107,58108,58109,58110,58111,58112,58113,58114,58115,58116,58117,58118,58119,58120,58121,58122,58123,58124,58125,58126,58127,58128,58129,58130,58131,58132,58133,58134,58135,58136,58137,58138,58139,58140,58141,58142,58143,58144,58145,58146,58147,58148,58149,58150,58151,58152,58153,58154,58155,58156,58157,58158,58159,58160,58161,58162,58163,58164,58165,58166,58167,58168,58169,58170,58171,58172,58173,58174,58175,58176,58177,58178,58179,58180,58181,58182,58183,58184,58185,58186,58187,58188,58189,40451,40452,40453,40454,40455,40456,40457,40458,40459,40460,40461,40462,40463,40464,40465,40466,40467,40468,40469,40470,40471,40472,40473,40474,40475,40476,40477,40478,40484,40487,40494,40496,40500,40507,40508,40512,40525,40528,40530,40531,40532,40534,40537,40541,40543,40544,40545,40546,40549,40558,40559,40562,40564,40565,40566,40567,40568,40569,40570,40571,40572,40573,40576,40577,40579,40580,40581,40582,40585,40586,40588,40589,40590,40591,40592,40593,40596,40597,40598,40599,40600,40601,40602,40603,40604,40606,40608,40609,40610,40611,40612,40613,40615,40616,40617,40618,58190,58191,58192,58193,58194,58195,58196,58197,58198,58199,58200,58201,58202,58203,58204,58205,58206,58207,58208,58209,58210,58211,58212,58213,58214,58215,58216,58217,58218,58219,58220,58221,58222,58223,58224,58225,58226,58227,58228,58229,58230,58231,58232,58233,58234,58235,58236,58237,58238,58239,58240,58241,58242,58243,58244,58245,58246,58247,58248,58249,58250,58251,58252,58253,58254,58255,58256,58257,58258,58259,58260,58261,58262,58263,58264,58265,58266,58267,58268,58269,58270,58271,58272,58273,58274,58275,58276,58277,58278,58279,58280,58281,58282,58283,40619,40620,40621,40622,40623,40624,40625,40626,40627,40629,40630,40631,40633,40634,40636,40639,40640,40641,40642,40643,40645,40646,40647,40648,40650,40651,40652,40656,40658,40659,40661,40662,40663,40665,40666,40670,40673,40675,40676,40678,40680,40683,40684,40685,40686,40688,40689,40690,40691,40692,40693,40694,40695,40696,40698,40701,40703,40704,40705,40706,40707,40708,40709,40710,40711,40712,40713,40714,40716,40719,40721,40722,40724,40725,40726,40728,40730,40731,40732,40733,40734,40735,40737,40739,40740,40741,40742,40743,40744,40745,40746,40747,40749,40750,40752,40753,58284,58285,58286,58287,58288,58289,58290,58291,58292,58293,58294,58295,58296,58297,58298,58299,58300,58301,58302,58303,58304,58305,58306,58307,58308,58309,58310,58311,58312,58313,58314,58315,58316,58317,58318,58319,58320,58321,58322,58323,58324,58325,58326,58327,58328,58329,58330,58331,58332,58333,58334,58335,58336,58337,58338,58339,58340,58341,58342,58343,58344,58345,58346,58347,58348,58349,58350,58351,58352,58353,58354,58355,58356,58357,58358,58359,58360,58361,58362,58363,58364,58365,58366,58367,58368,58369,58370,58371,58372,58373,58374,58375,58376,58377,40754,40755,40756,40757,40758,40760,40762,40764,40767,40768,40769,40770,40771,40773,40774,40775,40776,40777,40778,40779,40780,40781,40782,40783,40786,40787,40788,40789,40790,40791,40792,40793,40794,40795,40796,40797,40798,40799,40800,40801,40802,40803,40804,40805,40806,40807,40808,40809,40810,40811,40812,40813,40814,40815,40816,40817,40818,40819,40820,40821,40822,40823,40824,40825,40826,40827,40828,40829,40830,40833,40834,40845,40846,40847,40848,40849,40850,40851,40852,40853,40854,40855,40856,40860,40861,40862,40865,40866,40867,40868,40869,63788,63865,63893,63975,63985,58378,58379,58380,58381,58382,58383,58384,58385,58386,58387,58388,58389,58390,58391,58392,58393,58394,58395,58396,58397,58398,58399,58400,58401,58402,58403,58404,58405,58406,58407,58408,58409,58410,58411,58412,58413,58414,58415,58416,58417,58418,58419,58420,58421,58422,58423,58424,58425,58426,58427,58428,58429,58430,58431,58432,58433,58434,58435,58436,58437,58438,58439,58440,58441,58442,58443,58444,58445,58446,58447,58448,58449,58450,58451,58452,58453,58454,58455,58456,58457,58458,58459,58460,58461,58462,58463,58464,58465,58466,58467,58468,58469,58470,58471,64012,64013,64014,64015,64017,64019,64020,64024,64031,64032,64033,64035,64036,64039,64040,64041,11905,59414,59415,59416,11908,13427,13383,11912,11915,59422,13726,13850,13838,11916,11927,14702,14616,59430,14799,14815,14963,14800,59435,59436,15182,15470,15584,11943,59441,59442,11946,16470,16735,11950,17207,11955,11958,11959,59451,17329,17324,11963,17373,17622,18017,17996,59459,18211,18217,18300,18317,11978,18759,18810,18813,18818,18819,18821,18822,18847,18843,18871,18870,59476,59477,19619,19615,19616,19617,19575,19618,19731,19732,19733,19734,19735,19736,19737,19886,59492,58472,58473,58474,58475,58476,58477,58478,58479,58480,58481,58482,58483,58484,58485,58486,58487,58488,58489,58490,58491,58492,58493,58494,58495,58496,58497,58498,58499,58500,58501,58502,58503,58504,58505,58506,58507,58508,58509,58510,58511,58512,58513,58514,58515,58516,58517,58518,58519,58520,58521,58522,58523,58524,58525,58526,58527,58528,58529,58530,58531,58532,58533,58534,58535,58536,58537,58538,58539,58540,58541,58542,58543,58544,58545,58546,58547,58548,58549,58550,58551,58552,58553,58554,58555,58556,58557,58558,58559,58560,58561,58562,58563,58564,58565],"gb18030-ranges":[[0,128],[36,165],[38,169],[45,178],[50,184],[81,216],[89,226],[95,235],[96,238],[100,244],[103,248],[104,251],[105,253],[109,258],[126,276],[133,284],[148,300],[172,325],[175,329],[179,334],[208,364],[306,463],[307,465],[308,467],[309,469],[310,471],[311,473],[312,475],[313,477],[341,506],[428,594],[443,610],[544,712],[545,716],[558,730],[741,930],[742,938],[749,962],[750,970],[805,1026],[819,1104],[820,1106],[7922,8209],[7924,8215],[7925,8218],[7927,8222],[7934,8231],[7943,8241],[7944,8244],[7945,8246],[7950,8252],[8062,8365],[8148,8452],[8149,8454],[8152,8458],[8164,8471],[8174,8482],[8236,8556],[8240,8570],[8262,8596],[8264,8602],[8374,8713],[8380,8720],[8381,8722],[8384,8726],[8388,8731],[8390,8737],[8392,8740],[8393,8742],[8394,8748],[8396,8751],[8401,8760],[8406,8766],[8416,8777],[8419,8781],[8424,8787],[8437,8802],[8439,8808],[8445,8816],[8482,8854],[8485,8858],[8496,8870],[8521,8896],[8603,8979],[8936,9322],[8946,9372],[9046,9548],[9050,9588],[9063,9616],[9066,9622],[9076,9634],[9092,9652],[9100,9662],[9108,9672],[9111,9676],[9113,9680],[9131,9702],[9162,9735],[9164,9738],[9218,9793],[9219,9795],[11329,11906],[11331,11909],[11334,11913],[11336,11917],[11346,11928],[11361,11944],[11363,11947],[11366,11951],[11370,11956],[11372,11960],[11375,11964],[11389,11979],[11682,12284],[11686,12292],[11687,12312],[11692,12319],[11694,12330],[11714,12351],[11716,12436],[11723,12447],[11725,12535],[11730,12543],[11736,12586],[11982,12842],[11989,12850],[12102,12964],[12336,13200],[12348,13215],[12350,13218],[12384,13253],[12393,13263],[12395,13267],[12397,13270],[12510,13384],[12553,13428],[12851,13727],[12962,13839],[12973,13851],[13738,14617],[13823,14703],[13919,14801],[13933,14816],[14080,14964],[14298,15183],[14585,15471],[14698,15585],[15583,16471],[15847,16736],[16318,17208],[16434,17325],[16438,17330],[16481,17374],[16729,17623],[17102,17997],[17122,18018],[17315,18212],[17320,18218],[17402,18301],[17418,18318],[17859,18760],[17909,18811],[17911,18814],[17915,18820],[17916,18823],[17936,18844],[17939,18848],[17961,18872],[18664,19576],[18703,19620],[18814,19738],[18962,19887],[19043,40870],[33469,59244],[33470,59336],[33471,59367],[33484,59413],[33485,59417],[33490,59423],[33497,59431],[33501,59437],[33505,59443],[33513,59452],[33520,59460],[33536,59478],[33550,59493],[37845,63789],[37921,63866],[37948,63894],[38029,63976],[38038,63986],[38064,64016],[38065,64018],[38066,64021],[38069,64025],[38075,64034],[38076,64037],[38078,64042],[39108,65074],[39109,65093],[39113,65107],[39114,65112],[39115,65127],[39116,65132],[39265,65375],[39394,65510],[189e3,65536]],jis0208:[12288,12289,12290,65292,65294,12539,65306,65307,65311,65281,12443,12444,180,65344,168,65342,65507,65343,12541,12542,12445,12446,12291,20189,12293,12294,12295,12540,8213,8208,65295,65340,65374,8741,65372,8230,8229,8216,8217,8220,8221,65288,65289,12308,12309,65339,65341,65371,65373,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,65291,65293,177,215,247,65309,8800,65308,65310,8806,8807,8734,8756,9794,9792,176,8242,8243,8451,65509,65284,65504,65505,65285,65283,65286,65290,65312,167,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8251,12306,8594,8592,8593,8595,12307,null,null,null,null,null,null,null,null,null,null,null,8712,8715,8838,8839,8834,8835,8746,8745,null,null,null,null,null,null,null,null,8743,8744,65506,8658,8660,8704,8707,null,null,null,null,null,null,null,null,null,null,null,8736,8869,8978,8706,8711,8801,8786,8810,8811,8730,8765,8733,8757,8747,8748,null,null,null,null,null,null,null,8491,8240,9839,9837,9834,8224,8225,182,null,null,null,null,9711,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,null,null,null,null,null,null,null,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,null,null,null,null,null,null,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,null,null,null,null,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,null,null,null,null,null,null,null,null,null,null,null,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,null,null,null,null,null,null,null,null,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,null,null,null,null,null,null,null,null,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,null,null,null,null,null,null,null,null,null,null,null,null,null,9472,9474,9484,9488,9496,9492,9500,9516,9508,9524,9532,9473,9475,9487,9491,9499,9495,9507,9523,9515,9531,9547,9504,9519,9512,9527,9535,9501,9520,9509,9528,9538,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9322,9323,9324,9325,9326,9327,9328,9329,9330,9331,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,null,13129,13076,13090,13133,13080,13095,13059,13110,13137,13143,13069,13094,13091,13099,13130,13115,13212,13213,13214,13198,13199,13252,13217,null,null,null,null,null,null,null,null,13179,12317,12319,8470,13261,8481,12964,12965,12966,12967,12968,12849,12850,12857,13182,13181,13180,8786,8801,8747,8750,8721,8730,8869,8736,8735,8895,8757,8745,8746,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20124,21782,23043,38463,21696,24859,25384,23030,36898,33909,33564,31312,24746,25569,28197,26093,33894,33446,39925,26771,22311,26017,25201,23451,22992,34427,39156,32098,32190,39822,25110,31903,34999,23433,24245,25353,26263,26696,38343,38797,26447,20197,20234,20301,20381,20553,22258,22839,22996,23041,23561,24799,24847,24944,26131,26885,28858,30031,30064,31227,32173,32239,32963,33806,34915,35586,36949,36986,21307,20117,20133,22495,32946,37057,30959,19968,22769,28322,36920,31282,33576,33419,39983,20801,21360,21693,21729,22240,23035,24341,39154,28139,32996,34093,38498,38512,38560,38907,21515,21491,23431,28879,32701,36802,38632,21359,40284,31418,19985,30867,33276,28198,22040,21764,27421,34074,39995,23013,21417,28006,29916,38287,22082,20113,36939,38642,33615,39180,21473,21942,23344,24433,26144,26355,26628,27704,27891,27945,29787,30408,31310,38964,33521,34907,35424,37613,28082,30123,30410,39365,24742,35585,36234,38322,27022,21421,20870,22290,22576,22852,23476,24310,24616,25513,25588,27839,28436,28814,28948,29017,29141,29503,32257,33398,33489,34199,36960,37467,40219,22633,26044,27738,29989,20985,22830,22885,24448,24540,25276,26106,27178,27431,27572,29579,32705,35158,40236,40206,40644,23713,27798,33659,20740,23627,25014,33222,26742,29281,20057,20474,21368,24681,28201,31311,38899,19979,21270,20206,20309,20285,20385,20339,21152,21487,22025,22799,23233,23478,23521,31185,26247,26524,26550,27468,27827,28779,29634,31117,31166,31292,31623,33457,33499,33540,33655,33775,33747,34662,35506,22057,36008,36838,36942,38686,34442,20420,23784,25105,29273,30011,33253,33469,34558,36032,38597,39187,39381,20171,20250,35299,22238,22602,22730,24315,24555,24618,24724,24674,25040,25106,25296,25913,39745,26214,26800,28023,28784,30028,30342,32117,33445,34809,38283,38542,35997,20977,21182,22806,21683,23475,23830,24936,27010,28079,30861,33995,34903,35442,37799,39608,28012,39336,34521,22435,26623,34510,37390,21123,22151,21508,24275,25313,25785,26684,26680,27579,29554,30906,31339,35226,35282,36203,36611,37101,38307,38548,38761,23398,23731,27005,38989,38990,25499,31520,27179,27263,26806,39949,28511,21106,21917,24688,25324,27963,28167,28369,33883,35088,36676,19988,39993,21494,26907,27194,38788,26666,20828,31427,33970,37340,37772,22107,40232,26658,33541,33841,31909,21e3,33477,29926,20094,20355,20896,23506,21002,21208,21223,24059,21914,22570,23014,23436,23448,23515,24178,24185,24739,24863,24931,25022,25563,25954,26577,26707,26874,27454,27475,27735,28450,28567,28485,29872,29976,30435,30475,31487,31649,31777,32233,32566,32752,32925,33382,33694,35251,35532,36011,36996,37969,38291,38289,38306,38501,38867,39208,33304,20024,21547,23736,24012,29609,30284,30524,23721,32747,36107,38593,38929,38996,39e3,20225,20238,21361,21916,22120,22522,22855,23305,23492,23696,24076,24190,24524,25582,26426,26071,26082,26399,26827,26820,27231,24112,27589,27671,27773,30079,31048,23395,31232,32e3,24509,35215,35352,36020,36215,36556,36637,39138,39438,39740,20096,20605,20736,22931,23452,25135,25216,25836,27450,29344,30097,31047,32681,34811,35516,35696,25516,33738,38816,21513,21507,21931,26708,27224,35440,30759,26485,40653,21364,23458,33050,34384,36870,19992,20037,20167,20241,21450,21560,23470,24339,24613,25937,26429,27714,27762,27875,28792,29699,31350,31406,31496,32026,31998,32102,26087,29275,21435,23621,24040,25298,25312,25369,28192,34394,35377,36317,37624,28417,31142,39770,20136,20139,20140,20379,20384,20689,20807,31478,20849,20982,21332,21281,21375,21483,21932,22659,23777,24375,24394,24623,24656,24685,25375,25945,27211,27841,29378,29421,30703,33016,33029,33288,34126,37111,37857,38911,39255,39514,20208,20957,23597,26241,26989,23616,26354,26997,29577,26704,31873,20677,21220,22343,24062,37670,26020,27427,27453,29748,31105,31165,31563,32202,33465,33740,34943,35167,35641,36817,37329,21535,37504,20061,20534,21477,21306,29399,29590,30697,33510,36527,39366,39368,39378,20855,24858,34398,21936,31354,20598,23507,36935,38533,20018,27355,37351,23633,23624,25496,31391,27795,38772,36705,31402,29066,38536,31874,26647,32368,26705,37740,21234,21531,34219,35347,32676,36557,37089,21350,34952,31041,20418,20670,21009,20804,21843,22317,29674,22411,22865,24418,24452,24693,24950,24935,25001,25522,25658,25964,26223,26690,28179,30054,31293,31995,32076,32153,32331,32619,33550,33610,34509,35336,35427,35686,36605,38938,40335,33464,36814,39912,21127,25119,25731,28608,38553,26689,20625,27424,27770,28500,31348,32080,34880,35363,26376,20214,20537,20518,20581,20860,21048,21091,21927,22287,22533,23244,24314,25010,25080,25331,25458,26908,27177,29309,29356,29486,30740,30831,32121,30476,32937,35211,35609,36066,36562,36963,37749,38522,38997,39443,40568,20803,21407,21427,24187,24358,28187,28304,29572,29694,32067,33335,35328,35578,38480,20046,20491,21476,21628,22266,22993,23396,24049,24235,24359,25144,25925,26543,28246,29392,31946,34996,32929,32993,33776,34382,35463,36328,37431,38599,39015,40723,20116,20114,20237,21320,21577,21566,23087,24460,24481,24735,26791,27278,29786,30849,35486,35492,35703,37264,20062,39881,20132,20348,20399,20505,20502,20809,20844,21151,21177,21246,21402,21475,21521,21518,21897,22353,22434,22909,23380,23389,23439,24037,24039,24055,24184,24195,24218,24247,24344,24658,24908,25239,25304,25511,25915,26114,26179,26356,26477,26657,26775,27083,27743,27946,28009,28207,28317,30002,30343,30828,31295,31968,32005,32024,32094,32177,32789,32771,32943,32945,33108,33167,33322,33618,34892,34913,35611,36002,36092,37066,37237,37489,30783,37628,38308,38477,38917,39321,39640,40251,21083,21163,21495,21512,22741,25335,28640,35946,36703,40633,20811,21051,21578,22269,31296,37239,40288,40658,29508,28425,33136,29969,24573,24794,39592,29403,36796,27492,38915,20170,22256,22372,22718,23130,24680,25031,26127,26118,26681,26801,28151,30165,32058,33390,39746,20123,20304,21449,21766,23919,24038,24046,26619,27801,29811,30722,35408,37782,35039,22352,24231,25387,20661,20652,20877,26368,21705,22622,22971,23472,24425,25165,25505,26685,27507,28168,28797,37319,29312,30741,30758,31085,25998,32048,33756,35009,36617,38555,21092,22312,26448,32618,36001,20916,22338,38442,22586,27018,32948,21682,23822,22524,30869,40442,20316,21066,21643,25662,26152,26388,26613,31364,31574,32034,37679,26716,39853,31545,21273,20874,21047,23519,25334,25774,25830,26413,27578,34217,38609,30352,39894,25420,37638,39851,30399,26194,19977,20632,21442,23665,24808,25746,25955,26719,29158,29642,29987,31639,32386,34453,35715,36059,37240,39184,26028,26283,27531,20181,20180,20282,20351,21050,21496,21490,21987,22235,22763,22987,22985,23039,23376,23629,24066,24107,24535,24605,25351,25903,23388,26031,26045,26088,26525,27490,27515,27663,29509,31049,31169,31992,32025,32043,32930,33026,33267,35222,35422,35433,35430,35468,35566,36039,36060,38604,39164,27503,20107,20284,20365,20816,23383,23546,24904,25345,26178,27425,28363,27835,29246,29885,30164,30913,31034,32780,32819,33258,33940,36766,27728,40575,24335,35672,40235,31482,36600,23437,38635,19971,21489,22519,22833,23241,23460,24713,28287,28422,30142,36074,23455,34048,31712,20594,26612,33437,23649,34122,32286,33294,20889,23556,25448,36198,26012,29038,31038,32023,32773,35613,36554,36974,34503,37034,20511,21242,23610,26451,28796,29237,37196,37320,37675,33509,23490,24369,24825,20027,21462,23432,25163,26417,27530,29417,29664,31278,33131,36259,37202,39318,20754,21463,21610,23551,25480,27193,32172,38656,22234,21454,21608,23447,23601,24030,20462,24833,25342,27954,31168,31179,32066,32333,32722,33261,33311,33936,34886,35186,35728,36468,36655,36913,37195,37228,38598,37276,20160,20303,20805,21313,24467,25102,26580,27713,28171,29539,32294,37325,37507,21460,22809,23487,28113,31069,32302,31899,22654,29087,20986,34899,36848,20426,23803,26149,30636,31459,33308,39423,20934,24490,26092,26991,27529,28147,28310,28516,30462,32020,24033,36981,37255,38918,20966,21021,25152,26257,26329,28186,24246,32210,32626,26360,34223,34295,35576,21161,21465,22899,24207,24464,24661,37604,38500,20663,20767,21213,21280,21319,21484,21736,21830,21809,22039,22888,22974,23100,23477,23558,23567,23569,23578,24196,24202,24288,24432,25215,25220,25307,25484,25463,26119,26124,26157,26230,26494,26786,27167,27189,27836,28040,28169,28248,28988,28966,29031,30151,30465,30813,30977,31077,31216,31456,31505,31911,32057,32918,33750,33931,34121,34909,35059,35359,35388,35412,35443,35937,36062,37284,37478,37758,37912,38556,38808,19978,19976,19998,20055,20887,21104,22478,22580,22732,23330,24120,24773,25854,26465,26454,27972,29366,30067,31331,33976,35698,37304,37664,22065,22516,39166,25325,26893,27542,29165,32340,32887,33394,35302,39135,34645,36785,23611,20280,20449,20405,21767,23072,23517,23529,24515,24910,25391,26032,26187,26862,27035,28024,28145,30003,30137,30495,31070,31206,32051,33251,33455,34218,35242,35386,36523,36763,36914,37341,38663,20154,20161,20995,22645,22764,23563,29978,23613,33102,35338,36805,38499,38765,31525,35535,38920,37218,22259,21416,36887,21561,22402,24101,25512,27700,28810,30561,31883,32736,34928,36930,37204,37648,37656,38543,29790,39620,23815,23913,25968,26530,36264,38619,25454,26441,26905,33733,38935,38592,35070,28548,25722,23544,19990,28716,30045,26159,20932,21046,21218,22995,24449,24615,25104,25919,25972,26143,26228,26866,26646,27491,28165,29298,29983,30427,31934,32854,22768,35069,35199,35488,35475,35531,36893,37266,38738,38745,25993,31246,33030,38587,24109,24796,25114,26021,26132,26512,30707,31309,31821,32318,33034,36012,36196,36321,36447,30889,20999,25305,25509,25666,25240,35373,31363,31680,35500,38634,32118,33292,34633,20185,20808,21315,21344,23459,23554,23574,24029,25126,25159,25776,26643,26676,27849,27973,27927,26579,28508,29006,29053,26059,31359,31661,32218,32330,32680,33146,33307,33337,34214,35438,36046,36341,36984,36983,37549,37521,38275,39854,21069,21892,28472,28982,20840,31109,32341,33203,31950,22092,22609,23720,25514,26366,26365,26970,29401,30095,30094,30990,31062,31199,31895,32032,32068,34311,35380,38459,36961,40736,20711,21109,21452,21474,20489,21930,22766,22863,29245,23435,23652,21277,24803,24819,25436,25475,25407,25531,25805,26089,26361,24035,27085,27133,28437,29157,20105,30185,30456,31379,31967,32207,32156,32865,33609,33624,33900,33980,34299,35013,36208,36865,36973,37783,38684,39442,20687,22679,24974,33235,34101,36104,36896,20419,20596,21063,21363,24687,25417,26463,28204,36275,36895,20439,23646,36042,26063,32154,21330,34966,20854,25539,23384,23403,23562,25613,26449,36956,20182,22810,22826,27760,35409,21822,22549,22949,24816,25171,26561,33333,26965,38464,39364,39464,20307,22534,23550,32784,23729,24111,24453,24608,24907,25140,26367,27888,28382,32974,33151,33492,34955,36024,36864,36910,38538,40667,39899,20195,21488,22823,31532,37261,38988,40441,28381,28711,21331,21828,23429,25176,25246,25299,27810,28655,29730,35351,37944,28609,35582,33592,20967,34552,21482,21481,20294,36948,36784,22890,33073,24061,31466,36799,26842,35895,29432,40008,27197,35504,20025,21336,22022,22374,25285,25506,26086,27470,28129,28251,28845,30701,31471,31658,32187,32829,32966,34507,35477,37723,22243,22727,24382,26029,26262,27264,27573,30007,35527,20516,30693,22320,24347,24677,26234,27744,30196,31258,32622,33268,34584,36933,39347,31689,30044,31481,31569,33988,36880,31209,31378,33590,23265,30528,20013,20210,23449,24544,25277,26172,26609,27880,34411,34935,35387,37198,37619,39376,27159,28710,29482,33511,33879,36015,19969,20806,20939,21899,23541,24086,24115,24193,24340,24373,24427,24500,25074,25361,26274,26397,28526,29266,30010,30522,32884,33081,33144,34678,35519,35548,36229,36339,37530,38263,38914,40165,21189,25431,30452,26389,27784,29645,36035,37806,38515,27941,22684,26894,27084,36861,37786,30171,36890,22618,26626,25524,27131,20291,28460,26584,36795,34086,32180,37716,26943,28528,22378,22775,23340,32044,29226,21514,37347,40372,20141,20302,20572,20597,21059,35998,21576,22564,23450,24093,24213,24237,24311,24351,24716,25269,25402,25552,26799,27712,30855,31118,31243,32224,33351,35330,35558,36420,36883,37048,37165,37336,40718,27877,25688,25826,25973,28404,30340,31515,36969,37841,28346,21746,24505,25764,36685,36845,37444,20856,22635,22825,23637,24215,28155,32399,29980,36028,36578,39003,28857,20253,27583,28593,3e4,38651,20814,21520,22581,22615,22956,23648,24466,26007,26460,28193,30331,33759,36077,36884,37117,37709,30757,30778,21162,24230,22303,22900,24594,20498,20826,20908,20941,20992,21776,22612,22616,22871,23445,23798,23947,24764,25237,25645,26481,26691,26812,26847,30423,28120,28271,28059,28783,29128,24403,30168,31095,31561,31572,31570,31958,32113,21040,33891,34153,34276,35342,35588,35910,36367,36867,36879,37913,38518,38957,39472,38360,20685,21205,21516,22530,23566,24999,25758,27934,30643,31461,33012,33796,36947,37509,23776,40199,21311,24471,24499,28060,29305,30563,31167,31716,27602,29420,35501,26627,27233,20984,31361,26932,23626,40182,33515,23493,37193,28702,22136,23663,24775,25958,27788,35930,36929,38931,21585,26311,37389,22856,37027,20869,20045,20970,34201,35598,28760,25466,37707,26978,39348,32260,30071,21335,26976,36575,38627,27741,20108,23612,24336,36841,21250,36049,32905,34425,24319,26085,20083,20837,22914,23615,38894,20219,22922,24525,35469,28641,31152,31074,23527,33905,29483,29105,24180,24565,25467,25754,29123,31896,20035,24316,20043,22492,22178,24745,28611,32013,33021,33075,33215,36786,35223,34468,24052,25226,25773,35207,26487,27874,27966,29750,30772,23110,32629,33453,39340,20467,24259,25309,25490,25943,26479,30403,29260,32972,32954,36649,37197,20493,22521,23186,26757,26995,29028,29437,36023,22770,36064,38506,36889,34687,31204,30695,33833,20271,21093,21338,25293,26575,27850,30333,31636,31893,33334,34180,36843,26333,28448,29190,32283,33707,39361,40614,20989,31665,30834,31672,32903,31560,27368,24161,32908,30033,30048,20843,37474,28300,30330,37271,39658,20240,32624,25244,31567,38309,40169,22138,22617,34532,38588,20276,21028,21322,21453,21467,24070,25644,26001,26495,27710,27726,29256,29359,29677,30036,32321,33324,34281,36009,31684,37318,29033,38930,39151,25405,26217,30058,30436,30928,34115,34542,21290,21329,21542,22915,24199,24444,24754,25161,25209,25259,26e3,27604,27852,30130,30382,30865,31192,32203,32631,32933,34987,35513,36027,36991,38750,39131,27147,31800,20633,23614,24494,26503,27608,29749,30473,32654,40763,26570,31255,21305,30091,39661,24422,33181,33777,32920,24380,24517,30050,31558,36924,26727,23019,23195,32016,30334,35628,20469,24426,27161,27703,28418,29922,31080,34920,35413,35961,24287,25551,30149,31186,33495,37672,37618,33948,34541,39981,21697,24428,25996,27996,28693,36007,36051,38971,25935,29942,19981,20184,22496,22827,23142,23500,20904,24067,24220,24598,25206,25975,26023,26222,28014,29238,31526,33104,33178,33433,35676,36e3,36070,36212,38428,38468,20398,25771,27494,33310,33889,34154,37096,23553,26963,39080,33914,34135,20239,21103,24489,24133,26381,31119,33145,35079,35206,28149,24343,25173,27832,20175,29289,39826,20998,21563,22132,22707,24996,25198,28954,22894,31881,31966,32027,38640,25991,32862,19993,20341,20853,22592,24163,24179,24330,26564,20006,34109,38281,38491,31859,38913,20731,22721,30294,30887,21029,30629,34065,31622,20559,22793,29255,31687,32232,36794,36820,36941,20415,21193,23081,24321,38829,20445,33303,37610,22275,25429,27497,29995,35036,36628,31298,21215,22675,24917,25098,26286,27597,31807,33769,20515,20472,21253,21574,22577,22857,23453,23792,23791,23849,24214,25265,25447,25918,26041,26379,27861,27873,28921,30770,32299,32990,33459,33804,34028,34562,35090,35370,35914,37030,37586,39165,40179,40300,20047,20129,20621,21078,22346,22952,24125,24536,24537,25151,26292,26395,26576,26834,20882,32033,32938,33192,35584,35980,36031,37502,38450,21536,38956,21271,20693,21340,22696,25778,26420,29287,30566,31302,37350,21187,27809,27526,22528,24140,22868,26412,32763,20961,30406,25705,30952,39764,40635,22475,22969,26151,26522,27598,21737,27097,24149,33180,26517,39850,26622,40018,26717,20134,20451,21448,25273,26411,27819,36804,20397,32365,40639,19975,24930,28288,28459,34067,21619,26410,39749,24051,31637,23724,23494,34588,28234,34001,31252,33032,22937,31885,27665,30496,21209,22818,28961,29279,30683,38695,40289,26891,23167,23064,20901,21517,21629,26126,30431,36855,37528,40180,23018,29277,28357,20813,26825,32191,32236,38754,40634,25720,27169,33538,22916,23391,27611,29467,30450,32178,32791,33945,20786,26408,40665,30446,26466,21247,39173,23588,25147,31870,36016,21839,24758,32011,38272,21249,20063,20918,22812,29242,32822,37326,24357,30690,21380,24441,32004,34220,35379,36493,38742,26611,34222,37971,24841,24840,27833,30290,35565,36664,21807,20305,20778,21191,21451,23461,24189,24736,24962,25558,26377,26586,28263,28044,29494,29495,30001,31056,35029,35480,36938,37009,37109,38596,34701,22805,20104,20313,19982,35465,36671,38928,20653,24188,22934,23481,24248,25562,25594,25793,26332,26954,27096,27915,28342,29076,29992,31407,32650,32768,33865,33993,35201,35617,36362,36965,38525,39178,24958,25233,27442,27779,28020,32716,32764,28096,32645,34746,35064,26469,33713,38972,38647,27931,32097,33853,37226,20081,21365,23888,27396,28651,34253,34349,35239,21033,21519,23653,26446,26792,29702,29827,30178,35023,35041,37324,38626,38520,24459,29575,31435,33870,25504,30053,21129,27969,28316,29705,30041,30827,31890,38534,31452,40845,20406,24942,26053,34396,20102,20142,20698,20001,20940,23534,26009,26753,28092,29471,30274,30637,31260,31975,33391,35538,36988,37327,38517,38936,21147,32209,20523,21400,26519,28107,29136,29747,33256,36650,38563,40023,40607,29792,22593,28057,32047,39006,20196,20278,20363,20919,21169,23994,24604,29618,31036,33491,37428,38583,38646,38666,40599,40802,26278,27508,21015,21155,28872,35010,24265,24651,24976,28451,29001,31806,32244,32879,34030,36899,37676,21570,39791,27347,28809,36034,36335,38706,21172,23105,24266,24324,26391,27004,27028,28010,28431,29282,29436,31725,32769,32894,34635,37070,20845,40595,31108,32907,37682,35542,20525,21644,35441,27498,36036,33031,24785,26528,40434,20121,20120,39952,35435,34241,34152,26880,28286,30871,33109,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,24332,19984,19989,20010,20017,20022,20028,20031,20034,20054,20056,20098,20101,35947,20106,33298,24333,20110,20126,20127,20128,20130,20144,20147,20150,20174,20173,20164,20166,20162,20183,20190,20205,20191,20215,20233,20314,20272,20315,20317,20311,20295,20342,20360,20367,20376,20347,20329,20336,20369,20335,20358,20374,20760,20436,20447,20430,20440,20443,20433,20442,20432,20452,20453,20506,20520,20500,20522,20517,20485,20252,20470,20513,20521,20524,20478,20463,20497,20486,20547,20551,26371,20565,20560,20552,20570,20566,20588,20600,20608,20634,20613,20660,20658,20681,20682,20659,20674,20694,20702,20709,20717,20707,20718,20729,20725,20745,20737,20738,20758,20757,20756,20762,20769,20794,20791,20796,20795,20799,20800,20818,20812,20820,20834,31480,20841,20842,20846,20864,20866,22232,20876,20873,20879,20881,20883,20885,20886,20900,20902,20898,20905,20906,20907,20915,20913,20914,20912,20917,20925,20933,20937,20955,20960,34389,20969,20973,20976,20981,20990,20996,21003,21012,21006,21031,21034,21038,21043,21049,21071,21060,21067,21068,21086,21076,21098,21108,21097,21107,21119,21117,21133,21140,21138,21105,21128,21137,36776,36775,21164,21165,21180,21173,21185,21197,21207,21214,21219,21222,39149,21216,21235,21237,21240,21241,21254,21256,30008,21261,21264,21263,21269,21274,21283,21295,21297,21299,21304,21312,21318,21317,19991,21321,21325,20950,21342,21353,21358,22808,21371,21367,21378,21398,21408,21414,21413,21422,21424,21430,21443,31762,38617,21471,26364,29166,21486,21480,21485,21498,21505,21565,21568,21548,21549,21564,21550,21558,21545,21533,21582,21647,21621,21646,21599,21617,21623,21616,21650,21627,21632,21622,21636,21648,21638,21703,21666,21688,21669,21676,21700,21704,21672,21675,21698,21668,21694,21692,21720,21733,21734,21775,21780,21757,21742,21741,21754,21730,21817,21824,21859,21836,21806,21852,21829,21846,21847,21816,21811,21853,21913,21888,21679,21898,21919,21883,21886,21912,21918,21934,21884,21891,21929,21895,21928,21978,21957,21983,21956,21980,21988,21972,22036,22007,22038,22014,22013,22043,22009,22094,22096,29151,22068,22070,22066,22072,22123,22116,22063,22124,22122,22150,22144,22154,22176,22164,22159,22181,22190,22198,22196,22210,22204,22209,22211,22208,22216,22222,22225,22227,22231,22254,22265,22272,22271,22276,22281,22280,22283,22285,22291,22296,22294,21959,22300,22310,22327,22328,22350,22331,22336,22351,22377,22464,22408,22369,22399,22409,22419,22432,22451,22436,22442,22448,22467,22470,22484,22482,22483,22538,22486,22499,22539,22553,22557,22642,22561,22626,22603,22640,27584,22610,22589,22649,22661,22713,22687,22699,22714,22750,22715,22712,22702,22725,22739,22737,22743,22745,22744,22757,22748,22756,22751,22767,22778,22777,22779,22780,22781,22786,22794,22800,22811,26790,22821,22828,22829,22834,22840,22846,31442,22869,22864,22862,22874,22872,22882,22880,22887,22892,22889,22904,22913,22941,20318,20395,22947,22962,22982,23016,23004,22925,23001,23002,23077,23071,23057,23068,23049,23066,23104,23148,23113,23093,23094,23138,23146,23194,23228,23230,23243,23234,23229,23267,23255,23270,23273,23254,23290,23291,23308,23307,23318,23346,23248,23338,23350,23358,23363,23365,23360,23377,23381,23386,23387,23397,23401,23408,23411,23413,23416,25992,23418,23424,23427,23462,23480,23491,23495,23497,23508,23504,23524,23526,23522,23518,23525,23531,23536,23542,23539,23557,23559,23560,23565,23571,23584,23586,23592,23608,23609,23617,23622,23630,23635,23632,23631,23409,23660,23662,20066,23670,23673,23692,23697,23700,22939,23723,23739,23734,23740,23735,23749,23742,23751,23769,23785,23805,23802,23789,23948,23786,23819,23829,23831,23900,23839,23835,23825,23828,23842,23834,23833,23832,23884,23890,23886,23883,23916,23923,23926,23943,23940,23938,23970,23965,23980,23982,23997,23952,23991,23996,24009,24013,24019,24018,24022,24027,24043,24050,24053,24075,24090,24089,24081,24091,24118,24119,24132,24131,24128,24142,24151,24148,24159,24162,24164,24135,24181,24182,24186,40636,24191,24224,24257,24258,24264,24272,24271,24278,24291,24285,24282,24283,24290,24289,24296,24297,24300,24305,24307,24304,24308,24312,24318,24323,24329,24413,24412,24331,24337,24342,24361,24365,24376,24385,24392,24396,24398,24367,24401,24406,24407,24409,24417,24429,24435,24439,24451,24450,24447,24458,24456,24465,24455,24478,24473,24472,24480,24488,24493,24508,24534,24571,24548,24568,24561,24541,24755,24575,24609,24672,24601,24592,24617,24590,24625,24603,24597,24619,24614,24591,24634,24666,24641,24682,24695,24671,24650,24646,24653,24675,24643,24676,24642,24684,24683,24665,24705,24717,24807,24707,24730,24708,24731,24726,24727,24722,24743,24715,24801,24760,24800,24787,24756,24560,24765,24774,24757,24792,24909,24853,24838,24822,24823,24832,24820,24826,24835,24865,24827,24817,24845,24846,24903,24894,24872,24871,24906,24895,24892,24876,24884,24893,24898,24900,24947,24951,24920,24921,24922,24939,24948,24943,24933,24945,24927,24925,24915,24949,24985,24982,24967,25004,24980,24986,24970,24977,25003,25006,25036,25034,25033,25079,25032,25027,25030,25018,25035,32633,25037,25062,25059,25078,25082,25076,25087,25085,25084,25086,25088,25096,25097,25101,25100,25108,25115,25118,25121,25130,25134,25136,25138,25139,25153,25166,25182,25187,25179,25184,25192,25212,25218,25225,25214,25234,25235,25238,25300,25219,25236,25303,25297,25275,25295,25343,25286,25812,25288,25308,25292,25290,25282,25287,25243,25289,25356,25326,25329,25383,25346,25352,25327,25333,25424,25406,25421,25628,25423,25494,25486,25472,25515,25462,25507,25487,25481,25503,25525,25451,25449,25534,25577,25536,25542,25571,25545,25554,25590,25540,25622,25652,25606,25619,25638,25654,25885,25623,25640,25615,25703,25711,25718,25678,25898,25749,25747,25765,25769,25736,25788,25818,25810,25797,25799,25787,25816,25794,25841,25831,33289,25824,25825,25260,25827,25839,25900,25846,25844,25842,25850,25856,25853,25880,25884,25861,25892,25891,25899,25908,25909,25911,25910,25912,30027,25928,25942,25941,25933,25944,25950,25949,25970,25976,25986,25987,35722,26011,26015,26027,26039,26051,26054,26049,26052,26060,26066,26075,26073,26080,26081,26097,26482,26122,26115,26107,26483,26165,26166,26164,26140,26191,26180,26185,26177,26206,26205,26212,26215,26216,26207,26210,26224,26243,26248,26254,26249,26244,26264,26269,26305,26297,26313,26302,26300,26308,26296,26326,26330,26336,26175,26342,26345,26352,26357,26359,26383,26390,26398,26406,26407,38712,26414,26431,26422,26433,26424,26423,26438,26462,26464,26457,26467,26468,26505,26480,26537,26492,26474,26508,26507,26534,26529,26501,26551,26607,26548,26604,26547,26601,26552,26596,26590,26589,26594,26606,26553,26574,26566,26599,27292,26654,26694,26665,26688,26701,26674,26702,26803,26667,26713,26723,26743,26751,26783,26767,26797,26772,26781,26779,26755,27310,26809,26740,26805,26784,26810,26895,26765,26750,26881,26826,26888,26840,26914,26918,26849,26892,26829,26836,26855,26837,26934,26898,26884,26839,26851,26917,26873,26848,26863,26920,26922,26906,26915,26913,26822,27001,26999,26972,27e3,26987,26964,27006,26990,26937,26996,26941,26969,26928,26977,26974,26973,27009,26986,27058,27054,27088,27071,27073,27091,27070,27086,23528,27082,27101,27067,27075,27047,27182,27025,27040,27036,27029,27060,27102,27112,27138,27163,27135,27402,27129,27122,27111,27141,27057,27166,27117,27156,27115,27146,27154,27329,27171,27155,27204,27148,27250,27190,27256,27207,27234,27225,27238,27208,27192,27170,27280,27277,27296,27268,27298,27299,27287,34327,27323,27331,27330,27320,27315,27308,27358,27345,27359,27306,27354,27370,27387,27397,34326,27386,27410,27414,39729,27423,27448,27447,30428,27449,39150,27463,27459,27465,27472,27481,27476,27483,27487,27489,27512,27513,27519,27520,27524,27523,27533,27544,27541,27550,27556,27562,27563,27567,27570,27569,27571,27575,27580,27590,27595,27603,27615,27628,27627,27635,27631,40638,27656,27667,27668,27675,27684,27683,27742,27733,27746,27754,27778,27789,27802,27777,27803,27774,27752,27763,27794,27792,27844,27889,27859,27837,27863,27845,27869,27822,27825,27838,27834,27867,27887,27865,27882,27935,34893,27958,27947,27965,27960,27929,27957,27955,27922,27916,28003,28051,28004,27994,28025,27993,28046,28053,28644,28037,28153,28181,28170,28085,28103,28134,28088,28102,28140,28126,28108,28136,28114,28101,28154,28121,28132,28117,28138,28142,28205,28270,28206,28185,28274,28255,28222,28195,28267,28203,28278,28237,28191,28227,28218,28238,28196,28415,28189,28216,28290,28330,28312,28361,28343,28371,28349,28335,28356,28338,28372,28373,28303,28325,28354,28319,28481,28433,28748,28396,28408,28414,28479,28402,28465,28399,28466,28364,28478,28435,28407,28550,28538,28536,28545,28544,28527,28507,28659,28525,28546,28540,28504,28558,28561,28610,28518,28595,28579,28577,28580,28601,28614,28586,28639,28629,28652,28628,28632,28657,28654,28635,28681,28683,28666,28689,28673,28687,28670,28699,28698,28532,28701,28696,28703,28720,28734,28722,28753,28771,28825,28818,28847,28913,28844,28856,28851,28846,28895,28875,28893,28889,28937,28925,28956,28953,29029,29013,29064,29030,29026,29004,29014,29036,29071,29179,29060,29077,29096,29100,29143,29113,29118,29138,29129,29140,29134,29152,29164,29159,29173,29180,29177,29183,29197,29200,29211,29224,29229,29228,29232,29234,29243,29244,29247,29248,29254,29259,29272,29300,29310,29314,29313,29319,29330,29334,29346,29351,29369,29362,29379,29382,29380,29390,29394,29410,29408,29409,29433,29431,20495,29463,29450,29468,29462,29469,29492,29487,29481,29477,29502,29518,29519,40664,29527,29546,29544,29552,29560,29557,29563,29562,29640,29619,29646,29627,29632,29669,29678,29662,29858,29701,29807,29733,29688,29746,29754,29781,29759,29791,29785,29761,29788,29801,29808,29795,29802,29814,29822,29835,29854,29863,29898,29903,29908,29681,29920,29923,29927,29929,29934,29938,29936,29937,29944,29943,29956,29955,29957,29964,29966,29965,29973,29971,29982,29990,29996,30012,30020,30029,30026,30025,30043,30022,30042,30057,30052,30055,30059,30061,30072,30070,30086,30087,30068,30090,30089,30082,30100,30106,30109,30117,30115,30146,30131,30147,30133,30141,30136,30140,30129,30157,30154,30162,30169,30179,30174,30206,30207,30204,30209,30192,30202,30194,30195,30219,30221,30217,30239,30247,30240,30241,30242,30244,30260,30256,30267,30279,30280,30278,30300,30296,30305,30306,30312,30313,30314,30311,30316,30320,30322,30326,30328,30332,30336,30339,30344,30347,30350,30358,30355,30361,30362,30384,30388,30392,30393,30394,30402,30413,30422,30418,30430,30433,30437,30439,30442,34351,30459,30472,30471,30468,30505,30500,30494,30501,30502,30491,30519,30520,30535,30554,30568,30571,30555,30565,30591,30590,30585,30606,30603,30609,30624,30622,30640,30646,30649,30655,30652,30653,30651,30663,30669,30679,30682,30684,30691,30702,30716,30732,30738,31014,30752,31018,30789,30862,30836,30854,30844,30874,30860,30883,30901,30890,30895,30929,30918,30923,30932,30910,30908,30917,30922,30956,30951,30938,30973,30964,30983,30994,30993,31001,31020,31019,31040,31072,31063,31071,31066,31061,31059,31098,31103,31114,31133,31143,40779,31146,31150,31155,31161,31162,31177,31189,31207,31212,31201,31203,31240,31245,31256,31257,31264,31263,31104,31281,31291,31294,31287,31299,31319,31305,31329,31330,31337,40861,31344,31353,31357,31368,31383,31381,31384,31382,31401,31432,31408,31414,31429,31428,31423,36995,31431,31434,31437,31439,31445,31443,31449,31450,31453,31457,31458,31462,31469,31472,31490,31503,31498,31494,31539,31512,31513,31518,31541,31528,31542,31568,31610,31492,31565,31499,31564,31557,31605,31589,31604,31591,31600,31601,31596,31598,31645,31640,31647,31629,31644,31642,31627,31634,31631,31581,31641,31691,31681,31692,31695,31668,31686,31709,31721,31761,31764,31718,31717,31840,31744,31751,31763,31731,31735,31767,31757,31734,31779,31783,31786,31775,31799,31787,31805,31820,31811,31828,31823,31808,31824,31832,31839,31844,31830,31845,31852,31861,31875,31888,31908,31917,31906,31915,31905,31912,31923,31922,31921,31918,31929,31933,31936,31941,31938,31960,31954,31964,31970,39739,31983,31986,31988,31990,31994,32006,32002,32028,32021,32010,32069,32075,32046,32050,32063,32053,32070,32115,32086,32078,32114,32104,32110,32079,32099,32147,32137,32091,32143,32125,32155,32186,32174,32163,32181,32199,32189,32171,32317,32162,32175,32220,32184,32159,32176,32216,32221,32228,32222,32251,32242,32225,32261,32266,32291,32289,32274,32305,32287,32265,32267,32290,32326,32358,32315,32309,32313,32323,32311,32306,32314,32359,32349,32342,32350,32345,32346,32377,32362,32361,32380,32379,32387,32213,32381,36782,32383,32392,32393,32396,32402,32400,32403,32404,32406,32398,32411,32412,32568,32570,32581,32588,32589,32590,32592,32593,32597,32596,32600,32607,32608,32616,32617,32615,32632,32642,32646,32643,32648,32647,32652,32660,32670,32669,32666,32675,32687,32690,32697,32686,32694,32696,35697,32709,32710,32714,32725,32724,32737,32742,32745,32755,32761,39132,32774,32772,32779,32786,32792,32793,32796,32801,32808,32831,32827,32842,32838,32850,32856,32858,32863,32866,32872,32883,32882,32880,32886,32889,32893,32895,32900,32902,32901,32923,32915,32922,32941,20880,32940,32987,32997,32985,32989,32964,32986,32982,33033,33007,33009,33051,33065,33059,33071,33099,38539,33094,33086,33107,33105,33020,33137,33134,33125,33126,33140,33155,33160,33162,33152,33154,33184,33173,33188,33187,33119,33171,33193,33200,33205,33214,33208,33213,33216,33218,33210,33225,33229,33233,33241,33240,33224,33242,33247,33248,33255,33274,33275,33278,33281,33282,33285,33287,33290,33293,33296,33302,33321,33323,33336,33331,33344,33369,33368,33373,33370,33375,33380,33378,33384,33386,33387,33326,33393,33399,33400,33406,33421,33426,33451,33439,33467,33452,33505,33507,33503,33490,33524,33523,33530,33683,33539,33531,33529,33502,33542,33500,33545,33497,33589,33588,33558,33586,33585,33600,33593,33616,33605,33583,33579,33559,33560,33669,33690,33706,33695,33698,33686,33571,33678,33671,33674,33660,33717,33651,33653,33696,33673,33704,33780,33811,33771,33742,33789,33795,33752,33803,33729,33783,33799,33760,33778,33805,33826,33824,33725,33848,34054,33787,33901,33834,33852,34138,33924,33911,33899,33965,33902,33922,33897,33862,33836,33903,33913,33845,33994,33890,33977,33983,33951,34009,33997,33979,34010,34e3,33985,33990,34006,33953,34081,34047,34036,34071,34072,34092,34079,34069,34068,34044,34112,34147,34136,34120,34113,34306,34123,34133,34176,34212,34184,34193,34186,34216,34157,34196,34203,34282,34183,34204,34167,34174,34192,34249,34234,34255,34233,34256,34261,34269,34277,34268,34297,34314,34323,34315,34302,34298,34310,34338,34330,34352,34367,34381,20053,34388,34399,34407,34417,34451,34467,34473,34474,34443,34444,34486,34479,34500,34502,34480,34505,34851,34475,34516,34526,34537,34540,34527,34523,34543,34578,34566,34568,34560,34563,34555,34577,34569,34573,34553,34570,34612,34623,34615,34619,34597,34601,34586,34656,34655,34680,34636,34638,34676,34647,34664,34670,34649,34643,34659,34666,34821,34722,34719,34690,34735,34763,34749,34752,34768,38614,34731,34756,34739,34759,34758,34747,34799,34802,34784,34831,34829,34814,34806,34807,34830,34770,34833,34838,34837,34850,34849,34865,34870,34873,34855,34875,34884,34882,34898,34905,34910,34914,34923,34945,34942,34974,34933,34941,34997,34930,34946,34967,34962,34990,34969,34978,34957,34980,34992,35007,34993,35011,35012,35028,35032,35033,35037,35065,35074,35068,35060,35048,35058,35076,35084,35082,35091,35139,35102,35109,35114,35115,35137,35140,35131,35126,35128,35148,35101,35168,35166,35174,35172,35181,35178,35183,35188,35191,35198,35203,35208,35210,35219,35224,35233,35241,35238,35244,35247,35250,35258,35261,35263,35264,35290,35292,35293,35303,35316,35320,35331,35350,35344,35340,35355,35357,35365,35382,35393,35419,35410,35398,35400,35452,35437,35436,35426,35461,35458,35460,35496,35489,35473,35493,35494,35482,35491,35524,35533,35522,35546,35563,35571,35559,35556,35569,35604,35552,35554,35575,35550,35547,35596,35591,35610,35553,35606,35600,35607,35616,35635,38827,35622,35627,35646,35624,35649,35660,35663,35662,35657,35670,35675,35674,35691,35679,35692,35695,35700,35709,35712,35724,35726,35730,35731,35734,35737,35738,35898,35905,35903,35912,35916,35918,35920,35925,35938,35948,35960,35962,35970,35977,35973,35978,35981,35982,35988,35964,35992,25117,36013,36010,36029,36018,36019,36014,36022,36040,36033,36068,36067,36058,36093,36090,36091,36100,36101,36106,36103,36111,36109,36112,40782,36115,36045,36116,36118,36199,36205,36209,36211,36225,36249,36290,36286,36282,36303,36314,36310,36300,36315,36299,36330,36331,36319,36323,36348,36360,36361,36351,36381,36382,36368,36383,36418,36405,36400,36404,36426,36423,36425,36428,36432,36424,36441,36452,36448,36394,36451,36437,36470,36466,36476,36481,36487,36485,36484,36491,36490,36499,36497,36500,36505,36522,36513,36524,36528,36550,36529,36542,36549,36552,36555,36571,36579,36604,36603,36587,36606,36618,36613,36629,36626,36633,36627,36636,36639,36635,36620,36646,36659,36667,36665,36677,36674,36670,36684,36681,36678,36686,36695,36700,36706,36707,36708,36764,36767,36771,36781,36783,36791,36826,36837,36834,36842,36847,36999,36852,36869,36857,36858,36881,36885,36897,36877,36894,36886,36875,36903,36918,36917,36921,36856,36943,36944,36945,36946,36878,36937,36926,36950,36952,36958,36968,36975,36982,38568,36978,36994,36989,36993,36992,37002,37001,37007,37032,37039,37041,37045,37090,37092,25160,37083,37122,37138,37145,37170,37168,37194,37206,37208,37219,37221,37225,37235,37234,37259,37257,37250,37282,37291,37295,37290,37301,37300,37306,37312,37313,37321,37323,37328,37334,37343,37345,37339,37372,37365,37366,37406,37375,37396,37420,37397,37393,37470,37463,37445,37449,37476,37448,37525,37439,37451,37456,37532,37526,37523,37531,37466,37583,37561,37559,37609,37647,37626,37700,37678,37657,37666,37658,37667,37690,37685,37691,37724,37728,37756,37742,37718,37808,37804,37805,37780,37817,37846,37847,37864,37861,37848,37827,37853,37840,37832,37860,37914,37908,37907,37891,37895,37904,37942,37931,37941,37921,37946,37953,37970,37956,37979,37984,37986,37982,37994,37417,38e3,38005,38007,38013,37978,38012,38014,38017,38015,38274,38279,38282,38292,38294,38296,38297,38304,38312,38311,38317,38332,38331,38329,38334,38346,28662,38339,38349,38348,38357,38356,38358,38364,38369,38373,38370,38433,38440,38446,38447,38466,38476,38479,38475,38519,38492,38494,38493,38495,38502,38514,38508,38541,38552,38549,38551,38570,38567,38577,38578,38576,38580,38582,38584,38585,38606,38603,38601,38605,35149,38620,38669,38613,38649,38660,38662,38664,38675,38670,38673,38671,38678,38681,38692,38698,38704,38713,38717,38718,38724,38726,38728,38722,38729,38748,38752,38756,38758,38760,21202,38763,38769,38777,38789,38780,38785,38778,38790,38795,38799,38800,38812,38824,38822,38819,38835,38836,38851,38854,38856,38859,38876,38893,40783,38898,31455,38902,38901,38927,38924,38968,38948,38945,38967,38973,38982,38991,38987,39019,39023,39024,39025,39028,39027,39082,39087,39089,39094,39108,39107,39110,39145,39147,39171,39177,39186,39188,39192,39201,39197,39198,39204,39200,39212,39214,39229,39230,39234,39241,39237,39248,39243,39249,39250,39244,39253,39319,39320,39333,39341,39342,39356,39391,39387,39389,39384,39377,39405,39406,39409,39410,39419,39416,39425,39439,39429,39394,39449,39467,39479,39493,39490,39488,39491,39486,39509,39501,39515,39511,39519,39522,39525,39524,39529,39531,39530,39597,39600,39612,39616,39631,39633,39635,39636,39646,39647,39650,39651,39654,39663,39659,39662,39668,39665,39671,39675,39686,39704,39706,39711,39714,39715,39717,39719,39720,39721,39722,39726,39727,39730,39748,39747,39759,39757,39758,39761,39768,39796,39827,39811,39825,39830,39831,39839,39840,39848,39860,39872,39882,39865,39878,39887,39889,39890,39907,39906,39908,39892,39905,39994,39922,39921,39920,39957,39956,39945,39955,39948,39942,39944,39954,39946,39940,39982,39963,39973,39972,39969,39984,40007,39986,40006,39998,40026,40032,40039,40054,40056,40167,40172,40176,40201,40200,40171,40195,40198,40234,40230,40367,40227,40223,40260,40213,40210,40257,40255,40254,40262,40264,40285,40286,40292,40273,40272,40281,40306,40329,40327,40363,40303,40314,40346,40356,40361,40370,40388,40385,40379,40376,40378,40390,40399,40386,40409,40403,40440,40422,40429,40431,40445,40474,40475,40478,40565,40569,40573,40577,40584,40587,40588,40594,40597,40593,40605,40613,40617,40632,40618,40621,38753,40652,40654,40655,40656,40660,40668,40670,40669,40672,40677,40680,40687,40692,40694,40695,40697,40699,40700,40701,40711,40712,30391,40725,40737,40748,40766,40778,40786,40788,40803,40799,40800,40801,40806,40807,40812,40810,40823,40818,40822,40853,40860,40864,22575,27079,36953,29796,20956,29081,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32394,35100,37704,37512,34012,20425,28859,26161,26824,37625,26363,24389,20008,20193,20220,20224,20227,20281,20310,20370,20362,20378,20372,20429,20544,20514,20479,20510,20550,20592,20546,20628,20724,20696,20810,20836,20893,20926,20972,21013,21148,21158,21184,21211,21248,21255,21284,21362,21395,21426,21469,64014,21660,21642,21673,21759,21894,22361,22373,22444,22472,22471,64015,64016,22686,22706,22795,22867,22875,22877,22883,22948,22970,23382,23488,29999,23512,23532,23582,23718,23738,23797,23847,23891,64017,23874,23917,23992,23993,24016,24353,24372,24423,24503,24542,24669,24709,24714,24798,24789,24864,24818,24849,24887,24880,24984,25107,25254,25589,25696,25757,25806,25934,26112,26133,26171,26121,26158,26142,26148,26213,26199,26201,64018,26227,26265,26272,26290,26303,26362,26382,63785,26470,26555,26706,26560,26625,26692,26831,64019,26984,64020,27032,27106,27184,27243,27206,27251,27262,27362,27364,27606,27711,27740,27782,27759,27866,27908,28039,28015,28054,28076,28111,28152,28146,28156,28217,28252,28199,28220,28351,28552,28597,28661,28677,28679,28712,28805,28843,28943,28932,29020,28998,28999,64021,29121,29182,29361,29374,29476,64022,29559,29629,29641,29654,29667,29650,29703,29685,29734,29738,29737,29742,29794,29833,29855,29953,30063,30338,30364,30366,30363,30374,64023,30534,21167,30753,30798,30820,30842,31024,64024,64025,64026,31124,64027,31131,31441,31463,64028,31467,31646,64029,32072,32092,32183,32160,32214,32338,32583,32673,64030,33537,33634,33663,33735,33782,33864,33972,34131,34137,34155,64031,34224,64032,64033,34823,35061,35346,35383,35449,35495,35518,35551,64034,35574,35667,35711,36080,36084,36114,36214,64035,36559,64036,64037,36967,37086,64038,37141,37159,37338,37335,37342,37357,37358,37348,37349,37382,37392,37386,37434,37440,37436,37454,37465,37457,37433,37479,37543,37495,37496,37607,37591,37593,37584,64039,37589,37600,37587,37669,37665,37627,64040,37662,37631,37661,37634,37744,37719,37796,37830,37854,37880,37937,37957,37960,38290,63964,64041,38557,38575,38707,38715,38723,38733,38735,38737,38741,38999,39013,64042,64043,39207,64044,39326,39502,39641,39644,39797,39794,39823,39857,39867,39936,40304,40299,64045,40473,40657,null,null,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,65506,65508,65287,65282,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,65506,65508,65287,65282,12849,8470,8481,8757,32394,35100,37704,37512,34012,20425,28859,26161,26824,37625,26363,24389,20008,20193,20220,20224,20227,20281,20310,20370,20362,20378,20372,20429,20544,20514,20479,20510,20550,20592,20546,20628,20724,20696,20810,20836,20893,20926,20972,21013,21148,21158,21184,21211,21248,21255,21284,21362,21395,21426,21469,64014,21660,21642,21673,21759,21894,22361,22373,22444,22472,22471,64015,64016,22686,22706,22795,22867,22875,22877,22883,22948,22970,23382,23488,29999,23512,23532,23582,23718,23738,23797,23847,23891,64017,23874,23917,23992,23993,24016,24353,24372,24423,24503,24542,24669,24709,24714,24798,24789,24864,24818,24849,24887,24880,24984,25107,25254,25589,25696,25757,25806,25934,26112,26133,26171,26121,26158,26142,26148,26213,26199,26201,64018,26227,26265,26272,26290,26303,26362,26382,63785,26470,26555,26706,26560,26625,26692,26831,64019,26984,64020,27032,27106,27184,27243,27206,27251,27262,27362,27364,27606,27711,27740,27782,27759,27866,27908,28039,28015,28054,28076,28111,28152,28146,28156,28217,28252,28199,28220,28351,28552,28597,28661,28677,28679,28712,28805,28843,28943,28932,29020,28998,28999,64021,29121,29182,29361,29374,29476,64022,29559,29629,29641,29654,29667,29650,29703,29685,29734,29738,29737,29742,29794,29833,29855,29953,30063,30338,30364,30366,30363,30374,64023,30534,21167,30753,30798,30820,30842,31024,64024,64025,64026,31124,64027,31131,31441,31463,64028,31467,31646,64029,32072,32092,32183,32160,32214,32338,32583,32673,64030,33537,33634,33663,33735,33782,33864,33972,34131,34137,34155,64031,34224,64032,64033,34823,35061,35346,35383,35449,35495,35518,35551,64034,35574,35667,35711,36080,36084,36114,36214,64035,36559,64036,64037,36967,37086,64038,37141,37159,37338,37335,37342,37357,37358,37348,37349,37382,37392,37386,37434,37440,37436,37454,37465,37457,37433,37479,37543,37495,37496,37607,37591,37593,37584,64039,37589,37600,37587,37669,37665,37627,64040,37662,37631,37661,37634,37744,37719,37796,37830,37854,37880,37937,37957,37960,38290,63964,64041,38557,38575,38707,38715,38723,38733,38735,38737,38741,38999,39013,64042,64043,39207,64044,39326,39502,39641,39644,39797,39794,39823,39857,39867,39936,40304,40299,64045,40473,40657,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],jis0212:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,728,711,184,729,733,175,731,730,65374,900,901,null,null,null,null,null,null,null,null,161,166,191,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,186,170,169,174,8482,164,8470,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,902,904,905,906,938,null,908,null,910,939,null,911,null,null,null,null,940,941,942,943,970,912,972,962,973,971,944,974,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1038,1039,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1118,1119,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,198,272,null,294,null,306,null,321,319,null,330,216,338,null,358,222,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,230,273,240,295,305,307,312,322,320,329,331,248,339,223,359,254,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,193,192,196,194,258,461,256,260,197,195,262,264,268,199,266,270,201,200,203,202,282,278,274,280,null,284,286,290,288,292,205,204,207,206,463,304,298,302,296,308,310,313,317,315,323,327,325,209,211,210,214,212,465,336,332,213,340,344,342,346,348,352,350,356,354,218,217,220,219,364,467,368,362,370,366,360,471,475,473,469,372,221,376,374,377,381,379,null,null,null,null,null,null,null,225,224,228,226,259,462,257,261,229,227,263,265,269,231,267,271,233,232,235,234,283,279,275,281,501,285,287,null,289,293,237,236,239,238,464,null,299,303,297,309,311,314,318,316,324,328,326,241,243,242,246,244,466,337,333,245,341,345,343,347,349,353,351,357,355,250,249,252,251,365,468,369,363,371,367,361,472,476,474,470,373,253,255,375,378,382,380,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,19970,19972,19973,19980,19986,19999,20003,20004,20008,20011,20014,20015,20016,20021,20032,20033,20036,20039,20049,20058,20060,20067,20072,20073,20084,20085,20089,20095,20109,20118,20119,20125,20143,20153,20163,20176,20186,20187,20192,20193,20194,20200,20207,20209,20211,20213,20221,20222,20223,20224,20226,20227,20232,20235,20236,20242,20245,20246,20247,20249,20270,20273,20320,20275,20277,20279,20281,20283,20286,20288,20290,20296,20297,20299,20300,20306,20308,20310,20312,20319,20323,20330,20332,20334,20337,20343,20344,20345,20346,20349,20350,20353,20354,20356,20357,20361,20362,20364,20366,20368,20370,20371,20372,20375,20377,20378,20382,20383,20402,20407,20409,20411,20412,20413,20414,20416,20417,20421,20422,20424,20425,20427,20428,20429,20431,20434,20444,20448,20450,20464,20466,20476,20477,20479,20480,20481,20484,20487,20490,20492,20494,20496,20499,20503,20504,20507,20508,20509,20510,20514,20519,20526,20528,20530,20531,20533,20544,20545,20546,20549,20550,20554,20556,20558,20561,20562,20563,20567,20569,20575,20576,20578,20579,20582,20583,20586,20589,20592,20593,20539,20609,20611,20612,20614,20618,20622,20623,20624,20626,20627,20628,20630,20635,20636,20638,20639,20640,20641,20642,20650,20655,20656,20665,20666,20669,20672,20675,20676,20679,20684,20686,20688,20691,20692,20696,20700,20701,20703,20706,20708,20710,20712,20713,20719,20721,20726,20730,20734,20739,20742,20743,20744,20747,20748,20749,20750,20722,20752,20759,20761,20763,20764,20765,20766,20771,20775,20776,20780,20781,20783,20785,20787,20788,20789,20792,20793,20802,20810,20815,20819,20821,20823,20824,20831,20836,20838,20862,20867,20868,20875,20878,20888,20893,20897,20899,20909,20920,20922,20924,20926,20927,20930,20936,20943,20945,20946,20947,20949,20952,20958,20962,20965,20974,20978,20979,20980,20983,20993,20994,20997,21010,21011,21013,21014,21016,21026,21032,21041,21042,21045,21052,21061,21065,21077,21079,21080,21082,21084,21087,21088,21089,21094,21102,21111,21112,21113,21120,21122,21125,21130,21132,21139,21141,21142,21143,21144,21146,21148,21156,21157,21158,21159,21167,21168,21174,21175,21176,21178,21179,21181,21184,21188,21190,21192,21196,21199,21201,21204,21206,21211,21212,21217,21221,21224,21225,21226,21228,21232,21233,21236,21238,21239,21248,21251,21258,21259,21260,21265,21267,21272,21275,21276,21278,21279,21285,21287,21288,21289,21291,21292,21293,21296,21298,21301,21308,21309,21310,21314,21324,21323,21337,21339,21345,21347,21349,21356,21357,21362,21369,21374,21379,21383,21384,21390,21395,21396,21401,21405,21409,21412,21418,21419,21423,21426,21428,21429,21431,21432,21434,21437,21440,21445,21455,21458,21459,21461,21466,21469,21470,21472,21478,21479,21493,21506,21523,21530,21537,21543,21544,21546,21551,21553,21556,21557,21571,21572,21575,21581,21583,21598,21602,21604,21606,21607,21609,21611,21613,21614,21620,21631,21633,21635,21637,21640,21641,21645,21649,21653,21654,21660,21663,21665,21670,21671,21673,21674,21677,21678,21681,21687,21689,21690,21691,21695,21702,21706,21709,21710,21728,21738,21740,21743,21750,21756,21758,21759,21760,21761,21765,21768,21769,21772,21773,21774,21781,21802,21803,21810,21813,21814,21819,21820,21821,21825,21831,21833,21834,21837,21840,21841,21848,21850,21851,21854,21856,21857,21860,21862,21887,21889,21890,21894,21896,21902,21903,21905,21906,21907,21908,21911,21923,21924,21933,21938,21951,21953,21955,21958,21961,21963,21964,21966,21969,21970,21971,21975,21976,21979,21982,21986,21993,22006,22015,22021,22024,22026,22029,22030,22031,22032,22033,22034,22041,22060,22064,22067,22069,22071,22073,22075,22076,22077,22079,22080,22081,22083,22084,22086,22089,22091,22093,22095,22100,22110,22112,22113,22114,22115,22118,22121,22125,22127,22129,22130,22133,22148,22149,22152,22155,22156,22165,22169,22170,22173,22174,22175,22182,22183,22184,22185,22187,22188,22189,22193,22195,22199,22206,22213,22217,22218,22219,22223,22224,22220,22221,22233,22236,22237,22239,22241,22244,22245,22246,22247,22248,22257,22251,22253,22262,22263,22273,22274,22279,22282,22284,22289,22293,22298,22299,22301,22304,22306,22307,22308,22309,22313,22314,22316,22318,22319,22323,22324,22333,22334,22335,22341,22342,22348,22349,22354,22370,22373,22375,22376,22379,22381,22382,22383,22384,22385,22387,22388,22389,22391,22393,22394,22395,22396,22398,22401,22403,22412,22420,22423,22425,22426,22428,22429,22430,22431,22433,22421,22439,22440,22441,22444,22456,22461,22471,22472,22476,22479,22485,22493,22494,22500,22502,22503,22505,22509,22512,22517,22518,22520,22525,22526,22527,22531,22532,22536,22537,22497,22540,22541,22555,22558,22559,22560,22566,22567,22573,22578,22585,22591,22601,22604,22605,22607,22608,22613,22623,22625,22628,22631,22632,22648,22652,22655,22656,22657,22663,22664,22665,22666,22668,22669,22671,22672,22676,22678,22685,22688,22689,22690,22694,22697,22705,22706,22724,22716,22722,22728,22733,22734,22736,22738,22740,22742,22746,22749,22753,22754,22761,22771,22789,22790,22795,22796,22802,22803,22804,34369,22813,22817,22819,22820,22824,22831,22832,22835,22837,22838,22847,22851,22854,22866,22867,22873,22875,22877,22878,22879,22881,22883,22891,22893,22895,22898,22901,22902,22905,22907,22908,22923,22924,22926,22930,22933,22935,22943,22948,22951,22957,22958,22959,22960,22963,22967,22970,22972,22977,22979,22980,22984,22986,22989,22994,23005,23006,23007,23011,23012,23015,23022,23023,23025,23026,23028,23031,23040,23044,23052,23053,23054,23058,23059,23070,23075,23076,23079,23080,23082,23085,23088,23108,23109,23111,23112,23116,23120,23125,23134,23139,23141,23143,23149,23159,23162,23163,23166,23179,23184,23187,23190,23193,23196,23198,23199,23200,23202,23207,23212,23217,23218,23219,23221,23224,23226,23227,23231,23236,23238,23240,23247,23258,23260,23264,23269,23274,23278,23285,23286,23293,23296,23297,23304,23319,23348,23321,23323,23325,23329,23333,23341,23352,23361,23371,23372,23378,23382,23390,23400,23406,23407,23420,23421,23422,23423,23425,23428,23430,23434,23438,23440,23441,23443,23444,23446,23464,23465,23468,23469,23471,23473,23474,23479,23482,23484,23488,23489,23501,23503,23510,23511,23512,23513,23514,23520,23535,23537,23540,23549,23564,23575,23582,23583,23587,23590,23593,23595,23596,23598,23600,23602,23605,23606,23641,23642,23644,23650,23651,23655,23656,23657,23661,23664,23668,23669,23674,23675,23676,23677,23687,23688,23690,23695,23698,23709,23711,23712,23714,23715,23718,23722,23730,23732,23733,23738,23753,23755,23762,23773,23767,23790,23793,23794,23796,23809,23814,23821,23826,23851,23843,23844,23846,23847,23857,23860,23865,23869,23871,23874,23875,23878,23880,23893,23889,23897,23882,23903,23904,23905,23906,23908,23914,23917,23920,23929,23930,23934,23935,23937,23939,23944,23946,23954,23955,23956,23957,23961,23963,23967,23968,23975,23979,23984,23988,23992,23993,24003,24007,24011,24016,24014,24024,24025,24032,24036,24041,24056,24057,24064,24071,24077,24082,24084,24085,24088,24095,24096,24110,24104,24114,24117,24126,24139,24144,24137,24145,24150,24152,24155,24156,24158,24168,24170,24171,24172,24173,24174,24176,24192,24203,24206,24226,24228,24229,24232,24234,24236,24241,24243,24253,24254,24255,24262,24268,24267,24270,24273,24274,24276,24277,24284,24286,24293,24299,24322,24326,24327,24328,24334,24345,24348,24349,24353,24354,24355,24356,24360,24363,24364,24366,24368,24372,24374,24379,24381,24383,24384,24388,24389,24391,24397,24400,24404,24408,24411,24416,24419,24420,24423,24431,24434,24436,24437,24440,24442,24445,24446,24457,24461,24463,24470,24476,24477,24482,24487,24491,24484,24492,24495,24496,24497,24504,24516,24519,24520,24521,24523,24528,24529,24530,24531,24532,24542,24545,24546,24552,24553,24554,24556,24557,24558,24559,24562,24563,24566,24570,24572,24583,24586,24589,24595,24596,24599,24600,24602,24607,24612,24621,24627,24629,24640,24647,24648,24649,24652,24657,24660,24662,24663,24669,24673,24679,24689,24702,24703,24706,24710,24712,24714,24718,24721,24723,24725,24728,24733,24734,24738,24740,24741,24744,24752,24753,24759,24763,24766,24770,24772,24776,24777,24778,24779,24782,24783,24788,24789,24793,24795,24797,24798,24802,24805,24818,24821,24824,24828,24829,24834,24839,24842,24844,24848,24849,24850,24851,24852,24854,24855,24857,24860,24862,24866,24874,24875,24880,24881,24885,24886,24887,24889,24897,24901,24902,24905,24926,24928,24940,24946,24952,24955,24956,24959,24960,24961,24963,24964,24971,24973,24978,24979,24983,24984,24988,24989,24991,24992,24997,25e3,25002,25005,25016,25017,25020,25024,25025,25026,25038,25039,25045,25052,25053,25054,25055,25057,25058,25063,25065,25061,25068,25069,25071,25089,25091,25092,25095,25107,25109,25116,25120,25122,25123,25127,25129,25131,25145,25149,25154,25155,25156,25158,25164,25168,25169,25170,25172,25174,25178,25180,25188,25197,25199,25203,25210,25213,25229,25230,25231,25232,25254,25256,25267,25270,25271,25274,25278,25279,25284,25294,25301,25302,25306,25322,25330,25332,25340,25341,25347,25348,25354,25355,25357,25360,25363,25366,25368,25385,25386,25389,25397,25398,25401,25404,25409,25410,25411,25412,25414,25418,25419,25422,25426,25427,25428,25432,25435,25445,25446,25452,25453,25457,25460,25461,25464,25468,25469,25471,25474,25476,25479,25482,25488,25492,25493,25497,25498,25502,25508,25510,25517,25518,25519,25533,25537,25541,25544,25550,25553,25555,25556,25557,25564,25568,25573,25578,25580,25586,25587,25589,25592,25593,25609,25610,25616,25618,25620,25624,25630,25632,25634,25636,25637,25641,25642,25647,25648,25653,25661,25663,25675,25679,25681,25682,25683,25684,25690,25691,25692,25693,25695,25696,25697,25699,25709,25715,25716,25723,25725,25733,25735,25743,25744,25745,25752,25753,25755,25757,25759,25761,25763,25766,25768,25772,25779,25789,25790,25791,25796,25801,25802,25803,25804,25806,25808,25809,25813,25815,25828,25829,25833,25834,25837,25840,25845,25847,25851,25855,25857,25860,25864,25865,25866,25871,25875,25876,25878,25881,25883,25886,25887,25890,25894,25897,25902,25905,25914,25916,25917,25923,25927,25929,25936,25938,25940,25951,25952,25959,25963,25978,25981,25985,25989,25994,26002,26005,26008,26013,26016,26019,26022,26030,26034,26035,26036,26047,26050,26056,26057,26062,26064,26068,26070,26072,26079,26096,26098,26100,26101,26105,26110,26111,26112,26116,26120,26121,26125,26129,26130,26133,26134,26141,26142,26145,26146,26147,26148,26150,26153,26154,26155,26156,26158,26160,26161,26163,26169,26167,26176,26181,26182,26186,26188,26193,26190,26199,26200,26201,26203,26204,26208,26209,26363,26218,26219,26220,26238,26227,26229,26239,26231,26232,26233,26235,26240,26236,26251,26252,26253,26256,26258,26265,26266,26267,26268,26271,26272,26276,26285,26289,26290,26293,26299,26303,26304,26306,26307,26312,26316,26318,26319,26324,26331,26335,26344,26347,26348,26350,26362,26373,26375,26382,26387,26393,26396,26400,26402,26419,26430,26437,26439,26440,26444,26452,26453,26461,26470,26476,26478,26484,26486,26491,26497,26500,26510,26511,26513,26515,26518,26520,26521,26523,26544,26545,26546,26549,26555,26556,26557,26617,26560,26562,26563,26565,26568,26569,26578,26583,26585,26588,26593,26598,26608,26610,26614,26615,26706,26644,26649,26653,26655,26664,26663,26668,26669,26671,26672,26673,26675,26683,26687,26692,26693,26698,26700,26709,26711,26712,26715,26731,26734,26735,26736,26737,26738,26741,26745,26746,26747,26748,26754,26756,26758,26760,26774,26776,26778,26780,26785,26787,26789,26793,26794,26798,26802,26811,26821,26824,26828,26831,26832,26833,26835,26838,26841,26844,26845,26853,26856,26858,26859,26860,26861,26864,26865,26869,26870,26875,26876,26877,26886,26889,26890,26896,26897,26899,26902,26903,26929,26931,26933,26936,26939,26946,26949,26953,26958,26967,26971,26979,26980,26981,26982,26984,26985,26988,26992,26993,26994,27002,27003,27007,27008,27021,27026,27030,27032,27041,27045,27046,27048,27051,27053,27055,27063,27064,27066,27068,27077,27080,27089,27094,27095,27106,27109,27118,27119,27121,27123,27125,27134,27136,27137,27139,27151,27153,27157,27162,27165,27168,27172,27176,27184,27186,27188,27191,27195,27198,27199,27205,27206,27209,27210,27214,27216,27217,27218,27221,27222,27227,27236,27239,27242,27249,27251,27262,27265,27267,27270,27271,27273,27275,27281,27291,27293,27294,27295,27301,27307,27311,27312,27313,27316,27325,27326,27327,27334,27337,27336,27340,27344,27348,27349,27350,27356,27357,27364,27367,27372,27376,27377,27378,27388,27389,27394,27395,27398,27399,27401,27407,27408,27409,27415,27419,27422,27428,27432,27435,27436,27439,27445,27446,27451,27455,27462,27466,27469,27474,27478,27480,27485,27488,27495,27499,27502,27504,27509,27517,27518,27522,27525,27543,27547,27551,27552,27554,27555,27560,27561,27564,27565,27566,27568,27576,27577,27581,27582,27587,27588,27593,27596,27606,27610,27617,27619,27622,27623,27630,27633,27639,27641,27647,27650,27652,27653,27657,27661,27662,27664,27666,27673,27679,27686,27687,27688,27692,27694,27699,27701,27702,27706,27707,27711,27722,27723,27725,27727,27730,27732,27737,27739,27740,27755,27757,27759,27764,27766,27768,27769,27771,27781,27782,27783,27785,27796,27797,27799,27800,27804,27807,27824,27826,27828,27842,27846,27853,27855,27856,27857,27858,27860,27862,27866,27868,27872,27879,27881,27883,27884,27886,27890,27892,27908,27911,27914,27918,27919,27921,27923,27930,27942,27943,27944,27751,27950,27951,27953,27961,27964,27967,27991,27998,27999,28001,28005,28007,28015,28016,28028,28034,28039,28049,28050,28052,28054,28055,28056,28074,28076,28084,28087,28089,28093,28095,28100,28104,28106,28110,28111,28118,28123,28125,28127,28128,28130,28133,28137,28143,28144,28148,28150,28156,28160,28164,28190,28194,28199,28210,28214,28217,28219,28220,28228,28229,28232,28233,28235,28239,28241,28242,28243,28244,28247,28252,28253,28254,28258,28259,28264,28275,28283,28285,28301,28307,28313,28320,28327,28333,28334,28337,28339,28347,28351,28352,28353,28355,28359,28360,28362,28365,28366,28367,28395,28397,28398,28409,28411,28413,28420,28424,28426,28428,28429,28438,28440,28442,28443,28454,28457,28458,28463,28464,28467,28470,28475,28476,28461,28495,28497,28498,28499,28503,28505,28506,28509,28510,28513,28514,28520,28524,28541,28542,28547,28551,28552,28555,28556,28557,28560,28562,28563,28564,28566,28570,28575,28576,28581,28582,28583,28584,28590,28591,28592,28597,28598,28604,28613,28615,28616,28618,28634,28638,28648,28649,28656,28661,28665,28668,28669,28672,28677,28678,28679,28685,28695,28704,28707,28719,28724,28727,28729,28732,28739,28740,28744,28745,28746,28747,28756,28757,28765,28766,28750,28772,28773,28780,28782,28789,28790,28798,28801,28805,28806,28820,28821,28822,28823,28824,28827,28836,28843,28848,28849,28852,28855,28874,28881,28883,28884,28885,28886,28888,28892,28900,28922,28931,28932,28933,28934,28935,28939,28940,28943,28958,28960,28971,28973,28975,28976,28977,28984,28993,28997,28998,28999,29002,29003,29008,29010,29015,29018,29020,29022,29024,29032,29049,29056,29061,29063,29068,29074,29082,29083,29088,29090,29103,29104,29106,29107,29114,29119,29120,29121,29124,29131,29132,29139,29142,29145,29146,29148,29176,29182,29184,29191,29192,29193,29203,29207,29210,29213,29215,29220,29227,29231,29236,29240,29241,29249,29250,29251,29253,29262,29263,29264,29267,29269,29270,29274,29276,29278,29280,29283,29288,29291,29294,29295,29297,29303,29304,29307,29308,29311,29316,29321,29325,29326,29331,29339,29352,29357,29358,29361,29364,29374,29377,29383,29385,29388,29397,29398,29400,29407,29413,29427,29428,29434,29435,29438,29442,29444,29445,29447,29451,29453,29458,29459,29464,29465,29470,29474,29476,29479,29480,29484,29489,29490,29493,29498,29499,29501,29507,29517,29520,29522,29526,29528,29533,29534,29535,29536,29542,29543,29545,29547,29548,29550,29551,29553,29559,29561,29564,29568,29569,29571,29573,29574,29582,29584,29587,29589,29591,29592,29596,29598,29599,29600,29602,29605,29606,29610,29611,29613,29621,29623,29625,29628,29629,29631,29637,29638,29641,29643,29644,29647,29650,29651,29654,29657,29661,29665,29667,29670,29671,29673,29684,29685,29687,29689,29690,29691,29693,29695,29696,29697,29700,29703,29706,29713,29722,29723,29732,29734,29736,29737,29738,29739,29740,29741,29742,29743,29744,29745,29753,29760,29763,29764,29766,29767,29771,29773,29777,29778,29783,29789,29794,29798,29799,29800,29803,29805,29806,29809,29810,29824,29825,29829,29830,29831,29833,29839,29840,29841,29842,29848,29849,29850,29852,29855,29856,29857,29859,29862,29864,29865,29866,29867,29870,29871,29873,29874,29877,29881,29883,29887,29896,29897,29900,29904,29907,29912,29914,29915,29918,29919,29924,29928,29930,29931,29935,29940,29946,29947,29948,29951,29958,29970,29974,29975,29984,29985,29988,29991,29993,29994,29999,30006,30009,30013,30014,30015,30016,30019,30023,30024,30030,30032,30034,30039,30046,30047,30049,30063,30065,30073,30074,30075,30076,30077,30078,30081,30085,30096,30098,30099,30101,30105,30108,30114,30116,30132,30138,30143,30144,30145,30148,30150,30156,30158,30159,30167,30172,30175,30176,30177,30180,30183,30188,30190,30191,30193,30201,30208,30210,30211,30212,30215,30216,30218,30220,30223,30226,30227,30229,30230,30233,30235,30236,30237,30238,30243,30245,30246,30249,30253,30258,30259,30261,30264,30265,30266,30268,30282,30272,30273,30275,30276,30277,30281,30283,30293,30297,30303,30308,30309,30317,30318,30319,30321,30324,30337,30341,30348,30349,30357,30363,30364,30365,30367,30368,30370,30371,30372,30373,30374,30375,30376,30378,30381,30397,30401,30405,30409,30411,30412,30414,30420,30425,30432,30438,30440,30444,30448,30449,30454,30457,30460,30464,30470,30474,30478,30482,30484,30485,30487,30489,30490,30492,30498,30504,30509,30510,30511,30516,30517,30518,30521,30525,30526,30530,30533,30534,30538,30541,30542,30543,30546,30550,30551,30556,30558,30559,30560,30562,30564,30567,30570,30572,30576,30578,30579,30580,30586,30589,30592,30596,30604,30605,30612,30613,30614,30618,30623,30626,30631,30634,30638,30639,30641,30645,30654,30659,30665,30673,30674,30677,30681,30686,30687,30688,30692,30694,30698,30700,30704,30705,30708,30712,30715,30725,30726,30729,30733,30734,30737,30749,30753,30754,30755,30765,30766,30768,30773,30775,30787,30788,30791,30792,30796,30798,30802,30812,30814,30816,30817,30819,30820,30824,30826,30830,30842,30846,30858,30863,30868,30872,30881,30877,30878,30879,30884,30888,30892,30893,30896,30897,30898,30899,30907,30909,30911,30919,30920,30921,30924,30926,30930,30931,30933,30934,30948,30939,30943,30944,30945,30950,30954,30962,30963,30976,30966,30967,30970,30971,30975,30982,30988,30992,31002,31004,31006,31007,31008,31013,31015,31017,31021,31025,31028,31029,31035,31037,31039,31044,31045,31046,31050,31051,31055,31057,31060,31064,31067,31068,31079,31081,31083,31090,31097,31099,31100,31102,31115,31116,31121,31123,31124,31125,31126,31128,31131,31132,31137,31144,31145,31147,31151,31153,31156,31160,31163,31170,31172,31175,31176,31178,31183,31188,31190,31194,31197,31198,31200,31202,31205,31210,31211,31213,31217,31224,31228,31234,31235,31239,31241,31242,31244,31249,31253,31259,31262,31265,31271,31275,31277,31279,31280,31284,31285,31288,31289,31290,31300,31301,31303,31304,31308,31317,31318,31321,31324,31325,31327,31328,31333,31335,31338,31341,31349,31352,31358,31360,31362,31365,31366,31370,31371,31376,31377,31380,31390,31392,31395,31404,31411,31413,31417,31419,31420,31430,31433,31436,31438,31441,31451,31464,31465,31467,31468,31473,31476,31483,31485,31486,31495,31508,31519,31523,31527,31529,31530,31531,31533,31534,31535,31536,31537,31540,31549,31551,31552,31553,31559,31566,31573,31584,31588,31590,31593,31594,31597,31599,31602,31603,31607,31620,31625,31630,31632,31633,31638,31643,31646,31648,31653,31660,31663,31664,31666,31669,31670,31674,31675,31676,31677,31682,31685,31688,31690,31700,31702,31703,31705,31706,31707,31720,31722,31730,31732,31733,31736,31737,31738,31740,31742,31745,31746,31747,31748,31750,31753,31755,31756,31758,31759,31769,31771,31776,31781,31782,31784,31788,31793,31795,31796,31798,31801,31802,31814,31818,31829,31825,31826,31827,31833,31834,31835,31836,31837,31838,31841,31843,31847,31849,31853,31854,31856,31858,31865,31868,31869,31878,31879,31887,31892,31902,31904,31910,31920,31926,31927,31930,31931,31932,31935,31940,31943,31944,31945,31949,31951,31955,31956,31957,31959,31961,31962,31965,31974,31977,31979,31989,32003,32007,32008,32009,32015,32017,32018,32019,32022,32029,32030,32035,32038,32042,32045,32049,32060,32061,32062,32064,32065,32071,32072,32077,32081,32083,32087,32089,32090,32092,32093,32101,32103,32106,32112,32120,32122,32123,32127,32129,32130,32131,32133,32134,32136,32139,32140,32141,32145,32150,32151,32157,32158,32166,32167,32170,32179,32182,32183,32185,32194,32195,32196,32197,32198,32204,32205,32206,32215,32217,32256,32226,32229,32230,32234,32235,32237,32241,32245,32246,32249,32250,32264,32272,32273,32277,32279,32284,32285,32288,32295,32296,32300,32301,32303,32307,32310,32319,32324,32325,32327,32334,32336,32338,32344,32351,32353,32354,32357,32363,32366,32367,32371,32376,32382,32385,32390,32391,32394,32397,32401,32405,32408,32410,32413,32414,32572,32571,32573,32574,32575,32579,32580,32583,32591,32594,32595,32603,32604,32605,32609,32611,32612,32613,32614,32621,32625,32637,32638,32639,32640,32651,32653,32655,32656,32657,32662,32663,32668,32673,32674,32678,32682,32685,32692,32700,32703,32704,32707,32712,32718,32719,32731,32735,32739,32741,32744,32748,32750,32751,32754,32762,32765,32766,32767,32775,32776,32778,32781,32782,32783,32785,32787,32788,32790,32797,32798,32799,32800,32804,32806,32812,32814,32816,32820,32821,32823,32825,32826,32828,32830,32832,32836,32864,32868,32870,32877,32881,32885,32897,32904,32910,32924,32926,32934,32935,32939,32952,32953,32968,32973,32975,32978,32980,32981,32983,32984,32992,33005,33006,33008,33010,33011,33014,33017,33018,33022,33027,33035,33046,33047,33048,33052,33054,33056,33060,33063,33068,33072,33077,33082,33084,33093,33095,33098,33100,33106,33111,33120,33121,33127,33128,33129,33133,33135,33143,33153,33168,33156,33157,33158,33163,33166,33174,33176,33179,33182,33186,33198,33202,33204,33211,33227,33219,33221,33226,33230,33231,33237,33239,33243,33245,33246,33249,33252,33259,33260,33264,33265,33266,33269,33270,33272,33273,33277,33279,33280,33283,33295,33299,33300,33305,33306,33309,33313,33314,33320,33330,33332,33338,33347,33348,33349,33350,33355,33358,33359,33361,33366,33372,33376,33379,33383,33389,33396,33403,33405,33407,33408,33409,33411,33412,33415,33417,33418,33422,33425,33428,33430,33432,33434,33435,33440,33441,33443,33444,33447,33448,33449,33450,33454,33456,33458,33460,33463,33466,33468,33470,33471,33478,33488,33493,33498,33504,33506,33508,33512,33514,33517,33519,33526,33527,33533,33534,33536,33537,33543,33544,33546,33547,33620,33563,33565,33566,33567,33569,33570,33580,33581,33582,33584,33587,33591,33594,33596,33597,33602,33603,33604,33607,33613,33614,33617,33621,33622,33623,33648,33656,33661,33663,33664,33666,33668,33670,33677,33682,33684,33685,33688,33689,33691,33692,33693,33702,33703,33705,33708,33726,33727,33728,33735,33737,33743,33744,33745,33748,33757,33619,33768,33770,33782,33784,33785,33788,33793,33798,33802,33807,33809,33813,33817,33709,33839,33849,33861,33863,33864,33866,33869,33871,33873,33874,33878,33880,33881,33882,33884,33888,33892,33893,33895,33898,33904,33907,33908,33910,33912,33916,33917,33921,33925,33938,33939,33941,33950,33958,33960,33961,33962,33967,33969,33972,33978,33981,33982,33984,33986,33991,33992,33996,33999,34003,34012,34023,34026,34031,34032,34033,34034,34039,34098,34042,34043,34045,34050,34051,34055,34060,34062,34064,34076,34078,34082,34083,34084,34085,34087,34090,34091,34095,34099,34100,34102,34111,34118,34127,34128,34129,34130,34131,34134,34137,34140,34141,34142,34143,34144,34145,34146,34148,34155,34159,34169,34170,34171,34173,34175,34177,34181,34182,34185,34187,34188,34191,34195,34200,34205,34207,34208,34210,34213,34215,34228,34230,34231,34232,34236,34237,34238,34239,34242,34247,34250,34251,34254,34221,34264,34266,34271,34272,34278,34280,34285,34291,34294,34300,34303,34304,34308,34309,34317,34318,34320,34321,34322,34328,34329,34331,34334,34337,34343,34345,34358,34360,34362,34364,34365,34368,34370,34374,34386,34387,34390,34391,34392,34393,34397,34400,34401,34402,34403,34404,34409,34412,34415,34421,34422,34423,34426,34445,34449,34454,34456,34458,34460,34465,34470,34471,34472,34477,34481,34483,34484,34485,34487,34488,34489,34495,34496,34497,34499,34501,34513,34514,34517,34519,34522,34524,34528,34531,34533,34535,34440,34554,34556,34557,34564,34565,34567,34571,34574,34575,34576,34579,34580,34585,34590,34591,34593,34595,34600,34606,34607,34609,34610,34617,34618,34620,34621,34622,34624,34627,34629,34637,34648,34653,34657,34660,34661,34671,34673,34674,34683,34691,34692,34693,34694,34695,34696,34697,34699,34700,34704,34707,34709,34711,34712,34713,34718,34720,34723,34727,34732,34733,34734,34737,34741,34750,34751,34753,34760,34761,34762,34766,34773,34774,34777,34778,34780,34783,34786,34787,34788,34794,34795,34797,34801,34803,34808,34810,34815,34817,34819,34822,34825,34826,34827,34832,34841,34834,34835,34836,34840,34842,34843,34844,34846,34847,34856,34861,34862,34864,34866,34869,34874,34876,34881,34883,34885,34888,34889,34890,34891,34894,34897,34901,34902,34904,34906,34908,34911,34912,34916,34921,34929,34937,34939,34944,34968,34970,34971,34972,34975,34976,34984,34986,35002,35005,35006,35008,35018,35019,35020,35021,35022,35025,35026,35027,35035,35038,35047,35055,35056,35057,35061,35063,35073,35078,35085,35086,35087,35093,35094,35096,35097,35098,35100,35104,35110,35111,35112,35120,35121,35122,35125,35129,35130,35134,35136,35138,35141,35142,35145,35151,35154,35159,35162,35163,35164,35169,35170,35171,35179,35182,35184,35187,35189,35194,35195,35196,35197,35209,35213,35216,35220,35221,35227,35228,35231,35232,35237,35248,35252,35253,35254,35255,35260,35284,35285,35286,35287,35288,35301,35305,35307,35309,35313,35315,35318,35321,35325,35327,35332,35333,35335,35343,35345,35346,35348,35349,35358,35360,35362,35364,35366,35371,35372,35375,35381,35383,35389,35390,35392,35395,35397,35399,35401,35405,35406,35411,35414,35415,35416,35420,35421,35425,35429,35431,35445,35446,35447,35449,35450,35451,35454,35455,35456,35459,35462,35467,35471,35472,35474,35478,35479,35481,35487,35495,35497,35502,35503,35507,35510,35511,35515,35518,35523,35526,35528,35529,35530,35537,35539,35540,35541,35543,35549,35551,35564,35568,35572,35573,35574,35580,35583,35589,35590,35595,35601,35612,35614,35615,35594,35629,35632,35639,35644,35650,35651,35652,35653,35654,35656,35666,35667,35668,35673,35661,35678,35683,35693,35702,35704,35705,35708,35710,35713,35716,35717,35723,35725,35727,35732,35733,35740,35742,35743,35896,35897,35901,35902,35909,35911,35913,35915,35919,35921,35923,35924,35927,35928,35931,35933,35929,35939,35940,35942,35944,35945,35949,35955,35957,35958,35963,35966,35974,35975,35979,35984,35986,35987,35993,35995,35996,36004,36025,36026,36037,36038,36041,36043,36047,36054,36053,36057,36061,36065,36072,36076,36079,36080,36082,36085,36087,36088,36094,36095,36097,36099,36105,36114,36119,36123,36197,36201,36204,36206,36223,36226,36228,36232,36237,36240,36241,36245,36254,36255,36256,36262,36267,36268,36271,36274,36277,36279,36281,36283,36288,36293,36294,36295,36296,36298,36302,36305,36308,36309,36311,36313,36324,36325,36327,36332,36336,36284,36337,36338,36340,36349,36353,36356,36357,36358,36363,36369,36372,36374,36384,36385,36386,36387,36390,36391,36401,36403,36406,36407,36408,36409,36413,36416,36417,36427,36429,36430,36431,36436,36443,36444,36445,36446,36449,36450,36457,36460,36461,36463,36464,36465,36473,36474,36475,36482,36483,36489,36496,36498,36501,36506,36507,36509,36510,36514,36519,36521,36525,36526,36531,36533,36538,36539,36544,36545,36547,36548,36551,36559,36561,36564,36572,36584,36590,36592,36593,36599,36601,36602,36589,36608,36610,36615,36616,36623,36624,36630,36631,36632,36638,36640,36641,36643,36645,36647,36648,36652,36653,36654,36660,36661,36662,36663,36666,36672,36673,36675,36679,36687,36689,36690,36691,36692,36693,36696,36701,36702,36709,36765,36768,36769,36772,36773,36774,36789,36790,36792,36798,36800,36801,36806,36810,36811,36813,36816,36818,36819,36821,36832,36835,36836,36840,36846,36849,36853,36854,36859,36862,36866,36868,36872,36876,36888,36891,36904,36905,36911,36906,36908,36909,36915,36916,36919,36927,36931,36932,36940,36955,36957,36962,36966,36967,36972,36976,36980,36985,36997,37e3,37003,37004,37006,37008,37013,37015,37016,37017,37019,37024,37025,37026,37029,37040,37042,37043,37044,37046,37053,37068,37054,37059,37060,37061,37063,37064,37077,37079,37080,37081,37084,37085,37087,37093,37074,37110,37099,37103,37104,37108,37118,37119,37120,37124,37125,37126,37128,37133,37136,37140,37142,37143,37144,37146,37148,37150,37152,37157,37154,37155,37159,37161,37166,37167,37169,37172,37174,37175,37177,37178,37180,37181,37187,37191,37192,37199,37203,37207,37209,37210,37211,37217,37220,37223,37229,37236,37241,37242,37243,37249,37251,37253,37254,37258,37262,37265,37267,37268,37269,37272,37278,37281,37286,37288,37292,37293,37294,37296,37297,37298,37299,37302,37307,37308,37309,37311,37314,37315,37317,37331,37332,37335,37337,37338,37342,37348,37349,37353,37354,37356,37357,37358,37359,37360,37361,37367,37369,37371,37373,37376,37377,37380,37381,37382,37383,37385,37386,37388,37392,37394,37395,37398,37400,37404,37405,37411,37412,37413,37414,37416,37422,37423,37424,37427,37429,37430,37432,37433,37434,37436,37438,37440,37442,37443,37446,37447,37450,37453,37454,37455,37457,37464,37465,37468,37469,37472,37473,37477,37479,37480,37481,37486,37487,37488,37493,37494,37495,37496,37497,37499,37500,37501,37503,37512,37513,37514,37517,37518,37522,37527,37529,37535,37536,37540,37541,37543,37544,37547,37551,37554,37558,37560,37562,37563,37564,37565,37567,37568,37569,37570,37571,37573,37574,37575,37576,37579,37580,37581,37582,37584,37587,37589,37591,37592,37593,37596,37597,37599,37600,37601,37603,37605,37607,37608,37612,37614,37616,37625,37627,37631,37632,37634,37640,37645,37649,37652,37653,37660,37661,37662,37663,37665,37668,37669,37671,37673,37674,37683,37684,37686,37687,37703,37704,37705,37712,37713,37714,37717,37719,37720,37722,37726,37732,37733,37735,37737,37738,37741,37743,37744,37745,37747,37748,37750,37754,37757,37759,37760,37761,37762,37768,37770,37771,37773,37775,37778,37781,37784,37787,37790,37793,37795,37796,37798,37800,37803,37812,37813,37814,37818,37801,37825,37828,37829,37830,37831,37833,37834,37835,37836,37837,37843,37849,37852,37854,37855,37858,37862,37863,37881,37879,37880,37882,37883,37885,37889,37890,37892,37896,37897,37901,37902,37903,37909,37910,37911,37919,37934,37935,37937,37938,37939,37940,37947,37951,37949,37955,37957,37960,37962,37964,37973,37977,37980,37983,37985,37987,37992,37995,37997,37998,37999,38001,38002,38020,38019,38264,38265,38270,38276,38280,38284,38285,38286,38301,38302,38303,38305,38310,38313,38315,38316,38324,38326,38330,38333,38335,38342,38344,38345,38347,38352,38353,38354,38355,38361,38362,38365,38366,38367,38368,38372,38374,38429,38430,38434,38436,38437,38438,38444,38449,38451,38455,38456,38457,38458,38460,38461,38465,38482,38484,38486,38487,38488,38497,38510,38516,38523,38524,38526,38527,38529,38530,38531,38532,38537,38545,38550,38554,38557,38559,38564,38565,38566,38569,38574,38575,38579,38586,38602,38610,23986,38616,38618,38621,38622,38623,38633,38639,38641,38650,38658,38659,38661,38665,38682,38683,38685,38689,38690,38691,38696,38705,38707,38721,38723,38730,38734,38735,38741,38743,38744,38746,38747,38755,38759,38762,38766,38771,38774,38775,38776,38779,38781,38783,38784,38793,38805,38806,38807,38809,38810,38814,38815,38818,38828,38830,38833,38834,38837,38838,38840,38841,38842,38844,38846,38847,38849,38852,38853,38855,38857,38858,38860,38861,38862,38864,38865,38868,38871,38872,38873,38877,38878,38880,38875,38881,38884,38895,38897,38900,38903,38904,38906,38919,38922,38937,38925,38926,38932,38934,38940,38942,38944,38947,38950,38955,38958,38959,38960,38962,38963,38965,38949,38974,38980,38983,38986,38993,38994,38995,38998,38999,39001,39002,39010,39011,39013,39014,39018,39020,39083,39085,39086,39088,39092,39095,39096,39098,39099,39103,39106,39109,39112,39116,39137,39139,39141,39142,39143,39146,39155,39158,39170,39175,39176,39185,39189,39190,39191,39194,39195,39196,39199,39202,39206,39207,39211,39217,39218,39219,39220,39221,39225,39226,39227,39228,39232,39233,39238,39239,39240,39245,39246,39252,39256,39257,39259,39260,39262,39263,39264,39323,39325,39327,39334,39344,39345,39346,39349,39353,39354,39357,39359,39363,39369,39379,39380,39385,39386,39388,39390,39399,39402,39403,39404,39408,39412,39413,39417,39421,39422,39426,39427,39428,39435,39436,39440,39441,39446,39454,39456,39458,39459,39460,39463,39469,39470,39475,39477,39478,39480,39495,39489,39492,39498,39499,39500,39502,39505,39508,39510,39517,39594,39596,39598,39599,39602,39604,39605,39606,39609,39611,39614,39615,39617,39619,39622,39624,39630,39632,39634,39637,39638,39639,39643,39644,39648,39652,39653,39655,39657,39660,39666,39667,39669,39673,39674,39677,39679,39680,39681,39682,39683,39684,39685,39688,39689,39691,39692,39693,39694,39696,39698,39702,39705,39707,39708,39712,39718,39723,39725,39731,39732,39733,39735,39737,39738,39741,39752,39755,39756,39765,39766,39767,39771,39774,39777,39779,39781,39782,39784,39786,39787,39788,39789,39790,39795,39797,39799,39800,39801,39807,39808,39812,39813,39814,39815,39817,39818,39819,39821,39823,39824,39828,39834,39837,39838,39846,39847,39849,39852,39856,39857,39858,39863,39864,39867,39868,39870,39871,39873,39879,39880,39886,39888,39895,39896,39901,39903,39909,39911,39914,39915,39919,39923,39927,39928,39929,39930,39933,39935,39936,39938,39947,39951,39953,39958,39960,39961,39962,39964,39966,39970,39971,39974,39975,39976,39977,39978,39985,39989,39990,39991,39997,40001,40003,40004,40005,40009,40010,40014,40015,40016,40019,40020,40022,40024,40027,40029,40030,40031,40035,40041,40042,40028,40043,40040,40046,40048,40050,40053,40055,40059,40166,40178,40183,40185,40203,40194,40209,40215,40216,40220,40221,40222,40239,40240,40242,40243,40244,40250,40252,40261,40253,40258,40259,40263,40266,40275,40276,40287,40291,40290,40293,40297,40298,40299,40304,40310,40311,40315,40316,40318,40323,40324,40326,40330,40333,40334,40338,40339,40341,40342,40343,40344,40353,40362,40364,40366,40369,40373,40377,40380,40383,40387,40391,40393,40394,40404,40405,40406,40407,40410,40414,40415,40416,40421,40423,40425,40427,40430,40432,40435,40436,40446,40458,40450,40455,40462,40464,40465,40466,40469,40470,40473,40476,40477,40570,40571,40572,40576,40578,40579,40580,40581,40583,40590,40591,40598,40600,40603,40606,40612,40616,40620,40622,40623,40624,40627,40628,40629,40646,40648,40651,40661,40671,40676,40679,40684,40685,40686,40688,40689,40690,40693,40696,40703,40706,40707,40713,40719,40720,40721,40722,40724,40726,40727,40729,40730,40731,40735,40738,40742,40746,40747,40751,40753,40754,40756,40759,40761,40762,40764,40765,40767,40769,40771,40772,40773,40774,40775,40787,40789,40790,40791,40792,40794,40797,40798,40808,40809,40813,40814,40815,40816,40817,40819,40821,40826,40829,40847,40848,40849,40850,40852,40854,40855,40862,40865,40866,40867,40869,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],ibm866:[1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,9617,9618,9619,9474,9508,9569,9570,9558,9557,9571,9553,9559,9565,9564,9563,9488,9492,9524,9516,9500,9472,9532,9566,9567,9562,9556,9577,9574,9568,9552,9580,9575,9576,9572,9573,9561,9560,9554,9555,9579,9578,9496,9484,9608,9604,9612,9616,9600,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1025,1105,1028,1108,1031,1111,1038,1118,176,8729,183,8730,8470,164,9632,160],"iso-8859-2":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,728,321,164,317,346,167,168,352,350,356,377,173,381,379,176,261,731,322,180,318,347,711,184,353,351,357,378,733,382,380,340,193,194,258,196,313,262,199,268,201,280,203,282,205,206,270,272,323,327,211,212,336,214,215,344,366,218,368,220,221,354,223,341,225,226,259,228,314,263,231,269,233,281,235,283,237,238,271,273,324,328,243,244,337,246,247,345,367,250,369,252,253,355,729],"iso-8859-3":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,294,728,163,164,null,292,167,168,304,350,286,308,173,null,379,176,295,178,179,180,181,293,183,184,305,351,287,309,189,null,380,192,193,194,null,196,266,264,199,200,201,202,203,204,205,206,207,null,209,210,211,212,288,214,215,284,217,218,219,220,364,348,223,224,225,226,null,228,267,265,231,232,233,234,235,236,237,238,239,null,241,242,243,244,289,246,247,285,249,250,251,252,365,349,729],"iso-8859-4":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,312,342,164,296,315,167,168,352,274,290,358,173,381,175,176,261,731,343,180,297,316,711,184,353,275,291,359,330,382,331,256,193,194,195,196,197,198,302,268,201,280,203,278,205,206,298,272,325,332,310,212,213,214,215,216,370,218,219,220,360,362,223,257,225,226,227,228,229,230,303,269,233,281,235,279,237,238,299,273,326,333,311,244,245,246,247,248,371,250,251,252,361,363,729],"iso-8859-5":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,173,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,8470,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,167,1118,1119],"iso-8859-6":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,null,null,null,164,null,null,null,null,null,null,null,1548,173,null,null,null,null,null,null,null,null,null,null,null,null,null,1563,null,null,null,1567,null,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,1591,1592,1593,1594,null,null,null,null,null,1600,1601,1602,1603,1604,1605,1606,1607,1608,1609,1610,1611,1612,1613,1614,1615,1616,1617,1618,null,null,null,null,null,null,null,null,null,null,null,null,null],"iso-8859-7":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,8216,8217,163,8364,8367,166,167,168,169,890,171,172,173,null,8213,176,177,178,179,900,901,902,183,904,905,906,187,908,189,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,null,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,null],"iso-8859-8":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,null,162,163,164,165,166,167,168,169,215,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,247,187,188,189,190,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,8215,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,null,null,8206,8207,null],"iso-8859-10":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,274,290,298,296,310,167,315,272,352,358,381,173,362,330,176,261,275,291,299,297,311,183,316,273,353,359,382,8213,363,331,256,193,194,195,196,197,198,302,268,201,280,203,278,205,206,207,208,325,332,211,212,213,214,360,216,370,218,219,220,221,222,223,257,225,226,227,228,229,230,303,269,233,281,235,279,237,238,239,240,326,333,243,244,245,246,361,248,371,250,251,252,253,254,312],"iso-8859-13":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,8221,162,163,164,8222,166,167,216,169,342,171,172,173,174,198,176,177,178,179,8220,181,182,183,248,185,343,187,188,189,190,230,260,302,256,262,196,197,280,274,268,201,377,278,290,310,298,315,352,323,325,211,332,213,214,215,370,321,346,362,220,379,381,223,261,303,257,263,228,229,281,275,269,233,378,279,291,311,299,316,353,324,326,243,333,245,246,247,371,322,347,363,252,380,382,8217],"iso-8859-14":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,7682,7683,163,266,267,7690,167,7808,169,7810,7691,7922,173,174,376,7710,7711,288,289,7744,7745,182,7766,7809,7767,7811,7776,7923,7812,7813,7777,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,372,209,210,211,212,213,214,7786,216,217,218,219,220,221,374,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,373,241,242,243,244,245,246,7787,248,249,250,251,252,253,375,255],"iso-8859-15":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,8364,165,352,167,353,169,170,171,172,173,174,175,176,177,178,179,381,181,182,183,382,185,186,187,338,339,376,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"iso-8859-16":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,261,321,8364,8222,352,167,353,169,536,171,377,173,378,379,176,177,268,322,381,8221,182,183,382,269,537,187,338,339,376,380,192,193,194,258,196,262,198,199,200,201,202,203,204,205,206,207,272,323,210,211,212,336,214,346,368,217,218,219,220,280,538,223,224,225,226,259,228,263,230,231,232,233,234,235,236,237,238,239,273,324,242,243,244,337,246,347,369,249,250,251,252,281,539,255],"koi8-r":[9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9600,9604,9608,9612,9616,9617,9618,9619,8992,9632,8729,8730,8776,8804,8805,160,8993,176,178,183,247,9552,9553,9554,1105,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,1025,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,169,1102,1072,1073,1094,1076,1077,1092,1075,1093,1080,1081,1082,1083,1084,1085,1086,1087,1103,1088,1089,1090,1091,1078,1074,1100,1099,1079,1096,1101,1097,1095,1098,1070,1040,1041,1062,1044,1045,1060,1043,1061,1048,1049,1050,1051,1052,1053,1054,1055,1071,1056,1057,1058,1059,1046,1042,1068,1067,1047,1064,1069,1065,1063,1066],"koi8-u":[9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9600,9604,9608,9612,9616,9617,9618,9619,8992,9632,8729,8730,8776,8804,8805,160,8993,176,178,183,247,9552,9553,9554,1105,1108,9556,1110,1111,9559,9560,9561,9562,9563,1169,1118,9566,9567,9568,9569,1025,1028,9571,1030,1031,9574,9575,9576,9577,9578,1168,1038,169,1102,1072,1073,1094,1076,1077,1092,1075,1093,1080,1081,1082,1083,1084,1085,1086,1087,1103,1088,1089,1090,1091,1078,1074,1100,1099,1079,1096,1101,1097,1095,1098,1070,1040,1041,1062,1044,1045,1060,1043,1061,1048,1049,1050,1051,1052,1053,1054,1055,1071,1056,1057,1058,1059,1046,1042,1068,1067,1047,1064,1069,1065,1063,1066],macintosh:[196,197,199,201,209,214,220,225,224,226,228,227,229,231,233,232,234,235,237,236,238,239,241,243,242,244,246,245,250,249,251,252,8224,176,162,163,167,8226,182,223,174,169,8482,180,168,8800,198,216,8734,177,8804,8805,165,181,8706,8721,8719,960,8747,170,186,937,230,248,191,161,172,8730,402,8776,8710,171,187,8230,160,192,195,213,338,339,8211,8212,8220,8221,8216,8217,247,9674,255,376,8260,8364,8249,8250,64257,64258,8225,183,8218,8222,8240,194,202,193,203,200,205,206,207,204,211,212,63743,210,218,219,217,305,710,732,175,728,729,730,184,733,731,711],"windows-874":[8364,129,130,131,132,8230,134,135,136,137,138,139,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,152,153,154,155,156,157,158,159,160,3585,3586,3587,3588,3589,3590,3591,3592,3593,3594,3595,3596,3597,3598,3599,3600,3601,3602,3603,3604,3605,3606,3607,3608,3609,3610,3611,3612,3613,3614,3615,3616,3617,3618,3619,3620,3621,3622,3623,3624,3625,3626,3627,3628,3629,3630,3631,3632,3633,3634,3635,3636,3637,3638,3639,3640,3641,3642,null,null,null,null,3647,3648,3649,3650,3651,3652,3653,3654,3655,3656,3657,3658,3659,3660,3661,3662,3663,3664,3665,3666,3667,3668,3669,3670,3671,3672,3673,3674,3675,null,null,null,null],"windows-1250":[8364,129,8218,131,8222,8230,8224,8225,136,8240,352,8249,346,356,381,377,144,8216,8217,8220,8221,8226,8211,8212,152,8482,353,8250,347,357,382,378,160,711,728,321,164,260,166,167,168,169,350,171,172,173,174,379,176,177,731,322,180,181,182,183,184,261,351,187,317,733,318,380,340,193,194,258,196,313,262,199,268,201,280,203,282,205,206,270,272,323,327,211,212,336,214,215,344,366,218,368,220,221,354,223,341,225,226,259,228,314,263,231,269,233,281,235,283,237,238,271,273,324,328,243,244,337,246,247,345,367,250,369,252,253,355,729],"windows-1251":[1026,1027,8218,1107,8222,8230,8224,8225,8364,8240,1033,8249,1034,1036,1035,1039,1106,8216,8217,8220,8221,8226,8211,8212,152,8482,1113,8250,1114,1116,1115,1119,160,1038,1118,1032,164,1168,166,167,1025,169,1028,171,172,173,174,1031,176,177,1030,1110,1169,181,182,183,1105,8470,1108,187,1112,1029,1109,1111,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103],"windows-1252":[8364,129,8218,402,8222,8230,8224,8225,710,8240,352,8249,338,141,381,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,353,8250,339,157,382,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"windows-1253":[8364,129,8218,402,8222,8230,8224,8225,136,8240,138,8249,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,152,8482,154,8250,156,157,158,159,160,901,902,163,164,165,166,167,168,169,null,171,172,173,174,8213,176,177,178,179,900,181,182,183,904,905,906,187,908,189,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,null,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,null],"windows-1254":[8364,129,8218,402,8222,8230,8224,8225,710,8240,352,8249,338,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,353,8250,339,157,158,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,286,209,210,211,212,213,214,215,216,217,218,219,220,304,350,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,287,241,242,243,244,245,246,247,248,249,250,251,252,305,351,255],"windows-1255":[8364,129,8218,402,8222,8230,8224,8225,710,8240,138,8249,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,154,8250,156,157,158,159,160,161,162,163,8362,165,166,167,168,169,215,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,247,187,188,189,190,191,1456,1457,1458,1459,1460,1461,1462,1463,1464,1465,1466,1467,1468,1469,1470,1471,1472,1473,1474,1475,1520,1521,1522,1523,1524,null,null,null,null,null,null,null,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,null,null,8206,8207,null],"windows-1256":[8364,1662,8218,402,8222,8230,8224,8225,710,8240,1657,8249,338,1670,1688,1672,1711,8216,8217,8220,8221,8226,8211,8212,1705,8482,1681,8250,339,8204,8205,1722,160,1548,162,163,164,165,166,167,168,169,1726,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,1563,187,188,189,190,1567,1729,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,215,1591,1592,1593,1594,1600,1601,1602,1603,224,1604,226,1605,1606,1607,1608,231,232,233,234,235,1609,1610,238,239,1611,1612,1613,1614,244,1615,1616,247,1617,249,1618,251,252,8206,8207,1746],"windows-1257":[8364,129,8218,131,8222,8230,8224,8225,136,8240,138,8249,140,168,711,184,144,8216,8217,8220,8221,8226,8211,8212,152,8482,154,8250,156,175,731,159,160,null,162,163,164,null,166,167,216,169,342,171,172,173,174,198,176,177,178,179,180,181,182,183,248,185,343,187,188,189,190,230,260,302,256,262,196,197,280,274,268,201,377,278,290,310,298,315,352,323,325,211,332,213,214,215,370,321,346,362,220,379,381,223,261,303,257,263,228,229,281,275,269,233,378,279,291,311,299,316,353,324,326,243,333,245,246,247,371,322,347,363,252,380,382,729],"windows-1258":[8364,129,8218,402,8222,8230,8224,8225,710,8240,138,8249,338,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,154,8250,339,157,158,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,258,196,197,198,199,200,201,202,203,768,205,206,207,272,209,777,211,212,416,214,215,216,217,218,219,220,431,771,223,224,225,226,259,228,229,230,231,232,233,234,235,769,237,238,239,273,241,803,243,244,417,246,247,248,249,250,251,252,432,8363,255],"x-mac-cyrillic":[1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,8224,176,1168,163,167,8226,182,1030,174,169,8482,1026,1106,8800,1027,1107,8734,177,8804,8805,1110,181,1169,1032,1028,1108,1031,1111,1033,1113,1034,1114,1112,1029,172,8730,402,8776,8710,171,187,8230,160,1035,1115,1036,1116,1109,8211,8212,8220,8221,8216,8217,247,8222,1038,1118,1039,1119,8470,1025,1105,1103,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,8364]}},{}],109:[function(require1,module,exports){!function(global){function inRange(a,min,max){return min<=a&&a<=max}function includes(array,item){return -1!==array.indexOf(item)}void 0!==module&&module.exports&&!global["encoding-indexes"]&&(global["encoding-indexes"]=require1("./encoding-indexes.js")["encoding-indexes"]);var shift_jis_index,big5_index_no_hkscs,floor=Math.floor;function ToDictionary(o){if(void 0===o)return{};if(o===Object(o))return o;throw TypeError("Could not convert argument to dictionary")}function stringToCodePoints(string){for(var s=String(string),n=s.length,i=0,u=[];i<n;){var c=s.charCodeAt(i);if(c<55296||c>57343)u.push(c);else if(56320<=c&&c<=57343)u.push(65533);else if(55296<=c&&c<=56319){if(i===n-1)u.push(65533);else{var d=s.charCodeAt(i+1);if(56320<=d&&d<=57343){var a=1023&c,b=1023&d;u.push(65536+(a<<10)+b),i+=1}else u.push(65533)}}i+=1}return u}function codePointsToString(code_points){for(var s="",i=0;i<code_points.length;++i){var cp=code_points[i];cp<=65535?s+=String.fromCharCode(cp):(cp-=65536,s+=String.fromCharCode((cp>>10)+55296,(1023&cp)+56320))}return s}function isASCIIByte(a){return 0<=a&&a<=127}var isASCIICodePoint=isASCIIByte;function Stream(tokens){this.tokens=[].slice.call(tokens),this.tokens.reverse()}function decoderError(fatal,opt_code_point){if(fatal)throw TypeError("Decoder error");return opt_code_point||65533}function encoderError(code_point){throw TypeError("The code point "+code_point+" could not be encoded.")}function getEncoding(label){return(label=String(label).trim().toLowerCase(),Object.prototype.hasOwnProperty.call(label_to_encoding,label))?label_to_encoding[label]:null}Stream.prototype={endOfStream:function(){return!this.tokens.length},read:function(){return this.tokens.length?this.tokens.pop():-1},prepend:function(token){if(Array.isArray(token))for(;token.length;)this.tokens.push(token.pop());else this.tokens.push(token)},push:function(token){if(Array.isArray(token))for(;token.length;)this.tokens.unshift(token.shift());else this.tokens.unshift(token)}};var encodings=[{encodings:[{labels:["unicode-1-1-utf-8","utf-8","utf8"],name:"UTF-8"}],heading:"The Encoding"},{encodings:[{labels:["866","cp866","csibm866","ibm866"],name:"IBM866"},{labels:["csisolatin2","iso-8859-2","iso-ir-101","iso8859-2","iso88592","iso_8859-2","iso_8859-2:1987","l2","latin2"],name:"ISO-8859-2"},{labels:["csisolatin3","iso-8859-3","iso-ir-109","iso8859-3","iso88593","iso_8859-3","iso_8859-3:1988","l3","latin3"],name:"ISO-8859-3"},{labels:["csisolatin4","iso-8859-4","iso-ir-110","iso8859-4","iso88594","iso_8859-4","iso_8859-4:1988","l4","latin4"],name:"ISO-8859-4"},{labels:["csisolatincyrillic","cyrillic","iso-8859-5","iso-ir-144","iso8859-5","iso88595","iso_8859-5","iso_8859-5:1988"],name:"ISO-8859-5"},{labels:["arabic","asmo-708","csiso88596e","csiso88596i","csisolatinarabic","ecma-114","iso-8859-6","iso-8859-6-e","iso-8859-6-i","iso-ir-127","iso8859-6","iso88596","iso_8859-6","iso_8859-6:1987"],name:"ISO-8859-6"},{labels:["csisolatingreek","ecma-118","elot_928","greek","greek8","iso-8859-7","iso-ir-126","iso8859-7","iso88597","iso_8859-7","iso_8859-7:1987","sun_eu_greek"],name:"ISO-8859-7"},{labels:["csiso88598e","csisolatinhebrew","hebrew","iso-8859-8","iso-8859-8-e","iso-ir-138","iso8859-8","iso88598","iso_8859-8","iso_8859-8:1988","visual"],name:"ISO-8859-8"},{labels:["csiso88598i","iso-8859-8-i","logical"],name:"ISO-8859-8-I"},{labels:["csisolatin6","iso-8859-10","iso-ir-157","iso8859-10","iso885910","l6","latin6"],name:"ISO-8859-10"},{labels:["iso-8859-13","iso8859-13","iso885913"],name:"ISO-8859-13"},{labels:["iso-8859-14","iso8859-14","iso885914"],name:"ISO-8859-14"},{labels:["csisolatin9","iso-8859-15","iso8859-15","iso885915","iso_8859-15","l9"],name:"ISO-8859-15"},{labels:["iso-8859-16"],name:"ISO-8859-16"},{labels:["cskoi8r","koi","koi8","koi8-r","koi8_r"],name:"KOI8-R"},{labels:["koi8-ru","koi8-u"],name:"KOI8-U"},{labels:["csmacintosh","mac","macintosh","x-mac-roman"],name:"macintosh"},{labels:["dos-874","iso-8859-11","iso8859-11","iso885911","tis-620","windows-874"],name:"windows-874"},{labels:["cp1250","windows-1250","x-cp1250"],name:"windows-1250"},{labels:["cp1251","windows-1251","x-cp1251"],name:"windows-1251"},{labels:["ansi_x3.4-1968","ascii","cp1252","cp819","csisolatin1","ibm819","iso-8859-1","iso-ir-100","iso8859-1","iso88591","iso_8859-1","iso_8859-1:1987","l1","latin1","us-ascii","windows-1252","x-cp1252"],name:"windows-1252"},{labels:["cp1253","windows-1253","x-cp1253"],name:"windows-1253"},{labels:["cp1254","csisolatin5","iso-8859-9","iso-ir-148","iso8859-9","iso88599","iso_8859-9","iso_8859-9:1989","l5","latin5","windows-1254","x-cp1254"],name:"windows-1254"},{labels:["cp1255","windows-1255","x-cp1255"],name:"windows-1255"},{labels:["cp1256","windows-1256","x-cp1256"],name:"windows-1256"},{labels:["cp1257","windows-1257","x-cp1257"],name:"windows-1257"},{labels:["cp1258","windows-1258","x-cp1258"],name:"windows-1258"},{labels:["x-mac-cyrillic","x-mac-ukrainian"],name:"x-mac-cyrillic"}],heading:"Legacy single-byte encodings"},{encodings:[{labels:["chinese","csgb2312","csiso58gb231280","gb2312","gb_2312","gb_2312-80","gbk","iso-ir-58","x-gbk"],name:"GBK"},{labels:["gb18030"],name:"gb18030"}],heading:"Legacy multi-byte Chinese (simplified) encodings"},{encodings:[{labels:["big5","big5-hkscs","cn-big5","csbig5","x-x-big5"],name:"Big5"}],heading:"Legacy multi-byte Chinese (traditional) encodings"},{encodings:[{labels:["cseucpkdfmtjapanese","euc-jp","x-euc-jp"],name:"EUC-JP"},{labels:["csiso2022jp","iso-2022-jp"],name:"ISO-2022-JP"},{labels:["csshiftjis","ms932","ms_kanji","shift-jis","shift_jis","sjis","windows-31j","x-sjis"],name:"Shift_JIS"}],heading:"Legacy multi-byte Japanese encodings"},{encodings:[{labels:["cseuckr","csksc56011987","euc-kr","iso-ir-149","korean","ks_c_5601-1987","ks_c_5601-1989","ksc5601","ksc_5601","windows-949"],name:"EUC-KR"}],heading:"Legacy multi-byte Korean encodings"},{encodings:[{labels:["csiso2022kr","hz-gb-2312","iso-2022-cn","iso-2022-cn-ext","iso-2022-kr"],name:"replacement"},{labels:["utf-16be"],name:"UTF-16BE"},{labels:["utf-16","utf-16le"],name:"UTF-16LE"},{labels:["x-user-defined"],name:"x-user-defined"}],heading:"Legacy miscellaneous encodings"}],label_to_encoding={};encodings.forEach(function(category){category.encodings.forEach(function(encoding){encoding.labels.forEach(function(label){label_to_encoding[label]=encoding})})});var encoders={},decoders={};function indexCodePointFor(pointer,index){return index&&index[pointer]||null}function indexPointerFor(code_point,index){var pointer=index.indexOf(code_point);return -1===pointer?null:pointer}function index(name){if(!("encoding-indexes"in global))throw Error("Indexes missing. Did you forget to include encoding-indexes.js first?");return global["encoding-indexes"][name]}function indexGB18030RangesCodePointFor(pointer){if(pointer>39419&&pointer<189e3||pointer>1237575)return null;if(7457===pointer)return 59335;var i,offset=0,code_point_offset=0,idx=index("gb18030-ranges");for(i=0;i<idx.length;++i){var entry=idx[i];if(entry[0]<=pointer)offset=entry[0],code_point_offset=entry[1];else break}return code_point_offset+pointer-offset}function indexGB18030RangesPointerFor(code_point){if(59335===code_point)return 7457;var i,offset=0,pointer_offset=0,idx=index("gb18030-ranges");for(i=0;i<idx.length;++i){var entry=idx[i];if(entry[1]<=code_point)offset=entry[1],pointer_offset=entry[0];else break}return pointer_offset+code_point-offset}function indexShiftJISPointerFor(code_point){return(shift_jis_index=shift_jis_index||index("jis0208").map(function(code_point,pointer){return inRange(pointer,8272,8835)?null:code_point})).indexOf(code_point)}function indexBig5PointerFor(code_point){var index_=big5_index_no_hkscs=big5_index_no_hkscs||index("big5").map(function(code_point,pointer){return pointer<5024?null:code_point});return 9552===code_point||9566===code_point||9569===code_point||9578===code_point||21313===code_point||21317===code_point?index_.lastIndexOf(code_point):indexPointerFor(code_point,index_)}var DEFAULT_ENCODING="utf-8";function TextDecoder(label,options){if(!(this instanceof TextDecoder))throw TypeError("Called as a function. Did you forget 'new'?");label=void 0!==label?String(label):DEFAULT_ENCODING,options=ToDictionary(options),this._encoding=null,this._decoder=null,this._ignoreBOM=!1,this._BOMseen=!1,this._error_mode="replacement",this._do_not_flush=!1;var encoding=getEncoding(label);if(null===encoding||"replacement"===encoding.name)throw RangeError("Unknown encoding: "+label);if(!decoders[encoding.name])throw Error("Decoder not present. Did you forget to include encoding-indexes.js first?");return this._encoding=encoding,options.fatal&&(this._error_mode="fatal"),options.ignoreBOM&&(this._ignoreBOM=!0),Object.defineProperty||(this.encoding=this._encoding.name.toLowerCase(),this.fatal="fatal"===this._error_mode,this.ignoreBOM=this._ignoreBOM),this}function TextEncoder1(label,options){if(!(this instanceof TextEncoder1))throw TypeError("Called as a function. Did you forget 'new'?");if(options=ToDictionary(options),this._encoding=null,this._encoder=null,this._do_not_flush=!1,this._fatal=options.fatal?"fatal":"replacement",options.NONSTANDARD_allowLegacyEncoding){var encoding=getEncoding(label=void 0!==label?String(label):DEFAULT_ENCODING);if(null===encoding||"replacement"===encoding.name)throw RangeError("Unknown encoding: "+label);if(!encoders[encoding.name])throw Error("Encoder not present. Did you forget to include encoding-indexes.js first?");this._encoding=encoding}else this._encoding=getEncoding("utf-8"),void 0!==label&&"console"in global&&console.warn("TextEncoder constructor called with encoding label, which is ignored.");return Object.defineProperty||(this.encoding=this._encoding.name.toLowerCase()),this}function UTF8Decoder(options){var fatal=options.fatal,utf8_code_point=0,utf8_bytes_seen=0,utf8_bytes_needed=0,utf8_lower_boundary=128,utf8_upper_boundary=191;this.handler=function(stream,bite){if(-1===bite&&0!==utf8_bytes_needed)return utf8_bytes_needed=0,decoderError(fatal);if(-1===bite)return -1;if(0===utf8_bytes_needed){if(inRange(bite,0,127))return bite;if(inRange(bite,194,223))utf8_bytes_needed=1,utf8_code_point=31&bite;else if(inRange(bite,224,239))224===bite&&(utf8_lower_boundary=160),237===bite&&(utf8_upper_boundary=159),utf8_bytes_needed=2,utf8_code_point=15&bite;else{if(!inRange(bite,240,244))return decoderError(fatal);240===bite&&(utf8_lower_boundary=144),244===bite&&(utf8_upper_boundary=143),utf8_bytes_needed=3,utf8_code_point=7&bite}return null}if(!inRange(bite,utf8_lower_boundary,utf8_upper_boundary))return utf8_code_point=utf8_bytes_needed=utf8_bytes_seen=0,utf8_lower_boundary=128,utf8_upper_boundary=191,stream.prepend(bite),decoderError(fatal);if(utf8_lower_boundary=128,utf8_upper_boundary=191,utf8_code_point=utf8_code_point<<6|63&bite,(utf8_bytes_seen+=1)!==utf8_bytes_needed)return null;var code_point=utf8_code_point;return utf8_code_point=utf8_bytes_needed=utf8_bytes_seen=0,code_point}}function UTF8Encoder(options){options.fatal,this.handler=function(stream,code_point){if(-1===code_point)return -1;if(isASCIICodePoint(code_point))return code_point;inRange(code_point,128,2047)?(count=1,offset=192):inRange(code_point,2048,65535)?(count=2,offset=224):inRange(code_point,65536,1114111)&&(count=3,offset=240);for(var count,offset,bytes=[(code_point>>6*count)+offset];count>0;){var temp=code_point>>6*(count-1);bytes.push(128|63&temp),count-=1}return bytes}}function SingleByteDecoder(index,options){var fatal=options.fatal;this.handler=function(stream,bite){if(-1===bite)return -1;if(isASCIIByte(bite))return bite;var code_point=index[bite-128];return null===code_point?decoderError(fatal):code_point}}function SingleByteEncoder(index,options){options.fatal,this.handler=function(stream,code_point){if(-1===code_point)return -1;if(isASCIICodePoint(code_point))return code_point;var pointer=indexPointerFor(code_point,index);return null===pointer&&encoderError(code_point),pointer+128}}function GB18030Decoder(options){var fatal=options.fatal,gb18030_first=0,gb18030_second=0,gb18030_third=0;this.handler=function(stream,bite){if(-1===bite&&0===gb18030_first&&0===gb18030_second&&0===gb18030_third)return -1;if(-1===bite&&(0!==gb18030_first||0!==gb18030_second||0!==gb18030_third)&&(gb18030_first=0,gb18030_second=0,gb18030_third=0,decoderError(fatal)),0!==gb18030_third){code_point=null,inRange(bite,48,57)&&(code_point=indexGB18030RangesCodePointFor((((gb18030_first-129)*10+gb18030_second-48)*126+gb18030_third-129)*10+bite-48));var code_point,buffer=[gb18030_second,gb18030_third,bite];return(gb18030_first=0,gb18030_second=0,gb18030_third=0,null===code_point)?(stream.prepend(buffer),decoderError(fatal)):code_point}if(0!==gb18030_second)return inRange(bite,129,254)?(gb18030_third=bite,null):(stream.prepend([gb18030_second,bite]),gb18030_first=0,gb18030_second=0,decoderError(fatal));if(0!==gb18030_first){if(inRange(bite,48,57))return gb18030_second=bite,null;var lead=gb18030_first,pointer=null;gb18030_first=0;var offset=bite<127?64:65;return((inRange(bite,64,126)||inRange(bite,128,254))&&(pointer=(lead-129)*190+(bite-offset)),null===(code_point=null===pointer?null:indexCodePointFor(pointer,index("gb18030")))&&isASCIIByte(bite)&&stream.prepend(bite),null===code_point)?decoderError(fatal):code_point}return isASCIIByte(bite)?bite:128===bite?8364:inRange(bite,129,254)?(gb18030_first=bite,null):decoderError(fatal)}}function GB18030Encoder(options,gbk_flag){options.fatal,this.handler=function(stream,code_point){if(-1===code_point)return -1;if(isASCIICodePoint(code_point))return code_point;if(58853===code_point)return encoderError(code_point);if(gbk_flag&&8364===code_point)return 128;var pointer=indexPointerFor(code_point,index("gb18030"));if(null!==pointer){var lead=floor(pointer/190)+129,trail=pointer%190;return[lead,trail+(trail<63?64:65)]}if(gbk_flag)return encoderError(code_point);var byte1=floor((pointer=indexGB18030RangesPointerFor(code_point))/10/126/10),byte2=floor((pointer-=12600*byte1)/10/126),byte3=floor((pointer-=1260*byte2)/10),byte4=pointer-10*byte3;return[byte1+129,byte2+48,byte3+129,byte4+48]}}function Big5Decoder(options){var fatal=options.fatal,Big5_lead=0;this.handler=function(stream,bite){if(-1===bite&&0!==Big5_lead)return Big5_lead=0,decoderError(fatal);if(-1===bite&&0===Big5_lead)return -1;if(0!==Big5_lead){var lead=Big5_lead,pointer=null;Big5_lead=0;var offset=bite<127?64:98;switch((inRange(bite,64,126)||inRange(bite,161,254))&&(pointer=(lead-129)*157+(bite-offset)),pointer){case 1133:return[202,772];case 1135:return[202,780];case 1164:return[234,772];case 1166:return[234,780]}var code_point=null===pointer?null:indexCodePointFor(pointer,index("big5"));return(null===code_point&&isASCIIByte(bite)&&stream.prepend(bite),null===code_point)?decoderError(fatal):code_point}return isASCIIByte(bite)?bite:inRange(bite,129,254)?(Big5_lead=bite,null):decoderError(fatal)}}function Big5Encoder(options){options.fatal,this.handler=function(stream,code_point){if(-1===code_point)return -1;if(isASCIICodePoint(code_point))return code_point;var pointer=indexBig5PointerFor(code_point);if(null===pointer)return encoderError(code_point);var lead=floor(pointer/157)+129;if(lead<161)return encoderError(code_point);var trail=pointer%157;return[lead,trail+(trail<63?64:98)]}}function EUCJPDecoder(options){var fatal=options.fatal,eucjp_jis0212_flag=!1,eucjp_lead=0;this.handler=function(stream,bite){if(-1===bite&&0!==eucjp_lead)return eucjp_lead=0,decoderError(fatal);if(-1===bite&&0===eucjp_lead)return -1;if(142===eucjp_lead&&inRange(bite,161,223))return eucjp_lead=0,65216+bite;if(143===eucjp_lead&&inRange(bite,161,254))return eucjp_jis0212_flag=!0,eucjp_lead=bite,null;if(0!==eucjp_lead){var lead=eucjp_lead;eucjp_lead=0;var code_point=null;return(inRange(lead,161,254)&&inRange(bite,161,254)&&(code_point=indexCodePointFor((lead-161)*94+(bite-161),index(eucjp_jis0212_flag?"jis0212":"jis0208"))),eucjp_jis0212_flag=!1,inRange(bite,161,254)||stream.prepend(bite),null===code_point)?decoderError(fatal):code_point}return isASCIIByte(bite)?bite:142===bite||143===bite||inRange(bite,161,254)?(eucjp_lead=bite,null):decoderError(fatal)}}function EUCJPEncoder(options){options.fatal,this.handler=function(stream,code_point){if(-1===code_point)return -1;if(isASCIICodePoint(code_point))return code_point;if(165===code_point)return 92;if(8254===code_point)return 126;if(inRange(code_point,65377,65439))return[142,code_point-65377+161];8722===code_point&&(code_point=65293);var pointer=indexPointerFor(code_point,index("jis0208"));return null===pointer?encoderError(code_point):[floor(pointer/94)+161,pointer%94+161]}}function ISO2022JPDecoder(options){var fatal=options.fatal,states={ASCII:0,Roman:1,Katakana:2,LeadByte:3,TrailByte:4,EscapeStart:5,Escape:6},iso2022jp_decoder_state=states.ASCII,iso2022jp_decoder_output_state=states.ASCII,iso2022jp_lead=0,iso2022jp_output_flag=!1;this.handler=function(stream,bite){switch(iso2022jp_decoder_state){default:case states.ASCII:if(27===bite)return iso2022jp_decoder_state=states.EscapeStart,null;if(inRange(bite,0,127)&&14!==bite&&15!==bite&&27!==bite)return iso2022jp_output_flag=!1,bite;if(-1===bite)return -1;return iso2022jp_output_flag=!1,decoderError(fatal);case states.Roman:if(27===bite)return iso2022jp_decoder_state=states.EscapeStart,null;if(92===bite)return iso2022jp_output_flag=!1,165;if(126===bite)return iso2022jp_output_flag=!1,8254;if(inRange(bite,0,127)&&14!==bite&&15!==bite&&27!==bite&&92!==bite&&126!==bite)return iso2022jp_output_flag=!1,bite;if(-1===bite)return -1;return iso2022jp_output_flag=!1,decoderError(fatal);case states.Katakana:if(27===bite)return iso2022jp_decoder_state=states.EscapeStart,null;if(inRange(bite,33,95))return iso2022jp_output_flag=!1,65344+bite;if(-1===bite)return -1;return iso2022jp_output_flag=!1,decoderError(fatal);case states.LeadByte:if(27===bite)return iso2022jp_decoder_state=states.EscapeStart,null;if(inRange(bite,33,126))return iso2022jp_output_flag=!1,iso2022jp_lead=bite,iso2022jp_decoder_state=states.TrailByte,null;if(-1===bite)return -1;return iso2022jp_output_flag=!1,decoderError(fatal);case states.TrailByte:if(27===bite)return iso2022jp_decoder_state=states.EscapeStart,decoderError(fatal);if(inRange(bite,33,126)){iso2022jp_decoder_state=states.LeadByte;var code_point=indexCodePointFor((iso2022jp_lead-33)*94+bite-33,index("jis0208"));if(null===code_point)return decoderError(fatal);return code_point}if(-1===bite)return iso2022jp_decoder_state=states.LeadByte,stream.prepend(bite),decoderError(fatal);return iso2022jp_decoder_state=states.LeadByte,decoderError(fatal);case states.EscapeStart:if(36===bite||40===bite)return iso2022jp_lead=bite,iso2022jp_decoder_state=states.Escape,null;return stream.prepend(bite),iso2022jp_output_flag=!1,iso2022jp_decoder_state=iso2022jp_decoder_output_state,decoderError(fatal);case states.Escape:var lead=iso2022jp_lead;iso2022jp_lead=0;var state=null;if(40===lead&&66===bite&&(state=states.ASCII),40===lead&&74===bite&&(state=states.Roman),40===lead&&73===bite&&(state=states.Katakana),36===lead&&(64===bite||66===bite)&&(state=states.LeadByte),null!==state){iso2022jp_decoder_state=iso2022jp_decoder_state=state;var output_flag=iso2022jp_output_flag;return iso2022jp_output_flag=!0,output_flag?decoderError(fatal):null}return stream.prepend([lead,bite]),iso2022jp_output_flag=!1,iso2022jp_decoder_state=iso2022jp_decoder_output_state,decoderError(fatal)}}}function ISO2022JPEncoder(options){options.fatal;var states={ASCII:0,Roman:1,jis0208:2},iso2022jp_state=states.ASCII;this.handler=function(stream,code_point){if(-1===code_point&&iso2022jp_state!==states.ASCII)return stream.prepend(code_point),iso2022jp_state=states.ASCII,[27,40,66];if(-1===code_point&&iso2022jp_state===states.ASCII)return -1;if((iso2022jp_state===states.ASCII||iso2022jp_state===states.Roman)&&(14===code_point||15===code_point||27===code_point))return encoderError(65533);if(iso2022jp_state===states.ASCII&&isASCIICodePoint(code_point))return code_point;if(iso2022jp_state===states.Roman&&(isASCIICodePoint(code_point)&&92!==code_point&&126!==code_point||165==code_point||8254==code_point)){if(isASCIICodePoint(code_point))return code_point;if(165===code_point)return 92;if(8254===code_point)return 126}if(isASCIICodePoint(code_point)&&iso2022jp_state!==states.ASCII)return stream.prepend(code_point),iso2022jp_state=states.ASCII,[27,40,66];if((165===code_point||8254===code_point)&&iso2022jp_state!==states.Roman)return stream.prepend(code_point),iso2022jp_state=states.Roman,[27,40,74];8722===code_point&&(code_point=65293);var pointer=indexPointerFor(code_point,index("jis0208"));return null===pointer?encoderError(code_point):iso2022jp_state!==states.jis0208?(stream.prepend(code_point),iso2022jp_state=states.jis0208,[27,36,66]):[floor(pointer/94)+33,pointer%94+33]}}function ShiftJISDecoder(options){var fatal=options.fatal,Shift_JIS_lead=0;this.handler=function(stream,bite){if(-1===bite&&0!==Shift_JIS_lead)return Shift_JIS_lead=0,decoderError(fatal);if(-1===bite&&0===Shift_JIS_lead)return -1;if(0!==Shift_JIS_lead){var lead=Shift_JIS_lead,pointer=null;Shift_JIS_lead=0;var offset=bite<127?64:65;if((inRange(bite,64,126)||inRange(bite,128,252))&&(pointer=(lead-(lead<160?129:193))*188+bite-offset),inRange(pointer,8836,10715))return 48508+pointer;var code_point=null===pointer?null:indexCodePointFor(pointer,index("jis0208"));return(null===code_point&&isASCIIByte(bite)&&stream.prepend(bite),null===code_point)?decoderError(fatal):code_point}return isASCIIByte(bite)||128===bite?bite:inRange(bite,161,223)?65216+bite:inRange(bite,129,159)||inRange(bite,224,252)?(Shift_JIS_lead=bite,null):decoderError(fatal)}}function ShiftJISEncoder(options){options.fatal,this.handler=function(stream,code_point){if(-1===code_point)return -1;if(isASCIICodePoint(code_point)||128===code_point)return code_point;if(165===code_point)return 92;if(8254===code_point)return 126;if(inRange(code_point,65377,65439))return code_point-65377+161;8722===code_point&&(code_point=65293);var pointer=indexShiftJISPointerFor(code_point);if(null===pointer)return encoderError(code_point);var lead=floor(pointer/188),trail=pointer%188;return[lead+(lead<31?129:193),trail+(trail<63?64:65)]}}function EUCKRDecoder(options){var fatal=options.fatal,euckr_lead=0;this.handler=function(stream,bite){if(-1===bite&&0!==euckr_lead)return euckr_lead=0,decoderError(fatal);if(-1===bite&&0===euckr_lead)return -1;if(0!==euckr_lead){var lead=euckr_lead,pointer=null;euckr_lead=0,inRange(bite,65,254)&&(pointer=(lead-129)*190+(bite-65));var code_point=null===pointer?null:indexCodePointFor(pointer,index("euc-kr"));return(null===pointer&&isASCIIByte(bite)&&stream.prepend(bite),null===code_point)?decoderError(fatal):code_point}return isASCIIByte(bite)?bite:inRange(bite,129,254)?(euckr_lead=bite,null):decoderError(fatal)}}function EUCKREncoder(options){options.fatal,this.handler=function(stream,code_point){if(-1===code_point)return -1;if(isASCIICodePoint(code_point))return code_point;var pointer=indexPointerFor(code_point,index("euc-kr"));return null===pointer?encoderError(code_point):[floor(pointer/190)+129,pointer%190+65]}}function convertCodeUnitToBytes(code_unit,utf16be){var byte1=code_unit>>8,byte2=255&code_unit;return utf16be?[byte1,byte2]:[byte2,byte1]}function UTF16Decoder(utf16_be,options){var fatal=options.fatal,utf16_lead_byte=null,utf16_lead_surrogate=null;this.handler=function(stream,bite){if(-1===bite&&(null!==utf16_lead_byte||null!==utf16_lead_surrogate))return decoderError(fatal);if(-1===bite&&null===utf16_lead_byte&&null===utf16_lead_surrogate)return -1;if(null===utf16_lead_byte)return utf16_lead_byte=bite,null;if(code_unit=utf16_be?(utf16_lead_byte<<8)+bite:(bite<<8)+utf16_lead_byte,utf16_lead_byte=null,null!==utf16_lead_surrogate){var code_unit,lead_surrogate=utf16_lead_surrogate;return(utf16_lead_surrogate=null,inRange(code_unit,56320,57343))?65536+(lead_surrogate-55296)*1024+(code_unit-56320):(stream.prepend(convertCodeUnitToBytes(code_unit,utf16_be)),decoderError(fatal))}return inRange(code_unit,55296,56319)?(utf16_lead_surrogate=code_unit,null):inRange(code_unit,56320,57343)?decoderError(fatal):code_unit}}function UTF16Encoder(utf16_be,options){options.fatal,this.handler=function(stream,code_point){if(-1===code_point)return -1;if(inRange(code_point,0,65535))return convertCodeUnitToBytes(code_point,utf16_be);var lead=convertCodeUnitToBytes((code_point-65536>>10)+55296,utf16_be),trail=convertCodeUnitToBytes((code_point-65536&1023)+56320,utf16_be);return lead.concat(trail)}}function XUserDefinedDecoder(options){options.fatal,this.handler=function(stream,bite){return -1===bite?-1:isASCIIByte(bite)?bite:63360+bite-128}}function XUserDefinedEncoder(options){options.fatal,this.handler=function(stream,code_point){return -1===code_point?-1:isASCIICodePoint(code_point)?code_point:inRange(code_point,63360,63487)?code_point-63360+128:encoderError(code_point)}}Object.defineProperty&&(Object.defineProperty(TextDecoder.prototype,"encoding",{get:function(){return this._encoding.name.toLowerCase()}}),Object.defineProperty(TextDecoder.prototype,"fatal",{get:function(){return"fatal"===this._error_mode}}),Object.defineProperty(TextDecoder.prototype,"ignoreBOM",{get:function(){return this._ignoreBOM}})),TextDecoder.prototype.decode=function decode(input,options){bytes="object"==typeof input&&input instanceof ArrayBuffer?new Uint8Array(input):"object"==typeof input&&"buffer"in input&&input.buffer instanceof ArrayBuffer?new Uint8Array(input.buffer,input.byteOffset,input.byteLength):new Uint8Array(0),options=ToDictionary(options),this._do_not_flush||(this._decoder=decoders[this._encoding.name]({fatal:"fatal"===this._error_mode}),this._BOMseen=!1),this._do_not_flush=!!options.stream;for(var bytes,result,input_stream=new Stream(bytes),output=[];;){var token=input_stream.read();if(-1===token||-1===(result=this._decoder.handler(input_stream,token)))break;null!==result&&(Array.isArray(result)?output.push.apply(output,result):output.push(result))}if(!this._do_not_flush){do{if(-1===(result=this._decoder.handler(input_stream,input_stream.read())))break;if(null===result)continue;Array.isArray(result)?output.push.apply(output,result):output.push(result)}while(!input_stream.endOfStream())this._decoder=null}return(function serializeStream(stream){return includes(["UTF-8","UTF-16LE","UTF-16BE"],this._encoding.name)&&!this._ignoreBOM&&!this._BOMseen&&(stream.length>0&&65279===stream[0]?(this._BOMseen=!0,stream.shift()):stream.length>0&&(this._BOMseen=!0)),codePointsToString(stream)}).call(this,output)},Object.defineProperty&&Object.defineProperty(TextEncoder1.prototype,"encoding",{get:function(){return this._encoding.name.toLowerCase()}}),TextEncoder1.prototype.encode=function encode(opt_string,options){opt_string=void 0===opt_string?"":String(opt_string),options=ToDictionary(options),this._do_not_flush||(this._encoder=encoders[this._encoding.name]({fatal:"fatal"===this._fatal})),this._do_not_flush=!!options.stream;for(var result,input=new Stream(stringToCodePoints(opt_string)),output=[];;){var token=input.read();if(-1===token||-1===(result=this._encoder.handler(input,token)))break;Array.isArray(result)?output.push.apply(output,result):output.push(result)}if(!this._do_not_flush){for(;-1!==(result=this._encoder.handler(input,input.read()));)Array.isArray(result)?output.push.apply(output,result):output.push(result);this._encoder=null}return new Uint8Array(output)},encoders["UTF-8"]=function(options){return new UTF8Encoder(options)},decoders["UTF-8"]=function(options){return new UTF8Decoder(options)},"encoding-indexes"in global&&encodings.forEach(function(category){"Legacy single-byte encodings"===category.heading&&category.encodings.forEach(function(encoding){var name=encoding.name,idx=index(name.toLowerCase());decoders[name]=function(options){return new SingleByteDecoder(idx,options)},encoders[name]=function(options){return new SingleByteEncoder(idx,options)}})}),decoders.GBK=function(options){return new GB18030Decoder(options)},encoders.GBK=function(options){return new GB18030Encoder(options,!0)},encoders.gb18030=function(options){return new GB18030Encoder(options)},decoders.gb18030=function(options){return new GB18030Decoder(options)},encoders.Big5=function(options){return new Big5Encoder(options)},decoders.Big5=function(options){return new Big5Decoder(options)},encoders["EUC-JP"]=function(options){return new EUCJPEncoder(options)},decoders["EUC-JP"]=function(options){return new EUCJPDecoder(options)},encoders["ISO-2022-JP"]=function(options){return new ISO2022JPEncoder(options)},decoders["ISO-2022-JP"]=function(options){return new ISO2022JPDecoder(options)},encoders.Shift_JIS=function(options){return new ShiftJISEncoder(options)},decoders.Shift_JIS=function(options){return new ShiftJISDecoder(options)},encoders["EUC-KR"]=function(options){return new EUCKREncoder(options)},decoders["EUC-KR"]=function(options){return new EUCKRDecoder(options)},encoders["UTF-16BE"]=function(options){return new UTF16Encoder(!0,options)},decoders["UTF-16BE"]=function(options){return new UTF16Decoder(!0,options)},encoders["UTF-16LE"]=function(options){return new UTF16Encoder(!1,options)},decoders["UTF-16LE"]=function(options){return new UTF16Decoder(!1,options)},encoders["x-user-defined"]=function(options){return new XUserDefinedEncoder(options)},decoders["x-user-defined"]=function(options){return new XUserDefinedDecoder(options)},global.TextEncoder||(global.TextEncoder=TextEncoder1),global.TextDecoder||(global.TextDecoder=TextDecoder),void 0!==module&&module.exports&&(module.exports={TextEncoder:global.TextEncoder,TextDecoder:global.TextDecoder,EncodingIndexes:global["encoding-indexes"]})}(this||{})},{"./encoding-indexes.js":108}],110:[function(require1,module,exports){"function"==typeof Object.create?module.exports=function inherits(ctor,superCtor){ctor.super_=superCtor,ctor.prototype=Object.create(superCtor.prototype,{constructor:{value:ctor,enumerable:!1,writable:!0,configurable:!0}})}:module.exports=function inherits(ctor,superCtor){ctor.super_=superCtor;var TempCtor=function(){};TempCtor.prototype=superCtor.prototype,ctor.prototype=new TempCtor,ctor.prototype.constructor=ctor}},{}],111:[function(require1,module,exports){module.exports=function isBuffer(arg){return arg&&"object"==typeof arg&&"function"==typeof arg.copy&&"function"==typeof arg.fill&&"function"==typeof arg.readUInt8}},{}],112:[function(require1,module,exports){var debugEnviron,formatRegExp=/%[sdj%]/g;exports.format=function(f){if(!isString(f)){for(var objects=[],i=0;i<arguments.length;i++)objects.push(inspect(arguments[i]));return objects.join(" ")}for(var i=1,args=arguments,len=args.length,str=String(f).replace(formatRegExp,function(x){if("%%"===x)return"%";if(i>=len)return x;switch(x){case"%s":return String(args[i++]);case"%d":return Number(args[i++]);case"%j":try{return JSON.stringify(args[i++])}catch(_){return"[Circular]"}default:return x}}),x=args[i];i<len;x=args[++i])isNull(x)||!isObject(x)?str+=" "+x:str+=" "+inspect(x);return str},exports.deprecate=function(fn,msg){if(isUndefined(__webpack_require__.g.process))return function(){return exports.deprecate(fn,msg).apply(this,arguments)};if(!0===process.noDeprecation)return fn;var warned=!1;return function deprecated(){if(!warned){if(process.throwDeprecation)throw Error(msg);process.traceDeprecation?console.trace(msg):console.error(msg),warned=!0}return fn.apply(this,arguments)}};var debugs={};function inspect(obj,opts){var ctx={seen:[],stylize:stylizeNoColor};return arguments.length>=3&&(ctx.depth=arguments[2]),arguments.length>=4&&(ctx.colors=arguments[3]),isBoolean(opts)?ctx.showHidden=opts:opts&&exports._extend(ctx,opts),isUndefined(ctx.showHidden)&&(ctx.showHidden=!1),isUndefined(ctx.depth)&&(ctx.depth=2),isUndefined(ctx.colors)&&(ctx.colors=!1),isUndefined(ctx.customInspect)&&(ctx.customInspect=!0),ctx.colors&&(ctx.stylize=stylizeWithColor),formatValue(ctx,obj,ctx.depth)}function stylizeWithColor(str,styleType){var style=inspect.styles[styleType];return style?"\x1b["+inspect.colors[style][0]+"m"+str+"\x1b["+inspect.colors[style][1]+"m":str}function stylizeNoColor(str,styleType){return str}function arrayToHash(array){var hash={};return array.forEach(function(val,idx){hash[val]=!0}),hash}function formatValue(ctx,value,recurseTimes){if(ctx.customInspect&&value&&isFunction(value.inspect)&&value.inspect!==exports.inspect&&!(value.constructor&&value.constructor.prototype===value)){var output,ret=value.inspect(recurseTimes,ctx);return isString(ret)||(ret=formatValue(ctx,ret,recurseTimes)),ret}var primitive=formatPrimitive(ctx,value);if(primitive)return primitive;var keys=Object.keys(value),visibleKeys=arrayToHash(keys);if(ctx.showHidden&&(keys=Object.getOwnPropertyNames(value)),isError(value)&&(keys.indexOf("message")>=0||keys.indexOf("description")>=0))return formatError(value);if(0===keys.length){if(isFunction(value)){var name=value.name?": "+value.name:"";return ctx.stylize("[Function"+name+"]","special")}if(isRegExp(value))return ctx.stylize(RegExp.prototype.toString.call(value),"regexp");if(isDate(value))return ctx.stylize(Date.prototype.toString.call(value),"date");if(isError(value))return formatError(value)}var base="",array=!1,braces=["{","}"];return(isArray(value)&&(array=!0,braces=["[","]"]),isFunction(value)&&(base=" [Function"+(value.name?": "+value.name:"")+"]"),isRegExp(value)&&(base=" "+RegExp.prototype.toString.call(value)),isDate(value)&&(base=" "+Date.prototype.toUTCString.call(value)),isError(value)&&(base=" "+formatError(value)),0!==keys.length||array&&0!=value.length)?recurseTimes<0?isRegExp(value)?ctx.stylize(RegExp.prototype.toString.call(value),"regexp"):ctx.stylize("[Object]","special"):(ctx.seen.push(value),output=array?formatArray(ctx,value,recurseTimes,visibleKeys,keys):keys.map(function(key){return formatProperty(ctx,value,recurseTimes,visibleKeys,key,array)}),ctx.seen.pop(),reduceToSingleString(output,base,braces)):braces[0]+base+braces[1]}function formatPrimitive(ctx,value){if(isUndefined(value))return ctx.stylize("undefined","undefined");if(isString(value)){var simple="'"+JSON.stringify(value).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return ctx.stylize(simple,"string")}return isNumber(value)?ctx.stylize(""+value,"number"):isBoolean(value)?ctx.stylize(""+value,"boolean"):isNull(value)?ctx.stylize("null","null"):void 0}function formatError(value){return"["+Error.prototype.toString.call(value)+"]"}function formatArray(ctx,value,recurseTimes,visibleKeys,keys){for(var output=[],i=0,l=value.length;i<l;++i)hasOwnProperty(value,String(i))?output.push(formatProperty(ctx,value,recurseTimes,visibleKeys,String(i),!0)):output.push("");return keys.forEach(function(key){key.match(/^\d+$/)||output.push(formatProperty(ctx,value,recurseTimes,visibleKeys,key,!0))}),output}function formatProperty(ctx,value,recurseTimes,visibleKeys,key,array){var name,str,desc;if((desc=Object.getOwnPropertyDescriptor(value,key)||{value:value[key]}).get?str=desc.set?ctx.stylize("[Getter/Setter]","special"):ctx.stylize("[Getter]","special"):desc.set&&(str=ctx.stylize("[Setter]","special")),hasOwnProperty(visibleKeys,key)||(name="["+key+"]"),!str&&(0>ctx.seen.indexOf(desc.value)?(str=isNull(recurseTimes)?formatValue(ctx,desc.value,null):formatValue(ctx,desc.value,recurseTimes-1)).indexOf("\n")>-1&&(str=array?str.split("\n").map(function(line){return"  "+line}).join("\n").substr(2):"\n"+str.split("\n").map(function(line){return"   "+line}).join("\n")):str=ctx.stylize("[Circular]","special")),isUndefined(name)){if(array&&key.match(/^\d+$/))return str;(name=JSON.stringify(""+key)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(name=name.substr(1,name.length-2),name=ctx.stylize(name,"name")):(name=name.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),name=ctx.stylize(name,"string"))}return name+": "+str}function reduceToSingleString(output,base,braces){var numLinesEst=0;return output.reduce(function(prev,cur){return numLinesEst++,cur.indexOf("\n")>=0&&numLinesEst++,prev+cur.replace(/\u001b\[\d\d?m/g,"").length+1},0)>60?braces[0]+(""===base?"":base+"\n ")+" "+output.join(",\n  ")+" "+braces[1]:braces[0]+base+" "+output.join(", ")+" "+braces[1]}function isArray(ar){return Array.isArray(ar)}function isBoolean(arg){return"boolean"==typeof arg}function isNull(arg){return null===arg}function isNullOrUndefined(arg){return null==arg}function isNumber(arg){return"number"==typeof arg}function isString(arg){return"string"==typeof arg}function isSymbol(arg){return"symbol"==typeof arg}function isUndefined(arg){return void 0===arg}function isRegExp(re){return isObject(re)&&"[object RegExp]"===objectToString(re)}function isObject(arg){return"object"==typeof arg&&null!==arg}function isDate(d){return isObject(d)&&"[object Date]"===objectToString(d)}function isError(e){return isObject(e)&&("[object Error]"===objectToString(e)||e instanceof Error)}function isFunction(arg){return"function"==typeof arg}function isPrimitive(arg){return null===arg||"boolean"==typeof arg||"number"==typeof arg||"string"==typeof arg||"symbol"==typeof arg||void 0===arg}function objectToString(o){return Object.prototype.toString.call(o)}function pad(n){return n<10?"0"+n.toString(10):n.toString(10)}exports.debuglog=function(set){if(isUndefined(debugEnviron)&&(debugEnviron=process.env.NODE_DEBUG||""),!debugs[set=set.toUpperCase()]){if(RegExp("\\b"+set+"\\b","i").test(debugEnviron)){var pid=process.pid;debugs[set]=function(){var msg=exports.format.apply(exports,arguments);console.error("%s %d: %s",set,pid,msg)}}else debugs[set]=function(){}}return debugs[set]},exports.inspect=inspect,inspect.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},inspect.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"},exports.isArray=isArray,exports.isBoolean=isBoolean,exports.isNull=isNull,exports.isNullOrUndefined=isNullOrUndefined,exports.isNumber=isNumber,exports.isString=isString,exports.isSymbol=isSymbol,exports.isUndefined=isUndefined,exports.isRegExp=isRegExp,exports.isObject=isObject,exports.isDate=isDate,exports.isError=isError,exports.isFunction=isFunction,exports.isPrimitive=isPrimitive,exports.isBuffer=require1("./support/isBuffer");var months=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];function timestamp(){var d=new Date,time=[pad(d.getHours()),pad(d.getMinutes()),pad(d.getSeconds())].join(":");return[d.getDate(),months[d.getMonth()],time].join(" ")}function hasOwnProperty(obj,prop){return Object.prototype.hasOwnProperty.call(obj,prop)}exports.log=function(){console.log("%s - %s",timestamp(),exports.format.apply(exports,arguments))},exports.inherits=require1("inherits"),exports._extend=function(origin,add){if(!add||!isObject(add))return origin;for(var keys=Object.keys(add),i=keys.length;i--;)origin[keys[i]]=add[keys[i]];return origin}},{"./support/isBuffer":111,inherits:110}],113:[function(require1,module,exports){var global,factory;/*!

 diff v5.1.0

Software License Agreement (BSD License)

Copyright (c) 2009-2015, Kevin Decker <kpdecker@gmail.com>

All rights reserved.

Redistribution and use of this software in source and binary forms, with or without modification,
are permitted provided that the following conditions are met:

* Redistributions of source code must retain the above
  copyright notice, this list of conditions and the
  following disclaimer.

* Redistributions in binary form must reproduce the above
  copyright notice, this list of conditions and the
  following disclaimer in the documentation and/or other
  materials provided with the distribution.

* Neither the name of Kevin Decker nor the names of its
  contributors may be used to endorse or promote products
  derived from this software without specific prior
  written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR
IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER
IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@license
*/global=this,factory=function(exports){function Diff(){}function buildValues(diff,components,newString,oldString,useLongestToken){for(var componentPos=0,componentLen=components.length,newPos=0,oldPos=0;componentPos<componentLen;componentPos++){var component=components[componentPos];if(component.removed){if(component.value=diff.join(oldString.slice(oldPos,oldPos+component.count)),oldPos+=component.count,componentPos&&components[componentPos-1].added){var tmp=components[componentPos-1];components[componentPos-1]=components[componentPos],components[componentPos]=tmp}}else{if(!component.added&&useLongestToken){var value=newString.slice(newPos,newPos+component.count);value=value.map(function(value,i){var oldValue=oldString[oldPos+i];return oldValue.length>value.length?oldValue:value}),component.value=diff.join(value)}else component.value=diff.join(newString.slice(newPos,newPos+component.count));newPos+=component.count,component.added||(oldPos+=component.count)}}var lastComponent=components[componentLen-1];return componentLen>1&&"string"==typeof lastComponent.value&&(lastComponent.added||lastComponent.removed)&&diff.equals("",lastComponent.value)&&(components[componentLen-2].value+=lastComponent.value,components.pop()),components}function clonePath(path){return{newPos:path.newPos,components:path.components.slice(0)}}Diff.prototype={diff:function diff(oldString,newString){var options=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},callback=options.callback;"function"==typeof options&&(callback=options,options={}),this.options=options;var self1=this;function done(value){return callback?(setTimeout(function(){callback(void 0,value)},0),!0):value}oldString=this.castInput(oldString),newString=this.castInput(newString),oldString=this.removeEmpty(this.tokenize(oldString));var newLen=(newString=this.removeEmpty(this.tokenize(newString))).length,oldLen=oldString.length,editLength=1,maxEditLength=newLen+oldLen;options.maxEditLength&&(maxEditLength=Math.min(maxEditLength,options.maxEditLength));var bestPath=[{newPos:-1,components:[]}],oldPos=this.extractCommon(bestPath[0],newString,oldString,0);if(bestPath[0].newPos+1>=newLen&&oldPos+1>=oldLen)return done([{value:this.join(newString),count:newString.length}]);function execEditLength(){for(var diagonalPath=-1*editLength;diagonalPath<=editLength;diagonalPath+=2){var basePath=void 0,addPath=bestPath[diagonalPath-1],removePath=bestPath[diagonalPath+1],_oldPos=(removePath?removePath.newPos:0)-diagonalPath;addPath&&(bestPath[diagonalPath-1]=void 0);var canAdd=addPath&&addPath.newPos+1<newLen,canRemove=removePath&&0<=_oldPos&&_oldPos<oldLen;if(!canAdd&&!canRemove){bestPath[diagonalPath]=void 0;continue}if(!canAdd||canRemove&&addPath.newPos<removePath.newPos?(basePath=clonePath(removePath),self1.pushComponent(basePath.components,void 0,!0)):(basePath=addPath,basePath.newPos++,self1.pushComponent(basePath.components,!0,void 0)),_oldPos=self1.extractCommon(basePath,newString,oldString,diagonalPath),basePath.newPos+1>=newLen&&_oldPos+1>=oldLen)return done(buildValues(self1,basePath.components,newString,oldString,self1.useLongestToken));bestPath[diagonalPath]=basePath}editLength++}if(callback)!function exec(){setTimeout(function(){if(editLength>maxEditLength)return callback();execEditLength()||exec()},0)}();else for(;editLength<=maxEditLength;){var ret=execEditLength();if(ret)return ret}},pushComponent:function pushComponent(components,added,removed){var last=components[components.length-1];last&&last.added===added&&last.removed===removed?components[components.length-1]={count:last.count+1,added:added,removed:removed}:components.push({count:1,added:added,removed:removed})},extractCommon:function extractCommon(basePath,newString,oldString,diagonalPath){for(var newLen=newString.length,oldLen=oldString.length,newPos=basePath.newPos,oldPos=newPos-diagonalPath,commonCount=0;newPos+1<newLen&&oldPos+1<oldLen&&this.equals(newString[newPos+1],oldString[oldPos+1]);)newPos++,oldPos++,commonCount++;return commonCount&&basePath.components.push({count:commonCount}),basePath.newPos=newPos,oldPos},equals:function equals(left,right){return this.options.comparator?this.options.comparator(left,right):left===right||this.options.ignoreCase&&left.toLowerCase()===right.toLowerCase()},removeEmpty:function removeEmpty(array){for(var ret=[],i=0;i<array.length;i++)array[i]&&ret.push(array[i]);return ret},castInput:function castInput(value){return value},tokenize:function tokenize(value){return value.split("")},join:function join(chars){return chars.join("")}};var characterDiff=new Diff;function diffChars(oldStr,newStr,options){return characterDiff.diff(oldStr,newStr,options)}function generateOptions(options,defaults){if("function"==typeof options)defaults.callback=options;else if(options)for(var name in options)options.hasOwnProperty(name)&&(defaults[name]=options[name]);return defaults}var extendedWordChars=/^[A-Za-z\xC0-\u02C6\u02C8-\u02D7\u02DE-\u02FF\u1E00-\u1EFF]+$/,reWhitespace=/\S/,wordDiff=new Diff;function diffWords(oldStr,newStr,options){return options=generateOptions(options,{ignoreWhitespace:!0}),wordDiff.diff(oldStr,newStr,options)}function diffWordsWithSpace(oldStr,newStr,options){return wordDiff.diff(oldStr,newStr,options)}wordDiff.equals=function(left,right){return this.options.ignoreCase&&(left=left.toLowerCase(),right=right.toLowerCase()),left===right||this.options.ignoreWhitespace&&!reWhitespace.test(left)&&!reWhitespace.test(right)},wordDiff.tokenize=function(value){for(var tokens=value.split(/([^\S\r\n]+|[()[\]{}'"\r\n]|\b)/),i=0;i<tokens.length-1;i++)!tokens[i+1]&&tokens[i+2]&&extendedWordChars.test(tokens[i])&&extendedWordChars.test(tokens[i+2])&&(tokens[i]+=tokens[i+2],tokens.splice(i+1,2),i--);return tokens};var lineDiff=new Diff;function diffLines(oldStr,newStr,callback){return lineDiff.diff(oldStr,newStr,callback)}function diffTrimmedLines(oldStr,newStr,callback){var options=generateOptions(callback,{ignoreWhitespace:!0});return lineDiff.diff(oldStr,newStr,options)}lineDiff.tokenize=function(value){var retLines=[],linesAndNewlines=value.split(/(\n|\r\n)/);linesAndNewlines[linesAndNewlines.length-1]||linesAndNewlines.pop();for(var i=0;i<linesAndNewlines.length;i++){var line=linesAndNewlines[i];i%2&&!this.options.newlineIsToken?retLines[retLines.length-1]+=line:(this.options.ignoreWhitespace&&(line=line.trim()),retLines.push(line))}return retLines};var sentenceDiff=new Diff;function diffSentences(oldStr,newStr,callback){return sentenceDiff.diff(oldStr,newStr,callback)}sentenceDiff.tokenize=function(value){return value.split(/(\S.+?[.!?])(?=\s+|$)/)};var cssDiff=new Diff;function diffCss(oldStr,newStr,callback){return cssDiff.diff(oldStr,newStr,callback)}function _typeof(obj){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_unsupportedIterableToArray(arr)||_nonIterableSpread()}function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}function _iterableToArray(iter){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(iter))return Array.from(iter)}function _unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _nonIterableSpread(){throw TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}cssDiff.tokenize=function(value){return value.split(/([{}:;,]|\s+)/)};var objectPrototypeToString=Object.prototype.toString,jsonDiff=new Diff;function diffJson(oldObj,newObj,options){return jsonDiff.diff(oldObj,newObj,options)}function canonicalize(obj,stack,replacementStack,replacer,key){for(stack=stack||[],replacementStack=replacementStack||[],replacer&&(obj=replacer(key,obj)),i=0;i<stack.length;i+=1)if(stack[i]===obj)return replacementStack[i];if("[object Array]"===objectPrototypeToString.call(obj)){for(stack.push(obj),canonicalizedObj=Array(obj.length),replacementStack.push(canonicalizedObj),i=0;i<obj.length;i+=1)canonicalizedObj[i]=canonicalize(obj[i],stack,replacementStack,replacer,key);return stack.pop(),replacementStack.pop(),canonicalizedObj}if(obj&&obj.toJSON&&(obj=obj.toJSON()),"object"===_typeof(obj)&&null!==obj){stack.push(obj),canonicalizedObj={},replacementStack.push(canonicalizedObj);var i,canonicalizedObj,_key,sortedKeys=[];for(_key in obj)obj.hasOwnProperty(_key)&&sortedKeys.push(_key);for(sortedKeys.sort(),i=0;i<sortedKeys.length;i+=1)canonicalizedObj[_key=sortedKeys[i]]=canonicalize(obj[_key],stack,replacementStack,replacer,_key);stack.pop(),replacementStack.pop()}else canonicalizedObj=obj;return canonicalizedObj}jsonDiff.useLongestToken=!0,jsonDiff.tokenize=lineDiff.tokenize,jsonDiff.castInput=function(value){var _this$options=this.options,undefinedReplacement=_this$options.undefinedReplacement,_this$options$stringi=_this$options.stringifyReplacer,stringifyReplacer=void 0===_this$options$stringi?function(k,v){return void 0===v?undefinedReplacement:v}:_this$options$stringi;return"string"==typeof value?value:JSON.stringify(canonicalize(value,null,null,stringifyReplacer),stringifyReplacer,"  ")},jsonDiff.equals=function(left,right){return Diff.prototype.equals.call(jsonDiff,left.replace(/,([\r\n])/g,"$1"),right.replace(/,([\r\n])/g,"$1"))};var arrayDiff=new Diff;function diffArrays(oldArr,newArr,callback){return arrayDiff.diff(oldArr,newArr,callback)}function parsePatch(uniDiff){var options=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},diffstr=uniDiff.split(/\r\n|[\n\v\f\r\x85]/),delimiters=uniDiff.match(/\r\n|[\n\v\f\r\x85]/g)||[],list=[],i=0;function parseIndex(){var index={};for(list.push(index);i<diffstr.length;){var line=diffstr[i];if(/^(\-\-\-|\+\+\+|@@)\s/.test(line))break;var header=/^(?:Index:|diff(?: -r \w+)+)\s+(.+?)\s*$/.exec(line);header&&(index.index=header[1]),i++}for(parseFileHeader(index),parseFileHeader(index),index.hunks=[];i<diffstr.length;){var _line=diffstr[i];if(/^(Index:|diff|\-\-\-|\+\+\+)\s/.test(_line))break;if(/^@@/.test(_line))index.hunks.push(parseHunk());else if(_line&&options.strict)throw Error("Unknown line "+(i+1)+" "+JSON.stringify(_line));else i++}}function parseFileHeader(index){var fileHeader=/^(---|\+\+\+)\s+(.*)$/.exec(diffstr[i]);if(fileHeader){var keyPrefix="---"===fileHeader[1]?"old":"new",data=fileHeader[2].split("	",2),fileName=data[0].replace(/\\\\/g,"\\");/^".*"$/.test(fileName)&&(fileName=fileName.substr(1,fileName.length-2)),index[keyPrefix+"FileName"]=fileName,index[keyPrefix+"Header"]=(data[1]||"").trim(),i++}}function parseHunk(){var chunkHeaderIndex=i,chunkHeader=diffstr[i++].split(/@@ -(\d+)(?:,(\d+))? \+(\d+)(?:,(\d+))? @@/),hunk={oldStart:+chunkHeader[1],oldLines:void 0===chunkHeader[2]?1:+chunkHeader[2],newStart:+chunkHeader[3],newLines:void 0===chunkHeader[4]?1:+chunkHeader[4],lines:[],linedelimiters:[]};0===hunk.oldLines&&(hunk.oldStart+=1),0===hunk.newLines&&(hunk.newStart+=1);for(var addCount=0,removeCount=0;i<diffstr.length&&(0!==diffstr[i].indexOf("--- ")||!(i+2<diffstr.length)||0!==diffstr[i+1].indexOf("+++ ")||0!==diffstr[i+2].indexOf("@@"));i++){var operation=0==diffstr[i].length&&i!=diffstr.length-1?" ":diffstr[i][0];if("+"===operation||"-"===operation||" "===operation||"\\"===operation)hunk.lines.push(diffstr[i]),hunk.linedelimiters.push(delimiters[i]||"\n"),"+"===operation?addCount++:"-"===operation?removeCount++:" "===operation&&(addCount++,removeCount++);else break}if(addCount||1!==hunk.newLines||(hunk.newLines=0),removeCount||1!==hunk.oldLines||(hunk.oldLines=0),options.strict){if(addCount!==hunk.newLines)throw Error("Added line count did not match for hunk at line "+(chunkHeaderIndex+1));if(removeCount!==hunk.oldLines)throw Error("Removed line count did not match for hunk at line "+(chunkHeaderIndex+1))}return hunk}for(;i<diffstr.length;)parseIndex();return list}function distanceIterator(start,minLine,maxLine){var wantForward=!0,backwardExhausted=!1,forwardExhausted=!1,localOffset=1;return function iterator(){if(wantForward&&!forwardExhausted){if(backwardExhausted?localOffset++:wantForward=!1,start+localOffset<=maxLine)return localOffset;forwardExhausted=!0}if(!backwardExhausted)return(forwardExhausted||(wantForward=!0),minLine<=start-localOffset)?-localOffset++:(backwardExhausted=!0,iterator())}}function applyPatch(source,uniDiff){var options=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("string"==typeof uniDiff&&(uniDiff=parsePatch(uniDiff)),Array.isArray(uniDiff)){if(uniDiff.length>1)throw Error("applyPatch only works with a single input.");uniDiff=uniDiff[0]}var removeEOFNL,addEOFNL,lines=source.split(/\r\n|[\n\v\f\r\x85]/),delimiters=source.match(/\r\n|[\n\v\f\r\x85]/g)||[],hunks=uniDiff.hunks,compareLine=options.compareLine||function(lineNumber,line,operation,patchContent){return line===patchContent},errorCount=0,fuzzFactor=options.fuzzFactor||0,minLine=0,offset=0;function hunkFits(hunk,toPos){for(var j=0;j<hunk.lines.length;j++){var line=hunk.lines[j],operation=line.length>0?line[0]:" ",content=line.length>0?line.substr(1):line;if(" "===operation||"-"===operation){if(!compareLine(toPos+1,lines[toPos],operation,content)&&++errorCount>fuzzFactor)return!1;toPos++}}return!0}for(var i=0;i<hunks.length;i++){for(var hunk=hunks[i],maxLine=lines.length-hunk.oldLines,localOffset=0,toPos=offset+hunk.oldStart-1,iterator=distanceIterator(toPos,minLine,maxLine);void 0!==localOffset;localOffset=iterator())if(hunkFits(hunk,toPos+localOffset)){hunk.offset=offset+=localOffset;break}if(void 0===localOffset)return!1;minLine=hunk.offset+hunk.oldStart+hunk.oldLines}for(var diffOffset=0,_i=0;_i<hunks.length;_i++){var _hunk=hunks[_i],_toPos=_hunk.oldStart+_hunk.offset+diffOffset-1;diffOffset+=_hunk.newLines-_hunk.oldLines;for(var j=0;j<_hunk.lines.length;j++){var line=_hunk.lines[j],operation=line.length>0?line[0]:" ",content=line.length>0?line.substr(1):line,delimiter=_hunk.linedelimiters[j];if(" "===operation)_toPos++;else if("-"===operation)lines.splice(_toPos,1),delimiters.splice(_toPos,1);else if("+"===operation)lines.splice(_toPos,0,content),delimiters.splice(_toPos,0,delimiter),_toPos++;else if("\\"===operation){var previousOperation=_hunk.lines[j-1]?_hunk.lines[j-1][0]:null;"+"===previousOperation?removeEOFNL=!0:"-"===previousOperation&&(addEOFNL=!0)}}}if(removeEOFNL)for(;!lines[lines.length-1];)lines.pop(),delimiters.pop();else addEOFNL&&(lines.push(""),delimiters.push("\n"));for(var _k=0;_k<lines.length-1;_k++)lines[_k]=lines[_k]+delimiters[_k];return lines.join("")}function applyPatches(uniDiff,options){"string"==typeof uniDiff&&(uniDiff=parsePatch(uniDiff));var currentIndex=0;function processIndex(){var index=uniDiff[currentIndex++];if(!index)return options.complete();options.loadFile(index,function(err,data){if(err)return options.complete(err);var updatedContent=applyPatch(data,index,options);options.patched(index,updatedContent,function(err){if(err)return options.complete(err);processIndex()})})}processIndex()}function structuredPatch(oldFileName,newFileName,oldStr,newStr,oldHeader,newHeader,options){options||(options={}),void 0===options.context&&(options.context=4);var diff=diffLines(oldStr,newStr,options);if(diff){diff.push({value:"",lines:[]});for(var hunks=[],oldRangeStart=0,newRangeStart=0,curRange=[],oldLine=1,newLine=1,i=0;i<diff.length;i++)!function(i){var current=diff[i],lines=current.lines||current.value.replace(/\n$/,"").split("\n");if(current.lines=lines,current.added||current.removed){if(!oldRangeStart){var prev=diff[i-1];oldRangeStart=oldLine,newRangeStart=newLine,prev&&(curRange=options.context>0?contextLines(prev.lines.slice(-options.context)):[],oldRangeStart-=curRange.length,newRangeStart-=curRange.length)}(_curRange=curRange).push.apply(_curRange,_toConsumableArray(lines.map(function(entry){return(current.added?"+":"-")+entry}))),current.added?newLine+=lines.length:oldLine+=lines.length}else{if(oldRangeStart){if(lines.length<=2*options.context&&i<diff.length-2)(_curRange2=curRange).push.apply(_curRange2,_toConsumableArray(contextLines(lines)));else{var _curRange,_curRange2,_curRange3,contextSize=Math.min(lines.length,options.context);(_curRange3=curRange).push.apply(_curRange3,_toConsumableArray(contextLines(lines.slice(0,contextSize))));var hunk={oldStart:oldRangeStart,oldLines:oldLine-oldRangeStart+contextSize,newStart:newRangeStart,newLines:newLine-newRangeStart+contextSize,lines:curRange};if(i>=diff.length-2&&lines.length<=options.context){var oldEOFNewline=/\n$/.test(oldStr),newEOFNewline=/\n$/.test(newStr),noNlBeforeAdds=0==lines.length&&curRange.length>hunk.oldLines;!oldEOFNewline&&noNlBeforeAdds&&oldStr.length>0&&curRange.splice(hunk.oldLines,0,"\\ No newline at end of file"),(oldEOFNewline||noNlBeforeAdds)&&newEOFNewline||curRange.push("\\ No newline at end of file")}hunks.push(hunk),oldRangeStart=0,newRangeStart=0,curRange=[]}}oldLine+=lines.length,newLine+=lines.length}}(i);return{oldFileName:oldFileName,newFileName:newFileName,oldHeader:oldHeader,newHeader:newHeader,hunks:hunks}}function contextLines(lines){return lines.map(function(entry){return" "+entry})}}function formatPatch(diff){var ret=[];diff.oldFileName==diff.newFileName&&ret.push("Index: "+diff.oldFileName),ret.push("==================================================================="),ret.push("--- "+diff.oldFileName+(void 0===diff.oldHeader?"":"	"+diff.oldHeader)),ret.push("+++ "+diff.newFileName+(void 0===diff.newHeader?"":"	"+diff.newHeader));for(var i=0;i<diff.hunks.length;i++){var hunk=diff.hunks[i];0===hunk.oldLines&&(hunk.oldStart-=1),0===hunk.newLines&&(hunk.newStart-=1),ret.push("@@ -"+hunk.oldStart+","+hunk.oldLines+" +"+hunk.newStart+","+hunk.newLines+" @@"),ret.push.apply(ret,hunk.lines)}return ret.join("\n")+"\n"}function createTwoFilesPatch(oldFileName,newFileName,oldStr,newStr,oldHeader,newHeader,options){return formatPatch(structuredPatch(oldFileName,newFileName,oldStr,newStr,oldHeader,newHeader,options))}function createPatch(fileName,oldStr,newStr,oldHeader,newHeader,options){return createTwoFilesPatch(fileName,fileName,oldStr,newStr,oldHeader,newHeader,options)}function arrayEqual(a,b){return a.length===b.length&&arrayStartsWith(a,b)}function arrayStartsWith(array,start){if(start.length>array.length)return!1;for(var i=0;i<start.length;i++)if(start[i]!==array[i])return!1;return!0}function calcLineCount(hunk){var _calcOldNewLineCount=calcOldNewLineCount(hunk.lines),oldLines=_calcOldNewLineCount.oldLines,newLines=_calcOldNewLineCount.newLines;void 0!==oldLines?hunk.oldLines=oldLines:delete hunk.oldLines,void 0!==newLines?hunk.newLines=newLines:delete hunk.newLines}function merge(mine,theirs,base){mine=loadPatch(mine,base),theirs=loadPatch(theirs,base);var ret={};(mine.index||theirs.index)&&(ret.index=mine.index||theirs.index),(mine.newFileName||theirs.newFileName)&&(fileNameChanged(mine)?fileNameChanged(theirs)?(ret.oldFileName=selectField(ret,mine.oldFileName,theirs.oldFileName),ret.newFileName=selectField(ret,mine.newFileName,theirs.newFileName),ret.oldHeader=selectField(ret,mine.oldHeader,theirs.oldHeader),ret.newHeader=selectField(ret,mine.newHeader,theirs.newHeader)):(ret.oldFileName=mine.oldFileName,ret.newFileName=mine.newFileName,ret.oldHeader=mine.oldHeader,ret.newHeader=mine.newHeader):(ret.oldFileName=theirs.oldFileName||mine.oldFileName,ret.newFileName=theirs.newFileName||mine.newFileName,ret.oldHeader=theirs.oldHeader||mine.oldHeader,ret.newHeader=theirs.newHeader||mine.newHeader)),ret.hunks=[];for(var mineIndex=0,theirsIndex=0,mineOffset=0,theirsOffset=0;mineIndex<mine.hunks.length||theirsIndex<theirs.hunks.length;){var mineCurrent=mine.hunks[mineIndex]||{oldStart:1/0},theirsCurrent=theirs.hunks[theirsIndex]||{oldStart:1/0};if(hunkBefore(mineCurrent,theirsCurrent))ret.hunks.push(cloneHunk(mineCurrent,mineOffset)),mineIndex++,theirsOffset+=mineCurrent.newLines-mineCurrent.oldLines;else if(hunkBefore(theirsCurrent,mineCurrent))ret.hunks.push(cloneHunk(theirsCurrent,theirsOffset)),theirsIndex++,mineOffset+=theirsCurrent.newLines-theirsCurrent.oldLines;else{var mergedHunk={oldStart:Math.min(mineCurrent.oldStart,theirsCurrent.oldStart),oldLines:0,newStart:Math.min(mineCurrent.newStart+mineOffset,theirsCurrent.oldStart+theirsOffset),newLines:0,lines:[]};mergeLines(mergedHunk,mineCurrent.oldStart,mineCurrent.lines,theirsCurrent.oldStart,theirsCurrent.lines),theirsIndex++,mineIndex++,ret.hunks.push(mergedHunk)}}return ret}function loadPatch(param,base){if("string"==typeof param){if(/^@@/m.test(param)||/^Index:/m.test(param))return parsePatch(param)[0];if(!base)throw Error("Must provide a base reference or pass in a patch");return structuredPatch(void 0,void 0,base,param)}return param}function fileNameChanged(patch){return patch.newFileName&&patch.newFileName!==patch.oldFileName}function selectField(index,mine,theirs){return mine===theirs?mine:(index.conflict=!0,{mine:mine,theirs:theirs})}function hunkBefore(test,check){return test.oldStart<check.oldStart&&test.oldStart+test.oldLines<check.oldStart}function cloneHunk(hunk,offset){return{oldStart:hunk.oldStart,oldLines:hunk.oldLines,newStart:hunk.newStart+offset,newLines:hunk.newLines,lines:hunk.lines}}function mergeLines(hunk,mineOffset,mineLines,theirOffset,theirLines){var mine={offset:mineOffset,lines:mineLines,index:0},their={offset:theirOffset,lines:theirLines,index:0};for(insertLeading(hunk,mine,their),insertLeading(hunk,their,mine);mine.index<mine.lines.length&&their.index<their.lines.length;){var _hunk$lines,_hunk$lines2,mineCurrent=mine.lines[mine.index],theirCurrent=their.lines[their.index];("-"===mineCurrent[0]||"+"===mineCurrent[0])&&("-"===theirCurrent[0]||"+"===theirCurrent[0])?mutualChange(hunk,mine,their):"+"===mineCurrent[0]&&" "===theirCurrent[0]?(_hunk$lines=hunk.lines).push.apply(_hunk$lines,_toConsumableArray(collectChange(mine))):"+"===theirCurrent[0]&&" "===mineCurrent[0]?(_hunk$lines2=hunk.lines).push.apply(_hunk$lines2,_toConsumableArray(collectChange(their))):"-"===mineCurrent[0]&&" "===theirCurrent[0]?removal(hunk,mine,their):"-"===theirCurrent[0]&&" "===mineCurrent[0]?removal(hunk,their,mine,!0):mineCurrent===theirCurrent?(hunk.lines.push(mineCurrent),mine.index++,their.index++):conflict(hunk,collectChange(mine),collectChange(their))}insertTrailing(hunk,mine),insertTrailing(hunk,their),calcLineCount(hunk)}function mutualChange(hunk,mine,their){var _hunk$lines3,_hunk$lines4,_hunk$lines5,myChanges=collectChange(mine),theirChanges=collectChange(their);if(allRemoves(myChanges)&&allRemoves(theirChanges)){if(arrayStartsWith(myChanges,theirChanges)&&skipRemoveSuperset(their,myChanges,myChanges.length-theirChanges.length)){(_hunk$lines3=hunk.lines).push.apply(_hunk$lines3,_toConsumableArray(myChanges));return}if(arrayStartsWith(theirChanges,myChanges)&&skipRemoveSuperset(mine,theirChanges,theirChanges.length-myChanges.length)){(_hunk$lines4=hunk.lines).push.apply(_hunk$lines4,_toConsumableArray(theirChanges));return}}else if(arrayEqual(myChanges,theirChanges)){(_hunk$lines5=hunk.lines).push.apply(_hunk$lines5,_toConsumableArray(myChanges));return}conflict(hunk,myChanges,theirChanges)}function removal(hunk,mine,their,swap){var _hunk$lines6,myChanges=collectChange(mine),theirChanges=collectContext(their,myChanges);theirChanges.merged?(_hunk$lines6=hunk.lines).push.apply(_hunk$lines6,_toConsumableArray(theirChanges.merged)):conflict(hunk,swap?theirChanges:myChanges,swap?myChanges:theirChanges)}function conflict(hunk,mine,their){hunk.conflict=!0,hunk.lines.push({conflict:!0,mine:mine,theirs:their})}function insertLeading(hunk,insert,their){for(;insert.offset<their.offset&&insert.index<insert.lines.length;){var line=insert.lines[insert.index++];hunk.lines.push(line),insert.offset++}}function insertTrailing(hunk,insert){for(;insert.index<insert.lines.length;){var line=insert.lines[insert.index++];hunk.lines.push(line)}}function collectChange(state){for(var ret=[],operation=state.lines[state.index][0];state.index<state.lines.length;){var line=state.lines[state.index];if("-"===operation&&"+"===line[0]&&(operation="+"),operation===line[0])ret.push(line),state.index++;else break}return ret}function collectContext(state,matchChanges){for(var changes=[],merged=[],matchIndex=0,contextChanges=!1,conflicted=!1;matchIndex<matchChanges.length&&state.index<state.lines.length;){var change=state.lines[state.index],match=matchChanges[matchIndex];if("+"===match[0])break;if(contextChanges=contextChanges||" "!==change[0],merged.push(match),matchIndex++,"+"===change[0])for(conflicted=!0;"+"===change[0];)changes.push(change),change=state.lines[++state.index];match.substr(1)===change.substr(1)?(changes.push(change),state.index++):conflicted=!0}if("+"===(matchChanges[matchIndex]||"")[0]&&contextChanges&&(conflicted=!0),conflicted)return changes;for(;matchIndex<matchChanges.length;)merged.push(matchChanges[matchIndex++]);return{merged:merged,changes:changes}}function allRemoves(changes){return changes.reduce(function(prev,change){return prev&&"-"===change[0]},!0)}function skipRemoveSuperset(state,removeChanges,delta){for(var i=0;i<delta;i++){var changeContent=removeChanges[removeChanges.length-delta+i].substr(1);if(state.lines[state.index+i]!==" "+changeContent)return!1}return state.index+=delta,!0}function calcOldNewLineCount(lines){var oldLines=0,newLines=0;return lines.forEach(function(line){if("string"!=typeof line){var myCount=calcOldNewLineCount(line.mine),theirCount=calcOldNewLineCount(line.theirs);void 0!==oldLines&&(myCount.oldLines===theirCount.oldLines?oldLines+=myCount.oldLines:oldLines=void 0),void 0!==newLines&&(myCount.newLines===theirCount.newLines?newLines+=myCount.newLines:newLines=void 0)}else void 0!==newLines&&("+"===line[0]||" "===line[0])&&newLines++,void 0!==oldLines&&("-"===line[0]||" "===line[0])&&oldLines++}),{oldLines:oldLines,newLines:newLines}}function convertChangesToDMP(changes){for(var change,ret=[],i=0;i<changes.length;i++)ret.push([(change=changes[i]).added?1:change.removed?-1:0,change.value]);return ret}function convertChangesToXML(changes){for(var ret=[],i=0;i<changes.length;i++){var change=changes[i];change.added?ret.push("<ins>"):change.removed&&ret.push("<del>"),ret.push(escapeHTML(change.value)),change.added?ret.push("</ins>"):change.removed&&ret.push("</del>")}return ret.join("")}function escapeHTML(s){var n=s;return(n=(n=(n=n.replace(/&/g,"&amp;")).replace(/</g,"&lt;")).replace(/>/g,"&gt;")).replace(/"/g,"&quot;")}arrayDiff.tokenize=function(value){return value.slice()},arrayDiff.join=arrayDiff.removeEmpty=function(value){return value},exports.Diff=Diff,exports.applyPatch=applyPatch,exports.applyPatches=applyPatches,exports.canonicalize=canonicalize,exports.convertChangesToDMP=convertChangesToDMP,exports.convertChangesToXML=convertChangesToXML,exports.createPatch=createPatch,exports.createTwoFilesPatch=createTwoFilesPatch,exports.diffArrays=diffArrays,exports.diffChars=diffChars,exports.diffCss=diffCss,exports.diffJson=diffJson,exports.diffLines=diffLines,exports.diffSentences=diffSentences,exports.diffTrimmedLines=diffTrimmedLines,exports.diffWords=diffWords,exports.diffWordsWithSpace=diffWordsWithSpace,exports.merge=merge,exports.parsePatch=parsePatch,exports.structuredPatch=structuredPatch,Object.defineProperty(exports,"__esModule",{value:!0})},"object"==typeof exports&&void 0!==module?factory(exports):"function"==typeof define&&__webpack_require__.amdO?define(["exports"],factory):factory((global=global||self).Diff={})},{}],114:[function(require1,module,exports){function extend(){var args=[].slice.call(arguments),deep=!1;"boolean"==typeof args[0]&&(deep=args.shift());var result=args[0];if(isUnextendable(result))throw Error("extendee must be an object");for(var extenders=args.slice(1),len=extenders.length,i=0;i<len;i++){var extender=extenders[i];for(var key in extender)if(Object.prototype.hasOwnProperty.call(extender,key)){var value=extender[key];if(deep&&isCloneable(value)){var base=Array.isArray(value)?[]:{};result[key]=extend(!0,Object.prototype.hasOwnProperty.call(result,key)&&!isUnextendable(result[key])?result[key]:base,value)}else result[key]=value}}return result}function isCloneable(obj){return Array.isArray(obj)||"[object Object]"==({}).toString.call(obj)}function isUnextendable(val){return!val||"object"!=typeof val&&"function"!=typeof val}module.exports=extend},{}],115:[function(require1,module,exports){var uid,HASH_UNDEFINED="__lodash_hash_undefined__",INFINITY=1/0,reIsDeepProp=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,reIsPlainProp=/^\w*$/,reLeadingDot=/^\./,rePropName=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,reEscapeChar=/\\(\\)?/g,reIsHostCtor=/^\[object .+?Constructor\]$/,freeGlobal="object"==typeof __webpack_require__.g&&__webpack_require__.g&&__webpack_require__.g.Object===Object&&__webpack_require__.g,freeSelf="object"==typeof self&&self&&self.Object===Object&&self,root=freeGlobal||freeSelf||Function("return this")();function getValue(object,key){return null==object?void 0:object[key]}function isHostObject(value){var result=!1;if(null!=value&&"function"!=typeof value.toString)try{result=!!(value+"")}catch(e){}return result}var arrayProto=Array.prototype,funcProto=Function.prototype,objectProto=Object.prototype,coreJsData=root["__core-js_shared__"],maskSrcKey=(uid=/[^.]+$/.exec(coreJsData&&coreJsData.keys&&coreJsData.keys.IE_PROTO||""))?"Symbol(src)_1."+uid:"",funcToString=funcProto.toString,hasOwnProperty=objectProto.hasOwnProperty,objectToString=objectProto.toString,reIsNative=RegExp("^"+funcToString.call(hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Symbol1=root.Symbol,splice=arrayProto.splice,Map1=getNative(root,"Map"),nativeCreate=getNative(Object,"create"),symbolProto=Symbol1?Symbol1.prototype:void 0,symbolToString=symbolProto?symbolProto.toString:void 0;function Hash(entries){var index=-1,length=entries?entries.length:0;for(this.clear();++index<length;){var entry=entries[index];this.set(entry[0],entry[1])}}function hashClear(){this.__data__=nativeCreate?nativeCreate(null):{}}function hashDelete(key){return this.has(key)&&delete this.__data__[key]}function hashGet(key){var data=this.__data__;if(nativeCreate){var result=data[key];return result===HASH_UNDEFINED?void 0:result}return hasOwnProperty.call(data,key)?data[key]:void 0}function hashHas(key){var data=this.__data__;return nativeCreate?void 0!==data[key]:hasOwnProperty.call(data,key)}function hashSet(key,value){return this.__data__[key]=nativeCreate&&void 0===value?HASH_UNDEFINED:value,this}function ListCache(entries){var index=-1,length=entries?entries.length:0;for(this.clear();++index<length;){var entry=entries[index];this.set(entry[0],entry[1])}}function listCacheClear(){this.__data__=[]}function listCacheDelete(key){var data=this.__data__,index=assocIndexOf(data,key);return!(index<0)&&(index==data.length-1?data.pop():splice.call(data,index,1),!0)}function listCacheGet(key){var data=this.__data__,index=assocIndexOf(data,key);return index<0?void 0:data[index][1]}function listCacheHas(key){return assocIndexOf(this.__data__,key)>-1}function listCacheSet(key,value){var data=this.__data__,index=assocIndexOf(data,key);return index<0?data.push([key,value]):data[index][1]=value,this}function MapCache(entries){var index=-1,length=entries?entries.length:0;for(this.clear();++index<length;){var entry=entries[index];this.set(entry[0],entry[1])}}function mapCacheClear(){this.__data__={hash:new Hash,map:new(Map1||ListCache),string:new Hash}}function mapCacheDelete(key){return getMapData(this,key).delete(key)}function mapCacheGet(key){return getMapData(this,key).get(key)}function mapCacheHas(key){return getMapData(this,key).has(key)}function mapCacheSet(key,value){return getMapData(this,key).set(key,value),this}function assocIndexOf(array,key){for(var length=array.length;length--;)if(eq(array[length][0],key))return length;return -1}function baseGet(object,path){path=isKey(path,object)?[path]:castPath(path);for(var index=0,length=path.length;null!=object&&index<length;)object=object[toKey(path[index++])];return index&&index==length?object:void 0}function baseIsNative(value){return!(!isObject(value)||isMasked(value))&&(isFunction(value)||isHostObject(value)?reIsNative:reIsHostCtor).test(toSource(value))}function baseToString(value){if("string"==typeof value)return value;if(isSymbol(value))return symbolToString?symbolToString.call(value):"";var result=value+"";return"0"==result&&1/value==-INFINITY?"-0":result}function castPath(value){return isArray(value)?value:stringToPath(value)}function getMapData(map,key){var data=map.__data__;return isKeyable(key)?data["string"==typeof key?"string":"hash"]:data.map}function getNative(object,key){var value=getValue(object,key);return baseIsNative(value)?value:void 0}function isKey(value,object){if(isArray(value))return!1;var type=typeof value;return!!("number"==type||"symbol"==type||"boolean"==type||null==value||isSymbol(value))||reIsPlainProp.test(value)||!reIsDeepProp.test(value)||null!=object&&value in Object(object)}function isKeyable(value){var type=typeof value;return"string"==type||"number"==type||"symbol"==type||"boolean"==type?"__proto__"!==value:null===value}function isMasked(func){return!!maskSrcKey&&maskSrcKey in func}Hash.prototype.clear=hashClear,Hash.prototype.delete=hashDelete,Hash.prototype.get=hashGet,Hash.prototype.has=hashHas,Hash.prototype.set=hashSet,ListCache.prototype.clear=listCacheClear,ListCache.prototype.delete=listCacheDelete,ListCache.prototype.get=listCacheGet,ListCache.prototype.has=listCacheHas,ListCache.prototype.set=listCacheSet,MapCache.prototype.clear=mapCacheClear,MapCache.prototype.delete=mapCacheDelete,MapCache.prototype.get=mapCacheGet,MapCache.prototype.has=mapCacheHas,MapCache.prototype.set=mapCacheSet;var stringToPath=memoize(function(string){string=toString(string);var result=[];return reLeadingDot.test(string)&&result.push(""),string.replace(rePropName,function(match,number,quote,string){result.push(quote?string.replace(reEscapeChar,"$1"):number||match)}),result});function toKey(value){if("string"==typeof value||isSymbol(value))return value;var result=value+"";return"0"==result&&1/value==-INFINITY?"-0":result}function toSource(func){if(null!=func){try{return funcToString.call(func)}catch(e){}try{return func+""}catch(e){}}return""}function memoize(func,resolver){if("function"!=typeof func||resolver&&"function"!=typeof resolver)throw TypeError("Expected a function");var memoized=function(){var args=arguments,key=resolver?resolver.apply(this,args):args[0],cache=memoized.cache;if(cache.has(key))return cache.get(key);var result=func.apply(this,args);return memoized.cache=cache.set(key,result),result};return memoized.cache=new(memoize.Cache||MapCache),memoized}function eq(value,other){return value===other||value!=value&&other!=other}memoize.Cache=MapCache;var isArray=Array.isArray;function isFunction(value){var tag=isObject(value)?objectToString.call(value):"";return"[object Function]"==tag||"[object GeneratorFunction]"==tag}function isObject(value){var type=typeof value;return!!value&&("object"==type||"function"==type)}function isObjectLike(value){return!!value&&"object"==typeof value}function isSymbol(value){return"symbol"==typeof value||isObjectLike(value)&&"[object Symbol]"==objectToString.call(value)}function toString(value){return null==value?"":baseToString(value)}function get(object,path,defaultValue){var result=null==object?void 0:baseGet(object,path);return void 0===result?defaultValue:result}module.exports=get},{}],116:[function(require1,module,exports){var realSetTimeout=setTimeout;function configureLogger(config){return(config=config||{}).hasOwnProperty("logger")||(config.logger=function(){}),config.hasOwnProperty("useImmediateExceptions")||(config.useImmediateExceptions=!0),config.hasOwnProperty("setTimeout")||(config.setTimeout=realSetTimeout),function logError(label,e){var msg=`${label} threw exception: `,err={name:e.name||label,message:e.message||e.toString(),stack:e.stack};function throwLoggedError(){throw err.message=msg+err.message,err}config.logger(`${msg}[${err.name}] ${err.message}`),err.stack&&config.logger(err.stack),config.useImmediateExceptions?throwLoggedError():config.setTimeout(throwLoggedError,0)}}module.exports=configureLogger},{}],117:[function(require1,module,exports){var Event1=require1("./event");function CustomEvent1(type,customData,target){this.initEvent(type,!1,!1,target),this.detail=customData.detail||null}CustomEvent1.prototype=new Event1,CustomEvent1.prototype.constructor=CustomEvent1,module.exports=CustomEvent1},{"./event":119}],118:[function(require1,module,exports){function flattenOptions(options){return options!==Object(options)?{capture:!!options,once:!1,passive:!1}:{capture:!!options.capture,once:!!options.once,passive:!!options.passive}}function not(fn){return function(){return!fn.apply(this,arguments)}}function hasListenerFilter(listener,capture){return function(listenerSpec){return listenerSpec.capture===capture&&listenerSpec.listener===listener}}module.exports={addEventListener:function addEventListener(event,listener,providedOptions){var options=flattenOptions(providedOptions);null!=listener&&(this.eventListeners=this.eventListeners||{},this.eventListeners[event]=this.eventListeners[event]||[],this.eventListeners[event].some(hasListenerFilter(listener,options.capture))||this.eventListeners[event].push({listener:listener,capture:options.capture,once:options.once}))},removeEventListener:function removeEventListener(event,listener,providedOptions){if(this.eventListeners&&this.eventListeners[event]){var options=flattenOptions(providedOptions);this.eventListeners[event]=this.eventListeners[event].filter(not(hasListenerFilter(listener,options.capture)))}},dispatchEvent:function dispatchEvent(event){if(!this.eventListeners||!this.eventListeners[event.type])return!!event.defaultPrevented;var self1=this,type=event.type,listeners=self1.eventListeners[type];return self1.eventListeners[type]=listeners.filter(function(listenerSpec){return!listenerSpec.once}),listeners.forEach(function(listenerSpec){var listener=listenerSpec.listener;"function"==typeof listener?listener.call(self1,event):listener.handleEvent(event)}),!!event.defaultPrevented}}},{}],119:[function(require1,module,exports){function Event1(type,bubbles,cancelable,target){this.initEvent(type,bubbles,cancelable,target)}Event1.prototype={initEvent:function(type,bubbles,cancelable,target){this.type=type,this.bubbles=bubbles,this.cancelable=cancelable,this.target=target,this.currentTarget=target},stopPropagation:function(){},preventDefault:function(){this.defaultPrevented=!0}},module.exports=Event1},{}],120:[function(require1,module,exports){module.exports={Event:require1("./event"),ProgressEvent:require1("./progress-event"),CustomEvent:require1("./custom-event"),EventTarget:require1("./event-target")}},{"./custom-event":117,"./event":119,"./event-target":118,"./progress-event":121}],121:[function(require1,module,exports){var Event1=require1("./event");function ProgressEvent1(type,progressEventRaw,target){this.initEvent(type,!1,!1,target),this.loaded="number"==typeof progressEventRaw.loaded?progressEventRaw.loaded:null,this.total="number"==typeof progressEventRaw.total?progressEventRaw.total:null,this.lengthComputable=!!progressEventRaw.total}ProgressEvent1.prototype=new Event1,ProgressEvent1.prototype.constructor=ProgressEvent1,module.exports=ProgressEvent1},{"./event":119}],122:[function(require1,module,exports){var FakeTimers=require1("@sinonjs/fake-timers"),fakeServer=require1("./index");function Server(){}Server.prototype=fakeServer;var fakeServerWithClock=new Server;fakeServerWithClock.addRequest=function addRequest(xhr){if(xhr.async&&("object"==typeof setTimeout.clock?this.clock=setTimeout.clock:(this.clock=FakeTimers.install(),this.resetClock=!0),!this.longestTimeout)){var clockSetTimeout=this.clock.setTimeout,clockSetInterval=this.clock.setInterval,server=this;this.clock.setTimeout=function(fn,timeout){return server.longestTimeout=Math.max(timeout,server.longestTimeout||0),clockSetTimeout.apply(this,arguments)},this.clock.setInterval=function(fn,timeout){return server.longestTimeout=Math.max(timeout,server.longestTimeout||0),clockSetInterval.apply(this,arguments)}}return fakeServer.addRequest.call(this,xhr)},fakeServerWithClock.respond=function respond(){var returnVal=fakeServer.respond.apply(this,arguments);return this.clock&&(this.clock.tick(this.longestTimeout||0),this.longestTimeout=0,this.resetClock&&(this.clock.uninstall(),this.resetClock=!1)),returnVal},fakeServerWithClock.restore=function restore(){return this.clock&&this.clock.uninstall(),fakeServer.restore.apply(this,arguments)},module.exports=fakeServerWithClock},{"./index":123,"@sinonjs/fake-timers":147}],123:[function(require1,module,exports){var fakeXhr=require1("../fake-xhr"),push=[].push,log=require1("./log"),configureLogError=require1("../configure-logger"),pathToRegexp=require1("path-to-regexp"),supportsArrayBuffer="undefined"!=typeof ArrayBuffer;function responseArray(handler){var response=handler;if("[object Array]"!==Object.prototype.toString.call(handler)&&(response=[200,{},handler]),"string"!=typeof response[2]){if(supportsArrayBuffer){if(!(response[2]instanceof ArrayBuffer))throw TypeError(`Fake server response body should be a string or ArrayBuffer, but was ${typeof response[2]}`)}else throw TypeError(`Fake server response body should be a string, but was ${typeof response[2]}`)}return response}function getDefaultWindowLocation(){var winloc={hostname:"localhost",port:process.env.PORT||80,protocol:"http:"};return winloc.host=winloc.hostname+("80"===String(winloc.port)?"":`:${winloc.port}`),winloc}function getWindowLocation(){return"undefined"==typeof window?getDefaultWindowLocation():void 0!==window.location?window.location:void 0!==window.window&&void 0!==window.window.location?window.window.location:getDefaultWindowLocation()}function matchOne(response,reqMethod,reqUrl){var rmeth=response.method,matchMethod=!rmeth||rmeth.toLowerCase()===reqMethod.toLowerCase(),url=response.url,matchUrl=!url||url===reqUrl||"function"==typeof url.test&&url.test(reqUrl)||"function"==typeof url&&!0===url(reqUrl);return matchMethod&&matchUrl}function match(response,request){var wloc=getWindowLocation(),rCurrLoc=RegExp(`^${wloc.protocol}//${wloc.host}/`),requestUrl=request.url;if((!/^https?:\/\//.test(requestUrl)||rCurrLoc.test(requestUrl))&&(requestUrl=requestUrl.replace(rCurrLoc,"/")),matchOne(response,this.getHTTPMethod(request),requestUrl)){if("function"==typeof response.response){var ru=response.url,args=[request].concat(ru&&"function"==typeof ru.exec?ru.exec(requestUrl).slice(1):[]);return response.response.apply(response,args)}return!0}return!1}function incrementRequestCount(){var count=++this.requestCount;this.requested=!0,this.requestedOnce=1===count,this.requestedTwice=2===count,this.requestedThrice=3===count,this.firstRequest=this.getRequest(0),this.secondRequest=this.getRequest(1),this.thirdRequest=this.getRequest(2),this.lastRequest=this.getRequest(count-1)}var fakeServer={create:function(config){var server=Object.create(this);return server.configure(config),this.xhr=fakeXhr.useFakeXMLHttpRequest(),server.requests=[],server.requestCount=0,server.queue=[],server.responses=[],this.xhr.onCreate=function(xhrObj){xhrObj.unsafeHeadersEnabled=function(){return!1!==server.unsafeHeadersEnabled},server.addRequest(xhrObj)},server},configure:function(config){var self1=this,allowlist={autoRespond:!0,autoRespondAfter:!0,respondImmediately:!0,fakeHTTPMethods:!0,logger:!0,unsafeHeadersEnabled:!0};Object.keys(config=config||{}).forEach(function(setting){setting in allowlist&&(self1[setting]=config[setting])}),self1.logError=configureLogError(config)},addRequest:function addRequest(xhrObj){var server=this;push.call(this.requests,xhrObj),incrementRequestCount.call(this),xhrObj.onSend=function(){server.handleRequest(this),server.respondImmediately?server.respond():server.autoRespond&&!server.responding&&(setTimeout(function(){server.responding=!1,server.respond()},server.autoRespondAfter||10),server.responding=!0)}},getHTTPMethod:function getHTTPMethod(request){if(this.fakeHTTPMethods&&/post/i.test(request.method)){var matches=(request.requestBody||"").match(/_method=([^\b;]+)/);return matches?matches[1]:request.method}return request.method},handleRequest:function handleRequest(xhr){xhr.async?push.call(this.queue,xhr):this.processRequest(xhr)},logger:function(){},logError:configureLogError({}),log:log,respondWith:function respondWith(method,url,body){if(1==arguments.length&&"function"!=typeof method){this.response=responseArray(method);return}if(1==arguments.length&&(body=method,url=method=null),2==arguments.length&&(body=url,url=method,method=null),"string"==typeof url&&""!==url&&/:[0-9]+\//.test(url)){var m=url.match(/^(https?:\/\/.*?):([0-9]+\/.*)$/);url=`${m[1]}\\:${m[2]}`}push.call(this.responses,{method:method,url:"string"==typeof url&&""!==url?pathToRegexp(url):url,response:"function"==typeof body?body:responseArray(body)})},respond:function respond(){arguments.length>0&&this.respondWith.apply(this,arguments);var queue=this.queue||[],requests=queue.splice(0,queue.length),self1=this;requests.forEach(function(request){self1.processRequest(request)})},respondAll:function respondAll(){var request;if(!this.respondImmediately)for(this.queue=this.requests.slice(0);request=this.queue.shift();)this.processRequest(request)},processRequest:function processRequest(request){try{if(request.aborted)return;var response=this.response||[404,{},""];if(this.responses){for(var l=this.responses.length,i=l-1;i>=0;i--)if(match.call(this,this.responses[i],request)){response=this.responses[i].response;break}}4!==request.readyState&&(this.log(response,request),request.respond(response[0],response[1],response[2]))}catch(e){this.logError("Fake server request processing",e)}},restore:function restore(){return this.xhr.restore&&this.xhr.restore.apply(this.xhr,arguments)},getRequest:function getRequest(index){return this.requests[index]||null},reset:function reset(){this.resetBehavior(),this.resetHistory()},resetBehavior:function resetBehavior(){this.responses.length=this.queue.length=0},resetHistory:function resetHistory(){this.requests.length=this.requestCount=0,this.requestedOnce=this.requestedTwice=this.requestedThrice=this.requested=!1,this.firstRequest=this.secondRequest=this.thirdRequest=this.lastRequest=null}};module.exports=fakeServer},{"../configure-logger":116,"../fake-xhr":126,"./log":124,"path-to-regexp":148}],124:[function(require1,module,exports){var inspect=require1("util").inspect;function log(response,request){var str;str=`Request:
${inspect(request)}

Response:
${inspect(response)}

`,"function"==typeof this.logger&&this.logger(str)}module.exports=log},{util:112}],125:[function(require1,module,exports){exports.isSupported=function(){try{return new Blob,!0}catch(e){return!1}}()},{}],126:[function(require1,module,exports){var GlobalTextEncoder="undefined"!=typeof TextEncoder?TextEncoder:require1("@sinonjs/text-encoding").TextEncoder,globalObject=require1("@sinonjs/commons").global,configureLogError=require1("../configure-logger"),sinonEvent=require1("../event"),extend=require1("just-extend"),supportsProgress="undefined"!=typeof ProgressEvent,supportsCustomEvent="undefined"!=typeof CustomEvent,supportsFormData="undefined"!=typeof FormData,supportsArrayBuffer="undefined"!=typeof ArrayBuffer,supportsBlob=require1("./blob").isSupported;function getWorkingXHR(globalScope){return void 0!==globalScope.XMLHttpRequest?globalScope.XMLHttpRequest:void 0!==globalScope.ActiveXObject&&function(){return new globalScope.ActiveXObject("MSXML2.XMLHTTP.3.0")}}var unsafeHeaders={"Accept-Charset":!0,"Access-Control-Request-Headers":!0,"Access-Control-Request-Method":!0,"Accept-Encoding":!0,Connection:!0,"Content-Length":!0,Cookie:!0,Cookie2:!0,"Content-Transfer-Encoding":!0,Date:!0,DNT:!0,Expect:!0,Host:!0,"Keep-Alive":!0,Origin:!0,Referer:!0,TE:!0,Trailer:!0,"Transfer-Encoding":!0,Upgrade:!0,"User-Agent":!0,Via:!0};function EventTargetHandler(){var self1=this;["loadstart","progress","abort","error","load","timeout","loadend"].forEach(function addEventListener(eventName){self1.addEventListener(eventName,function(event){var listener=self1[`on${eventName}`];listener&&"function"==typeof listener&&listener.call(this,event)})})}function normalizeHeaderValue(value){return value.replace(/^[\x09\x0A\x0D\x20]+|[\x09\x0A\x0D\x20]+$/g,"")}function getHeader(headers,header){return Object.keys(headers).filter(function(h){return h.toLowerCase()===header.toLowerCase()})[0]||null}function excludeSetCookie2Header(header){return!/^Set-Cookie2?$/i.test(header)}function verifyResponseBodyType(body,responseType){var error=null,isString="string"==typeof body;if("arraybuffer"===responseType?isString||body instanceof ArrayBuffer||((error=Error(`Attempted to respond to fake XMLHttpRequest with ${body}, which is not a string or ArrayBuffer.`)).name="InvalidBodyException"):"blob"===responseType?isString||body instanceof ArrayBuffer||!supportsBlob||body instanceof Blob||((error=Error(`Attempted to respond to fake XMLHttpRequest with ${body}, which is not a string, ArrayBuffer, or Blob.`)).name="InvalidBodyException"):isString||((error=Error(`Attempted to respond to fake XMLHttpRequest with ${body}, which is not a string.`)).name="InvalidBodyException"),error)throw error}function convertToArrayBuffer(body,encoding){return body instanceof ArrayBuffer?body:new GlobalTextEncoder(encoding||"utf-8").encode(body).buffer}function isXmlContentType(contentType){return!contentType||/(text\/xml)|(application\/xml)|(\+xml)/.test(contentType)}function clearResponse(xhr){""===xhr.responseType||"text"===xhr.responseType?xhr.response=xhr.responseText="":xhr.response=xhr.responseText=null,xhr.responseXML=null}function fakeXMLHttpRequestFor(globalScope){var isReactNative=globalScope.navigator&&"ReactNative"===globalScope.navigator.product,sinonXhr={XMLHttpRequest:globalScope.XMLHttpRequest};function FakeXMLHttpRequest(config){EventTargetHandler.call(this),this.readyState=FakeXMLHttpRequest.UNSENT,this.requestHeaders={},this.requestBody=null,this.status=0,this.statusText="",this.upload=new EventTargetHandler,this.responseType="",this.response="",this.logError=configureLogError(config),sinonXhr.supportsTimeout&&(this.timeout=0),sinonXhr.supportsCORS&&(this.withCredentials=!1),"function"==typeof FakeXMLHttpRequest.onCreate&&FakeXMLHttpRequest.onCreate(this)}function verifyState(xhr){if(xhr.readyState!==FakeXMLHttpRequest.OPENED||xhr.sendFlag)throw Error("INVALID_STATE_ERR")}sinonXhr.GlobalXMLHttpRequest=globalScope.XMLHttpRequest,sinonXhr.GlobalActiveXObject=globalScope.ActiveXObject,sinonXhr.supportsActiveX=void 0!==sinonXhr.GlobalActiveXObject,sinonXhr.supportsXHR=void 0!==sinonXhr.GlobalXMLHttpRequest,sinonXhr.workingXHR=getWorkingXHR(globalScope),sinonXhr.supportsTimeout=sinonXhr.supportsXHR&&"timeout"in new sinonXhr.GlobalXMLHttpRequest,sinonXhr.supportsCORS=isReactNative||sinonXhr.supportsXHR&&"withCredentials"in new sinonXhr.GlobalXMLHttpRequest;var apply=function(obj,method,args){switch(args.length){case 0:return obj[method]();case 1:return obj[method](args[0]);case 2:return obj[method](args[0],args[1]);case 3:return obj[method](args[0],args[1],args[2]);case 4:return obj[method](args[0],args[1],args[2],args[3]);case 5:return obj[method](args[0],args[1],args[2],args[3],args[4]);default:throw Error("Unhandled case")}};function verifyRequestOpened(xhr){if(xhr.readyState!==FakeXMLHttpRequest.OPENED)throw Error(`INVALID_STATE_ERR - ${xhr.readyState}`)}function verifyRequestSent(xhr){if(xhr.readyState===FakeXMLHttpRequest.DONE)throw Error("Request done")}function verifyHeadersReceived(xhr){if(xhr.async&&xhr.readyState!==FakeXMLHttpRequest.HEADERS_RECEIVED)throw Error("No headers received")}function convertResponseBody(responseType,contentType,body){if(""===responseType||"text"===responseType)return body;if(supportsArrayBuffer&&"arraybuffer"===responseType)return convertToArrayBuffer(body);if("json"===responseType)try{return JSON.parse(body)}catch(e){return null}else if(supportsBlob&&"blob"===responseType){if(body instanceof Blob)return body;var blobOptions={};return contentType&&(blobOptions.type=contentType),new Blob([convertToArrayBuffer(body)],blobOptions)}else if("document"===responseType)return isXmlContentType(contentType)?FakeXMLHttpRequest.parseXML(body):null;throw Error(`Invalid responseType ${responseType}`)}function requestErrorSteps(xhr){clearResponse(xhr),xhr.errorFlag=!0,xhr.requestHeaders={},xhr.responseHeaders={},xhr.readyState!==FakeXMLHttpRequest.UNSENT&&xhr.sendFlag&&xhr.readyState!==FakeXMLHttpRequest.DONE&&(xhr.readyStateChange(FakeXMLHttpRequest.DONE),xhr.sendFlag=!1)}FakeXMLHttpRequest.filters=[],FakeXMLHttpRequest.addFilter=function addFilter(fn){this.filters.push(fn)},FakeXMLHttpRequest.defake=function defake(fakeXhr,xhrArgs){var xhr=new sinonXhr.workingXHR;["open","setRequestHeader","abort","getResponseHeader","getAllResponseHeaders","addEventListener","overrideMimeType","removeEventListener"].forEach(function(method){fakeXhr[method]=function(){return apply(xhr,method,arguments)}}),fakeXhr.send=function(){return xhr.responseType!==fakeXhr.responseType&&(xhr.responseType=fakeXhr.responseType),apply(xhr,"send",arguments)};var copyAttrs=function(args){args.forEach(function(attr){fakeXhr[attr]=xhr[attr]})},stateChangeStart=function(){fakeXhr.readyState=xhr.readyState,xhr.readyState>=FakeXMLHttpRequest.HEADERS_RECEIVED&&copyAttrs(["status","statusText"]),xhr.readyState>=FakeXMLHttpRequest.LOADING&&(copyAttrs(["response"]),(""===xhr.responseType||"text"===xhr.responseType)&&copyAttrs(["responseText"])),xhr.readyState===FakeXMLHttpRequest.DONE&&(""===xhr.responseType||"document"===xhr.responseType)&&copyAttrs(["responseXML"])},stateChangeEnd=function(){fakeXhr.onreadystatechange&&fakeXhr.onreadystatechange.call(fakeXhr,{target:fakeXhr,currentTarget:fakeXhr})};xhr.addEventListener?(xhr.addEventListener("readystatechange",stateChangeStart),Object.keys(fakeXhr.eventListeners).forEach(function(event){fakeXhr.eventListeners[event].forEach(function(handler){xhr.addEventListener(event,handler.listener,{capture:handler.capture,once:handler.once})})}),xhr.addEventListener("readystatechange",stateChangeEnd)):xhr.onreadystatechange=function(){stateChangeStart(),stateChangeEnd()},apply(xhr,"open",xhrArgs)},FakeXMLHttpRequest.useFilters=!1,FakeXMLHttpRequest.parseXML=function parseXML(text){if(""!==text)try{if("undefined"!=typeof DOMParser){var result,parser=new DOMParser,parsererrorNS="";try{var parsererrors=parser.parseFromString("INVALID","text/xml").getElementsByTagName("parsererror");parsererrors.length&&(parsererrorNS=parsererrors[0].namespaceURI)}catch(e){}try{result=parser.parseFromString(text,"text/xml")}catch(err){return null}return result.getElementsByTagNameNS(parsererrorNS,"parsererror").length?null:result}var xmlDoc=new window.ActiveXObject("Microsoft.XMLDOM");return xmlDoc.async="false",xmlDoc.loadXML(text),0!==xmlDoc.parseError.errorCode?null:xmlDoc}catch(e){}return null},FakeXMLHttpRequest.statusCodes={100:"Continue",101:"Switching Protocols",200:"OK",201:"Created",202:"Accepted",203:"Non-Authoritative Information",204:"No Content",205:"Reset Content",206:"Partial Content",207:"Multi-Status",300:"Multiple Choice",301:"Moved Permanently",302:"Found",303:"See Other",304:"Not Modified",305:"Use Proxy",307:"Temporary Redirect",400:"Bad Request",401:"Unauthorized",402:"Payment Required",403:"Forbidden",404:"Not Found",405:"Method Not Allowed",406:"Not Acceptable",407:"Proxy Authentication Required",408:"Request Timeout",409:"Conflict",410:"Gone",411:"Length Required",412:"Precondition Failed",413:"Request Entity Too Large",414:"Request-URI Too Long",415:"Unsupported Media Type",416:"Requested Range Not Satisfiable",417:"Expectation Failed",422:"Unprocessable Entity",500:"Internal Server Error",501:"Not Implemented",502:"Bad Gateway",503:"Service Unavailable",504:"Gateway Timeout",505:"HTTP Version Not Supported"},extend(FakeXMLHttpRequest.prototype,sinonEvent.EventTarget,{async:!0,open:function open(method,url,async,username,password){if(this.method=method,this.url=url,this.async="boolean"!=typeof async||async,this.username=username,this.password=password,clearResponse(this),this.requestHeaders={},this.sendFlag=!1,!0===FakeXMLHttpRequest.useFilters){var xhrArgs=arguments;if(FakeXMLHttpRequest.filters.some(function(filter){return filter.apply(this,xhrArgs)})){FakeXMLHttpRequest.defake(this,arguments);return}}this.readyStateChange(FakeXMLHttpRequest.OPENED)},readyStateChange:function readyStateChange(state){this.readyState=state;var event,progress,readyStateChangeEvent=new sinonEvent.Event("readystatechange",!1,!1,this);if("function"==typeof this.onreadystatechange)try{this.onreadystatechange(readyStateChangeEvent)}catch(e){this.logError("Fake XHR onreadystatechange handler",e)}this.readyState!==FakeXMLHttpRequest.DONE?this.dispatchEvent(readyStateChangeEvent):(this.timedOut||this.aborted||0===this.status?(progress={loaded:0,total:0},event=this.timedOut&&"timeout"||this.aborted&&"abort"||"error"):(progress={loaded:100,total:100},event="load"),supportsProgress&&(this.upload.dispatchEvent(new sinonEvent.ProgressEvent("progress",progress,this)),this.upload.dispatchEvent(new sinonEvent.ProgressEvent(event,progress,this)),this.upload.dispatchEvent(new sinonEvent.ProgressEvent("loadend",progress,this))),this.dispatchEvent(new sinonEvent.ProgressEvent("progress",progress,this)),this.dispatchEvent(new sinonEvent.ProgressEvent(event,progress,this)),this.dispatchEvent(readyStateChangeEvent),this.dispatchEvent(new sinonEvent.ProgressEvent("loadend",progress,this)))},setRequestHeader:function setRequestHeader(header,value){if("string"!=typeof value)throw TypeError(`By RFC7230, section 3.2.4, header values should be strings. Got ${typeof value}`);verifyState(this);var checkUnsafeHeaders=!0;if("function"==typeof this.unsafeHeadersEnabled&&(checkUnsafeHeaders=this.unsafeHeadersEnabled()),checkUnsafeHeaders&&(null!==getHeader(unsafeHeaders,header)||/^(Sec-|Proxy-)/i.test(header)))throw Error(`Refused to set unsafe header "${header}"`);value=normalizeHeaderValue(value);var existingHeader=getHeader(this.requestHeaders,header);existingHeader?this.requestHeaders[existingHeader]+=`, ${value}`:this.requestHeaders[header]=value},setStatus:function setStatus(status){var sanitizedStatus="number"==typeof status?status:200;verifyRequestOpened(this),this.status=sanitizedStatus,this.statusText=FakeXMLHttpRequest.statusCodes[sanitizedStatus]},setResponseHeaders:function setResponseHeaders(headers){verifyRequestOpened(this);var responseHeaders=this.responseHeaders={};Object.keys(headers).forEach(function(header){responseHeaders[header]=headers[header]}),this.async?this.readyStateChange(FakeXMLHttpRequest.HEADERS_RECEIVED):this.readyState=FakeXMLHttpRequest.HEADERS_RECEIVED},send:function send(data){if(verifyState(this),!/^(head)$/i.test(this.method)){var contentType=getHeader(this.requestHeaders,"Content-Type");if(this.requestHeaders[contentType]){var value=this.requestHeaders[contentType].split(";");this.requestHeaders[contentType]=`${value[0]};charset=utf-8`}else!supportsFormData||data instanceof FormData||(this.requestHeaders["Content-Type"]="text/plain;charset=utf-8");this.requestBody=data}if(this.errorFlag=!1,this.sendFlag=this.async,clearResponse(this),"function"==typeof this.onSend&&this.onSend(this),sinonXhr.supportsTimeout&&"object"==typeof setInterval.clock&&"object"==typeof Date.clock)var initiatedTime=Date.now(),self1=this,clearIntervalId=setInterval(function(){self1.readyState===FakeXMLHttpRequest.UNSENT||self1.readyState===FakeXMLHttpRequest.DONE?clearInterval(clearIntervalId):"number"==typeof self1.timeout&&self1.timeout>0&&Date.now()>=initiatedTime+self1.timeout&&(self1.triggerTimeout(),clearInterval(clearIntervalId))},1);this.dispatchEvent(new sinonEvent.Event("loadstart",!1,!1,this))},abort:function abort(){this.aborted=!0,requestErrorSteps(this),this.readyState=FakeXMLHttpRequest.UNSENT},error:function(){clearResponse(this),this.errorFlag=!0,this.requestHeaders={},this.responseHeaders={},this.readyStateChange(FakeXMLHttpRequest.DONE)},triggerTimeout:function triggerTimeout(){sinonXhr.supportsTimeout&&(this.timedOut=!0,requestErrorSteps(this))},getResponseHeader:function getResponseHeader(header){return this.readyState<FakeXMLHttpRequest.HEADERS_RECEIVED||/^Set-Cookie2?$/i.test(header)?null:(header=getHeader(this.responseHeaders,header),this.responseHeaders[header]||null)},getAllResponseHeaders:function getAllResponseHeaders(){if(this.readyState<FakeXMLHttpRequest.HEADERS_RECEIVED)return"";var responseHeaders=this.responseHeaders;return Object.keys(responseHeaders).filter(excludeSetCookie2Header).reduce(function(prev,header){var value=responseHeaders[header];return`${prev}${header}: ${value}\r
`},"")},setResponseBody:function setResponseBody(body){verifyRequestSent(this),verifyHeadersReceived(this),verifyResponseBodyType(body,this.responseType);var contentType=this.overriddenMimeType||this.getResponseHeader("Content-Type"),isTextResponse=""===this.responseType||"text"===this.responseType;if(clearResponse(this),this.async){var chunkSize=this.chunkSize||10,index=0;do this.readyStateChange(FakeXMLHttpRequest.LOADING),isTextResponse&&(this.responseText=this.response+=body.substring(index,index+chunkSize)),index+=chunkSize;while(index<body.length)}this.response=convertResponseBody(this.responseType,contentType,body),isTextResponse&&(this.responseText=this.response),"document"===this.responseType?this.responseXML=this.response:""===this.responseType&&isXmlContentType(contentType)&&(this.responseXML=FakeXMLHttpRequest.parseXML(this.responseText)),this.readyStateChange(FakeXMLHttpRequest.DONE)},respond:function respond(status,headers,body){this.responseURL=this.url,this.setStatus(status),this.setResponseHeaders(headers||{}),this.setResponseBody(body||"")},uploadProgress:function uploadProgress(progressEventRaw){supportsProgress&&this.upload.dispatchEvent(new sinonEvent.ProgressEvent("progress",progressEventRaw,this.upload))},downloadProgress:function downloadProgress(progressEventRaw){supportsProgress&&this.dispatchEvent(new sinonEvent.ProgressEvent("progress",progressEventRaw,this))},uploadError:function uploadError(error){supportsCustomEvent&&this.upload.dispatchEvent(new sinonEvent.CustomEvent("error",{detail:error}))},overrideMimeType:function overrideMimeType(type){if(this.readyState>=FakeXMLHttpRequest.LOADING)throw Error("INVALID_STATE_ERR");this.overriddenMimeType=type}});var states={UNSENT:0,OPENED:1,HEADERS_RECEIVED:2,LOADING:3,DONE:4};function useFakeXMLHttpRequest(){return FakeXMLHttpRequest.restore=function restore(keepOnCreate){sinonXhr.supportsXHR&&(globalScope.XMLHttpRequest=sinonXhr.GlobalXMLHttpRequest),sinonXhr.supportsActiveX&&(globalScope.ActiveXObject=sinonXhr.GlobalActiveXObject),delete FakeXMLHttpRequest.restore,!0!==keepOnCreate&&delete FakeXMLHttpRequest.onCreate},sinonXhr.supportsXHR&&(globalScope.XMLHttpRequest=FakeXMLHttpRequest),sinonXhr.supportsActiveX&&(globalScope.ActiveXObject=function ActiveXObject(objId){return"Microsoft.XMLHTTP"===objId||/^Msxml2\.XMLHTTP/i.test(objId)?new FakeXMLHttpRequest:new sinonXhr.GlobalActiveXObject(objId)}),FakeXMLHttpRequest}return extend(FakeXMLHttpRequest,states),extend(FakeXMLHttpRequest.prototype,states),{xhr:sinonXhr,FakeXMLHttpRequest:FakeXMLHttpRequest,useFakeXMLHttpRequest:useFakeXMLHttpRequest}}EventTargetHandler.prototype=sinonEvent.EventTarget,module.exports=extend(fakeXMLHttpRequestFor(globalObject),{fakeXMLHttpRequestFor:fakeXMLHttpRequestFor})},{"../configure-logger":116,"../event":120,"./blob":125,"@sinonjs/commons":47,"@sinonjs/text-encoding":107,"just-extend":114}],127:[function(require1,module,exports){module.exports={fakeServer:require1("./fake-server"),fakeServerWithClock:require1("./fake-server/fake-server-with-clock"),fakeXhr:require1("./fake-xhr")}},{"./fake-server":123,"./fake-server/fake-server-with-clock":122,"./fake-xhr":126}],128:[function(require1,module,exports){arguments[4][41][0].apply(exports,arguments)},{"./prototypes/array":136,dup:41}],129:[function(require1,module,exports){arguments[4][42][0].apply(exports,arguments)},{"./function-name":132,dup:42}],130:[function(require1,module,exports){arguments[4][43][0].apply(exports,arguments)},{dup:43}],131:[function(require1,module,exports){arguments[4][44][0].apply(exports,arguments)},{dup:44}],132:[function(require1,module,exports){arguments[4][45][0].apply(exports,arguments)},{dup:45}],133:[function(require1,module,exports){arguments[4][46][0].apply(exports,arguments)},{dup:46}],134:[function(require1,module,exports){arguments[4][47][0].apply(exports,arguments)},{"./called-in-order":128,"./class-name":129,"./deprecated":130,"./every":131,"./function-name":132,"./global":133,"./order-by-first-call":135,"./prototypes":139,"./type-of":145,"./value-to-string":146,dup:47}],135:[function(require1,module,exports){arguments[4][48][0].apply(exports,arguments)},{"./prototypes/array":136,dup:48}],136:[function(require1,module,exports){arguments[4][49][0].apply(exports,arguments)},{"./copy-prototype-methods":137,dup:49}],137:[function(require1,module,exports){arguments[4][69][0].apply(exports,arguments)},{"./throws-on-proto":144,dup:69}],138:[function(require1,module,exports){arguments[4][51][0].apply(exports,arguments)},{"./copy-prototype-methods":137,dup:51}],139:[function(require1,module,exports){arguments[4][52][0].apply(exports,arguments)},{"./array":136,"./function":138,"./map":140,"./object":141,"./set":142,"./string":143,dup:52}],140:[function(require1,module,exports){arguments[4][53][0].apply(exports,arguments)},{"./copy-prototype-methods":137,dup:53}],141:[function(require1,module,exports){arguments[4][54][0].apply(exports,arguments)},{"./copy-prototype-methods":137,dup:54}],142:[function(require1,module,exports){arguments[4][55][0].apply(exports,arguments)},{"./copy-prototype-methods":137,dup:55}],143:[function(require1,module,exports){arguments[4][56][0].apply(exports,arguments)},{"./copy-prototype-methods":137,dup:56}],144:[function(require1,module,exports){arguments[4][57][0].apply(exports,arguments)},{dup:57}],145:[function(require1,module,exports){arguments[4][58][0].apply(exports,arguments)},{dup:58,"type-detect":151}],146:[function(require1,module,exports){arguments[4][59][0].apply(exports,arguments)},{dup:59}],147:[function(require1,module,exports){function withGlobal(_global){var userAgent=_global.navigator&&_global.navigator.userAgent,isRunningInIE=userAgent&&userAgent.indexOf("MSIE ")>-1,NOOP=function(){},NOOP_ARRAY=function(){return[]},timeoutResult=_global.setTimeout(NOOP,0),addTimerReturnsObject="object"==typeof timeoutResult,hrtimePresent=_global.process&&"function"==typeof _global.process.hrtime,hrtimeBigintPresent=hrtimePresent&&"function"==typeof _global.process.hrtime.bigint,nextTickPresent=_global.process&&"function"==typeof _global.process.nextTick,utilPromisify=_global.process&&require1("util").promisify,performancePresent=_global.performance&&"function"==typeof _global.performance.now,hasPerformancePrototype=_global.Performance&&(typeof _global.Performance).match(/^(function|object)$/),queueMicrotaskPresent=_global.hasOwnProperty("queueMicrotask"),requestAnimationFramePresent=_global.requestAnimationFrame&&"function"==typeof _global.requestAnimationFrame,cancelAnimationFramePresent=_global.cancelAnimationFrame&&"function"==typeof _global.cancelAnimationFrame,requestIdleCallbackPresent=_global.requestIdleCallback&&"function"==typeof _global.requestIdleCallback,cancelIdleCallbackPresent=_global.cancelIdleCallback&&"function"==typeof _global.cancelIdleCallback,setImmediatePresent=_global.setImmediate&&"function"==typeof _global.setImmediate;isRunningInIE&&(_global.setTimeout=_global.setTimeout,_global.clearTimeout=_global.clearTimeout,_global.setInterval=_global.setInterval,_global.clearInterval=_global.clearInterval,_global.Date=_global.Date),setImmediatePresent&&(_global.setImmediate=_global.setImmediate,_global.clearImmediate=_global.clearImmediate),_global.clearTimeout(timeoutResult);var NativeDate=_global.Date,uniqueTimerId=1;function isNumberFinite(num){return Number.isFinite?Number.isFinite(num):isFinite(num)}function parseTime(str){if(!str)return 0;var parsed,strings=str.split(":"),l=strings.length,i=l,ms=0;if(l>3||!/^(\d\d:){0,2}\d\d?$/.test(str))throw Error("tick only understands numbers, 'm:s' and 'h:m:s'. Each part must be two digits");for(;i--;){if((parsed=parseInt(strings[i],10))>=60)throw Error("Invalid time "+str);ms+=parsed*Math.pow(60,l-i-1)}return 1e3*ms}function nanoRemainder(msFloat){var remainder=1e6*msFloat%1e6;return Math.floor(remainder<0?remainder+1e6:remainder)}function getEpoch(epoch){if(!epoch)return 0;if("function"==typeof epoch.getTime)return epoch.getTime();if("number"==typeof epoch)return epoch;throw TypeError("now should be milliseconds since UNIX epoch")}function inRange(from,to,timer){return timer&&timer.callAt>=from&&timer.callAt<=to}function mirrorDateProperties(target,source){var prop;for(prop in source)source.hasOwnProperty(prop)&&(target[prop]=source[prop]);return source.now?target.now=function now(){return target.clock.now}:delete target.now,source.toSource?target.toSource=function toSource(){return source.toSource()}:delete target.toSource,target.toString=function toString(){return source.toString()},target.prototype=source.prototype,target.parse=source.parse,target.UTC=source.UTC,target.prototype.toUTCString=source.prototype.toUTCString,target}function createDate(){function ClockDate(year,month,date,hour,minute,second,ms){if(!(this instanceof ClockDate))return new NativeDate(ClockDate.clock.now).toString();switch(arguments.length){case 0:return new NativeDate(ClockDate.clock.now);case 1:return new NativeDate(year);case 2:return new NativeDate(year,month);case 3:return new NativeDate(year,month,date);case 4:return new NativeDate(year,month,date,hour);case 5:return new NativeDate(year,month,date,hour,minute);case 6:return new NativeDate(year,month,date,hour,minute,second);default:return new NativeDate(year,month,date,hour,minute,second,ms)}}return mirrorDateProperties(ClockDate,NativeDate)}function enqueueJob(clock,job){clock.jobs||(clock.jobs=[]),clock.jobs.push(job)}function runJobs(clock){if(clock.jobs){for(var i=0;i<clock.jobs.length;i++){var job=clock.jobs[i];if(job.func.apply(null,job.args),clock.loopLimit&&i>clock.loopLimit)throw Error("Aborting after running "+clock.loopLimit+" timers, assuming an infinite loop!")}clock.jobs=[]}}function addTimer(clock,timer){if(void 0===timer.func)throw Error("Callback must be provided to timer calls");if(addTimerReturnsObject&&"function"!=typeof timer.func)throw TypeError("[ERR_INVALID_CALLBACK]: Callback must be a function. Received "+timer.func+" of type "+typeof timer.func);if(timer.type=timer.immediate?"Immediate":"Timeout",timer.hasOwnProperty("delay")&&("number"!=typeof timer.delay&&(timer.delay=parseInt(timer.delay,10)),isNumberFinite(timer.delay)||(timer.delay=0),timer.delay=timer.delay>2147483647?1:timer.delay,timer.delay=Math.max(0,timer.delay)),timer.hasOwnProperty("interval")&&(timer.type="Interval",timer.interval=timer.interval>2147483647?1:timer.interval),timer.hasOwnProperty("animation")&&(timer.type="AnimationFrame",timer.animation=!0),clock.timers||(clock.timers={}),timer.id=uniqueTimerId++,timer.createdAt=clock.now,timer.callAt=clock.now+(parseInt(timer.delay)||(clock.duringTick?1:0)),clock.timers[timer.id]=timer,addTimerReturnsObject){var res={id:timer.id,ref:function(){return res},unref:function(){return res},refresh:function(){return clearTimeout(timer.id),setTimeout.apply(null,[timer.func,timer.delay].concat(timer.args))}};return res}return timer.id}function compareTimers(a,b){return a.callAt<b.callAt?-1:a.callAt>b.callAt?1:a.immediate&&!b.immediate?-1:!a.immediate&&b.immediate?1:a.createdAt<b.createdAt?-1:a.createdAt>b.createdAt?1:a.id<b.id?-1:a.id>b.id?1:void 0}function firstTimerInRange(clock,from,to){var id,timers=clock.timers,timer=null;for(id in timers)timers.hasOwnProperty(id)&&inRange(from,to,timers[id])&&(!timer||1===compareTimers(timer,timers[id]))&&(timer=timers[id]);return timer}function firstTimer(clock){var id,timers=clock.timers,timer=null;for(id in timers)timers.hasOwnProperty(id)&&(!timer||1===compareTimers(timer,timers[id]))&&(timer=timers[id]);return timer}function lastTimer(clock){var id,timers=clock.timers,timer=null;for(id in timers)timers.hasOwnProperty(id)&&(!timer||-1===compareTimers(timer,timers[id]))&&(timer=timers[id]);return timer}function callTimer(clock,timer){("number"==typeof timer.interval?clock.timers[timer.id].callAt+=timer.interval:delete clock.timers[timer.id],"function"==typeof timer.func)?timer.func.apply(null,timer.args):(0,eval)(timer.func)}function clearTimer(clock,timerId,ttype){if(timerId){clock.timers||(clock.timers={});var id="object"==typeof timerId?timerId.id:timerId;if(clock.timers.hasOwnProperty(id)){var timer=clock.timers[id];if(timer.type===ttype||"Timeout"===timer.type&&"Interval"===ttype||"Interval"===timer.type&&"Timeout"===ttype)delete clock.timers[id];else throw Error("Cannot clear timer: timer created with "+("AnimationFrame"===timer.type?"requestAnimationFrame":"set"+timer.type)+"() but cleared with "+("AnimationFrame"===ttype?"cancelAnimationFrame":"clear"+ttype)+"()")}}}function uninstall(clock,config){var method,i,l;for(i=0,l=clock.methods.length;i<l;i++)if("hrtime"===(method=clock.methods[i])&&_global.process)_global.process.hrtime=clock._hrtime;else if("nextTick"===method&&_global.process)_global.process.nextTick=clock._nextTick;else if("performance"===method){var originalPerfDescriptor=Object.getOwnPropertyDescriptor(clock,"_"+method);originalPerfDescriptor&&originalPerfDescriptor.get&&!originalPerfDescriptor.set?Object.defineProperty(_global,method,originalPerfDescriptor):originalPerfDescriptor.configurable&&(_global[method]=clock["_"+method])}else if(_global[method]&&_global[method].hadOwnProperty)_global[method]=clock["_"+method],"clearInterval"===method&&!0===config.shouldAdvanceTime&&_global[method](clock.attachedInterval);else try{delete _global[method]}catch(ignore){}return(clock.methods=[],clock.timers)?Object.keys(clock.timers).map(function mapper(key){return clock.timers[key]}):[]}function hijackMethod(target,method,clock){if(clock[method].hadOwnProperty=Object.prototype.hasOwnProperty.call(target,method),clock["_"+method]=target[method],"Date"===method){var date=mirrorDateProperties(clock[method],target[method]);target[method]=date}else if("performance"===method){var originalPerfDescriptor=Object.getOwnPropertyDescriptor(target,method);if(originalPerfDescriptor&&originalPerfDescriptor.get&&!originalPerfDescriptor.set){Object.defineProperty(clock,"_"+method,originalPerfDescriptor);var perfDescriptor=Object.getOwnPropertyDescriptor(clock,method);Object.defineProperty(target,method,perfDescriptor)}else target[method]=clock[method]}else target[method]=function(){return clock[method].apply(clock,arguments)},Object.defineProperties(target[method],Object.getOwnPropertyDescriptors(clock[method]));target[method].clock=clock}function doIntervalTick(clock,advanceTimeDelta){clock.tick(advanceTimeDelta)}var timers={setTimeout:_global.setTimeout,clearTimeout:_global.clearTimeout,setInterval:_global.setInterval,clearInterval:_global.clearInterval,Date:_global.Date};setImmediatePresent&&(timers.setImmediate=_global.setImmediate,timers.clearImmediate=_global.clearImmediate),hrtimePresent&&(timers.hrtime=_global.process.hrtime),nextTickPresent&&(timers.nextTick=_global.process.nextTick),performancePresent&&(timers.performance=_global.performance),requestAnimationFramePresent&&(timers.requestAnimationFrame=_global.requestAnimationFrame),queueMicrotaskPresent&&(timers.queueMicrotask=!0),cancelAnimationFramePresent&&(timers.cancelAnimationFrame=_global.cancelAnimationFrame),requestIdleCallbackPresent&&(timers.requestIdleCallback=_global.requestIdleCallback),cancelIdleCallbackPresent&&(timers.cancelIdleCallback=_global.cancelIdleCallback);var originalSetTimeout=_global.setImmediate||_global.setTimeout;function createClock(start,loopLimit){start=Math.floor(getEpoch(start)),loopLimit=loopLimit||1e3;var nanos=0,adjustedSystemTime=[0,0];if(void 0===NativeDate)throw Error("The global scope doesn't have a `Date` object (see https://github.com/sinonjs/sinon/issues/1852#issuecomment-419622780)");var clock={now:start,timeouts:{},Date:createDate(),loopLimit:loopLimit};function getTimeToNextFrame(){return 16-(clock.now-start)%16}function hrtime(prev){var millisSinceStart=clock.now-adjustedSystemTime[0]-start,secsSinceStart=Math.floor(millisSinceStart/1e3),remainderInNanos=(millisSinceStart-1e3*secsSinceStart)*1e6+nanos-adjustedSystemTime[1];if(Array.isArray(prev)){if(prev[1]>1e9)throw TypeError("Number of nanoseconds can't exceed a billion");var oldSecs=prev[0],nanoDiff=remainderInNanos-prev[1],secDiff=secsSinceStart-oldSecs;return nanoDiff<0&&(nanoDiff+=1e9,secDiff-=1),[secDiff,nanoDiff]}return[secsSinceStart,remainderInNanos]}function doTick(tickValue,isAsync,resolve,reject){var timer,firstException,oldNow,nextPromiseTick,compensationCheck,postTimerCall,msFloat="number"==typeof tickValue?tickValue:parseTime(tickValue),ms=Math.floor(msFloat),remainder=nanoRemainder(msFloat),nanosTotal=nanos+remainder,tickTo=clock.now+ms;if(msFloat<0)throw TypeError("Negative ticks are not supported");nanosTotal>=1e6&&(tickTo+=1,nanosTotal-=1e6),nanos=nanosTotal;var tickFrom=clock.now,previous=clock.now;function doTickInner(){for(timer=firstTimerInRange(clock,tickFrom,tickTo);timer&&tickFrom<=tickTo;){if(clock.timers[timer.id]){tickFrom=timer.callAt,clock.now=timer.callAt,oldNow=clock.now;try{runJobs(clock),callTimer(clock,timer)}catch(e){firstException=firstException||e}if(isAsync){originalSetTimeout(nextPromiseTick);return}compensationCheck()}postTimerCall()}if(oldNow=clock.now,runJobs(clock),oldNow!==clock.now&&(tickFrom+=clock.now-oldNow,tickTo+=clock.now-oldNow),clock.duringTick=!1,timer=firstTimerInRange(clock,tickFrom,tickTo))try{clock.tick(tickTo-clock.now)}catch(e){firstException=firstException||e}else clock.now=tickTo,nanos=nanosTotal;if(firstException)throw firstException;if(!isAsync)return clock.now;resolve(clock.now)}return clock.duringTick=!0,oldNow=clock.now,runJobs(clock),oldNow!==clock.now&&(tickFrom+=clock.now-oldNow,tickTo+=clock.now-oldNow),nextPromiseTick=isAsync&&function(){try{compensationCheck(),postTimerCall(),doTickInner()}catch(e){reject(e)}},compensationCheck=function(){oldNow!==clock.now&&(tickFrom+=clock.now-oldNow,tickTo+=clock.now-oldNow,previous+=clock.now-oldNow)},postTimerCall=function(){timer=firstTimerInRange(clock,previous,tickTo),previous=tickFrom},doTickInner()}return clock.Date.clock=clock,hrtimeBigintPresent&&(hrtime.bigint=function(){var parts=hrtime();return BigInt(parts[0])*BigInt(1e9)+BigInt(parts[1])}),clock.requestIdleCallback=function requestIdleCallback(func,timeout){var timeToNextIdlePeriod=0;clock.countTimers()>0&&(timeToNextIdlePeriod=50);var result=addTimer(clock,{func:func,args:Array.prototype.slice.call(arguments,2),delay:void 0===timeout?timeToNextIdlePeriod:Math.min(timeout,timeToNextIdlePeriod)});return result.id||result},clock.cancelIdleCallback=function cancelIdleCallback(timerId){return clearTimer(clock,timerId,"Timeout")},clock.setTimeout=function setTimeout1(func,timeout){return addTimer(clock,{func:func,args:Array.prototype.slice.call(arguments,2),delay:timeout})},void 0!==_global.Promise&&utilPromisify&&(clock.setTimeout[utilPromisify.custom]=function promisifiedSetTimeout(timeout,arg){return new _global.Promise(function setTimeoutExecutor(resolve){addTimer(clock,{func:resolve,args:[arg],delay:timeout})})}),clock.clearTimeout=function clearTimeout1(timerId){return clearTimer(clock,timerId,"Timeout")},clock.nextTick=function nextTick(func){return enqueueJob(clock,{func:func,args:Array.prototype.slice.call(arguments,1)})},clock.queueMicrotask=function queueMicrotask(func){return clock.nextTick(func)},clock.setInterval=function setInterval1(func,timeout){return timeout=parseInt(timeout,10),addTimer(clock,{func:func,args:Array.prototype.slice.call(arguments,2),delay:timeout,interval:timeout})},clock.clearInterval=function clearInterval1(timerId){return clearTimer(clock,timerId,"Interval")},setImmediatePresent&&(clock.setImmediate=function setImmediate(func){return addTimer(clock,{func:func,args:Array.prototype.slice.call(arguments,1),immediate:!0})},void 0!==_global.Promise&&utilPromisify&&(clock.setImmediate[utilPromisify.custom]=function promisifiedSetImmediate(arg){return new _global.Promise(function setImmediateExecutor(resolve){addTimer(clock,{func:resolve,args:[arg],immediate:!0})})}),clock.clearImmediate=function clearImmediate(timerId){return clearTimer(clock,timerId,"Immediate")}),clock.countTimers=function countTimers(){return Object.keys(clock.timers||{}).length+(clock.jobs||[]).length},clock.requestAnimationFrame=function requestAnimationFrame(func){var result=addTimer(clock,{func:func,delay:getTimeToNextFrame(),args:[clock.now+getTimeToNextFrame()],animation:!0});return result.id||result},clock.cancelAnimationFrame=function cancelAnimationFrame(timerId){return clearTimer(clock,timerId,"AnimationFrame")},clock.runMicrotasks=function runMicrotasks(){runJobs(clock)},clock.tick=function tick(tickValue){return doTick(tickValue,!1)},void 0!==_global.Promise&&(clock.tickAsync=function tickAsync(ms){return new _global.Promise(function(resolve,reject){originalSetTimeout(function(){try{doTick(ms,!0,resolve,reject)}catch(e){reject(e)}})})}),clock.next=function next(){runJobs(clock);var timer=firstTimer(clock);if(!timer)return clock.now;clock.duringTick=!0;try{return clock.now=timer.callAt,callTimer(clock,timer),runJobs(clock),clock.now}finally{clock.duringTick=!1}},void 0!==_global.Promise&&(clock.nextAsync=function nextAsync(){return new _global.Promise(function(resolve,reject){originalSetTimeout(function(){try{var err,timer=firstTimer(clock);if(!timer){resolve(clock.now);return}clock.duringTick=!0,clock.now=timer.callAt;try{callTimer(clock,timer)}catch(e){err=e}clock.duringTick=!1,originalSetTimeout(function(){err?reject(err):resolve(clock.now)})}catch(e){reject(e)}})})}),clock.runAll=function runAll(){var i;for(runJobs(clock),i=0;i<clock.loopLimit;i++){if(!clock.timers||0===Object.keys(clock.timers).length)return clock.now;clock.next()}throw Error("Aborting after running "+clock.loopLimit+" timers, assuming an infinite loop!")},clock.runToFrame=function runToFrame(){return clock.tick(getTimeToNextFrame())},void 0!==_global.Promise&&(clock.runAllAsync=function runAllAsync(){return new _global.Promise(function(resolve,reject){var i=0;function doRun(){originalSetTimeout(function(){try{var numTimers;if(i<clock.loopLimit){if(!clock.timers||(numTimers=Object.keys(clock.timers).length,0===numTimers)){resolve(clock.now);return}clock.next(),i++,doRun();return}reject(Error("Aborting after running "+clock.loopLimit+" timers, assuming an infinite loop!"))}catch(e){reject(e)}})}doRun()})}),clock.runToLast=function runToLast(){var timer=lastTimer(clock);return timer?clock.tick(timer.callAt-clock.now):(runJobs(clock),clock.now)},void 0!==_global.Promise&&(clock.runToLastAsync=function runToLastAsync(){return new _global.Promise(function(resolve,reject){originalSetTimeout(function(){try{var timer=lastTimer(clock);timer||resolve(clock.now),resolve(clock.tickAsync(timer.callAt))}catch(e){reject(e)}})})}),clock.reset=function reset(){nanos=0,clock.timers={},clock.jobs=[],clock.now=start},clock.setSystemTime=function setSystemTime(systemTime){var id,timer,newNow=getEpoch(systemTime),difference=newNow-clock.now;for(id in adjustedSystemTime[0]=adjustedSystemTime[0]+difference,adjustedSystemTime[1]=adjustedSystemTime[1]+nanos,clock.now=newNow,nanos=0,clock.timers)clock.timers.hasOwnProperty(id)&&(timer=clock.timers[id],timer.createdAt+=difference,timer.callAt+=difference)},performancePresent&&(clock.performance=Object.create(null),hasPerformancePrototype&&Object.getOwnPropertyNames(_global.Performance.prototype).forEach(function(name){0===name.indexOf("getEntries")?clock.performance[name]=NOOP_ARRAY:clock.performance[name]=NOOP}),clock.performance.now=function FakeTimersNow(){var hrt=hrtime();return 1e3*hrt[0]+hrt[1]/1e6}),hrtimePresent&&(clock.hrtime=hrtime),clock}function install(config){if(arguments.length>1||config instanceof Date||Array.isArray(config)||"number"==typeof config)throw TypeError("FakeTimers.install called with "+String(config)+" install requires an object parameter");if((config=void 0!==config?config:{}).shouldAdvanceTime=config.shouldAdvanceTime||!1,config.advanceTimeDelta=config.advanceTimeDelta||20,config.target)throw TypeError("config.target is no longer supported. Use `withGlobal(target)` instead.");var i,l,clock=createClock(config.now,config.loopLimit);for(clock.uninstall=function(){return uninstall(clock,config)},clock.methods=config.toFake||[],0===clock.methods.length&&(clock.methods=Object.keys(timers).filter(function(key){return"nextTick"!==key&&"queueMicrotask"!==key})),i=0,l=clock.methods.length;i<l;i++)if("hrtime"===clock.methods[i])_global.process&&"function"==typeof _global.process.hrtime&&hijackMethod(_global.process,clock.methods[i],clock);else if("nextTick"===clock.methods[i])_global.process&&"function"==typeof _global.process.nextTick&&hijackMethod(_global.process,clock.methods[i],clock);else{if("setInterval"===clock.methods[i]&&!0===config.shouldAdvanceTime){var intervalTick=doIntervalTick.bind(null,clock,config.advanceTimeDelta),intervalId=_global[clock.methods[i]](intervalTick,config.advanceTimeDelta);clock.attachedInterval=intervalId}hijackMethod(_global,clock.methods[i],clock)}return clock}return{timers:timers,createClock:createClock,install:install,withGlobal:withGlobal}}var defaultImplementation=withGlobal(require1("@sinonjs/commons").global);exports.timers=defaultImplementation.timers,exports.createClock=defaultImplementation.createClock,exports.install=defaultImplementation.install,exports.withGlobal=withGlobal},{"@sinonjs/commons":134,util:112}],148:[function(require1,module,exports){var isarray=require1("isarray");module.exports=pathToRegexp,module.exports.parse=parse,module.exports.compile=compile,module.exports.tokensToFunction=tokensToFunction,module.exports.tokensToRegExp=tokensToRegExp;var PATH_REGEXP=RegExp("(\\\\.)|([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))","g");function parse(str,options){for(var res,tokens=[],key=0,index=0,path="",defaultDelimiter=options&&options.delimiter||"/";null!=(res=PATH_REGEXP.exec(str));){var m=res[0],escaped=res[1],offset=res.index;if(path+=str.slice(index,offset),index=offset+m.length,escaped){path+=escaped[1];continue}var next=str[index],prefix=res[2],name=res[3],capture=res[4],group=res[5],modifier=res[6],asterisk=res[7];path&&(tokens.push(path),path="");var partial=null!=prefix&&null!=next&&next!==prefix,repeat="+"===modifier||"*"===modifier,optional="?"===modifier||"*"===modifier,delimiter=res[2]||defaultDelimiter,pattern=capture||group;tokens.push({name:name||key++,prefix:prefix||"",delimiter:delimiter,optional:optional,repeat:repeat,partial:partial,asterisk:!!asterisk,pattern:pattern?escapeGroup(pattern):asterisk?".*":"[^"+escapeString(delimiter)+"]+?"})}return index<str.length&&(path+=str.substr(index)),path&&tokens.push(path),tokens}function compile(str,options){return tokensToFunction(parse(str,options),options)}function encodeURIComponentPretty(str){return encodeURI(str).replace(/[\/?#]/g,function(c){return"%"+c.charCodeAt(0).toString(16).toUpperCase()})}function encodeAsterisk(str){return encodeURI(str).replace(/[?#]/g,function(c){return"%"+c.charCodeAt(0).toString(16).toUpperCase()})}function tokensToFunction(tokens,options){for(var matches=Array(tokens.length),i=0;i<tokens.length;i++)"object"==typeof tokens[i]&&(matches[i]=RegExp("^(?:"+tokens[i].pattern+")$",flags(options)));return function(obj,opts){for(var path="",data=obj||{},encode=(opts||{}).pretty?encodeURIComponentPretty:encodeURIComponent,i=0;i<tokens.length;i++){var segment,token=tokens[i];if("string"==typeof token){path+=token;continue}var value=data[token.name];if(null==value){if(token.optional){token.partial&&(path+=token.prefix);continue}throw TypeError('Expected "'+token.name+'" to be defined')}if(isarray(value)){if(!token.repeat)throw TypeError('Expected "'+token.name+'" to not repeat, but received `'+JSON.stringify(value)+"`");if(0===value.length){if(token.optional)continue;throw TypeError('Expected "'+token.name+'" to not be empty')}for(var j=0;j<value.length;j++){if(segment=encode(value[j]),!matches[i].test(segment))throw TypeError('Expected all "'+token.name+'" to match "'+token.pattern+'", but received `'+JSON.stringify(segment)+"`");path+=(0===j?token.prefix:token.delimiter)+segment}continue}if(segment=token.asterisk?encodeAsterisk(value):encode(value),!matches[i].test(segment))throw TypeError('Expected "'+token.name+'" to match "'+token.pattern+'", but received "'+segment+'"');path+=token.prefix+segment}return path}}function escapeString(str){return str.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function escapeGroup(group){return group.replace(/([=!:$\/()])/g,"\\$1")}function flags(options){return options&&options.sensitive?"":"i"}function regexpToRegexp(path,keys){var groups=path.source.match(/\((?!\?)/g);if(groups)for(var i=0;i<groups.length;i++)keys.push({name:i,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return path.keys=keys,path}function arrayToRegexp(path,keys,options){for(var re,parts=[],i=0;i<path.length;i++)parts.push(pathToRegexp(path[i],keys,options).source);return(re=RegExp("(?:"+parts.join("|")+")",flags(options))).keys=keys,re}function stringToRegexp(path,keys,options){return tokensToRegExp(parse(path,options),keys,options)}function tokensToRegExp(tokens,keys,options){isarray(keys)||(options=keys||options,keys=[]);for(var re,keys1,strict=(options=options||{}).strict,end=!1!==options.end,route="",i=0;i<tokens.length;i++){var token=tokens[i];if("string"==typeof token)route+=escapeString(token);else{var prefix=escapeString(token.prefix),capture="(?:"+token.pattern+")";keys.push(token),token.repeat&&(capture+="(?:"+prefix+capture+")*"),route+=capture=token.optional?token.partial?prefix+"("+capture+")?":"(?:"+prefix+"("+capture+"))?":prefix+"("+capture+")"}}var delimiter=escapeString(options.delimiter||"/"),endsWithDelimiter=route.slice(-delimiter.length)===delimiter;return strict||(route=(endsWithDelimiter?route.slice(0,-delimiter.length):route)+"(?:"+delimiter+"(?=$))?"),end?route+="$":route+=strict&&endsWithDelimiter?"":"(?="+delimiter+"|$)",re=RegExp("^"+route,flags(options)),keys1=keys,re.keys=keys1,re}function pathToRegexp(path,keys,options){return(isarray(keys)||(options=keys||options,keys=[]),options=options||{},path instanceof RegExp)?regexpToRegexp(path,keys):isarray(path)?arrayToRegexp(path,keys,options):stringToRegexp(path,keys,options)}},{isarray:149}],149:[function(require1,module,exports){module.exports=Array.isArray||function(arr){return"[object Array]"==Object.prototype.toString.call(arr)}},{}],150:[function(require1,module,exports){module.exports={stdout:!1,stderr:!1}},{}],151:[function(require1,module,exports){var factory;factory=function(){var promiseExists="function"==typeof Promise,globalObject="object"==typeof self?self:__webpack_require__.g,symbolExists="undefined"!=typeof Symbol,mapExists="undefined"!=typeof Map,setExists="undefined"!=typeof Set,weakMapExists="undefined"!=typeof WeakMap,weakSetExists="undefined"!=typeof WeakSet,dataViewExists="undefined"!=typeof DataView,symbolIteratorExists=symbolExists&&void 0!==Symbol.iterator,symbolToStringTagExists=symbolExists&&void 0!==Symbol.toStringTag,setEntriesExists=setExists&&"function"==typeof Set.prototype.entries,mapEntriesExists=mapExists&&"function"==typeof Map.prototype.entries,setIteratorPrototype=setEntriesExists&&Object.getPrototypeOf(new Set().entries()),mapIteratorPrototype=mapEntriesExists&&Object.getPrototypeOf(new Map().entries()),arrayIteratorExists=symbolIteratorExists&&"function"==typeof Array.prototype[Symbol.iterator],arrayIteratorPrototype=arrayIteratorExists&&Object.getPrototypeOf([][Symbol.iterator]()),stringIteratorExists=symbolIteratorExists&&"function"==typeof String.prototype[Symbol.iterator],stringIteratorPrototype=stringIteratorExists&&Object.getPrototypeOf(""[Symbol.iterator]());return function typeDetect(obj){var typeofObj=typeof obj;if("object"!==typeofObj)return typeofObj;if(null===obj)return"null";if(obj===globalObject)return"global";if(Array.isArray(obj)&&(!1===symbolToStringTagExists||!(Symbol.toStringTag in obj)))return"Array";if("object"==typeof window&&null!==window){if("object"==typeof window.location&&obj===window.location)return"Location";if("object"==typeof window.document&&obj===window.document)return"Document";if("object"==typeof window.navigator){if("object"==typeof window.navigator.mimeTypes&&obj===window.navigator.mimeTypes)return"MimeTypeArray";if("object"==typeof window.navigator.plugins&&obj===window.navigator.plugins)return"PluginArray"}if(("function"==typeof window.HTMLElement||"object"==typeof window.HTMLElement)&&obj instanceof window.HTMLElement){if("BLOCKQUOTE"===obj.tagName)return"HTMLQuoteElement";if("TD"===obj.tagName)return"HTMLTableDataCellElement";if("TH"===obj.tagName)return"HTMLTableHeaderCellElement"}}var stringTag=symbolToStringTagExists&&obj[Symbol.toStringTag];if("string"==typeof stringTag)return stringTag;var objPrototype=Object.getPrototypeOf(obj);return objPrototype===RegExp.prototype?"RegExp":objPrototype===Date.prototype?"Date":promiseExists&&objPrototype===Promise.prototype?"Promise":setExists&&objPrototype===Set.prototype?"Set":mapExists&&objPrototype===Map.prototype?"Map":weakSetExists&&objPrototype===WeakSet.prototype?"WeakSet":weakMapExists&&objPrototype===WeakMap.prototype?"WeakMap":dataViewExists&&objPrototype===DataView.prototype?"DataView":mapExists&&objPrototype===mapIteratorPrototype?"Map Iterator":setExists&&objPrototype===setIteratorPrototype?"Set Iterator":arrayIteratorExists&&objPrototype===arrayIteratorPrototype?"Array Iterator":stringIteratorExists&&objPrototype===stringIteratorPrototype?"String Iterator":null===objPrototype?"Object":Object.prototype.toString.call(obj).slice(8,-1)}},"object"==typeof exports&&void 0!==module?module.exports=factory():"function"==typeof define&&__webpack_require__.amdO?define(factory):this.typeDetect=factory()},{}]},{},[1]),sinon.leakThreshold,sinon.assert,sinon.serverPrototype,sinon.getFakes,sinon.getRestorers,sinon.createStubInstance,sinon.inject,sinon.mock,sinon.reset,sinon.resetBehavior,sinon.resetHistory,sinon.restore,sinon.restoreContext,sinon.replace,sinon.replaceGetter,sinon.replaceSetter;let _spy=sinon.spy,_stub=sinon.stub;sinon.fake,sinon.useFakeTimers,sinon.verify,sinon.verifyAndRestore,sinon.useFakeServer,sinon.useFakeXMLHttpRequest,sinon.usingPromise,sinon.createSandbox,sinon.match,sinon.restoreObject,sinon.expectation,sinon.defaultConfig,sinon.setFormatter,sinon.timers,sinon.xhr,sinon.FakeXMLHttpRequest,sinon.fakeServer,sinon.fakeServerWithClock,sinon.createFakeServer,sinon.createFakeServerWithClock,sinon.addBehavior,sinon.promise;class ClientMock{constructor(){this.disableScroll=void 0,this.getClient=void 0,this.getFormFactor=void 0,this.isOffline=void 0,this.disableScroll=!1,this.getClient=_stub(),this.getClient.returns("Web"),this.getFormFactor=_stub(),this.getFormFactor.returns(1),this.isOffline=_stub(),this.isOffline.returns(!1)}}class DeviceMock{constructor(){this.captureAudio=void 0,this.captureImage=void 0,this.captureVideo=void 0,this.getBarcodeValue=void 0,this.getCurrentPosition=void 0,this.pickFile=void 0,this.captureAudio=_stub(),this.captureAudio.callsFake(()=>new Promise(resolve=>{resolve({fileContent:"demo",fileName:"fakeFile.wav",fileSize:200,mimeType:"audio/wav"})})),this.captureImage=_stub(),this.captureImage.callsFake(options=>new Promise(resolve=>{resolve({fileContent:"demo",fileName:"fakeFile.png",fileSize:200,mimeType:"image/png"})})),this.captureVideo=_stub(),this.captureVideo.callsFake(()=>new Promise(resolve=>{resolve({fileContent:"demo",fileName:"fakeFile.mp4",fileSize:2e3,mimeType:"video/mp4"})})),this.getBarcodeValue=_stub(),this.getBarcodeValue.callsFake(()=>new Promise(resolve=>{resolve("SHKO-ONLINE")})),this.getCurrentPosition=_stub();let currentPositionPromise=new Promise(resolve=>{resolve({coords:{accuracy:141,latitude:41.3415145,longitude:19.7769355,altitude:0,altitudeAccuracy:0,heading:0,speed:0},timestamp:new Date})});this.getCurrentPosition.returns(currentPositionPromise),this.pickFile=_stub(),new Promise(resolve=>{resolve({accept:" ",allowMultipleFiles:!1,maximumAllowedFileSize:1})}),this.pickFile.callsFake(options=>new Promise(resolve=>{resolve([{fileContent:"demo",fileName:"fakeFile.png",fileSize:200,mimeType:"image/png"}])}))}}class PopupServiceMock{constructor(){this.createPopup=void 0,this.openPopup=void 0,this.closePopup=void 0,this.updatePopup=void 0,this.deletePopup=void 0,this.setPopupsId=void 0,this.getPopupsId=void 0,this.createPopup=_stub(),this.openPopup=_stub(),this.closePopup=_stub(),this.updatePopup=_stub(),this.deletePopup=_stub(),this.setPopupsId=_stub(),this.getPopupsId=_stub()}}class FactoryMock{constructor(){this._popupService=new PopupServiceMock,this.getPopupService=void 0,this.requestRender=void 0,this.getPopupService=_stub(),this.getPopupService.returns(this._popupService),this.requestRender=_stub()}}let symbolToCurrency={"€":"EUR",$:"USD"};class FormattingMock{constructor(){this.formatCurrency=void 0,this.formatDecimal=void 0,this.formatDateAsFilterStringInUTC=void 0,this.formatDateLong=void 0,this.formatDateLongAbbreviated=void 0,this.formatDateShort=void 0,this.formatDateYearMonth=void 0,this.formatInteger=void 0,this.formatLanguage=void 0,this.formatTime=void 0,this.getWeekOfYear=void 0,this.locale=void 0,this.locale="en-US",this.formatCurrency=_stub(),this.formatCurrency.callsFake((value,precision,currencySymbol)=>{let currency=currencySymbol?symbolToCurrency[currencySymbol]:void 0;return(currencySymbol&&!currency?currencySymbol:"")+value.toLocaleString(this.locale,{style:currency?"currency":"decimal",currency,maximumFractionDigits:precision,minimumFractionDigits:precision})}),this.formatDecimal=_stub(),this.formatDecimal.callsFake((value,precision)=>value.toLocaleString(this.locale,{maximumFractionDigits:precision})),this.formatDateAsFilterStringInUTC=_stub(),this.formatDateAsFilterStringInUTC.callsFake((value,includeTime)=>value.toLocaleString(this.locale,{day:"2-digit",year:"numeric",month:"2-digit"})),this.formatDateLong=_stub(),this.formatDateLong.callsFake(value=>value.toLocaleString(this.locale,{dateStyle:"long"})),this.formatDateLongAbbreviated=_stub(),this.formatDateLongAbbreviated.callsFake(value=>value.toLocaleString(this.locale,{dateStyle:"medium"})),this.formatDateShort=_stub(),this.formatDateShort.callsFake((value,includeTime)=>!0===includeTime?value.toLocaleString(this.locale,{dateStyle:"short",timeStyle:"short"}).replace(",",""):value.toLocaleDateString(this.locale,{dateStyle:"short"})),this.formatDateYearMonth=_stub(),this.formatDateYearMonth.callsFake(value=>value.toLocaleString(this.locale,{year:"numeric",month:"long"})),this.formatInteger=_stub(),this.formatInteger.callsFake(value=>value.toLocaleString(this.locale,{})),this.formatLanguage=_stub(),this.formatLanguage.callsFake(value=>`${value}`),this.formatTime=_stub(),this.formatTime.callsFake((value,behavior)=>{throw Error("Method not implemented.")}),this.getWeekOfYear=_stub(),this.getWeekOfYear.callsFake(value=>{let monthDays=[31,value.getFullYear()%4==0?29:28,31,30,31,30,31,31,30,31,30,31],dayOfYear=0;for(let i=0;i<value.getMonth();i++)dayOfYear+=monthDays[i];return Math.ceil((dayOfYear+=value.getDate())/7)})}}class ModeMock{constructor(){this.allocatedHeight=void 0,this.allocatedWidth=void 0,this.isControlDisabled=void 0,this.isVisible=void 0,this.label=void 0,this.setControlState=void 0,this._FullScreen=void 0,this._TrackingContainerResize=void 0,this.setFullScreen=void 0,this.trackContainerResize=void 0,this.allocatedHeight=-1,this.allocatedWidth=-1,this.isVisible=!0,this.isControlDisabled=!1,this.label="Mocked with @shko.online/componentframework-mock",this.setControlState=_stub(),this._FullScreen=!1,this.setFullScreen=_stub(),this.trackContainerResize=_stub(),this.trackContainerResize.callsFake(value=>{this._TrackingContainerResize=value}),this._TrackingContainerResize=!1}}class NavigationMock{constructor(){this.openAlertDialog=void 0,this.openConfirmDialog=void 0,this.openErrorDialog=void 0,this.openFile=void 0,this.openForm=void 0,this.openUrl=void 0,this.openWebResource=void 0,this.openAlertDialog=_stub(),new Promise(resolve=>{resolve({text:"string",confirmButtonLabel:"string"})}),new Promise(resolve=>{resolve({height:200,width:200})}),this.openAlertDialog.callsFake((alertStrings,options)=>new Promise(resolve=>{resolve()})),this.openConfirmDialog=_stub(),this.openConfirmDialog.callsFake((confirmStrings,options)=>new Promise(resolve=>{resolve({confirmed:!0})})),this.openErrorDialog=_stub(),this.openFile=_stub(),this.openForm=_stub(),this.openUrl=_stub(),this.openWebResource=_stub()}}class ResourcesMock{constructor(){this.getResource=void 0,this.getString=void 0,this.getResource=_stub(),this.getString=_stub()}}class UserSettingsMock{constructor(){this.dateFormattingInfo=void 0,this.isRTL=void 0,this.languageId=void 0,this.numberFormattingInfo=void 0,this.securityRoles=void 0,this.userId=void 0,this.userName=void 0,this.getTimeZoneOffsetMinutes=void 0,this.dateFormattingInfo={amDesignator:"AM",abbreviatedDayNames:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],abbreviatedMonthGenitiveNames:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec",""],abbreviatedMonthNames:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec",""],calendarWeekRule:0,calendar:{minSupportedDateTime:new Date(1753,0,1),maxSupportedDateTime:new Date(9999,11,31),algorithmType:1,calendarType:1,twoDigitYearMax:2029},dateSeparator:"/",dayNames:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],firstDayOfWeek:0,fullDateTimePattern:"dddd, MMMM d, yyyy h:mm:ss tt",longDatePattern:"dddd, MMMM d, yyyy",longTimePattern:"hh:mm:ss tt",monthDayPattern:"MMMM dd",monthGenitiveNames:["January","February","March","April","May","June","July","August","September","October","November","December",""],monthNames:["January","February","March","April","May","June","July","August","September","October","November","December",""],pmDesignator:"PM",shortDatePattern:"M/d/yyyy",shortTimePattern:"h:mm tt",shortestDayNames:["Su","Mo","Tu","We","Th","Fr","Sa"],sortableDateTimePattern:"yyyy'-'MM'-'dd'T'HH':'mm':'ss",timeSeparator:":",universalSortableDateTimePattern:"yyyy'-'MM'-'dd HH':'mm':'ss'Z'",yearMonthPattern:"MMMM yyyy"},this.isRTL=!0,this.languageId=1033,this.numberFormattingInfo={currencyDecimalDigits:5,currencyDecimalSeparator:".",currencyGroupSeparator:",",currencyGroupSizes:[3],currencyNegativePattern:0,currencyPositivePattern:0,currencySymbol:"$",nanSymbol:"NaN",nativeDigits:["0","1","2","3","4","5","6","7","8","9"],negativeInfinitySymbol:"-Infinity",negativeSign:"-",numberDecimalDigits:2,numberDecimalSeparator:".",numberGroupSeparator:",",numberGroupSizes:[3],numberNegativePattern:1,perMilleSymbol:"",percentDecimalDigits:2,percentDecimalSeparator:".",percentGroupSeparator:",",percentGroupSizes:[3],percentNegativePattern:0,percentPositivePattern:0,percentSymbol:"%",positiveInfinitySymbol:"Infinity",positiveSign:"+"},this.securityRoles=[],this.userId="",this.userName="",this.getTimeZoneOffsetMinutes=_stub()}}class UtilityMock{constructor(){this.getEntityMetadata=void 0,this.hasEntityPrivilege=void 0,this.lookupObjects=void 0,this.getEntityMetadata=_stub(),this.hasEntityPrivilege=_stub(),this.hasEntityPrivilege.callsFake((entityTypeName,privilegeType,privilegeDepth)=>!0),this.lookupObjects=_stub(),this.lookupObjects.callsFake(lookupOptions=>new Promise(resolve=>{resolve([{entityType:lookupOptions.entityTypes?lookupOptions.entityTypes[0]:"mocked_entity",id:"00000000-0000-0000-0000-000000000001",name:"Fake Lookup Result"}])}))}}let atMostOnce=(option,value,result)=>!(value.length>1)||(result.error={code:"0x0",message:`Query option '${option}' was specified more than once, but it must be specified at most once.`},!1),hasContent=(query,value,result)=>!!value[0].trim()||(result.error={code:"0x0",message:`The value for OData query '${query}' cannot be empty.`},!1),getTopFromParser_option="$top",getTopFromParser=(parser,result)=>{let $top;let value=parser.getAll(getTopFromParser_option);return 0===value.length||!!(atMostOnce(getTopFromParser_option,value,result)&&hasContent(getTopFromParser_option,value,result))&&(!value[0].match(/^\d+$/)||($top=parseInt(value[0]))<0?(result.error={code:"0x0",message:`Invalid value '${value}' for $top query option found. The $top query option requires a non-negative integer value.`},!1):0===$top?(result.error={code:"0x0",message:"Invalid value for $top query option."},!1):(result.$top=$top,!0))},getSelectFromParser_option="$select",getSelectFromParser=(parser,result)=>{let value=parser.getAll(getSelectFromParser_option);return 0===value.length||!!atMostOnce(getSelectFromParser_option,value,result)&&(value.length>0&&(result.$select=value[0].split(",")),!0)},getExpandFromParser_option="$expand",getExpandFromParser=(parser,result)=>{let value=parser.getAll(getExpandFromParser_option);return 0===value.length||!!atMostOnce(getExpandFromParser_option,value,result)&&(result.$expand={},!!extractExpand(value[0],result))},extractExpand=(value,$expand)=>{let match=value.match(/^\s*(\w(\w|\d|_)*)\s*(,|\(|\))?\s*/);if(null===match||match[0].length<value.length&&null===match[3]||match[0].length===value.length&&void 0!==match[3])return $expand.error={code:"0x0",message:`Term '${value}' is not valid in a $select or $expand expression.`},!1;let matchSeparator=match[3],matchLength=match[0].length;if("("!==matchSeparator)void 0!==$expand.$expand&&($expand.$expand[match[1]]={$select:[]});else{let{index,error}=getClosingBracket(value.substring(matchLength));if(error)return $expand.error={code:"0x0",message:error},!1;if(void 0!==$expand.$expand){let innerExpand={},parser=new URLSearchParams("?"+value.substring(matchLength,matchLength+index));if(!getSelectFromParser(parser,innerExpand)||!getExpandFromParser(parser,innerExpand))return $expand.error=innerExpand.error,!1;if(void 0===innerExpand.$expand&&void 0===innerExpand.$select)return $expand.error={code:"0x0",message:`Missing expand option on navigation property '${match[1]}'. If a parenthesis expression follows an expanded navigation property, then at least one expand option must be provided.`},!1;$expand.$expand[match[1]]=innerExpand}matchLength+=index;let secondMatch=value.substring(matchLength+1).match(/\s*(,?)\s*d/);null!==secondMatch&&(matchLength+=secondMatch[0].length,null!==secondMatch[1]&&(matchSeparator=","))}return!!(","!==matchSeparator||extractExpand(value.substring(matchLength),$expand))},getClosingBracket=value=>{let depth=1,startAt=0;for(;depth>0;){let match=value.substring(startAt).match(/\(|\)/);if(null===match)break;if(")"===match[0]){if(0==(depth-=1))return{index:match.index||0}}else depth+=1;startAt+=(match.index||0)+1}return{error:"Found an unbalanced bracket expression.",index:-1}},differentFromEmptyString=(value,result)=>""!==value[0]||(result.error={code:"0x80040203",message:"Expected non-empty string."},!1),getFetchXmlFromParser_option="fetchXml",getFetchXmlFromParser=(parser,result)=>{let value=parser.getAll(getFetchXmlFromParser_option);if(0===value.length)return!0;if(!atMostOnce(getFetchXmlFromParser_option,value,result)||!differentFromEmptyString(value,result))return!1;let fetchXml=value[0],fetchXmlDocument=new DOMParser().parseFromString(fetchXml,"text/xml");if("parsererror"===fetchXmlDocument.documentElement.tagName)return result.error={code:"0x80040201",message:"Invalid XML."},!1;let entity=fetchXmlDocument.evaluate("fetch/entity",fetchXmlDocument,null,XPathResult.ANY_TYPE,null).iterateNext();if(1!=fetchXmlDocument.documentElement.children.length||!entity||!entity.getAttribute("name"))return result.error={code:"0x80041102",message:"Entity Name was not specified in FetchXml String."},!1;let invalidAttribute=fetchXmlDocument.evaluate("fetch/entity/*[not(self::filter or self::order or self::link-entity or self::attribute or self::all-attributes or self::no-attrs)]",fetchXmlDocument,null,XPathResult.ANY_TYPE,null).iterateNext();return invalidAttribute?(result.error={code:"0x8004111c",message:`Invalid Child Node, valid nodes are filter, order, link-entity, attribute, all-attributes, no-attrs. NodeName = ${invalidAttribute.tagName} NodeXml = ${invalidAttribute.outerHTML}`},!1):(result.fetchXml=fetchXmlDocument,!0)},guidRegex=/[0-9A-F]{8}\-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}/gi,isGuid=(value,result)=>!!value[0].match(guidRegex)||(result.error={code:"0x0",message:"Guid should contain 32 digits with 4 dashes (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)."},!1),recognizedGuid=(value,result)=>!!value[0].trim()||(result.error={code:"0x0",message:"Unrecognized Guid format."},!1),getXQueryFromParser=(X,parser,result)=>{let value=parser.getAll(X);return 0===value.length||!!(recognizedGuid(value,result)&&isGuid(value,result))&&(result[X]=value[0],!0)},getOrderByFromParser_option="$orderby",edmProperty=/\w{1-255}/gi,getOrderByFromParser=(parser,result)=>{let value=parser.getAll(getOrderByFromParser_option);if(0===value.length)return!0;if(!atMostOnce(getOrderByFromParser_option,value,result)||!hasContent(getOrderByFromParser_option,value,result))return!1;let $orderby=value[0].trimEnd(),orderByArray=[];for(let i=0;i<$orderby.length;i++);return orderByArray.forEach(orderBy=>{if(!orderBy.column?.match(edmProperty))return result.error={code:"0x80060888",message:"Order By Property must be of type EdmProperty"},!1}),result.$orderby=orderByArray,!0},parseOData=query=>{let parser=new URLSearchParams(query),result={};return getExpandFromParser(parser,result)&&getSelectFromParser(parser,result)&&getTopFromParser(parser,result)&&getFetchXmlFromParser(parser,result)&&getXQueryFromParser("savedQuery",parser,result)&&getXQueryFromParser("userQuery",parser,result)&&getOrderByFromParser(parser,result),result},AttributeType_AttributeType={BigInt:18,Boolean:0,CalendarRules:16,Customer:1,DateTime:2,Decimal:3,Double:4,EntityName:20,Integer:5,Lookup:6,ManagedProperty:19,Memo:7,Money:8,Owner:9,PartyList:10,Picklist:11,State:12,Status:13,String:14,Uniqueidentifier:15,Virtual:17},OptionSetType={Picklist:0,Boolean:3};class EntityRecordMock{constructor(db,etn,id,updateView){this._db=void 0,this._boundRow=void 0,this._boundTable=void 0,this._isDirty=void 0,this._isValid=void 0,this._updateView=void 0,this.getFormattedValue=void 0,this.getRecordId=void 0,this.getValue=void 0,this.getNamedReference=void 0,this.isDirty=void 0,this.isValid=void 0,this.save=void 0,this.setValue=void 0,this._updateView=updateView,this._db=db,this._boundTable=etn,this._boundRow=id,this._isDirty=!1,this._isValid=!0,this.getFormattedValue=_stub(),this.getFormattedValue.callsFake(columnName=>{let{value,attributeMetadata}=this._db.GetValueAndMetadata(this._boundTable,columnName,this._boundRow);return void 0===value?value:""+value}),this.getNamedReference=_stub(),this.getNamedReference.callsFake(()=>{let{row,entityMetadata}=this._db.GetRow(this._boundTable,this._boundRow);return row?{id:{guid:row?.[entityMetadata?entityMetadata.PrimaryIdAttribute||entityMetadata.LogicalName+"id":"id"]},etn:entityMetadata?.LogicalName,name:row?.[entityMetadata?.PrimaryNameAttribute||"name"]}:{id:{guid:""},name:""}}),this.getRecordId=_stub(),this.getRecordId.callsFake(()=>id),this.getValue=_stub(),this.getValue.callsFake(columnName=>{let{value,attributeMetadata}=this._db.GetValueAndMetadata(this._boundTable,columnName,this._boundRow);return value}),this.isDirty=_stub(),this.isDirty.callsFake(()=>this._isDirty),this.isValid=_stub(),this.isValid.callsFake(()=>this._isValid),this.save=_stub(),this.save.callsFake(()=>new Promise(resolve=>{setTimeout(()=>{this._isDirty=!1,this._updateView&&this._updateView(),resolve()},10)})),this.setValue=_stub(),this.setValue.callsFake((columnName,value)=>new Promise(resolve=>{setTimeout(()=>{this._db.UpdateValue(value,this._boundTable,columnName,this._boundRow),this._isDirty=!0,this._updateView&&this._updateView(),resolve()},10)}))}}class FilteringMock{constructor(){this._Filter=void 0,this.getFilter=void 0,this.setFilter=void 0,this.clearFilter=void 0;let defaultFilter={conditions:[],filterOperator:0};this._Filter=defaultFilter,this.clearFilter=_stub(),this.clearFilter.callsFake(()=>{this._Filter=defaultFilter}),this.getFilter=_stub(),this.getFilter.callsFake(()=>Object.assign({},this._Filter)),this.setFilter=_stub(),this.setFilter.callsFake(filter=>{this._Filter=Object.assign({},filter)})}}class LinkingMock{constructor(){this.getLinkedEntities=void 0,this.addLinkedEntity=void 0,this.addLinkedEntity=_stub(),this.getLinkedEntities=_stub()}}class PagingMock{constructor(){this._pageSize=void 0,this.totalResultCount=void 0,this.firstPageNumber=void 0,this.lastPageNumber=void 0,this.pageSize=void 0,this.hasNextPage=void 0,this.hasPreviousPage=void 0,this.loadNextPage=void 0,this.loadPreviousPage=void 0,this.reset=void 0,this.setPageSize=void 0,this.loadExactPage=void 0,this.totalResultCount=-1,this.firstPageNumber=1,this.lastPageNumber=1,this.hasNextPage=!1,this.hasPreviousPage=!1,this._pageSize=10,this.pageSize=10,this.loadNextPage=_stub(),this.loadNextPage.callsFake(()=>this.hasNextPage),this.loadPreviousPage=_stub(),this.loadPreviousPage.callsFake(()=>this.hasPreviousPage),this.setPageSize=_stub(),this.setPageSize.callsFake(pageSize=>{this._pageSize=pageSize}),this.reset=_stub(),this.loadExactPage=_stub()}}class AttributeMetadataGenerator{constructor(entityLogicalName){this.Attributes=void 0,this.AddString=void 0,this.AddBoolean=void 0,this.AddInteger=void 0,this.Attributes=[],this.AddString=_stub(),this.AddString.callsFake(args=>(this.Attributes=this.Attributes.concat(args.map(logicalName=>({EntityLogicalName:entityLogicalName,LogicalName:logicalName,AttributeType:AttributeType_AttributeType.String}))),this)),this.AddBoolean=_stub(),this.AddBoolean.callsFake(args=>(this.Attributes=this.Attributes.concat(args.map(logicalName=>({EntityLogicalName:entityLogicalName,LogicalName:logicalName,AttributeType:AttributeType_AttributeType.Boolean}))),this)),this.AddInteger=_stub(),this.AddInteger.callsFake(args=>(this.Attributes=this.Attributes.concat(args.map(logicalName=>({EntityLogicalName:entityLogicalName,LogicalName:logicalName,AttributeType:AttributeType_AttributeType.Integer}))),this))}}class DataSet_mock_DataSetMock{constructor(propertyName,db){this._boundColumn=void 0,this._boundTable=void 0,this._boundRow=void 0,this._dataSetCapabilities=void 0,this._db=void 0,this._Bind=void 0,this._Refresh=void 0,this._InitItems=void 0,this._loading=void 0,this._timeoutRef=void 0,this._onLoaded=void 0,this._delay=void 0,this._SelectedRecordIds=void 0,this._updateView=void 0,this.addColumn=void 0,this.columns=void 0,this.delete=void 0,this.error=void 0,this.errorMessage=void 0,this.filtering=void 0,this.linking=void 0,this.loading=void 0,this.paging=void 0,this.records=void 0,this.sortedRecordIds=void 0,this.sorting=void 0,this.clearSelectedRecordIds=void 0,this.getDataSetCapabilities=void 0,this.getSelectedRecordIds=void 0,this.getTargetEntityType=void 0,this.getTitle=void 0,this.getViewId=void 0,this.newRecord=void 0,this.openDatasetItem=void 0,this.refresh=void 0,this.setSelectedRecordIds=void 0,this._boundTable=`!!${propertyName}`,this._boundColumn=propertyName,this._dataSetCapabilities={canCreateNewRecords:!0,canPaginate:!0,hasCellImageInfo:!0,hasRecordNavigation:!0,isEditable:!0,isFilterable:!0,isSortable:!0},this._db=db,this._SelectedRecordIds=[],this._onLoaded=_stub(),this.error=!1,this.errorMessage="",this.linking=new LinkingMock,this._db.initMetadata([{LogicalName:"!!"+propertyName,EntitySetName:"!!"+propertyName,PrimaryIdAttribute:"id",PrimaryNameAttribute:"name",Attributes:[]},{LogicalName:"!!"+propertyName+"@columns",EntitySetName:"!!"+propertyName+"@columns",PrimaryIdAttribute:"name",PrimaryNameAttribute:"displayName",Attributes:[]}]),this._Refresh=_stub(),this._Bind=_stub(),this._Bind.callsFake((boundTable,boundColumn,boundRow)=>{this._boundColumn=boundColumn,this._boundRow=boundRow,this._boundTable=boundTable}),this._InitItems=_stub(),this._InitItems.callsFake(items=>{let tableMetadata=this._db.getTableMetadata(`${this._boundTable}`);if(tableMetadata){let primaryIdAttribute=tableMetadata.PrimaryIdAttribute||"";items.forEach((item,i)=>{void 0===item[primaryIdAttribute]&&(item[primaryIdAttribute]=i+"")})}let i=0,columns={};items.forEach(item=>{Object.getOwnPropertyNames(item).forEach(key=>{key in columns||(columns[key]=i++)})}),new AttributeMetadataGenerator(this._boundTable).AddString(Object.getOwnPropertyNames(columns).filter(att=>!tableMetadata?.Attributes?.some(att2=>att2.LogicalName===att))).Attributes.forEach(attribute=>{this._db.upsertAttributeMetadata(this._boundTable,attribute)}),new AttributeMetadataGenerator(`${this._boundTable}@columns`).AddString(["displayName","dataType","alias"]).AddInteger(["order","visualSizeFactor"]).Attributes.forEach(attribute=>{this._db.upsertAttributeMetadata(`${this._boundTable}@columns`,attribute)}),this._db.initItems({"@odata.context":`#${this._boundTable}@columns`,value:Object.getOwnPropertyNames(columns).map(column=>({displayName:column,name:column,dataType:"SingleLine.Text",alias:column,order:columns[column],visualSizeFactor:1}))}),this._db.initItems({"@odata.context":`#${this._boundTable}`,value:items}),this._Refresh()}),this._Refresh.callsFake(()=>{let columnsResult=this._db.GetAllRows(`${this._boundTable}@columns`);this.columns=columnsResult.rows;let rows=this._db.GetAllRows(this._boundTable),records=this._loading?[]:rows.rows.map(item=>new EntityRecordMock(db,this._boundTable,item[rows.entityMetadata?.PrimaryIdAttribute||"id"],this._updateView));if(this.records={},this.loading=this._loading,records.forEach(record=>{this.records[record.getRecordId()]=record}),this.paging.pageSize=this.paging._pageSize,this.paging.totalResultCount=records.length,this.sorting.length>0){let sort=this.sorting[0];this.sortedRecordIds=records.sort((record1,record2)=>0===sort.sortDirection?record1.getFormattedValue(sort.name)?.localeCompare(record2.getFormattedValue(sort.name)):record2.getFormattedValue(sort.name)?.localeCompare(record1.getFormattedValue(sort.name))).map(record=>record.getRecordId())}else this.sortedRecordIds=records.sort((record1,record2)=>record1.getNamedReference()?.name?.localeCompare(record2.getNamedReference()?.name)).map(record=>record.getRecordId())}),this.loading=!0,this._loading=!0,this._delay=200,this.sortedRecordIds=[],this.sorting=[],this.columns=[],this.paging=new PagingMock,this.filtering=new FilteringMock,this.records={},this.clearSelectedRecordIds=_stub(),this.clearSelectedRecordIds.callsFake(()=>{this._SelectedRecordIds=[]}),this.delete=_stub(),this.delete.callsFake(ids=>new Promise(resolve=>resolve())),this.getDataSetCapabilities=_stub(),this.getDataSetCapabilities.callsFake(()=>Object.assign({},this._dataSetCapabilities)),this.getSelectedRecordIds=_stub(),this.getSelectedRecordIds.callsFake(()=>[...this._SelectedRecordIds]),this.addColumn=_stub(),this.getTargetEntityType=_stub(),this.getTargetEntityType.callsFake(()=>this._boundTable),this.getTitle=_stub(),this.getViewId=_stub(),this.newRecord=_stub(),this.newRecord.callsFake(()=>{if(!this._db.getTableMetadata(`${this._boundTable}`))throw Error("Please initialize the metadata for this functionality");return new EntityRecordMock(db,this._boundTable,"Guid.NewGuid?",this._updateView)}),this.openDatasetItem=_stub(),this.refresh=_stub(),this.setSelectedRecordIds=_stub(),this.setSelectedRecordIds.callsFake(ids=>{if(!ids){this._SelectedRecordIds=[];return}for(let i=0;i<ids.length;i++)if(!this._db.GetRow(this._boundTable,ids[i]).row)throw Error(`Record with id '${ids[i]}' does not exist.`);this._SelectedRecordIds=ids})}}class Property_mock_PropertyMock{constructor(db,boundTable,boundColumn){this._boundColumn=void 0,this._boundRow=void 0,this._boundTable=void 0,this._db=void 0,this._Refresh=void 0,this._Bind=void 0,this._SetValue=void 0,this.error=void 0,this.errorMessage=void 0,this.formatted=void 0,this.security=void 0,this.raw=void 0,this.type=void 0,this.attributes=void 0,this._db=db,this._boundTable=boundTable,this._boundColumn=boundColumn,this._boundRow=void 0,this._Refresh=_stub(),this._SetValue=_stub(),this._Bind=_stub(),this._Bind.callsFake((boundTable,boundColumn,boundRow)=>{this._boundColumn=boundColumn,this._boundRow=boundRow,this._boundTable=boundTable}),this.raw=null,this.error=!1,this.errorMessage="",this.type=""}}class EnumPropertyMock{constructor(propertyName,db,entityMetadata){this._boundColumn=void 0,this._boundTable=void 0,this._boundRow=void 0,this._db=void 0,this._Bind=void 0,this._Refresh=void 0,this._SetValue=void 0,this.raw=void 0,this.type=void 0,this.raw="",this._db=db,this._boundColumn=propertyName,this._boundTable=entityMetadata.LogicalName,this._Refresh=_stub(),this._Bind=_stub(),this._Bind.callsFake((boundTable,boundColumn,boundRow)=>{this._boundTable=boundTable,this._boundColumn=boundColumn,this._boundRow=boundRow}),this._Bind(entityMetadata.LogicalName,propertyName),this._SetValue=_stub(),this._SetValue.callsFake(value=>{this._db.UpdateValue(value,this._boundTable,this._boundColumn,this._boundRow)}),this._Refresh.callsFake(()=>{let{value,attributeMetadata}=this._db.GetValueAndMetadata(this._boundTable,this._boundColumn,this._boundRow);if(attributeMetadata.AttributeType!==AttributeType_AttributeType.String)throw Error("Type Error");this.raw=value});let attribute={AttributeType:AttributeType_AttributeType.String,EntityLogicalName:entityMetadata.LogicalName,LogicalName:propertyName};entityMetadata.Attributes?.push(attribute),this.type="EnumProperty"}}class MetadataMock{constructor(){this.DisplayName=void 0,this.LogicalName=void 0,this.RequiredLevel=void 0,this.IsSecured=void 0,this.SourceType=void 0,this.Description=void 0,this.DisplayName="",this.LogicalName="",this.RequiredLevel=0,this.IsSecured=!1,this.SourceType=0,this.Description=""}}class StringMetadataMock extends MetadataMock{constructor(){super(),this.Format=void 0,this.ImeMode=void 0,this.MaxLength=void 0,this.Format="",this.ImeMode=0,this.MaxLength=100}}class StringPropertyMock extends Property_mock_PropertyMock{constructor(propertyName,db,entityMetadata){super(db,entityMetadata.LogicalName,propertyName),this._SetValue=void 0,this.attributes=void 0,this.raw=void 0,this.raw=null,this._SetValue=_stub(),this._SetValue.callsFake(value=>{this._db.UpdateValue(value,this._boundTable,this._boundColumn,this._boundRow)}),this._Refresh.callsFake(()=>{let{value,attributeMetadata}=this._db.GetValueAndMetadata(this._boundTable,this._boundColumn,this._boundRow);if(attributeMetadata.AttributeType!==AttributeType_AttributeType.String)throw Error("Type Error");this.attributes.LogicalName=attributeMetadata.LogicalName,this.attributes.DisplayName=attributeMetadata.DisplayName,this.attributes.MaxLength=attributeMetadata.MaxLength,this.attributes.Format=attributeMetadata.Format,this.attributes.ImeMode=attributeMetadata.ImeMode,this.raw=value});let attribute={AttributeType:AttributeType_AttributeType.String,EntityLogicalName:entityMetadata.LogicalName,LogicalName:propertyName};entityMetadata.Attributes?.push(attribute),this.attributes=new StringMetadataMock}}class WebApiMock{constructor(db,formatting){this._Delay=void 0,this.createRecord=void 0,this.deleteRecord=void 0,this.updateRecord=void 0,this.retrieveMultipleRecords=void 0,this.retrieveRecord=void 0,this._Delay=200,this.createRecord=_stub(),this.createRecord.callsFake((entityType,data)=>new Promise((resolve,reject)=>{setTimeout(()=>{let metadata=db.getTableMetadata(entityType);if(!metadata)return reject({message:`Entity ${entityType} does not exist.`});resolve({id:db.AddRow(entityType,data,metadata)||"",name:data[metadata.PrimaryNameAttribute||"name"],entityType:entityType})},this._Delay)})),this.deleteRecord=_stub(),this.deleteRecord.callsFake((entityType,id)=>new Promise((resolve,reject)=>{setTimeout(()=>{let result=db.GetRow(entityType,id);return result.entityMetadata?result.row?void(db.RemoveRow(entityType,id),resolve({id,name:result.row?.[result.entityMetadata.PrimaryNameAttribute||"name"],entityType})):reject({message:`Could not find record with id: '${id}' for entity: '${entityType}'.`}):reject({message:`Entity ${entityType} does not exist.`})},this._Delay)})),this.updateRecord=_stub(),this.updateRecord.callsFake((entityType,id,data)=>new Promise(resolve=>{resolve({id,name:"Any",entityType})})),this.retrieveMultipleRecords=_stub(),this.retrieveMultipleRecords.callsFake((entityType,options,maxPageSize)=>new Promise(resolve=>{resolve({entities:[],nextLink:"string"})})),this.retrieveRecord=_stub(),this.retrieveRecord.callsFake((entityType,id,options)=>new Promise((resolve,reject)=>{setTimeout(()=>{let result=db.GetRowForAPI(entityType,id);if(!result.entityMetadata)return reject({message:`Entity ${entityType} does not exist.`});if(!result.row)return reject({message:`Could not find record with id: '${id}' for entity: '${entityType}'.`});let oldRow=result.row;if(options){var parsed=parseOData(options);parsed.$select&&(result.row={},parsed.$select.forEach(attribute=>{result.row[attribute]=oldRow[attribute]}))}result.entityMetadata.Attributes&&result.entityMetadata.Attributes.forEach(attribute=>{let key=attribute.LogicalName;if(attribute.AttributeType===AttributeType_AttributeType.Boolean)(void 0===result.row[key]||null===result.row[key])&&delete result.row[key];else if(attribute.AttributeType===AttributeType_AttributeType.Lookup){let key=`_${attribute.LogicalName}_value`,lookupValue=oldRow[key];key in result.row&&(result.row[key]=lookupValue&&lookupValue.id?lookupValue.id:null,lookupValue&&lookupValue.id&&(result.row[`${key}@Microsoft.Dynamics.CRM.lookuplogicalname`]=lookupValue.entityType,null!=lookupValue.name&&(result.row[`${key}@OData.Community.Display.V1.FormattedValue`]=lookupValue.name),oldRow[`${attribute.LogicalName}navigation`]&&(result.row[`${key}@Microsoft.Dynamics.CRM.associatednavigationproperty`]=oldRow[`${attribute.LogicalName}navigation`]))),delete result.row[`${attribute.LogicalName}type`],delete result.row[`${attribute.LogicalName}navigation`]}else if(attribute.AttributeType===AttributeType_AttributeType.DateTime){let dateValue=result.row[key];if(dateValue){let YYYY=dateValue.getFullYear(),MM="0"+(dateValue.getMonth()+1);MM=MM.substring(MM.length-2);let DD="0"+dateValue.getDate();DD=DD.substring(DD.length-2);let HH="0"+dateValue.getUTCHours();HH=HH.substring(HH.length-2);let mm="0"+dateValue.getMinutes();mm=mm.substring(mm.length-2);let ss="0"+dateValue.getSeconds();ss=ss.substring(ss.length-2),result.row[key]=`${YYYY}-${MM}-${DD}T${HH}:${mm}:${ss}Z`,result.row[`${key}@OData.Community.Display.V1.FormattedValue`]=`${dateValue.getUTCMonth()+1}/${dateValue.getUTCDate()}/${dateValue.getUTCFullYear()} ${(dateValue.getUTCHours()-1)%12+1}:${dateValue.getUTCMinutes()} ${dateValue.getUTCHours()>12||12==dateValue.getUTCHours()&&dateValue.getMinutes()>0?"PM":"AM"}`}else delete result.row[key]}else(attribute.AttributeType===AttributeType_AttributeType.Integer||attribute.AttributeType===AttributeType_AttributeType.BigInt)&&null!==result.row[key]&&void 0!==result.row[key]&&(result.row[key+"@OData.Community.Display.V1.FormattedValue"]=formatting.formatInteger(result.row[key]));if(attribute.AttributeOf){var original=result.entityMetadata.Attributes?.find(att=>att.LogicalName==attribute.AttributeOf);original?.AttributeType!==AttributeType_AttributeType.Lookup&&void 0!==oldRow[original?.LogicalName]&&null!==oldRow[original?.LogicalName]&&null!==oldRow[key]&&void 0!==oldRow[key]&&original?.LogicalName in result.row&&(result.row[original?.LogicalName+"@OData.Community.Display.V1.FormattedValue"]=oldRow[key]),delete result.row[key]}}),Object.getOwnPropertyNames(result.row).forEach(key=>{void 0===result.row[key]&&(result.row[key]=null)}),resolve(result.row)},this._Delay)}))}}class Context_mock_ContextMock{constructor(inputs,db){this.client=void 0,this.device=void 0,this.factory=void 0,this.formatting=void 0,this.mode=void 0,this.navigation=void 0,this.parameters=void 0,this._parameters=void 0,this._SetCanvasItems=void 0,this.resources=void 0,this.userSettings=void 0,this.utils=void 0,this.webAPI=void 0,this.updatedProperties=void 0,this.updatedProperties=[],this.client=new ClientMock,this.device=new DeviceMock,this.factory=new FactoryMock,this.formatting=new FormattingMock,this.mode=new ModeMock,this.navigation=new NavigationMock,this.parameters={},this._parameters={},this._SetCanvasItems=_stub(),this._SetCanvasItems.callsFake(parameters=>{db.initCanvasItems([parameters])});let CanvasEntity={LogicalName:"!CanvasApp",EntitySetName:"!CanvasApp",Attributes:[]};Object.getOwnPropertyNames(inputs).forEach(propertyName=>{let parameter=new inputs[propertyName](propertyName,db,CanvasEntity);parameter._boundColumn=propertyName,parameter._db=db,this._parameters[propertyName]=parameter,this.parameters[propertyName]=parameter}),db.initMetadata([CanvasEntity]),this.resources=new ResourcesMock,this.userSettings=new UserSettingsMock,this.utils=new UtilityMock,this.webAPI=new WebApiMock(db,this.formatting)}}__webpack_require__("./node_modules/react/index.js");let getAttributeTypeFromString=attributeType=>{if("number"==typeof attributeType)return attributeType;switch(attributeType){case"Lookup":case"Lookup":return AttributeType_AttributeType.Lookup;case"BigInt":return AttributeType_AttributeType.BigInt;case"Boolean":return AttributeType_AttributeType.Boolean;case"CalendarRules":return AttributeType_AttributeType.CalendarRules;case"Customer":return AttributeType_AttributeType.Customer;case"DateTime":return AttributeType_AttributeType.DateTime;case"Decimal":return AttributeType_AttributeType.Decimal;case"Double":return AttributeType_AttributeType.Double;case"EntityName":return AttributeType_AttributeType.EntityName;case"Integer":return AttributeType_AttributeType.Integer;case"ManagedProperty":return AttributeType_AttributeType.ManagedProperty;case"Memo":return AttributeType_AttributeType.Memo;case"Money":return AttributeType_AttributeType.Money;case"Owner":return AttributeType_AttributeType.Owner;case"PartyList":return AttributeType_AttributeType.PartyList;case"Picklist":return AttributeType_AttributeType.Picklist;case"State":return AttributeType_AttributeType.State;case"Status":return AttributeType_AttributeType.Status;case"String":return AttributeType_AttributeType.String;case"Uniqueidentifier":return AttributeType_AttributeType.Uniqueidentifier;case"Virtual":return AttributeType_AttributeType.Virtual;default:return console.warn(`Got: '${attributeType}'. Returning Virtual.`),AttributeType_AttributeType.Virtual}},getSqlTypeForAttribute=attributeType=>{switch(attributeType){case AttributeType_AttributeType.Boolean:return"bit";case AttributeType_AttributeType.DateTime:return"datetime";case AttributeType_AttributeType.Decimal:return"decimal";case AttributeType_AttributeType.Double:return"double";case AttributeType_AttributeType.Integer:return"int";case AttributeType_AttributeType.Picklist:default:return"string"}};var alasql_min=__webpack_require__("./node_modules/alasql/dist/alasql.min.js"),alasql_min_default=__webpack_require__.n(alasql_min);let CREATE_TABLE_METADATA_ATTRIBUTE=`
    CREATE TABLE Metadata__Attribute(
        EntityId UniqueIdentifier, 
        AttributeId UniqueIdentifier PRIMARY KEY, 
        LogicalName string, 
        AttributeType int,
        DefaultFormValue int NULL,
        OptionSetId UniqueIdentifier,
        AttributeOf string NULL,
        AttributeTypeName string
    )
`,INSERT_METADATA_ATTRIBUTE=`
    INSERT INTO Metadata__Attribute VALUES (
        ?,
        ?,
        ?,
        ?,
        ?,
        ?,
        ?,
        ?
    )
`,SELECT_METADATA_ATTRIBUTE=`
    SELECT
        E.LogicalName as EntityLogicalName, 
        AttributeId, 
        A.LogicalName as LogicalName, 
        AttributeType,
        DefaultFormValue,
        OptionSetId,
        AttributeOf,
        AttributeTypeName
    FROM 
        Metadata__Attribute A 
            INNER JOIN
        Metadata__Entity E ON A.EntityId=E.EntityId
    WHERE A.LogicalName = ? AND E.LogicalName = ?
`,SELECT_METADATA_ATTRIBUTES=`
    SELECT
        E.LogicalName as EntityLogicalName, 
        AttributeId, 
        A.LogicalName as LogicalName, 
        AttributeType,
        DefaultFormValue,
        OptionSetId,
        AttributeOf,
        AttributeTypeName
    FROM 
        Metadata__Attribute AS A 
            INNER JOIN
        Metadata__Entity AS E ON A.EntityId=E.EntityId
    WHERE E.LogicalName = ?
`;class AttributeMetadataSQL{constructor(sql){this.sql=void 0,this.sql=sql,sql(CREATE_TABLE_METADATA_ATTRIBUTE)}AddAttributeMetadata(metadata){this.sql(INSERT_METADATA_ATTRIBUTE,[metadata.EntityId,metadata.AttributeId,metadata.LogicalName,metadata.AttributeType,metadata.DefaultFormValue,metadata.OptionSetId,metadata.AttributeOf,metadata.AttributeTypeName])}SelectAttributeMetadata(AttributeLogicalName,EntityLogicalName){return this.sql(SELECT_METADATA_ATTRIBUTE,[AttributeLogicalName,EntityLogicalName])}SelectAttributeMetadataById(AttributeId){return this.sql(SELECT_METADATA_ATTRIBUTE,[AttributeId])}SelectAttributeMetadataForTable(EntityLogicalName){return this.sql(SELECT_METADATA_ATTRIBUTES,[EntityLogicalName])}}let CREATE_TABLE_METADATA_ENTITY=`
    CREATE TABLE Metadata__Entity(
        EntityId UniqueIdentifier PRIMARY KEY, 
        LogicalName string, 
        EntitySetName string, 
        PrimaryIdAttribute string, 
        PrimaryNameAttribute string,
        PrimaryImageAttribute string
    )
`,INSERT_METADATA_ENTITY=`
    INSERT INTO Metadata__Entity VALUES (
        ?,
        ?,
        ?,
        ?,
        ?,
        ?
    )
`,SELECT_METADATA_ENTITY=`
    SELECT 
        EntityId, 
        LogicalName, 
        EntitySetName, 
        PrimaryIdAttribute, 
        PrimaryNameAttribute,
        PrimaryImageAttribute
    FROM
        Metadata__Entity
    WHERE LogicalName = ?
`,SELECT_METADATA_ENTITY_BY_ENTITYSET=`
    SELECT 
        EntityId, 
        LogicalName, 
        EntitySetName, 
        PrimaryIdAttribute, 
        PrimaryNameAttribute,
        PrimaryImageAttribute
    FROM
        Metadata__Entity
    WHERE EntitySetName = ?
`;class EntityMetadataSQL{constructor(sql){this.sql=void 0,this.sql=sql,sql(CREATE_TABLE_METADATA_ENTITY)}AddEntityMetadata(metadata){this.sql(INSERT_METADATA_ENTITY,[metadata.EntityId,metadata.LogicalName,metadata.EntitySetName,metadata.PrimaryIdAttribute,metadata.PrimaryNameAttribute,metadata.PrimaryImageAttribute])}SelectTableMetadata(LogicalName){return this.sql(SELECT_METADATA_ENTITY,[LogicalName])}SelectTableMetadataByEntitySet(EntitySetName){return this.sql(SELECT_METADATA_ENTITY_BY_ENTITYSET,[EntitySetName])}}let CREATE_TABLE_METADATA_OPTIONSET=`
    CREATE TABLE Metadata__Optionset(
        OptionSetId UniqueIdentifier PRIMARY KEY, 
        LogicalName string, 
        IsCustomOptionSet bit,
        OptionSetType  int
    )
`,INSERT_METADATA_OPTIONSET=`
    INSERT INTO Metadata__Optionset
    VALUES (
        ?, 
        ?, 
        ?,
        ?
    )
`,SELECT_METADATA_OPTIONSET=`
    SELECT  
        OptionSetId, 
        LogicalName, 
        IsCustomOptionSet,
        OptionSetType
    FROM 
        Metadata__Optionset
    WHERE OptionSetId = ?
`,CREATE_TABLE_METADATA_OPTIONSET_OPTION=`
    CREATE TABLE Metadata__Optionset_Option(
        [OptionId] UniqueIdentifier PRIMARY KEY, 
        [OptionSetId] UniqueIdentifier,
        [Color] string NULL, 
        [Value] int,
        [Label] string,
        [Description] string NULL,
        [DefaultStatus] int NULL,        
        [State] int NULL
    )
`,INSERT_METADATA_OPTIONSET_OPTION=`
    INSERT INTO Metadata__Optionset_Option
    VALUES (
        ?, 
        ?,
        ?, 
        ?,
        ?,
        ?,
        ?,        
        ?        
    )
`,SELECT_METADATA_OPTIONSET_OPTION=`
    SELECT  
        OptionId, 
        OptionSetId,
        Color, 
        [Value],
        Label,
        Description,
        DefaultStatus,        
        State    
    FROM 
        Metadata__Optionset_Option
    WHERE OptionSetId = ?
`;class OptionSetMetadataSQL{constructor(sql){this.sql=void 0,this.sql=sql,sql(CREATE_TABLE_METADATA_OPTIONSET),sql(CREATE_TABLE_METADATA_OPTIONSET_OPTION)}AddOptionSetMetadata(metadata){return this.sql(INSERT_METADATA_OPTIONSET,[metadata.OptionSetId,metadata.LogicalName,metadata.IsCustomOptionSet,metadata.OptionSetType])}SelectOptionSetMetadata(OptionSetId){return this.sql(SELECT_METADATA_OPTIONSET,[OptionSetId])}AddOptionMetadata(metadata){return this.sql(INSERT_METADATA_OPTIONSET_OPTION,[metadata.OptionId,metadata.OptionSetId,metadata.Color,metadata.Value,metadata.Label,metadata.Description,metadata.DefaultStatus,metadata.State])}SelectOptionSetOptionMetadata(OptionSetId){return this.sql(SELECT_METADATA_OPTIONSET_OPTION,[OptionSetId])}}class Metadata_db_MetadataDB{constructor(){this._warnMissingInit=void 0,this.db=void 0,this._newId=void 0,this.EntityMetadataSQL=void 0,this.OptionSetMetadataSQL=void 0,this.AttributeMetadataSQL=void 0,this._warnMissingInit=!1,this.db=new(alasql_min_default()).Database,this.AttributeMetadataSQL=new AttributeMetadataSQL(this.db.exec.bind(this.db)),this.EntityMetadataSQL=new EntityMetadataSQL(this.db.exec.bind(this.db)),this.OptionSetMetadataSQL=new OptionSetMetadataSQL(this.db.exec.bind(this.db)),this._newId=_stub(),this._newId.callsFake(()=>this.db.exec("SELECT NEWID() as ID")[0].ID)}createAttribute(entityId,attribute){let OptionSetId;if(attribute.MetadataId||(attribute.MetadataId=this._newId()),attribute.AttributeType===AttributeType_AttributeType.Picklist)for(let optionValue in attribute.OptionSet||(attribute.OptionSet={MetadataId:"",IsCustomOptionSet:!1,Name:attribute.LogicalName,Options:{},OptionSetType:OptionSetType.Picklist}),attribute.OptionSet.MetadataId||(attribute.OptionSet.MetadataId=this._newId()),OptionSetId=attribute.OptionSet.MetadataId,this.OptionSetMetadataSQL.AddOptionSetMetadata({IsCustomOptionSet:attribute.OptionSet.IsCustomOptionSet,LogicalName:attribute.OptionSet.Name,OptionSetId,OptionSetType:attribute.OptionSet.OptionSetType}),attribute.OptionSet.Options){let option=attribute.OptionSet.Options[optionValue],optionId=this._newId();console.log({OptionId:optionId,OptionSetId,Color:option.Color,Label:option.Label,Value:option.Value}),this.OptionSetMetadataSQL.AddOptionMetadata({OptionId:optionId,OptionSetId,Color:option.Color,Label:option.Label,Value:option.Value})}else if(attribute.AttributeType===AttributeType_AttributeType.Boolean){attribute.OptionSet||(attribute.OptionSet={MetadataId:"",IsCustomOptionSet:!1,Name:attribute.LogicalName,OptionSetType:OptionSetType.Boolean,DisplayName:"",FalseOption:{Color:"",Label:"No",Value:0},TrueOption:{Color:"",Label:"Yes",Value:1}}),attribute.OptionSet.FalseOption||(attribute.OptionSet.FalseOption={Color:"",Label:"No",Value:0}),attribute.OptionSet.TrueOption||(attribute.OptionSet.TrueOption={Color:"",Label:"Yes",Value:1}),attribute.OptionSet.MetadataId||(attribute.OptionSet.MetadataId=this._newId()),OptionSetId=attribute.OptionSet.MetadataId,this.OptionSetMetadataSQL.AddOptionSetMetadata({IsCustomOptionSet:attribute.OptionSet.IsCustomOptionSet,LogicalName:attribute.OptionSet.Name,OptionSetId,OptionSetType:attribute.OptionSet.OptionSetType});let OptionId=this._newId(),option=attribute.OptionSet.FalseOption;this.OptionSetMetadataSQL.AddOptionMetadata({OptionId,OptionSetId,Color:option.Color,Label:option.Label,Value:option.Value}),OptionId=this._newId(),option=attribute.OptionSet.TrueOption,this.OptionSetMetadataSQL.AddOptionMetadata({OptionId,OptionSetId,Color:option.Color,Label:option.Label,Value:option.Value})}this.AttributeMetadataSQL.AddAttributeMetadata({EntityId:entityId,AttributeId:attribute.MetadataId,LogicalName:attribute.LogicalName,AttributeType:attribute.AttributeType,DefaultFormValue:attribute.DefaultFormValue,OptionSetId,AttributeOf:attribute.AttributeOf,AttributeTypeName:attribute.AttributeTypeName?.value||""})}initMetadata(metadatas){metadatas.forEach(metadata=>this.initSingleTable(metadata))}initSingleTable(metadata){let entityId=this._newId(),safeTableName=metadata.LogicalName.toLowerCase().replace(/\!/g,"_").replace(/\@/g,"_");metadata.Attributes||(metadata.Attributes=[]);let attributes=metadata.Attributes;if(attributes.forEach(attribute=>{attribute.AttributeType=getAttributeTypeFromString(attribute.AttributeType)}),!metadata.PrimaryIdAttribute){let primaryAttribute=attributes.find(attr=>attr.AttributeType===AttributeType_AttributeType.Uniqueidentifier);primaryAttribute?metadata.PrimaryIdAttribute=primaryAttribute.LogicalName:metadata.PrimaryIdAttribute=safeTableName+"id"}if(!metadata.PrimaryNameAttribute){let primaryAttribute=attributes.find(attr=>attr.AttributeType===AttributeType_AttributeType.EntityName);primaryAttribute?metadata.PrimaryNameAttribute=primaryAttribute.LogicalName:metadata.PrimaryNameAttribute="name"}attributes.find(attr=>attr.LogicalName===metadata.PrimaryIdAttribute)||attributes.push({AttributeType:AttributeType_AttributeType.Uniqueidentifier,LogicalName:metadata.PrimaryIdAttribute,IsPrimaryId:!0});let virtualAttributes=[];attributes.forEach(attr=>{let virtualAttribute=attr.LogicalName+"name";!(attr.AttributeType===AttributeType_AttributeType.Boolean||attr.AttributeType===AttributeType_AttributeType.Lookup||attr.AttributeType===AttributeType_AttributeType.Picklist)||attributes.some(attrv=>attrv.LogicalName===virtualAttribute)||virtualAttributes.push({AttributeOf:attr.LogicalName,AttributeType:AttributeType_AttributeType.Virtual,LogicalName:virtualAttribute,SchemaName:(attr.SchemaName||attr.LogicalName)+"Name"})}),metadata.Attributes=attributes.concat(virtualAttributes),attributes=metadata.Attributes,this.EntityMetadataSQL.AddEntityMetadata({EntityId:entityId,EntitySetName:metadata.EntitySetName,LogicalName:metadata.LogicalName,PrimaryIdAttribute:metadata.PrimaryIdAttribute,PrimaryNameAttribute:metadata.PrimaryNameAttribute,PrimaryImageAttribute:metadata.PrimaryImageAttribute});let columns=[];attributes.forEach(attribute=>{this.createAttribute(entityId,attribute),columns.push(" ["+attribute.LogicalName+"] "+getSqlTypeForAttribute(attribute.AttributeType)),attribute.AttributeType===AttributeType_AttributeType.Lookup&&(columns.push(" ["+attribute.LogicalName+"type] string"),columns.push(" ["+attribute.LogicalName+"navigation] string"))});let createTableQuery=`CREATE TABLE ${safeTableName} (${columns.join(",")})`;this.db.exec(createTableQuery)}getAttributeMetadata(entity,attribute){let tableMetadataDB=this.EntityMetadataSQL.SelectTableMetadata(entity);if(!tableMetadataDB||0===tableMetadataDB.length){this._warnMissingInit&&console.warn(`Missing init for ${entity}`);return}let tableMetadata={LogicalName:tableMetadataDB[0].LogicalName,EntitySetName:tableMetadataDB[0].EntitySetName,Attributes:[],PrimaryIdAttribute:tableMetadataDB[0].PrimaryIdAttribute,PrimaryNameAttribute:tableMetadataDB[0].PrimaryNameAttribute,PrimaryImageAttribute:tableMetadataDB[0].PrimaryNameAttribute};var resultDB=this.AttributeMetadataSQL.SelectAttributeMetadata(attribute,entity);return resultDB&&0!==resultDB.length?this.mapAttributeFromAttributeDB(tableMetadata,resultDB[0]):(this._warnMissingInit&&console.warn(`Missing init for ${entity} ${attribute}`),null)}getTableMetadata(entity){let tableMetadataDB=this.EntityMetadataSQL.SelectTableMetadata(entity);if(!tableMetadataDB||0===tableMetadataDB.length){this._warnMissingInit&&console.warn(`Missing init for ${entity}`);return}let tableMetadata={LogicalName:tableMetadataDB[0].LogicalName,EntitySetName:tableMetadataDB[0].EntitySetName,Attributes:[],PrimaryIdAttribute:tableMetadataDB[0].PrimaryIdAttribute,PrimaryNameAttribute:tableMetadataDB[0].PrimaryNameAttribute,PrimaryImageAttribute:tableMetadataDB[0].PrimaryNameAttribute};return this.AttributeMetadataSQL.SelectAttributeMetadataForTable(entity).forEach(attributeDB=>{let attribute=this.mapAttributeFromAttributeDB(tableMetadata,attributeDB);tableMetadata.Attributes?.push(attribute)}),tableMetadata}mapAttributeFromAttributeDB(tableMetadata,attributeDB){let attribute={AttributeType:attributeDB.AttributeType,EntityLogicalName:tableMetadata.LogicalName,MetadataId:attributeDB.AttributeId,LogicalName:attributeDB.LogicalName,AttributeOf:attributeDB.AttributeOf,AttributeTypeName:{value:attributeDB.AttributeTypeName},IsPrimaryId:attributeDB.LogicalName===tableMetadata.PrimaryIdAttribute,IsPrimaryName:attributeDB.LogicalName===tableMetadata.PrimaryNameAttribute};if(attribute.AttributeType===AttributeType_AttributeType.Picklist){let optionsetDB=this.OptionSetMetadataSQL.SelectOptionSetMetadata(attributeDB.OptionSetId||"");attribute.DefaultFormValue=attributeDB.DefaultFormValue,attribute.OptionSet={IsCustomOptionSet:optionsetDB[0].IsCustomOptionSet,MetadataId:optionsetDB[0].OptionSetId,Name:optionsetDB[0].LogicalName,OptionSetType:optionsetDB[0].OptionSetType,Options:{}},this.OptionSetMetadataSQL.SelectOptionSetOptionMetadata(attributeDB.OptionSetId||"").forEach(option=>{attribute.OptionSet.Options[option.Value]={Label:option.Label,Value:option.Value,Color:option.Color}})}else if(attribute.AttributeType===AttributeType_AttributeType.Boolean){let optionsetDB=this.OptionSetMetadataSQL.SelectOptionSetMetadata(attributeDB.OptionSetId||"");attribute.OptionSet={IsCustomOptionSet:optionsetDB[0].IsCustomOptionSet,MetadataId:optionsetDB[0].OptionSetId,Name:optionsetDB[0].LogicalName,OptionSetType:optionsetDB[0].OptionSetType,DisplayName:"",FalseOption:{Color:"",Label:"No",Value:0},TrueOption:{Color:"",Label:"Yes",Value:1}},this.OptionSetMetadataSQL.SelectOptionSetOptionMetadata(attributeDB.OptionSetId||"").forEach(option=>{attribute.OptionSet[option.Value?"TrueOption":"FalseOption"]={Label:option.Label,Value:option.Value,Color:option.Color}})}return attribute}upsertAttributeMetadata(entity,attributeMetadata){let tableDB=this.EntityMetadataSQL.SelectTableMetadata(entity);if(!tableDB){console.warn(`Could not find metadata for ${entity}`);return}let safeTableName=tableDB[0].LogicalName.toLowerCase().replace(/\!/g,"_").replace(/\@/g,"_"),attributeDB=this.AttributeMetadataSQL.SelectAttributeMetadata(attributeMetadata.LogicalName,entity);attributeMetadata.MetadataId&&(attributeDB=attributeDB.concat(this.AttributeMetadataSQL.SelectAttributeMetadataById(attributeMetadata.MetadataId))),attributeDB&&attributeDB.length>0&&attributeDB.forEach(attribute=>{(attributeMetadata.AttributeType===AttributeType_AttributeType.Boolean||attributeMetadata.AttributeType===AttributeType_AttributeType.Lookup||attributeMetadata.AttributeType===AttributeType_AttributeType.Picklist||attributeMetadata.AttributeType===AttributeType_AttributeType.State||attributeMetadata.AttributeType==AttributeType_AttributeType.Status)&&attribute.OptionSetId&&(this.db.exec("DELETE FROM Metadata__Optionset WHERE OptionSetId = ?",[attribute.OptionSetId]),this.db.exec("DELETE FROM Metadata__Optionset_Option WHERE OptionSetId = ?",[attribute.OptionSetId])),console.log(attribute),attribute.AttributeId&&this.db.exec("DELETE FROM Metadata__Attribute WHERE AttributeId = ?",[attribute.AttributeId])});let virtualAttribute=attributeMetadata.LogicalName+"name";if(this.createAttribute(tableDB[0].EntityId,attributeMetadata),(attributeMetadata.AttributeType===AttributeType_AttributeType.Boolean||attributeMetadata.AttributeType===AttributeType_AttributeType.Lookup||attributeMetadata.AttributeType===AttributeType_AttributeType.Picklist||attributeMetadata.AttributeType===AttributeType_AttributeType.State||attributeMetadata.AttributeType==AttributeType_AttributeType.Status)&&(attributeMetadata.OptionSet&&attributeMetadata.OptionSet.MetadataId&&(this.db.exec("DELETE FROM Metadata__Optionset WHERE OptionSetId = ?",[attributeMetadata.OptionSet.MetadataId]),this.db.exec("DELETE FROM Metadata__Optionset_Option WHERE OptionSetId = ?",[attributeMetadata.OptionSet.MetadataId])),this.createAttribute(tableDB[0].EntityId,{AttributeOf:attributeMetadata.LogicalName,AttributeType:AttributeType_AttributeType.Virtual,LogicalName:virtualAttribute,SchemaName:(attributeMetadata.SchemaName||attributeMetadata.LogicalName)+"Name"}),attributeDB&&attributeDB.length>0||this.db.exec("ALTER TABLE "+safeTableName+" ADD COLUMN ["+virtualAttribute+"] string"),attributeMetadata.OptionSet))for(let optionValue in this.OptionSetMetadataSQL.AddOptionSetMetadata({IsCustomOptionSet:attributeMetadata.OptionSet.IsCustomOptionSet,LogicalName:attributeMetadata.OptionSet.Name,OptionSetId:attributeMetadata.OptionSet.MetadataId,OptionSetType:attributeMetadata.OptionSet.OptionSetType}),attributeMetadata.OptionSet.Options){let option=attributeMetadata.OptionSet.Options[optionValue],optionId=this._newId();this.OptionSetMetadataSQL.AddOptionMetadata({OptionId:optionId,OptionSetId:attributeMetadata.OptionSet.MetadataId,Color:option.Color,Label:option.Label,Value:option.Value})}attributeDB&&attributeDB.length>0||(this.db.exec("ALTER TABLE "+safeTableName+" ADD COLUMN ["+attributeMetadata.LogicalName+"] "+getSqlTypeForAttribute(attributeMetadata.AttributeType)),attributeMetadata.AttributeType===AttributeType_AttributeType.Lookup&&(this.db.exec("ALTER TABLE "+safeTableName+" ADD COLUMN ["+attributeMetadata.LogicalName+"type] string"),this.db.exec("ALTER TABLE "+safeTableName+" ADD COLUMN ["+attributeMetadata.LogicalName+"navigation] string")))}initItems(items){let entitySetName=items["@odata.context"]?.substring(items["@odata.context"].indexOf("#")+1),tableMetadataDB=this.EntityMetadataSQL.SelectTableMetadataByEntitySet(entitySetName);if(!tableMetadataDB||0===tableMetadataDB.length){this._warnMissingInit&&console.warn(`Missing init for entitySet ${entitySetName}`);return}let tableMetadata=this.getTableMetadata(tableMetadataDB[0].LogicalName);items.value.forEach(item=>{this.AddRow(tableMetadataDB[0].LogicalName,item,tableMetadata)})}AddRow(entity,item,tableMetadata){if(tableMetadata||(tableMetadata=this.getTableMetadata(entity)),!tableMetadata){this._warnMissingInit&&console.warn(`Missing init for entitySet ${entity}`);return}let safeTableName=tableMetadata.LogicalName.toLowerCase().replace(/\!/g,"_").replace(/\@/g,"_"),params=[],columns=[],newID=null;tableMetadata.Attributes?.forEach(attribute=>{let key=attribute.LogicalName;if(attribute.AttributeType===AttributeType_AttributeType.Uniqueidentifier){let value=item[attribute.LogicalName];value||tableMetadata?.PrimaryIdAttribute!==attribute?.LogicalName||(value=this._newId()),tableMetadata?.PrimaryIdAttribute===attribute?.LogicalName&&(newID=value),params.push(value)}else if(attribute.AttributeType===AttributeType_AttributeType.Lookup){let lookupNameAttribute=tableMetadata?.Attributes?.find(attr=>attr.AttributeOf===attribute.LogicalName&&attr.LogicalName!==attribute.LogicalName+"yominame");if("object"==typeof item[key]){let lookup=item[key];params.push(lookup?.name),columns.push("["+lookupNameAttribute?.LogicalName+"]"),params.push(lookup?.entityType),columns.push("["+key+"type]"),params.push(lookup?.id)}else params.push(item[`_${key}_value@OData.Community.Display.V1.FormattedValue`]),columns.push("["+lookupNameAttribute?.LogicalName+"]"),params.push(item[`_${key}_value@Microsoft.Dynamics.CRM.lookuplogicalname`]),columns.push("["+key+"type]"),params.push(item[`_${key}_value@Microsoft.Dynamics.CRM.associatednavigationproperty`]),columns.push("["+key+"navigation]"),params.push(item[`_${key}_value`])}else if(attribute.AttributeOf&&attribute.LogicalName===attribute.AttributeOf+"name"){let parentAttribute=tableMetadata?.Attributes?.find(attr=>attr.LogicalName===attribute.AttributeOf);if(parentAttribute?.AttributeType===AttributeType_AttributeType.Lookup)return;params.push(item[`${attribute.AttributeOf}@OData.Community.Display.V1.FormattedValue`])}else{if(!(key in item))return;let value=attribute.AttributeType===AttributeType_AttributeType.DateTime&&"string"==typeof item[key]?new Date(item[key]):item[key];if(null==value)return;params.push(value)}columns.push("["+key+"]")});let insertSql=`INSERT INTO ${safeTableName} (${columns.join(",")}) VALUES (${params.map(p=>"?").join(",")})`;return this.db.exec(insertSql,params),newID}initCanvasItems(items){this.initItems({"@odata.context":"#!CanvasApp",value:items})}GetRow(entity,id){let entityMetadata=this.getTableMetadata(entity);if(!entityMetadata)return{row:null,entityMetadata};let safeTableName=entity.toLowerCase().replace(/\!/g,"_").replace(/\@/g,"_"),selectQuery="SELECT "+(entityMetadata&&entityMetadata.Attributes?entityMetadata?.Attributes?.map(attr=>attr.AttributeType===AttributeType_AttributeType.Lookup?"["+attr.LogicalName+"],["+attr.LogicalName+"type],["+attr.LogicalName+"navigation]":"["+attr.LogicalName+"]").join(","):"*")+" FROM "+safeTableName;id&&(selectQuery+=" WHERE ["+(entityMetadata?.PrimaryIdAttribute||"id")+"] = ?");let rowDB=this.db.exec(selectQuery,[id]);if(!rowDB||0==rowDB.length)return console.warn("could not find row"),{row:null,entityMetadata};let row=rowDB[0];return entityMetadata?.Attributes?.forEach(attr=>{if(attr.AttributeType===AttributeType_AttributeType.Lookup){if(row[attr.LogicalName]){let nameAttribute=entityMetadata?.Attributes?.find(attrName=>attrName.AttributeOf===attr.LogicalName)?.LogicalName||attr.LogicalName+"name";row[attr.LogicalName]={id:row[attr.LogicalName],entityType:row[attr.LogicalName+"type"],name:row[nameAttribute]},delete row[attr.LogicalName+"type"],delete row[nameAttribute]}}else attr.AttributeType===AttributeType_AttributeType.Picklist&&"string"==typeof row[attr.LogicalName]&&(row[attr.LogicalName]=JSON.parse(row[attr.LogicalName]))}),{row,entityMetadata}}RemoveRow(entity,id){let entityMetadata=this.getTableMetadata(entity),selectQuery="DELETE FROM "+entity.toLowerCase().replace(/\!/g,"_").replace(/\@/g,"_")+" WHERE ["+(entityMetadata?.PrimaryIdAttribute||"id")+"] = ?";this.db.exec(selectQuery,[id])}GetRowForAPI(entity,id){let result=this.GetRow(entity,id);return result.entityMetadata&&result.entityMetadata&&result.entityMetadata.Attributes&&result.row&&result.entityMetadata.Attributes?.filter(attr=>attr.AttributeType===AttributeType_AttributeType.Lookup).forEach(lookupAttribute=>{let key=lookupAttribute.LogicalName,lookupValue=result.row[key];delete result.row[key],result.row[`_${key}_value`]=lookupValue}),result}GetValueAndMetadata(entity,attributeName,rowid){let result=this.GetRow(entity,rowid),attributeMetadata=result.entityMetadata?.Attributes?.find(attribute=>attribute.LogicalName===attributeName);return{value:result.row?.[attributeName],attributeMetadata}}GetAllRows(entity){let entityMetadata=this.getTableMetadata(entity),safeTableName=entity.toLowerCase().replace(/\!/g,"_").replace(/\@/g,"_");return{rows:this.db.exec("SELECT * FROM "+safeTableName),entityMetadata}}UpdateValue(value,entity,attribute,rowId){let tableMetadata=this.getTableMetadata(entity);if(!tableMetadata)return;let safeTableName=tableMetadata.LogicalName.toLowerCase().replace(/\!/g,"_").replace(/\@/g,"_"),attributeMetadata=tableMetadata.Attributes?.find(attr=>attr.LogicalName===attribute);if(!attributeMetadata){this._warnMissingInit&&console.warn(`Missing init for attribute '${attribute}' of table '${entity}'`);return}let statements=[],params=[];if(attributeMetadata.AttributeType===AttributeType_AttributeType.Lookup){let lookupNameAttribute=tableMetadata.Attributes?.find(attr=>attr.AttributeOf===attributeMetadata.LogicalName)?.LogicalName||attributeMetadata.LogicalName+"name";statements.push(` 
            SET [${attributeMetadata.LogicalName}] = ?, 
                [${attributeMetadata.LogicalName}type] = ?,
                [${lookupNameAttribute}] = ? `),params.push(value&&value.id?value.id:null),params.push(value&&value.id?value.entityType:null),params.push(value&&value.id?value.name:null)}else if(attributeMetadata.AttributeType===AttributeType_AttributeType.Picklist){let picklistNameAttribute=tableMetadata?.Attributes?.find(attr=>attr.AttributeOf===attributeMetadata.LogicalName)?.LogicalName||attributeMetadata.LogicalName+"name";if(statements.push(` 
            SET [${attributeMetadata.LogicalName}] = ?, 
                [${picklistNameAttribute}] = ? `),"object"==typeof value&&value instanceof Array)params.push(JSON.stringify(value));else{params.push(value);let label=attributeMetadata?.OptionSet.Options[value]?.Label;label||console.warn(`Picklist column ${attributeMetadata?.LogicalName} is missing option ${value}}`),params.push(label||"")}}else statements.push(` SET [${attributeMetadata.LogicalName}] = ? `),params.push(value);rowId&&(statements.push(` WHERE ${tableMetadata.PrimaryIdAttribute} = ? `),params.push(rowId)),this.db.exec(`UPDATE ${safeTableName} ${statements.join(" ")}`,params)}}let itemEqual=(source,target)=>null===source&&null===target||("object"==typeof source||"object"==typeof target?null!==source&&null!==target&&source.entityType===target.entityType&&source.id===target.id:source===target),arrayEqual=(source,target)=>Array.isArray(source)&&Array.isArray(target)&&source.length==target.length&&source.every(s=>target.some(t=>itemEqual(s,t))),backgroundImage=encodeURIComponent(`<svg
width="84"
height="84"
viewBox="0 0 8.4666665 8.4666669"
version="1.1"
id="svg213"
inkscape:version="1.1 (c68e22c387, 2021-05-23)"
sodipodi:docname="Shko Online 32x32.svg"
xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
xmlns="http://www.w3.org/2000/svg"
xmlns:svg="http://www.w3.org/2000/svg">
<sodipodi:namedview
  id="namedview215"
  pagecolor="#ffffff"
  bordercolor="#666666"
  borderopacity="1.0"
  inkscape:pageshadow="2"
  inkscape:pageopacity="0.0"
  inkscape:pagecheckerboard="0"
  inkscape:document-units="mm"
  showgrid="false"
  units="px"
  inkscape:zoom="8.3856039"
  inkscape:cx="47.998928"
  inkscape:cy="44.421368"
  inkscape:window-width="1920"
  inkscape:window-height="1017"
  inkscape:window-x="-8"
  inkscape:window-y="-8"
  inkscape:window-maximized="1"
  inkscape:current-layer="layer1" />
<defs
  id="defs210" />
<g
  inkscape:label="Layer 1"
  inkscape:groupmode="layer"
  id="layer1">
 <g
    transform="matrix(0.03527778,0,0,-0.03527778,7.9541245,6.379805)"
    id="g24"
    style="display:inline">
   <path
      id="path26"
      style="fill:#E40046;fill-opacity:1;fill-rule:nonzero;stroke:none"
      d="m 0,0 c 0,-24.24 -19.72,-43.96 -43.96,-43.96 h -120.17 c -24.24,0 -43.96,19.72 -43.96,43.96 v 120.17 c 0,24.24 19.72,43.96 43.96,43.96 H -43.96 C -19.72,164.13 0,144.41 0,120.17 Z m -43.96,169.13 h -120.17 c -27,0 -48.96,-21.97 -48.96,-48.96 V 0 c 0,-27 21.96,-48.96 48.96,-48.96 H -43.96 C -16.96,-48.96 5,-27 5,0 v 120.17 c 0,26.99 -21.96,48.96 -48.96,48.96" />
 </g>
 <g
    transform="matrix(0.03527778,0,0,-0.03527778,5.8293625,4.328045)"
    id="g28"
    style="display:inline">
   <path
      id="path30"
      style="fill:#E40046;fill-opacity:1;fill-rule:nonzero;stroke:none"
      d="m 0,0 c -7.09,0 -12.271,4.92 -12.271,11.84 0,5.53 3.321,9.76 8.281,11.23 v -5.22 c -1.74,-1.23 -2.84,-3.32 -2.84,-6.01 0,-4.41 2.94,-7.22 6.83,-7.22 3.93,0 6.87,2.81 6.87,7.22 0,2.68 -1.09,4.77 -2.83,5.99 v 5.24 C 9.03,21.6 12.32,17.37 12.32,11.84 12.32,4.92 7.17,0 0,0 m -19.49,0 -7.99,9.89 -4.02,-3.8 V 0 h -5.4 v 32.06 h 5.4 V 12.7 l 11.19,10.37 h 6.48 L -23.46,13.39 -12.92,0 Z m -24.281,0 h -5.399 v 12.53 c 0,4.1 -2.03,6.09 -5.49,6.09 -3.85,0 -6.44,-2.33 -6.44,-6.96 V 0 h -5.4 v 32.06 h 5.4 V 20.39 c 1.77,1.9 4.49,2.94 7.69,2.94 5.53,0 9.639,-3.15 9.639,-10.11 z M -81.63,0 c -3.84,0 -7.69,1.12 -9.76,2.59 l 2.07,4.1 c 2.03,-1.34 5.14,-2.29 8.04,-2.29 3.41,0 4.84,0.95 4.84,2.55 0,4.41 -14.26,0.26 -14.26,9.47 0,4.36 3.929,7.21 10.15,7.21 3.07,0 6.57,-0.73 8.65,-1.99 l -2.08,-4.1 c -2.2,1.3 -4.4,1.73 -6.61,1.73 -3.28,0 -4.84,-1.08 -4.84,-2.59 0,-4.67 14.26,-0.52 14.26,-9.55 C -71.17,2.8 -75.14,0 -81.63,0 m 79,26.87 H 2.68 V 14.49 h -5.31 z m 27.91,4.35 c -5.65,5.73 -13.2,8.88 -21.24,8.88 -0.38,0 -0.76,0 -1.14,-0.02 0.14,1.16 0.22,2.32 0.22,3.5 0,15.42 -12.55,27.96 -27.96,27.96 -10.65,0 -20.14,-5.98 -24.85,-15.12 -4.7,3.55 -10.45,5.51 -16.47,5.51 -15.09,0 -27.35,-12.27 -27.35,-27.35 0,-1.76 0.16,-3.49 0.489,-5.19 -0.669,0.01 -1.329,-0.01 -2,-0.05 -6.959,-0.44 -13.509,-3.46 -18.429,-8.5 -4.92,-5.04 -7.77,-11.65 -8.04,-18.63 -0.01,-0.29 -0.02,-0.58 -0.02,-0.88 -0.05,-5.51 2.08,-10.72 6,-14.67 3.989,-4.03 9.32,-6.25 14.989,-6.25 H 3.65 c 8.23,0 15.73,3.3 21.21,8.64 5.47,5.33 8.92,12.69 9.02,20.81 0.099,8.05 -2.95,15.64 -8.6,21.36" />
 </g>
 <g
    transform="matrix(0.03527778,0,0,-0.03527778,2.3297995,6.553725)"
    id="g32"
    style="display:inline">
   <path
      id="path34"
      style="fill:#E40046;fill-opacity:1;fill-rule:nonzero;stroke:none"
      d="m 0,0 c -3.87,0 -6.79,2.79 -6.79,7.18 0,4.38 2.92,7.18 6.79,7.18 3.91,0 6.84,-2.8 6.84,-7.18 C 6.84,2.79 3.91,0 0,0 M 0,18.92 C -7.05,18.92 -12.21,14.06 -12.21,7.18 -12.21,0.3 -7.05,-4.6 0,-4.6 7.14,-4.6 12.26,0.3 12.26,7.18 12.26,14.06 7.14,18.92 0,18.92" />
 </g>
 <g
    transform="matrix(0.03527778,0,0,-0.03527778,3.4036555,5.886265)"
    id="g36"
    style="display:inline">
   <path
      id="path38"
      style="fill:#E40046;fill-opacity:1;fill-rule:nonzero;stroke:none"
      d="m 0,0 c -3.35,0 -6.14,-1.12 -7.91,-3.23 v 2.97 h -5.11 v -22.96 h 5.37 v 11.61 c 0,4.6 2.58,6.92 6.41,6.92 3.44,0 5.46,-1.98 5.46,-6.06 v -12.47 h 5.37 v 13.15 C 9.59,-3.14 5.51,0 0,0" />
 </g>
 <path
    id="path40"
    style="display:inline;fill:#E40046;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:0.0352778"
    d="m 3.9832695,6.705415 h 0.189794 v -1.12536 h -0.189794 z" />
 <g
    transform="matrix(0.03527778,0,0,-0.03527778,4.5173675,5.534555)"
    id="g42"
    style="display:inline">
   <path
      id="path44"
      style="fill:#E40046;fill-opacity:1;fill-rule:nonzero;stroke:none"
      d="m 0,0 c -1.98,0 -3.44,-1.42 -3.44,-3.22 0,-1.81 1.46,-3.23 3.44,-3.23 2.02,0 3.44,1.46 3.44,3.36 C 3.44,-1.33 1.97,0 0,0 m -2.71,-33.19 h 5.37 v 22.96 h -5.37 z" />
 </g>
 <g
    transform="matrix(0.03527778,0,0,-0.03527778,5.3195915,5.886265)"
    id="g46"
    style="display:inline">
   <path
      id="path48"
      style="fill:#E40046;fill-opacity:1;fill-rule:nonzero;stroke:none"
      d="m 0,0 c -3.35,0 -6.15,-1.12 -7.91,-3.23 v 2.97 h -5.12 v -22.96 h 5.38 v 11.61 c 0,4.6 2.58,6.92 6.4,6.92 3.45,0 5.47,-1.98 5.47,-6.06 v -12.47 h 5.37 v 13.15 C 9.59,-3.14 5.51,0 0,0" />
 </g>
 <g
    transform="matrix(0.03527778,0,0,-0.03527778,6.0279725,6.235165)"
    id="g50"
    style="display:inline">
   <path
      id="path52"
      style="fill:#E40046;fill-opacity:1;fill-rule:nonzero;stroke:none"
      d="m 0,0 c 0.52,3.35 3.06,5.59 6.54,5.59 3.52,0 6.06,-2.28 6.49,-5.59 z m 18.15,-1.98 c 0,7.18 -4.9,11.87 -11.61,11.87 -6.84,0 -11.87,-4.91 -11.87,-11.74 0,-6.84 4.99,-11.78 12.69,-11.78 3.95,0 7.18,1.29 9.24,3.74 l -2.88,3.31 c -1.63,-1.68 -3.66,-2.5 -6.23,-2.5 -4,0 -6.8,2.15 -7.44,5.51 h 18.01 c 0.05,0.51 0.09,1.16 0.09,1.59" />
 </g>
</g>
</svg>
`),banner_showBanner=name=>console.info(`%cShko Online%c	\r
%cWe just helped you test your %c${name}%c component!\r
Contact us: %c%s%s%s`,"font-size:0px;","background-image:url('data:image/svg+xml;utf8,"+backgroundImage+"');background-repeat:no-repeat;color:transparent;background-position:center;font-size:84px;","","font-weight:bold;","font-weight:normal;","font-weight:bold;","sales","@","shko.online"),mockNotifyOutputChanged_mockNotifyOutputChanged=(mockGenerator,getOutputs,executeUpdateView)=>{mockGenerator.context.factory.requestRender.callsFake(()=>{setInterval(()=>executeUpdateView(),0)}),mockGenerator.context.mode.setFullScreen.callsFake(value=>{mockGenerator.context.updatedProperties=[],mockGenerator.context.mode._FullScreen!=value&&mockGenerator.context.updatedProperties.push(value?"fullscreen_open":"fullscreen_close"),mockGenerator.context.mode._FullScreen=value,executeUpdateView()}),mockGenerator.notifyOutputChanged.callsFake(()=>{let updates=getOutputs?.();if(updates){for(let k in mockGenerator.context.updatedProperties=[],updates)if(k in mockGenerator.context._parameters){let isLookup=!1,property=mockGenerator.context._parameters[k];if(Array.isArray(updates[k])){let arrayUpdate=updates[k];arrayUpdate&&"object"==typeof arrayUpdate[0]&&(isLookup=!0),arrayEqual(arrayUpdate,mockGenerator.context._parameters[k].raw)||mockGenerator.context.updatedProperties.push(k)}else updates[k]instanceof Date?mockGenerator.context._parameters[k].raw?.getTime()!==updates[k]?.getTime()&&mockGenerator.context.updatedProperties.push(k):mockGenerator.context._parameters[k].raw!==updates[k]&&mockGenerator.context.updatedProperties.push(k);if(isLookup){mockGenerator.metadata.UpdateValue(updates[k][0],property._boundTable,property._boundColumn,property._boundRow);continue}mockGenerator.metadata.UpdateValue(updates[k],property._boundTable,property._boundColumn,property._boundRow)}mockGenerator.context.updatedProperties.length>0&&(mockGenerator.context.updatedProperties.push("parameters"),executeUpdateView(),mockGenerator.onOutputChanged?.())}})},mockRefreshDatasets_mockRefreshDatasets=(mockGenerator,callback)=>{mockGenerator.RefreshDatasets=_stub(),mockGenerator.RefreshDatasets.callsFake(()=>{Object.getOwnPropertyNames(mockGenerator.context._parameters).forEach(propertyName=>{let mock=mockGenerator.context._parameters[propertyName];mock instanceof DataSet_mock_DataSetMock&&mock._loading&&void 0===mock._timeoutRef&&(mock._timeoutRef=setTimeout(()=>{mock._loading=!mock._loading,mockGenerator.RefreshParameters(),mockGenerator.context.updatedProperties=[propertyName,"dataset"],callback(),mock._onLoaded(),mock._timeoutRef=void 0},mock._delay))})})},mockSetControlResource_mockSetControlResource=mockGenerator=>{mockGenerator.SetControlResource=_stub(),mockGenerator.SetControlResource.callsFake(resource=>{let elements=new DOMParser().parseFromString(resource,"text/xml").getElementsByTagNameNS("","data");mockGenerator.context.resources.getString.callsFake(id=>{for(let i=0;i<elements.length;i++)if(elements[i].getAttribute("name")===id)return elements[i].getElementsByTagName("value")[0].innerHTML;throw Error(`Could not find string with id '${id}'`)})})},mockRefreshParameters_mockRefreshParameters=mockGenerator=>{mockGenerator.RefreshParameters=_stub(),mockGenerator.RefreshParameters.callsFake(()=>{Object.getOwnPropertyNames(mockGenerator.context.parameters).forEach(propertyName=>{mockGenerator.context._parameters[propertyName]._Refresh()})})},mockGetEntityMetadata_mockGetEntityMetadata=mockGenerator=>{mockGenerator.context.utils.getEntityMetadata.callsFake((entityName,attributes)=>new Promise((resolve,reject)=>{let result=mockGenerator.metadata.getTableMetadata(entityName);if(!result){reject(`Could not find entity metadata for '${entityName}'`);return}attributes&&(result.Attributes=result.Attributes?.filter(attribute=>attributes.some(attributeFilter=>attribute.LogicalName===attributeFilter))),resolve(result)}))},mockSetControlState_mockSetControlState=mockGenerator=>{mockGenerator.context.mode.setControlState.callsFake(state=>(mockGenerator.state=Object.assign({},state,mockGenerator.state),!0))};class ComponentFrameworkMockGenerator{constructor(control,inputs,container){this.RefreshParameters=void 0,this.RefreshDatasets=void 0,this.container=void 0,this.context=void 0,this.control=void 0,this.notifyOutputChanged=void 0,this.onOutputChanged=void 0,this.resizeObserver=void 0,this.state=void 0,this.SetControlResource=void 0,this.metadata=void 0,banner_showBanner(control.name),this.state={},this.container=container??document.createElement("div"),this.control=_spy(new control),this.metadata=new Metadata_db_MetadataDB,this.context=new Context_mock_ContextMock(inputs,this.metadata),this.resizeObserver=new ResizeObserver(entries=>{let size=entries[0];this.context.mode.allocatedHeight=size.contentRect.height,this.context.mode.allocatedWidth=size.contentRect.width,this.ExecuteUpdateView()}),this.context.mode.trackContainerResize.callsFake(value=>{value?this.resizeObserver.observe(this.container):this.resizeObserver.unobserve(this.container)}),Object.getOwnPropertyNames(this.context._parameters).forEach(p=>{var parameter=this.context._parameters[p];parameter instanceof DataSet_mock_DataSetMock&&(parameter._updateView=this.ExecuteUpdateView.bind(this))}),mockGetEntityMetadata_mockGetEntityMetadata(this),this.notifyOutputChanged=_stub(),mockNotifyOutputChanged_mockNotifyOutputChanged(this,this.control.getOutputs?.bind(this.control),this.ExecuteUpdateView.bind(this)),this.onOutputChanged=_stub(),this.RefreshParameters=_stub(),mockRefreshParameters_mockRefreshParameters(this),this.RefreshDatasets=_stub(),mockRefreshDatasets_mockRefreshDatasets(this,this.ExecuteUpdateView.bind(this)),this.SetControlResource=_stub(),mockSetControlResource_mockSetControlResource(this),mockSetControlState_mockSetControlState(this)}ExecuteInit(){this.RefreshParameters();let state=void 0===this.state?this.state:Object.assign({},this.state);this.control.init(this.context,this.notifyOutputChanged,state,this.container)}ExecuteUpdateView(){this.RefreshParameters(),this.control.updateView(this.context),this.RefreshDatasets()}}},"./node_modules/alasql/dist/alasql.min.js":function(module,exports,__webpack_require__){"use strict";module=__webpack_require__.nmd(module);var __WEBPACK_AMD_DEFINE_FACTORY__,__WEBPACK_AMD_DEFINE_RESULT__,process=__webpack_require__("./node_modules/process/browser.js");/*
@module alasql
@version 4.2.2

AlaSQL - JavaScript SQL database
© 2014-2023	Andrey Gershun & Mathias Wulff

@license
The MIT License (MIT)

Copyright 2014-2023 Andrey Gershun (agershun@gmail.com) & Mathias Wulff (m@rawu.dk)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
*/void 0!==(__WEBPACK_AMD_DEFINE_RESULT__="function"==typeof(__WEBPACK_AMD_DEFINE_FACTORY__=function(){var u=function(e,n,t,r){if(n=n||[],"function"!=typeof importScripts&&u.webworker){var i=u.lastid++;u.buffer[i]=t,u.webworker.postMessage({id:i,sql:e,params:n});return}return 0==arguments.length?new S.Select({columns:[new S.Column({columnid:"*"})],from:[new S.ParamValue({param:0})]}):1==arguments.length&&e.constructor===Array?u.promise(e):("function"==typeof n&&(r=t,t=n,n=[]),"object"!=typeof n&&(n=[n]),"string"==typeof e&&"#"===e[0]&&"object"==typeof document?e=document.querySelector(e).textContent:"object"==typeof e&&e instanceof HTMLElement?e=e.textContent:"function"==typeof e&&(e=e.toString(),e=(/\/\*([\S\s]+)\*\//m.exec(e)||["","Function given as SQL. Plese Provide SQL string or have a /* ... */ syle comment with SQL in the function."])[1]),u.exec(e,n,t,r))};u.version="4.2.2",u.build="develop-a55b6500",u.debug=void 0;var ut=function(){return null},xt=function(){var e=function(Et,l2,m2,h2){for(m2=m2||{},h2=Et.length;h2--;m2[Et[h2]]=l2);return m2},n=[2,13],t=[1,104],r=[1,102],i=[1,103],a=[1,6],f=[1,42],l=[1,79],h=[1,76],g=[1,94],m=[1,93],b=[1,69],c=[1,101],d=[1,85],N=[1,64],E=[1,71],R=[1,84],A=[1,66],O=[1,70],C=[1,68],V=[1,61],T1=[1,74],C1=[1,62],T=[1,67],S1=[1,83],A1=[1,77],y=[1,86],d2=[1,87],E2=[1,81],g2=[1,82],A2=[1,80],S2=[1,88],c2=[1,89],u2=[1,90],v2=[1,91],M2=[1,92],J2=[1,98],K2=[1,65],j2=[1,78],I2=[1,72],C2=[1,96],w2=[1,97],N2=[1,63],F2=[1,73],$e=[1,108],Yt=[1,107],st=[10,310,606,767],M=[10,310,314,606,767],_=[1,115],H=[1,116],P=[1,117],G=[1,118],B=[1,119],J=[1,120],br=[130,357,414],Er=[1,128],gr=[1,127],mr=[1,135],a1=[1,165],j=[1,176],F=[1,179],s1=[1,174],k=[1,182],i1=[1,186],o1=[1,161],L=[1,183],f1=[1,170],u1=[1,172],l1=[1,175],D=[1,184],Y=[1,201],W=[1,202],c1=[1,167],h1=[1,194],d1=[1,189],p1=[1,190],X=[1,195],K=[1,196],Q=[1,197],z=[1,198],Z=[1,199],q=[1,200],$=[1,203],e1=[1,204],t1=[1,177],r1=[1,178],U=[1,180],n1=[1,181],b1=[1,187],E1=[1,193],x=[1,185],g1=[1,188],m1=[1,173],v1=[1,171],w=[1,192],I=[1,205],q2=[2,4,5],P3=[2,476],G3=[1,208],E3=[1,213],Wt=[1,222],Xt=[1,218],R4=[10,72,78,93,98,118,128,162,168,169,183,198,232,249,251,310,314,606,767],vr=[2,4,5,10,72,76,77,78,112,115,116,118,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,183,185,187,198,244,245,284,285,286,287,288,289,290,291,310,314,424,428,606,767],t2=[2,4,5,10,53,72,74,76,77,78,89,93,95,98,99,107,112,115,116,118,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,179,180,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,232,239,244,245,246,247,249,251,270,271,284,285,286,287,288,289,290,291,293,300,304,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,334,335,336,337,339,342,343,400,404,405,408,410,412,413,421,422,424,428,438,440,441,443,444,445,446,447,451,452,455,456,468,474,509,511,512,521,606,767],_2=[1,251],I4=[1,258],Sr=[1,267],vt=[1,272],St=[1,271],g3=[2,4,5,10,72,77,78,93,98,107,118,128,131,132,137,143,145,149,152,154,156,162,168,169,179,180,181,183,198,232,244,245,249,251,269,270,274,275,277,284,285,286,287,288,289,290,291,293,294,295,296,297,298,299,300,301,302,303,306,307,310,314,316,321,424,428,606,767],B3=[2,162],J3=[1,283],Tr=[10,74,78,310,314,509,606,767],v=[2,4,5,10,53,72,74,76,77,78,89,93,95,98,99,107,112,115,116,118,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,179,180,181,183,185,187,189,193,198,206,208,222,223,224,225,226,227,228,229,230,231,232,239,244,245,246,247,249,251,270,271,284,285,286,287,288,289,290,291,293,300,301,304,306,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,334,335,336,337,339,342,343,347,348,360,372,373,374,377,378,390,393,400,404,405,406,407,408,409,410,412,413,421,422,424,428,430,437,438,440,441,443,444,445,446,447,451,452,455,456,468,474,509,511,512,518,519,520,521,606,767],Ar=[2,4,5,10,53,72,89,124,146,156,189,270,271,293,310,339,342,343,400,404,405,408,410,412,413,421,422,438,440,441,443,444,445,446,447,451,452,455,456,509,511,512,521,606,767],Vt=[1,564],Nr=[1,566],H3=[2,508],j3=[1,572],Mt=[1,583],Tt=[1,586],ct=[1,587],Or=[10,78,89,132,137,146,189,300,310,314,474,606,767],Qe=[10,74,310,314,606,767],Y3=[2,572],W3=[1,605],X3=[2,4,5,156],q1=[1,643],H1=[1,615],N1=[1,649],O1=[1,650],k1=[1,623],Cr=[1,634],L1=[1,621],I1=[1,629],D1=[1,622],$1=[1,630],e2=[1,632],y1=[1,624],F1=[1,625],r2=[1,644],o2=[1,641],f2=[1,642],V1=[1,618],x1=[1,620],G1=[1,612],w1=[1,613],B1=[1,614],J1=[1,616],R1=[1,617],M1=[1,619],_1=[1,626],P1=[1,627],Y1=[1,631],W1=[1,633],X1=[1,635],K1=[1,636],Q1=[1,637],z1=[1,638],Z1=[1,639],n2=[1,645],i2=[1,646],j1=[1,647],s2=[1,648],w4=[2,290],G2=[2,4,5,10,53,72,74,76,77,78,89,93,95,98,99,107,112,115,116,118,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,179,180,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,230,231,232,239,244,245,246,247,249,251,270,271,284,285,286,287,288,289,290,291,293,300,301,304,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,334,335,336,337,339,342,343,347,360,372,373,377,378,400,404,405,408,410,412,413,421,422,424,428,430,438,440,441,443,444,445,446,447,451,452,455,456,468,474,509,511,512,521,606,767],Rr=[2,364],k4=[1,671],K3=[1,681],ze=[2,4,5,10,53,72,74,76,77,78,89,93,95,98,99,107,112,115,116,118,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,179,180,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,230,231,232,239,244,245,246,247,249,251,270,271,284,285,286,287,288,289,290,291,293,300,304,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,334,335,336,337,339,342,343,400,404,405,408,410,412,413,421,422,424,428,430,438,440,441,443,444,445,446,447,451,452,455,456,468,474,509,511,512,521,606,767],m3=[1,697],Ir=[1,706],wr=[1,705],kr=[2,4,5,10,72,74,78,93,98,118,128,162,168,169,206,208,222,223,224,225,226,227,228,229,230,231,232,249,251,310,314,606,767],U2=[10,72,74,78,93,98,118,128,162,168,169,206,208,222,223,224,225,226,227,228,229,230,231,232,249,251,310,314,606,767],Lr=[2,202],Dr=[1,728],Kt=[10,72,78,93,98,118,128,162,168,169,183,232,249,251,310,314,606,767],xr=[2,163],Vr=[1,731],Mr=[2,4,5,112],$2=[1,744],ee=[1,763],te=[1,743],re=[1,742],ne=[1,737],ie=[1,738],ae=[1,740],se=[1,741],oe=[1,745],fe=[1,746],ue=[1,747],le=[1,748],ce=[1,749],he=[1,750],de=[1,751],pe=[1,752],be=[1,753],Ee=[1,754],ge=[1,755],me=[1,756],ve=[1,757],Se=[1,758],Te=[1,759],Ae=[1,760],Ne=[1,762],Oe=[1,764],Ce=[1,765],Re=[1,766],Ie=[1,767],we=[1,768],ke=[1,769],Le=[1,770],De=[1,773],xe=[1,774],Ve=[1,775],Me=[1,776],Ue=[1,777],ye=[1,778],Fe=[1,779],_e=[1,780],Pe=[1,781],Ge=[1,782],Be=[1,783],Je=[1,784],L4=[74,89,189],k2=[10,74,78,154,187,230,301,310,314,347,360,372,373,377,378,606,767],He=[1,801],Ur=[10,74,78,304,310,314,606,767],a2=[1,802],yr=[1,808],Fr=[1,809],D4=[1,813],R2=[10,74,78,310,314,606,767],Ut=[2,4,5,77,131,132,137,143,145,149,152,154,156,179,180,181,244,245,269,270,274,275,277,284,285,286,287,288,289,290,291,293,294,295,296,297,298,299,300,301,302,303,306,307,316,321,424,428],Qt=[10,72,78,93,98,107,118,128,162,168,169,183,198,232,249,251,310,314,606,767],yt=[2,4,5,10,72,77,78,93,98,107,118,128,131,132,137,143,145,149,152,154,156,162,164,168,169,179,180,181,183,185,187,195,198,232,244,245,249,251,269,270,274,275,277,284,285,286,287,288,289,290,291,293,294,295,296,297,298,299,300,301,302,303,306,307,310,314,316,321,424,428,606,767],Q3=[2,4,5,132,300],_r=[1,848],Pr=[10,74,76,78,310,314,606,767],x4=[2,743],z3=[10,74,76,78,132,139,141,145,152,310,314,424,428,606,767],Gr=[2,1166],Z3=[10,74,76,78,139,141,145,152,310,314,424,428,606,767],ot=[10,74,76,78,139,141,145,310,314,424,428,606,767],Br=[10,74,78,139,141,310,314,606,767],V4=[10,78,89,132,146,189,300,310,314,474,606,767],zt=[339,342,343],Jr=[2,769],Hr=[1,873],jr=[1,874],Yr=[1,875],Wr=[1,876],Zt=[1,885],qt=[1,884],Ft=[164,166,338],Xr=[2,449],Kr=[1,940],Qr=[2,4,5,77,131,156,293,294,295,296,297],zr=[1,955],q3=[2,4,5,10,53,72,74,76,77,78,89,93,95,98,99,107,112,118,122,124,128,129,130,131,132,134,135,137,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,179,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,232,239,244,245,246,247,249,251,270,271,284,285,286,287,288,289,290,291,293,300,304,310,312,313,314,315,317,318,319,321,322,323,324,325,326,327,328,329,330,334,335,336,337,339,342,343,400,404,405,408,410,412,413,421,422,424,428,438,440,441,443,444,445,446,447,451,452,455,456,468,474,509,511,512,521,606,767],M4=[2,4,5,10,53,72,74,76,77,78,89,93,95,98,99,107,112,115,116,118,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,179,180,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,232,239,244,245,246,247,249,251,270,271,284,285,286,287,288,289,290,291,293,300,304,310,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,328,329,330,334,335,336,337,339,342,343,400,404,405,408,410,412,413,421,422,424,428,438,440,441,443,444,445,446,447,451,452,455,456,468,474,509,511,512,521,606,767],Zr=[2,380],qr=[1,962],U4=[310,312,314],$r=[74,304],ht=[74,304,430],en=[1,969],y4=[2,4,5,10,53,72,74,76,78,89,93,95,98,99,107,112,115,116,118,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,179,180,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,232,239,244,245,246,247,249,251,270,271,284,285,286,287,288,289,290,291,293,300,304,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,334,335,336,337,339,342,343,400,404,405,408,410,412,413,421,422,424,428,438,440,441,443,444,445,446,447,451,452,455,456,468,474,509,511,512,521,606,767],v3=[74,430],S3=[1,982],T3=[1,981],At=[1,988],$3=[10,72,78,93,98,118,128,162,168,169,232,249,251,310,314,606,767],tn=[1,1014],Ze=[10,72,78,310,314,606,767],je=[1,1020],Ye=[1,1021],We=[1,1022],p2=[2,4,5,10,72,74,76,77,78,112,115,116,118,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,179,180,181,183,185,187,198,244,245,284,285,286,287,288,289,290,291,310,314,424,428,606,767],A3=[1,1072],N3=[1,1071],rn=[1,1085],nn=[1,1084],$t=[1,1092],Nt=[10,72,74,78,93,98,107,118,128,162,168,169,183,198,232,249,251,310,314,606,767],F4=[1,1124],an=[10,78,89,146,189,310,314,474,606,767],sn=[1,1144],on=[1,1143],fn=[1,1142],e3=[2,4,5,10,53,72,74,76,77,78,89,93,95,98,99,107,112,115,116,118,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,179,180,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,230,232,239,244,245,246,247,249,251,270,271,284,285,286,287,288,289,290,291,293,300,301,304,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,334,335,336,337,339,342,343,347,360,372,373,377,378,400,404,405,408,410,412,413,421,422,424,428,438,440,441,443,444,445,446,447,451,452,455,456,468,474,509,511,512,521,606,767],un=[1,1158],e4=[2,4,5,10,53,72,74,76,77,78,89,93,95,98,99,107,112,118,122,124,128,129,130,131,132,134,135,137,139,140,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,232,239,244,245,246,247,249,251,270,271,284,285,286,287,288,289,290,291,293,300,304,310,312,313,314,315,317,318,319,324,325,326,327,328,329,330,334,335,336,337,339,342,343,400,404,405,408,410,412,413,421,422,424,428,438,440,441,443,444,445,446,447,451,452,455,456,468,474,509,511,512,521,606,767],ln=[2,4,5,10,53,72,74,76,77,78,89,93,95,98,99,107,112,118,122,124,128,129,130,131,132,134,135,137,139,140,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,232,239,244,245,246,247,249,251,270,271,284,285,286,287,288,289,290,291,293,300,304,310,312,313,314,315,317,319,324,325,326,327,328,329,330,334,335,336,337,339,342,343,400,404,405,408,410,412,413,421,422,424,428,438,440,441,443,444,445,446,447,451,452,455,456,468,474,509,511,512,521,606,767],_4=[2,4,5,10,53,72,74,76,77,78,89,93,95,98,99,107,112,118,122,124,128,129,130,131,132,133,134,135,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,179,180,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,232,239,244,245,246,247,249,251,270,271,284,285,286,287,288,289,290,291,293,300,304,310,312,313,314,315,317,318,319,321,322,323,324,325,326,327,328,329,330,334,335,336,337,339,342,343,400,404,405,408,410,412,413,421,422,424,428,438,440,441,443,444,445,446,447,451,452,455,456,468,474,509,511,512,521,606,767],t4=[2,4,5,10,53,72,74,76,77,78,89,93,95,98,99,107,112,118,122,124,128,129,130,131,132,134,135,137,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,232,239,244,245,246,247,249,251,270,271,284,285,286,287,288,289,290,291,293,300,304,310,312,313,314,315,317,318,319,322,323,324,325,326,327,328,329,330,334,335,336,337,339,342,343,400,404,405,408,410,412,413,421,422,424,428,438,440,441,443,444,445,446,447,451,452,455,456,468,474,509,511,512,521,606,767],dt=[2,4,5,10,53,72,74,76,77,78,89,93,95,98,99,107,118,122,124,128,129,130,131,132,134,135,137,139,140,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,232,239,244,245,246,247,249,251,270,271,284,285,286,287,288,289,290,291,293,300,304,310,312,313,314,318,324,325,326,327,328,329,330,334,335,337,339,342,343,400,404,405,408,410,412,413,421,422,424,428,438,440,441,443,444,445,446,447,451,452,455,456,468,474,509,511,512,521,606,767],cn=[2,411],P4=[2,4,5,10,53,72,74,76,77,78,89,93,95,98,107,118,122,128,129,130,131,132,134,135,137,143,145,146,148,149,150,152,156,162,164,166,168,169,170,171,172,173,175,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,232,239,244,245,246,247,249,251,270,271,284,285,286,287,288,289,290,291,293,300,304,310,312,313,314,318,334,335,337,339,342,343,400,404,405,408,410,412,413,421,422,424,428,438,440,441,443,444,445,446,447,451,452,455,456,468,474,509,511,512,521,606,767],hn=[2,288],G4=[2,4,5,10,53,72,74,76,77,78,89,93,95,98,99,107,112,115,116,118,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,179,180,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,232,239,244,245,246,247,249,251,270,271,284,285,286,287,288,289,290,291,293,300,304,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,334,335,336,337,339,342,343,400,404,405,408,410,412,413,421,422,424,428,430,438,440,441,443,444,445,446,447,451,452,455,456,468,474,509,511,512,521,606,767],H2=[10,78,310,314,606,767],pt=[1,1194],dn=[10,77,78,143,145,152,181,306,310,314,424,428,606,767],t3=[10,74,78,310,312,314,468,606,767],pn=[1,1205],bt=[10,72,78,118,128,162,168,169,232,249,251,310,314,606,767],r4=[10,72,74,78,93,98,118,128,162,168,169,183,198,232,249,251,310,314,606,767],Q2=[2,4,5,72,76,77,78,112,115,116,118,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,185,187,244,245,284,285,286,287,288,289,290,291,424,428],Ot=[2,4,5,72,74,76,77,78,112,115,116,118,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,185,187,244,245,284,285,286,287,288,289,290,291,424,428],r3=[2,1090],bn=[2,4,5,72,74,76,77,112,115,116,118,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,185,187,244,245,284,285,286,287,288,289,290,291,424,428],n4=[1,1257],i4=[10,74,78,128,310,312,314,468,606,767],O3=[115,116,124],B4=[2,589],J4=[1,1286],En=[76,139],gn=[2,729],mn=[1,1303],vn=[1,1304],H4=[2,4,5,10,53,72,76,89,124,146,156,189,230,270,271,293,310,314,339,342,343,400,404,405,408,410,412,413,421,422,438,440,441,443,444,445,446,447,451,452,455,456,509,511,512,521,606,767],j4=[2,333],Y4=[1,1328],Ct=[1,1342],W4=[1,1344],Sn=[2,492],Y2=[74,78],W2=[10,310,312,314,468,606,767],Tn=[10,72,78,118,162,168,169,232,249,251,310,314,606,767],An=[1,1360],a4=[1,1364],s4=[1,1365],o4=[1,1367],C3=[1,1368],R3=[1,1369],I3=[1,1370],w3=[1,1371],k3=[1,1372],L3=[1,1373],D3=[1,1374],f4=[10,72,74,78,93,98,118,128,162,168,169,206,208,222,223,224,225,226,227,228,229,232,249,251,310,314,606,767],n3=[1,1399],u4=[10,72,78,118,162,168,169,249,251,310,314,606,767],it=[10,72,78,93,98,118,128,162,168,169,206,208,222,223,224,225,226,227,228,229,232,249,251,310,314,606,767],Nn=[1,1497],On=[1,1499],et=[2,4,5,77,143,145,152,156,181,293,294,295,296,297,306,424,428],x3=[1,1513],Rt=[10,72,74,78,162,168,169,249,251,310,314,606,767],Cn=[1,1531],Rn=[1,1533],In=[1,1534],wn=[1,1530],kn=[1,1529],Ln=[1,1528],X4=[1,1535],Dn=[1,1525],xn=[1,1526],Vn=[1,1527],Mn=[1,1553],K4=[2,4,5,10,53,72,89,124,146,156,189,270,271,293,310,314,339,342,343,400,404,405,408,410,412,413,421,422,438,440,441,443,444,445,446,447,451,452,455,456,509,511,512,521,606,767],Un=[1,1564],Q4=[1,1572],z4=[1,1571],yn=[10,72,78,162,168,169,249,251,310,314,606,767],z2=[10,72,78,93,98,118,128,162,168,169,206,208,222,223,224,225,226,227,228,229,230,231,232,249,251,310,314,606,767],Fn=[2,4,5,10,72,78,93,98,118,128,162,168,169,206,208,222,223,224,225,226,227,228,229,230,231,232,249,251,310,314,606,767],_n=[1,1632],Pn=[1,1634],Gn=[1,1631],Bn=[1,1633],l4=[187,193,372,373,374,377],Z4=[2,520],q4=[1,1639],V3=[1,1658],_t=[10,72,78,162,168,169,310,314,606,767],i3=[1,1668],a3=[1,1669],s3=[1,1670],Jn=[1,1691],o3=[4,10,247,310,314,347,360,606,767],M3=[1,1739],f3=[10,72,74,78,118,162,168,169,239,249,251,310,314,606,767],Hn=[2,4,5,77],jn=[1,1833],$4=[1,1845],er=[1,1864],Yn=[10,72,78,162,168,169,310,314,419,606,767],tr=[10,74,78,230,310,314,606,767],c4={trace:function(){},yy:{},symbols_:{error:2,Literal:3,LITERAL:4,BRALITERAL:5,NonReserved:6,LiteralWithSpaces:7,main:8,Statements:9,EOF:10,Statements_group0:11,AStatement:12,ExplainStatement:13,EXPLAIN:14,QUERY:15,PLAN:16,Statement:17,AlterTable:18,AttachDatabase:19,Call:20,CreateDatabase:21,CreateIndex:22,CreateGraph:23,CreateTable:24,CreateView:25,CreateEdge:26,CreateVertex:27,Declare:28,Delete:29,DetachDatabase:30,DropDatabase:31,DropIndex:32,DropTable:33,DropView:34,If:35,Insert:36,Merge:37,Reindex:38,RenameTable:39,Select:40,ShowCreateTable:41,ShowColumns:42,ShowDatabases:43,ShowIndex:44,ShowTables:45,TruncateTable:46,WithSelect:47,CreateTrigger:48,DropTrigger:49,BeginTransaction:50,CommitTransaction:51,RollbackTransaction:52,EndTransaction:53,UseDatabase:54,Update:55,JavaScript:56,Source:57,Assert:58,While:59,Continue:60,Break:61,BeginEnd:62,Print:63,Require:64,SetVariable:65,ExpressionStatement:66,AddRule:67,Query:68,Echo:69,CreateFunction:70,CreateAggregate:71,WITH:72,WithTablesList:73,COMMA:74,WithTable:75,AS:76,LPAR:77,RPAR:78,SelectClause:79,Select_option0:80,IntoClause:81,FromClause:82,Select_option1:83,WhereClause:84,GroupClause:85,OrderClause:86,LimitClause:87,UnionClause:88,SEARCH:89,Select_repetition0:90,Select_option2:91,PivotClause:92,PIVOT:93,Expression:94,FOR:95,PivotClause_option0:96,PivotClause_option1:97,UNPIVOT:98,IN:99,ColumnsList:100,PivotClause_option2:101,PivotClause2:102,AsList:103,AsLiteral:104,AsPart:105,RemoveClause:106,REMOVE:107,RemoveClause_option0:108,RemoveColumnsList:109,RemoveColumn:110,Column:111,LIKE:112,StringValue:113,ArrowDot:114,ARROW:115,DOT:116,SearchSelector:117,ORDER:118,BY:119,OrderExpressionsList:120,SearchSelector_option0:121,DOTDOT:122,CARET:123,EQ:124,SearchSelector_repetition_plus0:125,SearchSelector_repetition_plus1:126,SearchSelector_option1:127,WHERE:128,OF:129,CLASS:130,NUMBER:131,STRING:132,SLASH:133,VERTEX:134,EDGE:135,EXCLAMATION:136,SHARP:137,MODULO:138,GT:139,LT:140,GTGT:141,LTLT:142,DOLLAR:143,Json:144,AT:145,SET:146,SetColumnsList:147,TO:148,VALUE:149,ROW:150,ExprList:151,COLON:152,PlusStar:153,NOT:154,SearchSelector_repetition2:155,IF:156,SearchSelector_repetition3:157,Aggregator:158,SearchSelector_repetition4:159,SearchSelector_group0:160,SearchSelector_repetition5:161,UNION:162,SearchSelectorList:163,ALL:164,SearchSelector_repetition6:165,ANY:166,SearchSelector_repetition7:167,INTERSECT:168,EXCEPT:169,AND:170,OR:171,PATH:172,RETURN:173,ResultColumns:174,REPEAT:175,SearchSelector_repetition8:176,SearchSelectorList_repetition0:177,SearchSelectorList_repetition1:178,PLUS:179,STAR:180,QUESTION:181,SearchFrom:182,FROM:183,SelectModifier:184,DISTINCT:185,TopClause:186,UNIQUE:187,SelectClause_option0:188,SELECT:189,COLUMN:190,MATRIX:191,TEXTSTRING:192,INDEX:193,RECORDSET:194,TOP:195,NumValue:196,TopClause_option0:197,INTO:198,Table:199,FuncValue:200,ParamValue:201,VarValue:202,FromTablesList:203,JoinTablesList:204,ApplyClause:205,CROSS:206,APPLY:207,OUTER:208,FromTable:209,FromTable_option0:210,FromTable_option1:211,INDEXED:212,INSERTED:213,FromString:214,JoinTable:215,JoinMode:216,JoinTableAs:217,OnClause:218,JoinTableAs_option0:219,JoinTableAs_option1:220,JoinModeMode:221,NATURAL:222,JOIN:223,INNER:224,LEFT:225,RIGHT:226,FULL:227,SEMI:228,ANTI:229,ON:230,USING:231,GROUP:232,GroupExpressionsList:233,HavingClause:234,GroupExpression:235,GROUPING:236,ROLLUP:237,CUBE:238,HAVING:239,CORRESPONDING:240,OrderExpression:241,NullsOrder:242,NULLS:243,FIRST:244,LAST:245,DIRECTION:246,COLLATE:247,NOCASE:248,LIMIT:249,OffsetClause:250,OFFSET:251,LimitClause_option0:252,FETCH:253,LimitClause_option1:254,LimitClause_option2:255,LimitClause_option3:256,ResultColumn:257,Star:258,AggrValue:259,Op:260,LogicValue:261,NullValue:262,ExistsValue:263,CaseValue:264,CastClause:265,ArrayValue:266,NewClause:267,Expression_group0:268,CURRENT_TIMESTAMP:269,JAVASCRIPT:270,CREATE:271,FUNCTION:272,AGGREGATE:273,NEW:274,CAST:275,ColumnType:276,CONVERT:277,PrimitiveValue:278,OverClause:279,OVER:280,OverPartitionClause:281,OverOrderByClause:282,PARTITION:283,SUM:284,TOTAL:285,COUNT:286,MIN:287,MAX:288,AVG:289,AGGR:290,ARRAY:291,FuncValue_option0:292,REPLACE:293,DATEADD:294,DATEDIFF:295,TIMESTAMPDIFF:296,INTERVAL:297,TRUE:298,FALSE:299,NSTRING:300,NULL:301,EXISTS:302,ARRAYLBRA:303,RBRA:304,ParamValue_group0:305,BRAQUESTION:306,CASE:307,WhensList:308,ElseClause:309,END:310,When:311,WHEN:312,THEN:313,ELSE:314,REGEXP:315,TILDA:316,GLOB:317,ESCAPE:318,NOT_LIKE:319,BARBAR:320,MINUS:321,AMPERSAND:322,BAR:323,GE:324,LE:325,EQEQ:326,EQEQEQ:327,NE:328,NEEQEQ:329,NEEQEQEQ:330,CondOp:331,AllSome:332,ColFunc:333,BETWEEN:334,NOT_BETWEEN:335,IS:336,DOUBLECOLON:337,SOME:338,UPDATE:339,SetColumn:340,SetColumn_group0:341,DELETE:342,INSERT:343,Into:344,Values:345,ValuesListsList:346,DEFAULT:347,VALUES:348,ValuesList:349,Value:350,DateValue:351,TemporaryClause:352,TableClass:353,IfNotExists:354,CreateTableDefClause:355,CreateTableOptionsClause:356,TABLE:357,CreateTableOptions:358,CreateTableOption:359,IDENTITY:360,TEMP:361,ColumnDefsList:362,ConstraintsList:363,Constraint:364,ConstraintName:365,PrimaryKey:366,ForeignKey:367,UniqueKey:368,IndexKey:369,Check:370,CONSTRAINT:371,CHECK:372,PRIMARY:373,KEY:374,PrimaryKey_option0:375,ColsList:376,FOREIGN:377,REFERENCES:378,ForeignKey_option0:379,OnForeignKeyClause:380,ParColsList:381,OnDeleteClause:382,OnUpdateClause:383,NO:384,ACTION:385,UniqueKey_option0:386,UniqueKey_option1:387,ColumnDef:388,ColumnConstraintsClause:389,ColumnConstraints:390,SingularColumnType:391,NumberMax:392,ENUM:393,MAXNUM:394,ColumnConstraintsList:395,ColumnConstraint:396,ParLiteral:397,ColumnConstraint_option0:398,ColumnConstraint_option1:399,DROP:400,DropTable_group0:401,IfExists:402,TablesList:403,ALTER:404,RENAME:405,ADD:406,MODIFY:407,ATTACH:408,DATABASE:409,DETACH:410,AsClause:411,USE:412,SHOW:413,VIEW:414,CreateView_option0:415,CreateView_option1:416,SubqueryRestriction:417,READ:418,ONLY:419,OPTION:420,SOURCE:421,ASSERT:422,JsonObject:423,ATLBRA:424,JsonArray:425,JsonValue:426,JsonPrimitiveValue:427,LCUR:428,JsonPropertiesList:429,RCUR:430,JsonElementsList:431,JsonProperty:432,OnOff:433,SetPropsList:434,AtDollar:435,SetProp:436,OFF:437,COMMIT:438,TRANSACTION:439,ROLLBACK:440,BEGIN:441,ElseStatement:442,WHILE:443,CONTINUE:444,BREAK:445,PRINT:446,REQUIRE:447,StringValuesList:448,PluginsList:449,Plugin:450,ECHO:451,DECLARE:452,DeclaresList:453,DeclareItem:454,TRUNCATE:455,MERGE:456,MergeInto:457,MergeUsing:458,MergeOn:459,MergeMatchedList:460,OutputClause:461,MergeMatched:462,MergeNotMatched:463,MATCHED:464,MergeMatchedAction:465,MergeNotMatchedAction:466,TARGET:467,OUTPUT:468,CreateVertex_option0:469,CreateVertex_option1:470,CreateVertex_option2:471,CreateVertexSet:472,SharpValue:473,CONTENT:474,CreateEdge_option0:475,GRAPH:476,GraphList:477,GraphVertexEdge:478,GraphElement:479,GraphVertexEdge_option0:480,GraphVertexEdge_option1:481,GraphElementVar:482,GraphVertexEdge_option2:483,GraphVertexEdge_option3:484,GraphVertexEdge_option4:485,GraphVar:486,GraphAsClause:487,GraphAtClause:488,GraphElement2:489,GraphElement2_option0:490,GraphElement2_option1:491,GraphElement2_option2:492,GraphElement2_option3:493,GraphElement_option0:494,GraphElement_option1:495,GraphElement_option2:496,SharpLiteral:497,GraphElement_option3:498,GraphElement_option4:499,GraphElement_option5:500,ColonLiteral:501,DeleteVertex:502,DeleteVertex_option0:503,DeleteEdge:504,DeleteEdge_option0:505,DeleteEdge_option1:506,DeleteEdge_option2:507,Term:508,COLONDASH:509,TermsList:510,QUESTIONDASH:511,CALL:512,TRIGGER:513,BeforeAfter:514,InsertDeleteUpdate:515,CreateTrigger_option0:516,CreateTrigger_option1:517,BEFORE:518,AFTER:519,INSTEAD:520,REINDEX:521,A:522,ABSENT:523,ABSOLUTE:524,ACCORDING:525,ADA:526,ADMIN:527,ALWAYS:528,ASC:529,ASSERTION:530,ASSIGNMENT:531,ATTRIBUTE:532,ATTRIBUTES:533,BASE64:534,BERNOULLI:535,BLOCKED:536,BOM:537,BREADTH:538,C:539,CASCADE:540,CATALOG:541,CATALOG_NAME:542,CHAIN:543,CHARACTERISTICS:544,CHARACTERS:545,CHARACTER_SET_CATALOG:546,CHARACTER_SET_NAME:547,CHARACTER_SET_SCHEMA:548,CLASS_ORIGIN:549,COBOL:550,COLLATION:551,COLLATION_CATALOG:552,COLLATION_NAME:553,COLLATION_SCHEMA:554,COLUMNS:555,COLUMN_NAME:556,COMMAND_FUNCTION:557,COMMAND_FUNCTION_CODE:558,COMMITTED:559,CONDITION_NUMBER:560,CONNECTION:561,CONNECTION_NAME:562,CONSTRAINTS:563,CONSTRAINT_CATALOG:564,CONSTRAINT_NAME:565,CONSTRAINT_SCHEMA:566,CONSTRUCTOR:567,CONTROL:568,CURSOR_NAME:569,DATA:570,DATETIME_INTERVAL_CODE:571,DATETIME_INTERVAL_PRECISION:572,DB:573,DEFAULTS:574,DEFERRABLE:575,DEFERRED:576,DEFINED:577,DEFINER:578,DEGREE:579,DEPTH:580,DERIVED:581,DESC:582,DESCRIPTOR:583,DIAGNOSTICS:584,DISPATCH:585,DOCUMENT:586,DOMAIN:587,DYNAMIC_FUNCTION:588,DYNAMIC_FUNCTION_CODE:589,EMPTY:590,ENCODING:591,ENFORCED:592,EXCLUDE:593,EXCLUDING:594,EXPRESSION:595,FILE:596,FINAL:597,FLAG:598,FOLLOWING:599,FORTRAN:600,FOUND:601,FS:602,G:603,GENERAL:604,GENERATED:605,GO:606,GOTO:607,GRANTED:608,HEX:609,HIERARCHY:610,ID:611,IGNORE:612,IMMEDIATE:613,IMMEDIATELY:614,IMPLEMENTATION:615,INCLUDING:616,INCREMENT:617,INDENT:618,INITIALLY:619,INPUT:620,INSTANCE:621,INSTANTIABLE:622,INTEGRITY:623,INVOKER:624,ISOLATION:625,K:626,KEY_MEMBER:627,KEY_TYPE:628,LENGTH:629,LEVEL:630,LIBRARY:631,LINK:632,LOCATION:633,LOCATOR:634,M:635,MAP:636,MAPPING:637,MAXVALUE:638,MESSAGE_LENGTH:639,MESSAGE_OCTET_LENGTH:640,MESSAGE_TEXT:641,MINVALUE:642,MORE:643,MUMPS:644,NAME:645,NAMES:646,NAMESPACE:647,NESTING:648,NEXT:649,NFC:650,NFD:651,NFKC:652,NFKD:653,NIL:654,NORMALIZED:655,NULLABLE:656,OBJECT:657,OCTETS:658,OPTIONS:659,ORDERING:660,ORDINALITY:661,OTHERS:662,OVERRIDING:663,P:664,PAD:665,PARAMETER_MODE:666,PARAMETER_NAME:667,PARAMETER_ORDINAL_POSITION:668,PARAMETER_SPECIFIC_CATALOG:669,PARAMETER_SPECIFIC_NAME:670,PARAMETER_SPECIFIC_SCHEMA:671,PARTIAL:672,PASCAL:673,PASSING:674,PASSTHROUGH:675,PERMISSION:676,PLACING:677,PLI:678,PRECEDING:679,PRESERVE:680,PRIOR:681,PRIVILEGES:682,PUBLIC:683,RECOVERY:684,RELATIVE:685,REPEATABLE:686,REQUIRING:687,RESPECT:688,RESTART:689,RESTORE:690,RESTRICT:691,RETURNED_CARDINALITY:692,RETURNED_LENGTH:693,RETURNED_OCTET_LENGTH:694,RETURNED_SQLSTATE:695,RETURNING:696,ROLE:697,ROUTINE:698,ROUTINE_CATALOG:699,ROUTINE_NAME:700,ROUTINE_SCHEMA:701,ROW_COUNT:702,SCALE:703,SCHEMA:704,SCHEMA_NAME:705,SCOPE_CATALOG:706,SCOPE_NAME:707,SCOPE_SCHEMA:708,SECTION:709,SECURITY:710,SELECTIVE:711,SELF:712,SEQUENCE:713,SERIALIZABLE:714,SERVER:715,SERVER_NAME:716,SESSION:717,SETS:718,SIMPLE:719,SIZE:720,SPACE:721,SPECIFIC_NAME:722,STANDALONE:723,STATE:724,STATEMENT:725,STRIP:726,STRUCTURE:727,STYLE:728,SUBCLASS_ORIGIN:729,T:730,TABLE_NAME:731,TEMPORARY:732,TIES:733,TOKEN:734,TOP_LEVEL_COUNT:735,TRANSACTIONS_COMMITTED:736,TRANSACTIONS_ROLLED_BACK:737,TRANSACTION_ACTIVE:738,TRANSFORM:739,TRANSFORMS:740,TRIGGER_CATALOG:741,TRIGGER_NAME:742,TRIGGER_SCHEMA:743,TYPE:744,UNBOUNDED:745,UNCOMMITTED:746,UNDER:747,UNLINK:748,UNNAMED:749,UNTYPED:750,URI:751,USAGE:752,USER_DEFINED_TYPE_CATALOG:753,USER_DEFINED_TYPE_CODE:754,USER_DEFINED_TYPE_NAME:755,USER_DEFINED_TYPE_SCHEMA:756,VALID:757,VERSION:758,WHITESPACE:759,WORK:760,WRAPPER:761,WRITE:762,XMLDECLARATION:763,XMLSCHEMA:764,YES:765,ZONE:766,SEMICOLON:767,PERCENT:768,ROWS:769,FuncValue_option0_group0:770,$accept:0,$end:1},terminals_:{2:"error",4:"LITERAL",5:"BRALITERAL",10:"EOF",14:"EXPLAIN",15:"QUERY",16:"PLAN",53:"EndTransaction",72:"WITH",74:"COMMA",76:"AS",77:"LPAR",78:"RPAR",89:"SEARCH",93:"PIVOT",95:"FOR",98:"UNPIVOT",99:"IN",107:"REMOVE",112:"LIKE",115:"ARROW",116:"DOT",118:"ORDER",119:"BY",122:"DOTDOT",123:"CARET",124:"EQ",128:"WHERE",129:"OF",130:"CLASS",131:"NUMBER",132:"STRING",133:"SLASH",134:"VERTEX",135:"EDGE",136:"EXCLAMATION",137:"SHARP",138:"MODULO",139:"GT",140:"LT",141:"GTGT",142:"LTLT",143:"DOLLAR",145:"AT",146:"SET",148:"TO",149:"VALUE",150:"ROW",152:"COLON",154:"NOT",156:"IF",162:"UNION",164:"ALL",166:"ANY",168:"INTERSECT",169:"EXCEPT",170:"AND",171:"OR",172:"PATH",173:"RETURN",175:"REPEAT",179:"PLUS",180:"STAR",181:"QUESTION",183:"FROM",185:"DISTINCT",187:"UNIQUE",189:"SELECT",190:"COLUMN",191:"MATRIX",192:"TEXTSTRING",193:"INDEX",194:"RECORDSET",195:"TOP",198:"INTO",206:"CROSS",207:"APPLY",208:"OUTER",212:"INDEXED",213:"INSERTED",222:"NATURAL",223:"JOIN",224:"INNER",225:"LEFT",226:"RIGHT",227:"FULL",228:"SEMI",229:"ANTI",230:"ON",231:"USING",232:"GROUP",236:"GROUPING",237:"ROLLUP",238:"CUBE",239:"HAVING",240:"CORRESPONDING",243:"NULLS",244:"FIRST",245:"LAST",246:"DIRECTION",247:"COLLATE",248:"NOCASE",249:"LIMIT",251:"OFFSET",253:"FETCH",269:"CURRENT_TIMESTAMP",270:"JAVASCRIPT",271:"CREATE",272:"FUNCTION",273:"AGGREGATE",274:"NEW",275:"CAST",277:"CONVERT",280:"OVER",283:"PARTITION",284:"SUM",285:"TOTAL",286:"COUNT",287:"MIN",288:"MAX",289:"AVG",290:"AGGR",291:"ARRAY",293:"REPLACE",294:"DATEADD",295:"DATEDIFF",296:"TIMESTAMPDIFF",297:"INTERVAL",298:"TRUE",299:"FALSE",300:"NSTRING",301:"NULL",302:"EXISTS",303:"ARRAYLBRA",304:"RBRA",306:"BRAQUESTION",307:"CASE",310:"END",312:"WHEN",313:"THEN",314:"ELSE",315:"REGEXP",316:"TILDA",317:"GLOB",318:"ESCAPE",319:"NOT_LIKE",320:"BARBAR",321:"MINUS",322:"AMPERSAND",323:"BAR",324:"GE",325:"LE",326:"EQEQ",327:"EQEQEQ",328:"NE",329:"NEEQEQ",330:"NEEQEQEQ",334:"BETWEEN",335:"NOT_BETWEEN",336:"IS",337:"DOUBLECOLON",338:"SOME",339:"UPDATE",342:"DELETE",343:"INSERT",347:"DEFAULT",348:"VALUES",351:"DateValue",357:"TABLE",360:"IDENTITY",361:"TEMP",371:"CONSTRAINT",372:"CHECK",373:"PRIMARY",374:"KEY",377:"FOREIGN",378:"REFERENCES",384:"NO",385:"ACTION",390:"ColumnConstraints",393:"ENUM",394:"MAXNUM",400:"DROP",404:"ALTER",405:"RENAME",406:"ADD",407:"MODIFY",408:"ATTACH",409:"DATABASE",410:"DETACH",412:"USE",413:"SHOW",414:"VIEW",418:"READ",419:"ONLY",420:"OPTION",421:"SOURCE",422:"ASSERT",424:"ATLBRA",428:"LCUR",430:"RCUR",437:"OFF",438:"COMMIT",439:"TRANSACTION",440:"ROLLBACK",441:"BEGIN",443:"WHILE",444:"CONTINUE",445:"BREAK",446:"PRINT",447:"REQUIRE",451:"ECHO",452:"DECLARE",455:"TRUNCATE",456:"MERGE",464:"MATCHED",467:"TARGET",468:"OUTPUT",474:"CONTENT",476:"GRAPH",509:"COLONDASH",511:"QUESTIONDASH",512:"CALL",513:"TRIGGER",518:"BEFORE",519:"AFTER",520:"INSTEAD",521:"REINDEX",522:"A",523:"ABSENT",524:"ABSOLUTE",525:"ACCORDING",526:"ADA",527:"ADMIN",528:"ALWAYS",529:"ASC",530:"ASSERTION",531:"ASSIGNMENT",532:"ATTRIBUTE",533:"ATTRIBUTES",534:"BASE64",535:"BERNOULLI",536:"BLOCKED",537:"BOM",538:"BREADTH",539:"C",540:"CASCADE",541:"CATALOG",542:"CATALOG_NAME",543:"CHAIN",544:"CHARACTERISTICS",545:"CHARACTERS",546:"CHARACTER_SET_CATALOG",547:"CHARACTER_SET_NAME",548:"CHARACTER_SET_SCHEMA",549:"CLASS_ORIGIN",550:"COBOL",551:"COLLATION",552:"COLLATION_CATALOG",553:"COLLATION_NAME",554:"COLLATION_SCHEMA",555:"COLUMNS",556:"COLUMN_NAME",557:"COMMAND_FUNCTION",558:"COMMAND_FUNCTION_CODE",559:"COMMITTED",560:"CONDITION_NUMBER",561:"CONNECTION",562:"CONNECTION_NAME",563:"CONSTRAINTS",564:"CONSTRAINT_CATALOG",565:"CONSTRAINT_NAME",566:"CONSTRAINT_SCHEMA",567:"CONSTRUCTOR",568:"CONTROL",569:"CURSOR_NAME",570:"DATA",571:"DATETIME_INTERVAL_CODE",572:"DATETIME_INTERVAL_PRECISION",573:"DB",574:"DEFAULTS",575:"DEFERRABLE",576:"DEFERRED",577:"DEFINED",578:"DEFINER",579:"DEGREE",580:"DEPTH",581:"DERIVED",582:"DESC",583:"DESCRIPTOR",584:"DIAGNOSTICS",585:"DISPATCH",586:"DOCUMENT",587:"DOMAIN",588:"DYNAMIC_FUNCTION",589:"DYNAMIC_FUNCTION_CODE",590:"EMPTY",591:"ENCODING",592:"ENFORCED",593:"EXCLUDE",594:"EXCLUDING",595:"EXPRESSION",596:"FILE",597:"FINAL",598:"FLAG",599:"FOLLOWING",600:"FORTRAN",601:"FOUND",602:"FS",603:"G",604:"GENERAL",605:"GENERATED",606:"GO",607:"GOTO",608:"GRANTED",609:"HEX",610:"HIERARCHY",611:"ID",612:"IGNORE",613:"IMMEDIATE",614:"IMMEDIATELY",615:"IMPLEMENTATION",616:"INCLUDING",617:"INCREMENT",618:"INDENT",619:"INITIALLY",620:"INPUT",621:"INSTANCE",622:"INSTANTIABLE",623:"INTEGRITY",624:"INVOKER",625:"ISOLATION",626:"K",627:"KEY_MEMBER",628:"KEY_TYPE",629:"LENGTH",630:"LEVEL",631:"LIBRARY",632:"LINK",633:"LOCATION",634:"LOCATOR",635:"M",636:"MAP",637:"MAPPING",638:"MAXVALUE",639:"MESSAGE_LENGTH",640:"MESSAGE_OCTET_LENGTH",641:"MESSAGE_TEXT",642:"MINVALUE",643:"MORE",644:"MUMPS",645:"NAME",646:"NAMES",647:"NAMESPACE",648:"NESTING",649:"NEXT",650:"NFC",651:"NFD",652:"NFKC",653:"NFKD",654:"NIL",655:"NORMALIZED",656:"NULLABLE",657:"OBJECT",658:"OCTETS",659:"OPTIONS",660:"ORDERING",661:"ORDINALITY",662:"OTHERS",663:"OVERRIDING",664:"P",665:"PAD",666:"PARAMETER_MODE",667:"PARAMETER_NAME",668:"PARAMETER_ORDINAL_POSITION",669:"PARAMETER_SPECIFIC_CATALOG",670:"PARAMETER_SPECIFIC_NAME",671:"PARAMETER_SPECIFIC_SCHEMA",672:"PARTIAL",673:"PASCAL",674:"PASSING",675:"PASSTHROUGH",676:"PERMISSION",677:"PLACING",678:"PLI",679:"PRECEDING",680:"PRESERVE",681:"PRIOR",682:"PRIVILEGES",683:"PUBLIC",684:"RECOVERY",685:"RELATIVE",686:"REPEATABLE",687:"REQUIRING",688:"RESPECT",689:"RESTART",690:"RESTORE",691:"RESTRICT",692:"RETURNED_CARDINALITY",693:"RETURNED_LENGTH",694:"RETURNED_OCTET_LENGTH",695:"RETURNED_SQLSTATE",696:"RETURNING",697:"ROLE",698:"ROUTINE",699:"ROUTINE_CATALOG",700:"ROUTINE_NAME",701:"ROUTINE_SCHEMA",702:"ROW_COUNT",703:"SCALE",704:"SCHEMA",705:"SCHEMA_NAME",706:"SCOPE_CATALOG",707:"SCOPE_NAME",708:"SCOPE_SCHEMA",709:"SECTION",710:"SECURITY",711:"SELECTIVE",712:"SELF",713:"SEQUENCE",714:"SERIALIZABLE",715:"SERVER",716:"SERVER_NAME",717:"SESSION",718:"SETS",719:"SIMPLE",720:"SIZE",721:"SPACE",722:"SPECIFIC_NAME",723:"STANDALONE",724:"STATE",725:"STATEMENT",726:"STRIP",727:"STRUCTURE",728:"STYLE",729:"SUBCLASS_ORIGIN",730:"T",731:"TABLE_NAME",732:"TEMPORARY",733:"TIES",734:"TOKEN",735:"TOP_LEVEL_COUNT",736:"TRANSACTIONS_COMMITTED",737:"TRANSACTIONS_ROLLED_BACK",738:"TRANSACTION_ACTIVE",739:"TRANSFORM",740:"TRANSFORMS",741:"TRIGGER_CATALOG",742:"TRIGGER_NAME",743:"TRIGGER_SCHEMA",744:"TYPE",745:"UNBOUNDED",746:"UNCOMMITTED",747:"UNDER",748:"UNLINK",749:"UNNAMED",750:"UNTYPED",751:"URI",752:"USAGE",753:"USER_DEFINED_TYPE_CATALOG",754:"USER_DEFINED_TYPE_CODE",755:"USER_DEFINED_TYPE_NAME",756:"USER_DEFINED_TYPE_SCHEMA",757:"VALID",758:"VERSION",759:"WHITESPACE",760:"WORK",761:"WRAPPER",762:"WRITE",763:"XMLDECLARATION",764:"XMLSCHEMA",765:"YES",766:"ZONE",767:"SEMICOLON",768:"PERCENT",769:"ROWS"},productions_:[0,[3,1],[3,1],[3,2],[7,1],[7,2],[8,2],[9,3],[9,1],[9,1],[13,2],[13,4],[12,1],[17,0],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[47,3],[73,3],[73,1],[75,5],[40,10],[40,4],[92,8],[92,11],[102,4],[104,2],[104,1],[103,3],[103,1],[105,1],[105,3],[106,3],[109,3],[109,1],[110,1],[110,2],[114,1],[114,1],[117,1],[117,5],[117,5],[117,1],[117,2],[117,1],[117,2],[117,2],[117,3],[117,4],[117,4],[117,4],[117,4],[117,4],[117,1],[117,1],[117,1],[117,1],[117,1],[117,1],[117,2],[117,2],[117,2],[117,1],[117,1],[117,1],[117,1],[117,1],[117,1],[117,2],[117,3],[117,4],[117,3],[117,1],[117,4],[117,2],[117,2],[117,4],[117,4],[117,4],[117,4],[117,4],[117,5],[117,4],[117,4],[117,4],[117,4],[117,4],[117,4],[117,4],[117,4],[117,6],[163,3],[163,1],[153,1],[153,1],[153,1],[182,2],[79,4],[79,4],[79,4],[79,3],[184,1],[184,2],[184,2],[184,2],[184,2],[184,2],[184,2],[184,2],[186,3],[186,4],[186,0],[81,0],[81,2],[81,2],[81,2],[81,2],[81,2],[82,2],[82,3],[82,5],[82,0],[205,6],[205,7],[205,6],[205,7],[203,1],[203,3],[209,4],[209,5],[209,3],[209,3],[209,2],[209,3],[209,1],[209,3],[209,2],[209,3],[209,1],[209,1],[209,2],[209,3],[209,1],[209,1],[209,2],[209,3],[209,1],[209,2],[209,3],[214,1],[199,3],[199,1],[204,2],[204,2],[204,1],[204,1],[215,3],[217,1],[217,2],[217,3],[217,3],[217,2],[217,3],[217,4],[217,5],[217,1],[217,2],[217,3],[217,1],[217,2],[217,3],[216,1],[216,2],[221,1],[221,2],[221,2],[221,3],[221,2],[221,3],[221,2],[221,3],[221,2],[221,2],[221,2],[218,2],[218,2],[218,0],[84,0],[84,2],[85,0],[85,4],[233,1],[233,3],[235,5],[235,4],[235,4],[235,1],[234,0],[234,2],[88,0],[88,2],[88,3],[88,2],[88,2],[88,3],[88,4],[88,3],[88,3],[86,0],[86,3],[120,1],[120,3],[242,2],[242,2],[241,1],[241,2],[241,3],[241,3],[241,4],[87,0],[87,3],[87,8],[250,0],[250,2],[174,3],[174,1],[257,3],[257,2],[257,3],[257,2],[257,3],[257,2],[257,1],[258,5],[258,3],[258,1],[111,5],[111,3],[111,3],[111,1],[94,1],[94,1],[94,1],[94,1],[94,1],[94,1],[94,1],[94,1],[94,1],[94,1],[94,1],[94,1],[94,1],[94,1],[94,1],[94,1],[94,1],[94,1],[94,3],[94,3],[94,3],[94,1],[94,1],[56,1],[70,5],[71,5],[267,2],[267,2],[265,6],[265,8],[265,6],[265,8],[278,1],[278,1],[278,1],[278,1],[278,1],[278,1],[278,1],[259,5],[259,6],[259,6],[279,0],[279,4],[279,4],[279,5],[281,3],[282,3],[158,1],[158,1],[158,1],[158,1],[158,1],[158,1],[158,1],[158,1],[158,1],[158,1],[200,5],[200,3],[200,4],[200,4],[200,8],[200,8],[200,8],[200,8],[200,8],[200,3],[151,1],[151,3],[196,1],[261,1],[261,1],[113,1],[113,1],[262,1],[202,2],[263,4],[266,3],[201,2],[201,2],[201,1],[201,1],[264,5],[264,4],[308,2],[308,1],[311,4],[309,2],[309,0],[260,3],[260,3],[260,3],[260,3],[260,5],[260,3],[260,5],[260,3],[260,3],[260,3],[260,3],[260,3],[260,3],[260,3],[260,3],[260,3],[260,3],[260,3],[260,3],[260,3],[260,5],[260,3],[260,3],[260,3],[260,5],[260,3],[260,3],[260,3],[260,3],[260,3],[260,3],[260,3],[260,3],[260,3],[260,3],[260,3],[260,6],[260,6],[260,3],[260,3],[260,2],[260,2],[260,2],[260,2],[260,2],[260,3],[260,5],[260,6],[260,5],[260,6],[260,4],[260,5],[260,3],[260,4],[260,3],[260,4],[260,3],[260,3],[260,3],[260,3],[260,3],[333,1],[333,1],[333,4],[331,1],[331,1],[331,1],[331,1],[331,1],[331,1],[332,1],[332,1],[332,1],[55,6],[55,4],[147,1],[147,3],[340,3],[340,4],[29,5],[29,3],[36,5],[36,4],[36,7],[36,6],[36,5],[36,4],[36,5],[36,8],[36,7],[36,4],[36,6],[36,7],[345,1],[345,1],[344,0],[344,1],[346,3],[346,1],[346,1],[346,5],[346,3],[346,3],[349,1],[349,3],[350,1],[350,1],[350,1],[350,1],[350,1],[350,1],[100,1],[100,3],[24,9],[24,5],[353,1],[353,1],[356,0],[356,1],[358,2],[358,1],[359,1],[359,3],[359,3],[359,3],[352,0],[352,1],[354,0],[354,3],[355,3],[355,1],[355,2],[363,1],[363,3],[364,2],[364,2],[364,2],[364,2],[364,2],[365,0],[365,2],[370,4],[366,6],[367,9],[381,3],[380,0],[380,2],[382,4],[383,4],[368,6],[369,5],[369,5],[376,1],[376,1],[376,3],[376,3],[362,1],[362,3],[388,3],[388,2],[388,1],[391,6],[391,4],[391,1],[391,4],[276,2],[276,1],[392,1],[392,1],[389,0],[389,1],[395,2],[395,1],[397,3],[396,2],[396,5],[396,3],[396,6],[396,1],[396,2],[396,4],[396,2],[396,1],[396,2],[396,1],[396,1],[396,3],[396,5],[33,4],[403,3],[403,1],[402,0],[402,2],[18,6],[18,6],[18,6],[18,8],[18,6],[39,5],[19,4],[19,7],[19,6],[19,9],[30,3],[21,4],[21,6],[21,9],[21,6],[411,0],[411,2],[54,3],[54,2],[31,4],[31,5],[31,5],[22,8],[22,9],[32,3],[43,2],[43,4],[43,3],[43,5],[45,2],[45,4],[45,4],[45,6],[42,4],[42,6],[44,4],[44,6],[41,4],[41,6],[25,11],[25,8],[417,3],[417,3],[417,5],[34,4],[66,2],[57,2],[58,2],[58,2],[58,4],[144,4],[144,2],[144,2],[144,2],[144,2],[144,1],[144,2],[144,2],[426,1],[426,1],[427,1],[427,1],[427,1],[427,1],[427,1],[427,1],[427,1],[427,3],[423,3],[423,4],[423,2],[425,2],[425,3],[425,1],[429,3],[429,1],[432,3],[432,3],[432,3],[431,3],[431,1],[65,4],[65,3],[65,4],[65,5],[65,5],[65,6],[435,1],[435,1],[434,3],[434,2],[436,1],[436,1],[436,3],[433,1],[433,1],[51,2],[52,2],[50,2],[35,4],[35,3],[442,2],[59,3],[60,1],[61,1],[62,3],[63,2],[63,2],[64,2],[64,2],[450,1],[450,1],[69,2],[448,3],[448,1],[449,3],[449,1],[28,2],[453,1],[453,3],[454,3],[454,4],[454,5],[454,6],[46,3],[37,6],[457,1],[457,2],[458,2],[459,2],[460,2],[460,2],[460,1],[460,1],[462,4],[462,6],[465,1],[465,3],[463,5],[463,7],[463,7],[463,9],[463,7],[463,9],[466,3],[466,6],[466,3],[466,6],[461,0],[461,2],[461,5],[461,4],[461,7],[27,6],[473,2],[472,0],[472,2],[472,2],[472,1],[26,8],[23,3],[23,4],[477,3],[477,1],[478,3],[478,7],[478,6],[478,3],[478,4],[482,1],[482,1],[486,2],[487,3],[488,2],[489,4],[479,4],[479,3],[479,2],[479,1],[501,2],[497,2],[497,2],[502,4],[504,6],[67,3],[67,2],[510,3],[510,1],[508,1],[508,4],[68,2],[20,2],[48,9],[48,8],[48,9],[514,0],[514,1],[514,1],[514,1],[514,2],[515,1],[515,1],[515,1],[49,3],[38,2],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[11,1],[11,1],[80,0],[80,1],[83,0],[83,1],[90,0],[90,2],[91,0],[91,1],[96,0],[96,1],[97,0],[97,1],[101,0],[101,1],[108,0],[108,1],[121,0],[121,1],[125,1],[125,2],[126,1],[126,2],[127,0],[127,1],[155,0],[155,2],[157,0],[157,2],[159,0],[159,2],[160,1],[160,1],[161,0],[161,2],[165,0],[165,2],[167,0],[167,2],[176,0],[176,2],[177,0],[177,2],[178,0],[178,2],[188,0],[188,1],[197,0],[197,1],[210,0],[210,1],[211,0],[211,1],[219,0],[219,1],[220,0],[220,1],[252,0],[252,1],[254,0],[254,1],[255,0],[255,1],[256,0],[256,1],[268,1],[268,1],[770,1],[770,1],[292,0],[292,1],[305,1],[305,1],[341,1],[341,1],[375,0],[375,1],[379,0],[379,1],[386,0],[386,1],[387,0],[387,1],[398,0],[398,1],[399,0],[399,1],[401,1],[401,1],[415,0],[415,1],[416,0],[416,1],[469,0],[469,1],[470,0],[470,1],[471,0],[471,1],[475,0],[475,1],[480,0],[480,1],[481,0],[481,1],[483,0],[483,1],[484,0],[484,1],[485,0],[485,1],[490,0],[490,1],[491,0],[491,1],[492,0],[492,1],[493,0],[493,1],[494,0],[494,1],[495,0],[495,1],[496,0],[496,1],[498,0],[498,1],[499,0],[499,1],[500,0],[500,1],[503,0],[503,2],[505,0],[505,2],[506,0],[506,2],[507,0],[507,2],[516,0],[516,1],[517,0],[517,1]],performAction:function(l2,m2,h2,p,V2,s,Lt){var o=s.length-1;switch(V2){case 1:u.options.casesensitive?this.$=s[o]:this.$=s[o].toLowerCase();break;case 2:this.$=Zn(s[o].substr(1,s[o].length-2));break;case 3:this.$=s[o].toLowerCase();break;case 4:case 77:case 78:case 86:case 147:case 185:case 247:case 283:case 291:case 292:case 293:case 294:case 295:case 296:case 297:case 298:case 299:case 300:case 301:case 302:case 303:case 304:case 307:case 308:case 323:case 324:case 325:case 326:case 327:case 328:case 379:case 445:case 446:case 447:case 448:case 449:case 450:case 521:case 547:case 551:case 553:case 628:case 629:case 630:case 631:case 632:case 633:case 637:case 639:case 640:case 649:case 665:case 666:case 728:case 743:case 744:case 746:case 747:case 753:case 754:case 312:case 442:case 443:case 675:this.$=s[o];break;case 5:this.$=s[o]?s[o-1]+" "+s[o]:s[o-1];break;case 6:return new p.Statements({statements:s[o-1]});case 7:this.$=s[o-2],s[o]&&s[o-2].push(s[o]);break;case 8:case 9:case 70:case 80:case 85:case 143:case 177:case 205:case 206:case 242:case 261:case 276:case 359:case 377:case 456:case 479:case 480:case 484:case 492:case 533:case 534:case 571:case 654:case 664:case 688:case 690:case 692:case 706:case 707:case 737:case 761:case 513:case 537:case 1066:case 1068:this.$=[s[o]];break;case 10:case 11:this.$=s[o],s[o].explain=!0;break;case 12:this.$=s[o],p.exists&&(this.$.exists=p.exists),delete p.exists,p.queries&&(this.$.queries=p.queries),delete p.queries;break;case 13:case 162:case 172:case 237:case 238:case 240:case 248:case 250:case 259:case 270:case 273:case 380:case 496:case 506:case 508:case 520:case 526:case 527:case 572:case 163:case 333:case 528:case 529:case 729:case 550:case 589:this.$=void 0;break;case 68:this.$=new p.WithSelect({withs:s[o-1],select:s[o]});break;case 69:case 570:case 275:case 514:case 538:case 653:case 663:case 687:case 689:case 693:case 360:s[o-2].push(s[o]),this.$=s[o-2];break;case 71:this.$={name:s[o-4],select:s[o-1]};break;case 72:p.extend(this.$,s[o-9]),p.extend(this.$,s[o-8]),p.extend(this.$,s[o-7]),p.extend(this.$,s[o-6]),p.extend(this.$,s[o-5]),p.extend(this.$,s[o-4]),p.extend(this.$,s[o-3]),p.extend(this.$,s[o-2]),p.extend(this.$,s[o-1]),p.extend(this.$,s[o]),this.$=s[o-9];break;case 73:this.$=new p.Search({selectors:s[o-2],from:s[o]}),p.extend(this.$,s[o-1]);break;case 74:this.$={pivot:{expr:s[o-5],columnid:s[o-3],inlist:s[o-2],as:s[o]}};break;case 75:this.$={unpivot:{tocolumnid:s[o-8],forcolumnid:s[o-6],inlist:s[o-3],as:s[o]}};break;case 76:case 525:case 554:case 590:case 624:case 641:case 642:case 645:case 667:case 444:this.$=s[o-1];break;case 79:case 84:case 736:case 760:case 142:this.$=s[o-2],this.$.push(s[o]);break;case 81:this.$={expr:s[o]};break;case 82:this.$={expr:s[o-2],as:s[o]};break;case 83:this.$={removecolumns:s[o]};break;case 87:this.$={like:s[o]};break;case 90:case 104:this.$={srchid:"PROP",args:[s[o]]};break;case 91:this.$={srchid:"ORDERBY",args:s[o-1]};break;case 92:var It=s[o-1];It||(It="ASC"),this.$={srchid:"ORDERBY",args:[{expression:new p.Column({columnid:"_"}),direction:It}]};break;case 93:this.$={srchid:"PARENT"};break;case 94:this.$={srchid:"APROP",args:[s[o]]};break;case 95:this.$={selid:"ROOT"};break;case 96:this.$={srchid:"EQ",args:[s[o]]};break;case 97:this.$={srchid:"LIKE",args:[s[o]]};break;case 98:case 99:this.$={selid:"WITH",args:s[o-1]};break;case 100:this.$={srchid:s[o-3].toUpperCase(),args:s[o-1]};break;case 101:this.$={srchid:"WHERE",args:[s[o-1]]};break;case 102:this.$={selid:"OF",args:[s[o-1]]};break;case 103:this.$={srchid:"CLASS",args:[s[o-1]]};break;case 105:this.$={srchid:"NAME",args:[s[o].substr(1,s[o].length-2)]};break;case 106:this.$={srchid:"CHILD"};break;case 107:this.$={srchid:"VERTEX"};break;case 108:this.$={srchid:"EDGE"};break;case 109:this.$={srchid:"REF"};break;case 110:this.$={srchid:"SHARP",args:[s[o]]};break;case 111:this.$={srchid:"ATTR",args:typeof s[o]>"u"?void 0:[s[o]]};break;case 112:this.$={srchid:"ATTR"};break;case 113:this.$={srchid:"OUT"};break;case 114:this.$={srchid:"IN"};break;case 115:this.$={srchid:"OUTOUT"};break;case 116:this.$={srchid:"ININ"};break;case 117:this.$={srchid:"CONTENT"};break;case 118:this.$={srchid:"EX",args:[new p.Json({value:s[o]})]};break;case 119:this.$={srchid:"AT",args:[s[o]]};break;case 120:this.$={srchid:"AS",args:[s[o]]};break;case 121:this.$={srchid:"SET",args:s[o-1]};break;case 122:this.$={selid:"TO",args:[s[o]]};break;case 123:this.$={srchid:"VALUE"};break;case 124:this.$={srchid:"ROW",args:s[o-1]};break;case 125:this.$={srchid:"CLASS",args:[s[o]]};break;case 126:this.$={selid:s[o],args:[s[o-1]]};break;case 127:this.$={selid:"NOT",args:s[o-1]};break;case 128:this.$={selid:"IF",args:s[o-1]};break;case 129:this.$={selid:s[o-3],args:s[o-1]};break;case 130:this.$={selid:"DISTINCT",args:s[o-1]};break;case 131:this.$={selid:"UNION",args:s[o-1]};break;case 132:this.$={selid:"UNIONALL",args:s[o-1]};break;case 133:this.$={selid:"ALL",args:[s[o-1]]};break;case 134:this.$={selid:"ANY",args:[s[o-1]]};break;case 135:this.$={selid:"INTERSECT",args:s[o-1]};break;case 136:this.$={selid:"EXCEPT",args:s[o-1]};break;case 137:this.$={selid:"AND",args:s[o-1]};break;case 138:this.$={selid:"OR",args:s[o-1]};break;case 139:this.$={selid:"PATH",args:[s[o-1]]};break;case 140:this.$={srchid:"RETURN",args:s[o-1]};break;case 141:this.$={selid:"REPEAT",sels:s[o-3],args:s[o-1]};break;case 144:this.$="PLUS";break;case 145:this.$="STAR";break;case 146:this.$="QUESTION";break;case 148:case 149:this.$=new p.Select({columns:s[o],distinct:!0}),p.extend(this.$,s[o-3]),p.extend(this.$,s[o-1]);break;case 150:this.$=new p.Select({columns:s[o],all:!0}),p.extend(this.$,s[o-3]),p.extend(this.$,s[o-1]);break;case 151:s[o]?(this.$=new p.Select({columns:s[o]}),p.extend(this.$,s[o-2]),p.extend(this.$,s[o-1])):this.$=new p.Select({columns:[new p.Column({columnid:"_"})],modifier:"COLUMN"});break;case 152:"SELECT"==s[o]?this.$=void 0:this.$={modifier:s[o]};break;case 153:this.$={modifier:"VALUE"};break;case 154:this.$={modifier:"ROW"};break;case 155:this.$={modifier:"COLUMN"};break;case 156:this.$={modifier:"MATRIX"};break;case 157:this.$={modifier:"TEXTSTRING"};break;case 158:this.$={modifier:"INDEX"};break;case 159:this.$={modifier:"RECORDSET"};break;case 160:this.$={top:s[o-1],percent:"u">typeof s[o]||void 0};break;case 161:this.$={top:s[o-1]};break;case 164:case 165:case 166:case 167:case 700:case 701:this.$={into:s[o]};break;case 168:var y2=s[o],Xe=(y2=y2.substr(1,y2.length-2)).substr(-3).toUpperCase(),tt=y2.substr(-4).toUpperCase();"#"==y2[0]?this.$={into:new p.FuncValue({funcid:"HTML",args:[new p.StringValue({value:y2}),new p.Json({value:{headers:!0}})]})}:"XLS"==Xe||"CSV"==Xe||"TAB"==Xe?this.$={into:new p.FuncValue({funcid:Xe,args:[new p.StringValue({value:y2}),new p.Json({value:{headers:!0}})]})}:("XLSX"==tt||"JSON"==tt)&&(this.$={into:new p.FuncValue({funcid:tt,args:[new p.StringValue({value:y2}),new p.Json({value:{headers:!0}})]})});break;case 169:this.$={from:s[o]};break;case 170:this.$={from:s[o-1],joins:s[o]};break;case 171:this.$={from:s[o-2],joins:s[o-1]};break;case 173:this.$=new p.Apply({select:s[o-2],applymode:"CROSS",as:s[o]});break;case 174:this.$=new p.Apply({select:s[o-3],applymode:"CROSS",as:s[o]});break;case 175:this.$=new p.Apply({select:s[o-2],applymode:"OUTER",as:s[o]});break;case 176:this.$=new p.Apply({select:s[o-3],applymode:"OUTER",as:s[o]});break;case 178:case 243:case 457:case 535:case 536:case 262:case 482:case 483:case 485:case 493:this.$=s[o-2],s[o-2].push(s[o]);break;case 179:this.$=s[o-2],this.$.as=s[o];break;case 180:this.$=s[o-3],this.$.as=s[o];break;case 181:this.$=s[o-1],this.$.as="default";break;case 182:this.$=new p.Json({value:s[o-2]}),s[o-2].as=s[o];break;case 183:case 187:case 191:case 195:case 198:this.$=s[o-1],s[o-1].as=s[o];break;case 184:case 188:case 192:case 196:case 199:this.$=s[o-2],s[o-2].as=s[o];break;case 186:case 643:case 646:this.$=s[o-2];break;case 189:case 190:case 194:case 197:this.$=s[o],s[o].as="default";break;case 193:this.$={inserted:!0};break;case 200:var gt,y2=s[o],Xe=(y2=y2.substr(1,y2.length-2)).substr(-3).toUpperCase(),tt=y2.substr(-4).toUpperCase();if("#"==y2[0])gt=new p.FuncValue({funcid:"HTML",args:[new p.StringValue({value:y2}),new p.Json({value:{headers:!0}})]});else if("XLS"==Xe||"CSV"==Xe||"TAB"==Xe)gt=new p.FuncValue({funcid:Xe,args:[new p.StringValue({value:y2}),new p.Json({value:{headers:!0}})]});else if("XLSX"==tt||"JSON"==tt)gt=new p.FuncValue({funcid:tt,args:[new p.StringValue({value:y2}),new p.Json({value:{headers:!0}})]});else throw Error("Unknown string in FROM clause");this.$=gt;break;case 201:"INFORMATION_SCHEMA"==s[o-2]?this.$=new p.FuncValue({funcid:s[o-2],args:[new p.StringValue({value:s[o]})]}):this.$=new p.Table({databaseid:s[o-2],tableid:s[o]});break;case 202:this.$=new p.Table({tableid:s[o]});break;case 203:case 204:this.$=s[o-1],s[o-1].push(s[o]);break;case 207:this.$=new p.Join(s[o-2]),p.extend(this.$,s[o-1]),p.extend(this.$,s[o]);break;case 208:this.$={table:s[o]};break;case 209:this.$={table:s[o-1],as:s[o]};break;case 210:this.$={table:s[o-2],as:s[o]};break;case 211:this.$={json:new p.Json({value:s[o-2],as:s[o]})};break;case 212:this.$={param:s[o-1],as:s[o]};break;case 213:this.$={param:s[o-2],as:s[o]};break;case 214:this.$={select:s[o-2],as:s[o]};break;case 215:this.$={select:s[o-3],as:s[o]};break;case 216:this.$={func:s[o],as:"default"};break;case 217:this.$={func:s[o-1],as:s[o]};break;case 218:this.$={func:s[o-2],as:s[o]};break;case 219:this.$={variable:s[o],as:"default"};break;case 220:this.$={variable:s[o-1],as:s[o]};break;case 221:this.$={variable:s[o-2],as:s[o]};break;case 222:this.$={joinmode:s[o]};break;case 223:this.$={joinmode:s[o-1],natural:!0};break;case 224:case 225:this.$="INNER";break;case 226:case 227:this.$="LEFT";break;case 228:case 229:this.$="RIGHT";break;case 230:case 231:this.$="OUTER";break;case 232:this.$="SEMI";break;case 233:this.$="ANTI";break;case 234:this.$="CROSS";break;case 235:case 703:this.$={on:s[o]};break;case 236:case 702:this.$={using:s[o]};break;case 239:this.$={where:new p.Expression({expression:s[o]})};break;case 241:this.$={group:s[o-1]},p.extend(this.$,s[o]);break;case 244:this.$=new p.GroupExpression({type:"GROUPING SETS",group:s[o-1]});break;case 245:this.$=new p.GroupExpression({type:"ROLLUP",group:s[o-1]});break;case 246:this.$=new p.GroupExpression({type:"CUBE",group:s[o-1]});break;case 249:this.$={having:s[o]};break;case 251:this.$={union:s[o]};break;case 252:this.$={unionall:s[o]};break;case 253:this.$={except:s[o]};break;case 254:this.$={intersect:s[o]};break;case 255:this.$={union:s[o],corresponding:!0};break;case 256:this.$={unionall:s[o],corresponding:!0};break;case 257:this.$={except:s[o],corresponding:!0};break;case 258:this.$={intersect:s[o],corresponding:!0};break;case 260:case 338:this.$={order:s[o]};break;case 263:this.$={nullsOrder:"FIRST"};break;case 264:this.$={nullsOrder:"LAST"};break;case 265:this.$=new p.Expression({expression:s[o],direction:"ASC"});break;case 266:this.$=new p.Expression({expression:s[o-1],direction:s[o].toUpperCase()});break;case 267:this.$=new p.Expression({expression:s[o-2],direction:s[o-1].toUpperCase()}),p.extend(this.$,s[o]);break;case 268:this.$=new p.Expression({expression:s[o-2],direction:"ASC",nocase:!0});break;case 269:this.$=new p.Expression({expression:s[o-3],direction:s[o].toUpperCase(),nocase:!0});break;case 271:this.$={limit:s[o-1]},p.extend(this.$,s[o]);break;case 272:this.$={limit:s[o-2],offset:s[o-6]};break;case 274:this.$={offset:s[o]};break;case 277:case 279:case 281:s[o-2].as=s[o],this.$=s[o-2];break;case 278:case 280:case 282:s[o-1].as=s[o],this.$=s[o-1];break;case 284:this.$=new p.Column({columid:s[o],tableid:s[o-2],databaseid:s[o-4]});break;case 285:case 288:case 289:this.$=new p.Column({columnid:s[o],tableid:s[o-2]});break;case 286:case 290:this.$=new p.Column({columnid:s[o]});break;case 287:this.$=new p.Column({columnid:s[o],tableid:s[o-2],databaseid:s[o-4]});break;case 305:this.$=new p.DomainValueValue;break;case 306:this.$=new p.Json({value:s[o]});break;case 309:case 310:case 311:p.queries||(p.queries=[]),p.queries.push(s[o-1]),s[o-1].queriesidx=p.queries.length,this.$=s[o-1];break;case 313:case 329:this.$=new p.FuncValue({funcid:"CURRENT_TIMESTAMP"});break;case 314:this.$=new p.JavaScript({value:s[o].substr(2,s[o].length-4)});break;case 315:this.$=new p.JavaScript({value:'alasql.fn["'+s[o-2]+'"] = '+s[o].substr(2,s[o].length-4)});break;case 316:this.$=new p.JavaScript({value:'alasql.aggr["'+s[o-2]+'"] = '+s[o].substr(2,s[o].length-4)});break;case 317:this.$=new p.FuncValue({funcid:s[o],newid:!0});break;case 318:this.$=s[o],p.extend(this.$,{newid:!0});break;case 319:this.$=new p.Convert({expression:s[o-3]}),p.extend(this.$,s[o-1]);break;case 320:this.$=new p.Convert({expression:s[o-5],style:s[o-1]}),p.extend(this.$,s[o-3]);break;case 321:this.$=new p.Convert({expression:s[o-1]}),p.extend(this.$,s[o-3]);break;case 322:this.$=new p.Convert({expression:s[o-3],style:s[o-1]}),p.extend(this.$,s[o-5]);break;case 330:s[o-2].length>1&&("MAX"==s[o-4].toUpperCase()||"MIN"==s[o-4].toUpperCase())?this.$=new p.FuncValue({funcid:s[o-4],args:s[o-2]}):this.$=new p.AggrValue({aggregatorid:s[o-4].toUpperCase(),expression:s[o-2].pop(),over:s[o]});break;case 331:this.$=new p.AggrValue({aggregatorid:s[o-5].toUpperCase(),expression:s[o-2],distinct:!0,over:s[o]});break;case 332:this.$=new p.AggrValue({aggregatorid:s[o-5].toUpperCase(),expression:s[o-2],over:s[o]});break;case 334:case 335:this.$=new p.Over,p.extend(this.$,s[o-1]);break;case 336:this.$=new p.Over,p.extend(this.$,s[o-2]),p.extend(this.$,s[o-1]);break;case 337:this.$={partition:s[o]};break;case 339:this.$="SUM";break;case 340:this.$="TOTAL";break;case 341:this.$="COUNT";break;case 342:this.$="MIN";break;case 343:case 549:this.$="MAX";break;case 344:this.$="AVG";break;case 345:this.$="FIRST";break;case 346:this.$="LAST";break;case 347:this.$="AGGR";break;case 348:this.$="ARRAY";break;case 349:var Pt=s[o-4],x2=s[o-1];x2.length>1&&("MIN"==Pt.toUpperCase()||"MAX"==Pt.toUpperCase())?this.$=new p.FuncValue({funcid:Pt,args:x2}):u.aggr[s[o-4]]?this.$=new p.AggrValue({aggregatorid:"REDUCE",funcid:Pt,expression:x2.pop(),distinct:"DISTINCT"==s[o-2]}):this.$=new p.FuncValue({funcid:Pt,args:x2});break;case 350:this.$=new p.FuncValue({funcid:s[o-2]});break;case 351:this.$=new p.FuncValue({funcid:"IIF",args:s[o-1]});break;case 352:this.$=new p.FuncValue({funcid:"REPLACE",args:s[o-1]});break;case 353:this.$=new p.FuncValue({funcid:"DATEADD",args:[new p.StringValue({value:s[o-5]}),s[o-3],s[o-1]]});break;case 354:this.$=new p.FuncValue({funcid:"DATEADD",args:[s[o-5],s[o-3],s[o-1]]});break;case 355:this.$=new p.FuncValue({funcid:"DATEDIFF",args:[new p.StringValue({value:s[o-5]}),s[o-3],s[o-1]]});break;case 356:this.$=new p.FuncValue({funcid:"DATEDIFF",args:[s[o-5],s[o-3],s[o-1]]});break;case 357:this.$=new p.FuncValue({funcid:"TIMESTAMPDIFF",args:[new p.StringValue({value:s[o-5]}),s[o-3],s[o-1]]});break;case 358:this.$=new p.FuncValue({funcid:"INTERVAL",args:[s[o-1],new p.StringValue({value:s[o].toLowerCase()})]});break;case 361:this.$=new p.NumValue({value:+s[o]});break;case 362:this.$=new p.LogicValue({value:!0});break;case 363:this.$=new p.LogicValue({value:!1});break;case 364:this.$=new p.StringValue({value:s[o].substr(1,s[o].length-2).replace(/(\\\')/g,"'").replace(/(\'\')/g,"'")});break;case 365:this.$=new p.StringValue({value:s[o].substr(2,s[o].length-3).replace(/(\\\')/g,"'").replace(/(\'\')/g,"'")});break;case 366:this.$=new p.NullValue({value:void 0});break;case 367:this.$=new p.VarValue({variable:s[o]});break;case 368:p.exists||(p.exists=[]),this.$=new p.ExistsValue({value:s[o-1],existsidx:p.exists.length}),p.exists.push(s[o-1]);break;case 369:this.$=new p.ArrayValue({value:s[o-1]});break;case 370:case 371:this.$=new p.ParamValue({param:s[o]});break;case 372:typeof p.question>"u"&&(p.question=0),this.$=new p.ParamValue({param:p.question++});break;case 373:typeof p.question>"u"&&(p.question=0),this.$=new p.ParamValue({param:p.question++,array:!0});break;case 374:this.$=new p.CaseValue({expression:s[o-3],whens:s[o-2],elses:s[o-1]});break;case 375:this.$=new p.CaseValue({whens:s[o-2],elses:s[o-1]});break;case 376:case 704:case 705:this.$=s[o-1],this.$.push(s[o]);break;case 378:this.$={when:s[o-2],then:s[o]};break;case 381:case 382:this.$=new p.Op({left:s[o-2],op:"REGEXP",right:s[o]});break;case 383:this.$=new p.Op({left:s[o-2],op:"GLOB",right:s[o]});break;case 384:this.$=new p.Op({left:s[o-2],op:"LIKE",right:s[o]});break;case 385:this.$=new p.Op({left:s[o-4],op:"LIKE",right:s[o-2],escape:s[o]});break;case 386:this.$=new p.Op({left:s[o-2],op:"NOT LIKE",right:s[o]});break;case 387:this.$=new p.Op({left:s[o-4],op:"NOT LIKE",right:s[o-2],escape:s[o]});break;case 388:this.$=new p.Op({left:s[o-2],op:"||",right:s[o]});break;case 389:this.$=new p.Op({left:s[o-2],op:"+",right:s[o]});break;case 390:this.$=new p.Op({left:s[o-2],op:"-",right:s[o]});break;case 391:this.$=new p.Op({left:s[o-2],op:"*",right:s[o]});break;case 392:this.$=new p.Op({left:s[o-2],op:"/",right:s[o]});break;case 393:this.$=new p.Op({left:s[o-2],op:"%",right:s[o]});break;case 394:this.$=new p.Op({left:s[o-2],op:"^",right:s[o]});break;case 395:this.$=new p.Op({left:s[o-2],op:">>",right:s[o]});break;case 396:this.$=new p.Op({left:s[o-2],op:"<<",right:s[o]});break;case 397:this.$=new p.Op({left:s[o-2],op:"&",right:s[o]});break;case 398:this.$=new p.Op({left:s[o-2],op:"|",right:s[o]});break;case 399:case 400:case 402:this.$=new p.Op({left:s[o-2],op:"->",right:s[o]});break;case 401:this.$=new p.Op({left:s[o-4],op:"->",right:s[o-1]});break;case 403:case 404:case 406:this.$=new p.Op({left:s[o-2],op:"!",right:s[o]});break;case 405:this.$=new p.Op({left:s[o-4],op:"!",right:s[o-1]});break;case 407:this.$=new p.Op({left:s[o-2],op:">",right:s[o]});break;case 408:this.$=new p.Op({left:s[o-2],op:">=",right:s[o]});break;case 409:this.$=new p.Op({left:s[o-2],op:"<",right:s[o]});break;case 410:this.$=new p.Op({left:s[o-2],op:"<=",right:s[o]});break;case 411:this.$=new p.Op({left:s[o-2],op:"=",right:s[o]});break;case 412:this.$=new p.Op({left:s[o-2],op:"==",right:s[o]});break;case 413:this.$=new p.Op({left:s[o-2],op:"===",right:s[o]});break;case 414:this.$=new p.Op({left:s[o-2],op:"!=",right:s[o]});break;case 415:this.$=new p.Op({left:s[o-2],op:"!==",right:s[o]});break;case 416:this.$=new p.Op({left:s[o-2],op:"!===",right:s[o]});break;case 417:p.queries||(p.queries=[]),this.$=new p.Op({left:s[o-5],op:s[o-4],allsome:s[o-3],right:s[o-1],queriesidx:p.queries.length}),p.queries.push(s[o-1]);break;case 418:this.$=new p.Op({left:s[o-5],op:s[o-4],allsome:s[o-3],right:s[o-1]});break;case 419:"BETWEEN1"==s[o-2].op?"AND"==s[o-2].left.op?this.$=new p.Op({left:s[o-2].left.left,op:"AND",right:new p.Op({left:s[o-2].left.right,op:"BETWEEN",right1:s[o-2].right,right2:s[o]})}):this.$=new p.Op({left:s[o-2].left,op:"BETWEEN",right1:s[o-2].right,right2:s[o]}):"NOT BETWEEN1"==s[o-2].op?"AND"==s[o-2].left.op?this.$=new p.Op({left:s[o-2].left.left,op:"AND",right:new p.Op({left:s[o-2].left.right,op:"NOT BETWEEN",right1:s[o-2].right,right2:s[o]})}):this.$=new p.Op({left:s[o-2].left,op:"NOT BETWEEN",right1:s[o-2].right,right2:s[o]}):this.$=new p.Op({left:s[o-2],op:"AND",right:s[o]});break;case 420:this.$=new p.Op({left:s[o-2],op:"OR",right:s[o]});break;case 421:this.$=new p.UniOp({op:"NOT",right:s[o]});break;case 422:this.$=new p.UniOp({op:"-",right:s[o]});break;case 423:this.$=new p.UniOp({op:"+",right:s[o]});break;case 424:this.$=new p.UniOp({op:"~",right:s[o]});break;case 425:this.$=new p.UniOp({op:"#",right:s[o]});break;case 426:this.$=new p.UniOp({right:s[o-1]});break;case 427:p.queries||(p.queries=[]),this.$=new p.Op({left:s[o-4],op:"IN",right:s[o-1],queriesidx:p.queries.length}),p.queries.push(s[o-1]);break;case 428:p.queries||(p.queries=[]),this.$=new p.Op({left:s[o-5],op:"NOT IN",right:s[o-1],queriesidx:p.queries.length}),p.queries.push(s[o-1]);break;case 429:this.$=new p.Op({left:s[o-4],op:"IN",right:s[o-1]});break;case 430:this.$=new p.Op({left:s[o-5],op:"NOT IN",right:s[o-1]});break;case 431:this.$=new p.Op({left:s[o-3],op:"IN",right:[]});break;case 432:this.$=new p.Op({left:s[o-4],op:"NOT IN",right:[]});break;case 433:case 435:this.$=new p.Op({left:s[o-2],op:"IN",right:s[o]});break;case 434:case 436:this.$=new p.Op({left:s[o-3],op:"NOT IN",right:s[o]});break;case 437:this.$=new p.Op({left:s[o-2],op:"BETWEEN1",right:s[o]});break;case 438:this.$=new p.Op({left:s[o-2],op:"NOT BETWEEN1",right:s[o]});break;case 439:this.$=new p.Op({op:"IS",left:s[o-2],right:s[o]});break;case 440:this.$=new p.Op({op:"IS",left:s[o-2],right:new p.UniOp({op:"NOT",right:new p.NullValue({value:void 0})})});break;case 441:this.$=new p.Convert({expression:s[o-2]}),p.extend(this.$,s[o]);break;case 451:this.$="ALL";break;case 452:this.$="SOME";break;case 453:this.$="ANY";break;case 454:this.$=new p.Update({table:s[o-4],columns:s[o-2],where:s[o]});break;case 455:this.$=new p.Update({table:s[o-2],columns:s[o]});break;case 458:this.$=new p.SetColumn({column:s[o-2],expression:s[o]});break;case 459:this.$=new p.SetColumn({variable:s[o-2],expression:s[o],method:s[o-3]});break;case 460:this.$=new p.Delete({table:s[o-2],where:s[o]});break;case 461:this.$=new p.Delete({table:s[o]});break;case 462:this.$=new p.Insert({into:s[o-2],values:s[o]});break;case 463:this.$=new p.Insert({into:s[o-1],values:s[o]});break;case 464:case 466:this.$=new p.Insert({into:s[o-2],values:s[o],orreplace:!0});break;case 465:case 467:this.$=new p.Insert({into:s[o-1],values:s[o],orreplace:!0});break;case 468:this.$=new p.Insert({into:s[o-2],default:!0});break;case 469:this.$=new p.Insert({into:s[o-5],columns:s[o-3],values:s[o]});break;case 470:this.$=new p.Insert({into:s[o-4],columns:s[o-2],values:s[o]});break;case 471:this.$=new p.Insert({into:s[o-1],select:s[o]});break;case 472:this.$=new p.Insert({into:s[o-1],select:s[o],orreplace:!0});break;case 473:this.$=new p.Insert({into:s[o-4],columns:s[o-2],select:s[o]});break;case 478:this.$=[s[o-1]];break;case 481:this.$=s[o-4],s[o-4].push(s[o-1]);break;case 494:this.$=new p.CreateTable({table:s[o-4]}),p.extend(this.$,s[o-7]),p.extend(this.$,s[o-6]),p.extend(this.$,s[o-5]),p.extend(this.$,s[o-2]),p.extend(this.$,s[o]);break;case 495:this.$=new p.CreateTable({table:s[o]}),p.extend(this.$,s[o-3]),p.extend(this.$,s[o-2]),p.extend(this.$,s[o-1]);break;case 497:this.$={class:!0};break;case 507:this.$={temporary:!0};break;case 509:this.$={ifnotexists:!0};break;case 510:this.$={columns:s[o-2],constraints:s[o]};break;case 511:this.$={columns:s[o]};break;case 512:this.$={as:s[o]};break;case 515:case 516:case 517:case 518:case 519:s[o].constraintid=s[o-1],this.$=s[o];break;case 522:this.$={type:"CHECK",expression:s[o-1]};break;case 523:this.$={type:"PRIMARY KEY",columns:s[o-1],clustered:(s[o-3]+"").toUpperCase()};break;case 524:this.$={type:"FOREIGN KEY",columns:s[o-5],fktable:s[o-2],fkcolumns:s[o-1]};break;case 530:this.$={type:"UNIQUE",columns:s[o-1],clustered:(s[o-3]+"").toUpperCase()};break;case 539:this.$=new p.ColumnDef({columnid:s[o-2]}),p.extend(this.$,s[o-1]),p.extend(this.$,s[o]);break;case 540:this.$=new p.ColumnDef({columnid:s[o-1]}),p.extend(this.$,s[o]);break;case 541:this.$=new p.ColumnDef({columnid:s[o],dbtypeid:""});break;case 542:this.$={dbtypeid:s[o-5],dbsize:s[o-3],dbprecision:+s[o-1]};break;case 543:this.$={dbtypeid:s[o-3],dbsize:s[o-1]};break;case 544:this.$={dbtypeid:s[o]};break;case 545:this.$={dbtypeid:"ENUM",enumvalues:s[o-1]};break;case 546:this.$=s[o-1],s[o-1].dbtypeid+="["+s[o]+"]";break;case 548:case 755:this.$=+s[o];break;case 552:p.extend(s[o-1],s[o]),this.$=s[o-1];break;case 555:this.$={primarykey:!0};break;case 556:case 557:this.$={foreignkey:{table:s[o-1],columnid:s[o]}};break;case 558:this.$={identity:{value:s[o-3],step:s[o-1]}};break;case 559:this.$={identity:{value:1,step:1}};break;case 560:case 562:this.$={default:s[o]};break;case 561:this.$={default:s[o-1]};break;case 563:this.$={null:!0};break;case 564:this.$={notnull:!0};break;case 565:this.$={check:s[o]};break;case 566:this.$={unique:!0};break;case 567:this.$={onupdate:s[o]};break;case 568:this.$={onupdate:s[o-1]};break;case 569:this.$=new p.DropTable({tables:s[o],type:s[o-2]}),p.extend(this.$,s[o-1]);break;case 573:this.$={ifexists:!0};break;case 574:this.$=new p.AlterTable({table:s[o-3],renameto:s[o]});break;case 575:this.$=new p.AlterTable({table:s[o-3],addcolumn:s[o]});break;case 576:this.$=new p.AlterTable({table:s[o-3],modifycolumn:s[o]});break;case 577:this.$=new p.AlterTable({table:s[o-5],renamecolumn:s[o-2],to:s[o]});break;case 578:this.$=new p.AlterTable({table:s[o-3],dropcolumn:s[o]});break;case 579:this.$=new p.AlterTable({table:s[o-2],renameto:s[o]});break;case 580:this.$=new p.AttachDatabase({databaseid:s[o],engineid:s[o-2].toUpperCase()});break;case 581:this.$=new p.AttachDatabase({databaseid:s[o-3],engineid:s[o-5].toUpperCase(),args:s[o-1]});break;case 582:this.$=new p.AttachDatabase({databaseid:s[o-2],engineid:s[o-4].toUpperCase(),as:s[o]});break;case 583:this.$=new p.AttachDatabase({databaseid:s[o-5],engineid:s[o-7].toUpperCase(),as:s[o],args:s[o-3]});break;case 584:this.$=new p.DetachDatabase({databaseid:s[o]});break;case 585:this.$=new p.CreateDatabase({databaseid:s[o]}),p.extend(this.$,s[o]);break;case 586:this.$=new p.CreateDatabase({engineid:s[o-4].toUpperCase(),databaseid:s[o-1],as:s[o]}),p.extend(this.$,s[o-2]);break;case 587:this.$=new p.CreateDatabase({engineid:s[o-7].toUpperCase(),databaseid:s[o-4],args:s[o-2],as:s[o]}),p.extend(this.$,s[o-5]);break;case 588:this.$=new p.CreateDatabase({engineid:s[o-4].toUpperCase(),as:s[o],args:[s[o-1]]}),p.extend(this.$,s[o-2]);break;case 591:case 592:this.$=new p.UseDatabase({databaseid:s[o]});break;case 593:this.$=new p.DropDatabase({databaseid:s[o]}),p.extend(this.$,s[o-1]);break;case 594:case 595:this.$=new p.DropDatabase({databaseid:s[o],engineid:s[o-3].toUpperCase()}),p.extend(this.$,s[o-1]);break;case 596:this.$=new p.CreateIndex({indexid:s[o-5],table:s[o-3],columns:s[o-1]});break;case 597:this.$=new p.CreateIndex({indexid:s[o-5],table:s[o-3],columns:s[o-1],unique:!0});break;case 598:this.$=new p.DropIndex({indexid:s[o]});break;case 599:this.$=new p.ShowDatabases;break;case 600:this.$=new p.ShowDatabases({like:s[o]});break;case 601:this.$=new p.ShowDatabases({engineid:s[o-1].toUpperCase()});break;case 602:this.$=new p.ShowDatabases({engineid:s[o-3].toUpperCase(),like:s[o]});break;case 603:this.$=new p.ShowTables;break;case 604:this.$=new p.ShowTables({like:s[o]});break;case 605:this.$=new p.ShowTables({databaseid:s[o]});break;case 606:this.$=new p.ShowTables({like:s[o],databaseid:s[o-2]});break;case 607:this.$=new p.ShowColumns({table:s[o]});break;case 608:this.$=new p.ShowColumns({table:s[o-2],databaseid:s[o]});break;case 609:this.$=new p.ShowIndex({table:s[o]});break;case 610:this.$=new p.ShowIndex({table:s[o-2],databaseid:s[o]});break;case 611:this.$=new p.ShowCreateTable({table:s[o]});break;case 612:this.$=new p.ShowCreateTable({table:s[o-2],databaseid:s[o]});break;case 613:this.$=new p.CreateTable({table:s[o-6],view:!0,select:s[o-1],viewcolumns:s[o-4]}),p.extend(this.$,s[o-9]),p.extend(this.$,s[o-7]);break;case 614:this.$=new p.CreateTable({table:s[o-3],view:!0,select:s[o-1]}),p.extend(this.$,s[o-6]),p.extend(this.$,s[o-4]);break;case 618:this.$=new p.DropTable({tables:s[o],view:!0}),p.extend(this.$,s[o-1]);break;case 619:case 765:this.$=new p.ExpressionStatement({expression:s[o]});break;case 620:this.$=new p.Source({url:s[o].value});break;case 621:this.$=new p.Assert({value:s[o]});break;case 622:this.$=new p.Assert({value:s[o].value});break;case 623:this.$=new p.Assert({value:s[o],message:s[o-2]});break;case 625:case 636:case 638:this.$=s[o].value;break;case 626:case 634:this.$=+s[o].value;break;case 627:this.$=!!s[o].value;break;case 635:this.$=""+s[o].value;break;case 644:this.$={};break;case 647:case 1052:case 1072:case 1074:case 1076:case 1080:case 1082:case 1084:case 1086:case 1088:case 1090:this.$=[];break;case 648:p.extend(s[o-2],s[o]),this.$=s[o-2];break;case 650:this.$={},this.$[s[o-2].substr(1,s[o-2].length-2)]=s[o];break;case 651:case 652:this.$={},this.$[s[o-2]]=s[o];break;case 655:this.$=new p.SetVariable({variable:s[o-2].toLowerCase(),value:s[o]});break;case 656:this.$=new p.SetVariable({variable:s[o-1].toLowerCase(),value:s[o]});break;case 657:this.$=new p.SetVariable({variable:s[o-2],expression:s[o]});break;case 658:this.$=new p.SetVariable({variable:s[o-3],props:s[o-2],expression:s[o]});break;case 659:this.$=new p.SetVariable({variable:s[o-2],expression:s[o],method:s[o-3]});break;case 660:this.$=new p.SetVariable({variable:s[o-3],props:s[o-2],expression:s[o],method:s[o-4]});break;case 661:this.$="@";break;case 662:this.$="$";break;case 668:this.$=!0;break;case 669:this.$=!1;break;case 670:this.$=new p.CommitTransaction;break;case 671:this.$=new p.RollbackTransaction;break;case 672:this.$=new p.BeginTransaction;break;case 673:this.$=new p.If({expression:s[o-2],thenstat:s[o-1],elsestat:s[o]}),s[o-1].exists&&(this.$.exists=s[o-1].exists),s[o-1].queries&&(this.$.queries=s[o-1].queries);break;case 674:this.$=new p.If({expression:s[o-1],thenstat:s[o]}),s[o].exists&&(this.$.exists=s[o].exists),s[o].queries&&(this.$.queries=s[o].queries);break;case 676:this.$=new p.While({expression:s[o-1],loopstat:s[o]}),s[o].exists&&(this.$.exists=s[o].exists),s[o].queries&&(this.$.queries=s[o].queries);break;case 677:this.$=new p.Continue;break;case 678:this.$=new p.Break;break;case 679:this.$=new p.BeginEnd({statements:s[o-1]});break;case 680:this.$=new p.Print({exprs:s[o]});break;case 681:this.$=new p.Print({select:s[o]});break;case 682:this.$=new p.Require({paths:s[o]});break;case 683:this.$=new p.Require({plugins:s[o]});break;case 684:case 685:this.$=s[o].toUpperCase();break;case 686:this.$=new p.Echo({expr:s[o]});break;case 691:this.$=new p.Declare({declares:s[o]});break;case 694:this.$={variable:s[o-1]},p.extend(this.$,s[o]);break;case 695:this.$={variable:s[o-2]},p.extend(this.$,s[o]);break;case 696:this.$={variable:s[o-3],expression:s[o]},p.extend(this.$,s[o-2]);break;case 697:this.$={variable:s[o-4],expression:s[o]},p.extend(this.$,s[o-2]);break;case 698:this.$=new p.TruncateTable({table:s[o]});break;case 699:this.$=new p.Merge,p.extend(this.$,s[o-4]),p.extend(this.$,s[o-3]),p.extend(this.$,s[o-2]),p.extend(this.$,{matches:s[o-1]}),p.extend(this.$,s[o]);break;case 708:this.$={matched:!0,action:s[o]};break;case 709:this.$={matched:!0,expr:s[o-2],action:s[o]};break;case 710:this.$={delete:!0};break;case 711:this.$={update:s[o]};break;case 712:case 713:this.$={matched:!1,bytarget:!0,action:s[o]};break;case 714:case 715:this.$={matched:!1,bytarget:!0,expr:s[o-2],action:s[o]};break;case 716:this.$={matched:!1,bysource:!0,action:s[o]};break;case 717:this.$={matched:!1,bysource:!0,expr:s[o-2],action:s[o]};break;case 718:this.$={insert:!0,values:s[o]};break;case 719:this.$={insert:!0,values:s[o],columns:s[o-3]};break;case 720:this.$={insert:!0,defaultvalues:!0};break;case 721:this.$={insert:!0,defaultvalues:!0,columns:s[o-3]};break;case 723:this.$={output:{columns:s[o]}};break;case 724:this.$={output:{columns:s[o-3],intovar:s[o],method:s[o-1]}};break;case 725:this.$={output:{columns:s[o-2],intotable:s[o]}};break;case 726:this.$={output:{columns:s[o-5],intotable:s[o-3],intocolumns:s[o-1]}};break;case 727:this.$=new p.CreateVertex({class:s[o-3],sharp:s[o-2],name:s[o-1]}),p.extend(this.$,s[o]);break;case 730:this.$={sets:s[o]};break;case 731:this.$={content:s[o]};break;case 732:this.$={select:s[o]};break;case 733:this.$=new p.CreateEdge({from:s[o-3],to:s[o-1],name:s[o-5]}),p.extend(this.$,s[o]);break;case 734:this.$=new p.CreateGraph({graph:s[o]});break;case 735:this.$=new p.CreateGraph({from:s[o]});break;case 738:this.$=s[o-2],s[o-1]&&(this.$.json=new p.Json({value:s[o-1]})),s[o]&&(this.$.as=s[o]);break;case 739:this.$={source:s[o-6],target:s[o]},s[o-3]&&(this.$.json=new p.Json({value:s[o-3]})),s[o-2]&&(this.$.as=s[o-2]),p.extend(this.$,s[o-4]);break;case 740:this.$={source:s[o-5],target:s[o]},s[o-2]&&(this.$.json=new p.Json({value:s[o-3]})),s[o-1]&&(this.$.as=s[o-2]);break;case 741:this.$={source:s[o-2],target:s[o]};break;case 745:this.$={vars:s[o],method:s[o-1]};break;case 748:case 749:var ft=s[o-1];this.$={prop:s[o-3],sharp:s[o-2],name:typeof ft>"u"?void 0:ft.substr(1,ft.length-2),class:s[o]};break;case 750:var Gt=s[o-1];this.$={sharp:s[o-2],name:typeof Gt>"u"?void 0:Gt.substr(1,Gt.length-2),class:s[o]};break;case 751:var Dt=s[o-1];this.$={name:typeof Dt>"u"?void 0:Dt.substr(1,Dt.length-2),class:s[o]};break;case 752:this.$={class:s[o]};break;case 758:this.$=new p.AddRule({left:s[o-2],right:s[o]});break;case 759:this.$=new p.AddRule({right:s[o]});break;case 762:this.$=new p.Term({termid:s[o]});break;case 763:this.$=new p.Term({termid:s[o-3],args:s[o-1]});break;case 766:this.$=new p.CreateTrigger({trigger:s[o-6],when:s[o-5],action:s[o-4],table:s[o-2],statement:s[o]}),s[o].exists&&(this.$.exists=s[o].exists),s[o].queries&&(this.$.queries=s[o].queries);break;case 767:this.$=new p.CreateTrigger({trigger:s[o-5],when:s[o-4],action:s[o-3],table:s[o-1],funcid:s[o]});break;case 768:this.$=new p.CreateTrigger({trigger:s[o-6],when:s[o-4],action:s[o-3],table:s[o-5],statement:s[o]}),s[o].exists&&(this.$.exists=s[o].exists),s[o].queries&&(this.$.queries=s[o].queries);break;case 769:case 770:case 772:this.$="AFTER";break;case 771:this.$="BEFORE";break;case 773:this.$="INSTEADOF";break;case 774:this.$="INSERT";break;case 775:this.$="DELETE";break;case 776:this.$="UPDATE";break;case 777:this.$=new p.DropTrigger({trigger:s[o]});break;case 778:this.$=new p.Reindex({indexid:s[o]});break;case 1053:case 1067:case 1069:case 1073:case 1075:case 1077:case 1081:case 1083:case 1085:case 1087:case 1089:case 1091:s[o-1].push(s[o])}},table:[e([10,606,767],n,{8:1,9:2,12:3,13:4,17:5,18:7,19:8,20:9,21:10,22:11,23:12,24:13,25:14,26:15,27:16,28:17,29:18,30:19,31:20,32:21,33:22,34:23,35:24,36:25,37:26,38:27,39:28,40:29,41:30,42:31,43:32,44:33,45:34,46:35,47:36,48:37,49:38,50:39,51:40,52:41,54:43,55:44,56:45,57:46,58:47,59:48,60:49,61:50,62:51,63:52,64:53,65:54,66:55,67:56,68:57,69:58,70:59,71:60,79:75,508:95,184:99,3:100,2:t,4:r,5:i,14:a,53:f,72:l,89:h,124:g,146:m,156:b,189:c,270:d,271:N,293:E,339:R,342:A,343:O,400:C,404:V,405:T1,408:C1,410:T,412:S1,413:A1,421:y,422:d2,438:E2,440:g2,441:A2,443:S2,444:c2,445:u2,446:v2,447:M2,451:J2,452:K2,455:j2,456:I2,509:C2,511:w2,512:N2,521:F2}),{1:[3]},{10:[1,105],11:106,606:$e,767:Yt},e(st,[2,8]),e(st,[2,9]),e(M,[2,12]),e(st,n,{17:5,18:7,19:8,20:9,21:10,22:11,23:12,24:13,25:14,26:15,27:16,28:17,29:18,30:19,31:20,32:21,33:22,34:23,35:24,36:25,37:26,38:27,39:28,40:29,41:30,42:31,43:32,44:33,45:34,46:35,47:36,48:37,49:38,50:39,51:40,52:41,54:43,55:44,56:45,57:46,58:47,59:48,60:49,61:50,62:51,63:52,64:53,65:54,66:55,67:56,68:57,69:58,70:59,71:60,79:75,508:95,184:99,3:100,12:109,2:t,4:r,5:i,15:[1,110],53:f,72:l,89:h,124:g,146:m,156:b,189:c,270:d,271:N,293:E,339:R,342:A,343:O,400:C,404:V,405:T1,408:C1,410:T,412:S1,413:A1,421:y,422:d2,438:E2,440:g2,441:A2,443:S2,444:c2,445:u2,446:v2,447:M2,451:J2,452:K2,455:j2,456:I2,509:C2,511:w2,512:N2,521:F2}),e(M,[2,14]),e(M,[2,15]),e(M,[2,16]),e(M,[2,17]),e(M,[2,18]),e(M,[2,19]),e(M,[2,20]),e(M,[2,21]),e(M,[2,22]),e(M,[2,23]),e(M,[2,24]),e(M,[2,25]),e(M,[2,26]),e(M,[2,27]),e(M,[2,28]),e(M,[2,29]),e(M,[2,30]),e(M,[2,31]),e(M,[2,32]),e(M,[2,33]),e(M,[2,34]),e(M,[2,35]),e(M,[2,36]),e(M,[2,37]),e(M,[2,38]),e(M,[2,39]),e(M,[2,40]),e(M,[2,41]),e(M,[2,42]),e(M,[2,43]),e(M,[2,44]),e(M,[2,45]),e(M,[2,46]),e(M,[2,47]),e(M,[2,48]),e(M,[2,49]),e(M,[2,50]),e(M,[2,51]),e(M,[2,52]),e(M,[2,53]),e(M,[2,54]),e(M,[2,55]),e(M,[2,56]),e(M,[2,57]),e(M,[2,58]),e(M,[2,59]),e(M,[2,60]),e(M,[2,61]),e(M,[2,62]),e(M,[2,63]),e(M,[2,64]),e(M,[2,65]),e(M,[2,66]),e(M,[2,67]),{357:[1,111]},{2:t,3:112,4:r,5:i},{2:t,3:114,4:r,5:i,156:_,200:113,293:H,294:P,295:G,296:B,297:J},e(br,[2,506],{3:122,352:126,2:t,4:r,5:i,134:Er,135:gr,187:[1,124],193:[1,123],272:[1,130],273:[1,131],361:[1,132],409:[1,121],476:[1,125],513:[1,129]}),{145:mr,453:133,454:134},{183:[1,136]},{409:[1,137]},{2:t,3:139,4:r,5:i,130:[1,145],193:[1,140],357:[1,144],401:141,409:[1,138],414:[1,142],513:[1,143]},{2:t,3:169,4:r,5:i,56:166,77:a1,94:146,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},e(q2,P3,{344:206,171:[1,207],198:G3}),e(q2,P3,{344:209,198:G3}),{2:t,3:221,4:r,5:i,77:E3,132:Wt,143:k,144:214,145:i1,152:L,156:_,181:D,198:[1,212],199:215,200:217,201:216,202:219,209:211,213:Xt,214:220,293:H,294:P,295:G,296:B,297:J,306:x,423:191,424:w,428:I,457:210},{2:t,3:223,4:r,5:i},{357:[1,224]},e(R4,[2,1048],{80:225,106:226,107:[1,227]}),e(vr,[2,1052],{90:228}),{2:t,3:232,4:r,5:i,190:[1,230],193:[1,233],271:[1,229],357:[1,234],409:[1,231]},{357:[1,235]},{2:t,3:238,4:r,5:i,73:236,75:237},e([310,606,767],n,{12:3,13:4,17:5,18:7,19:8,20:9,21:10,22:11,23:12,24:13,25:14,26:15,27:16,28:17,29:18,30:19,31:20,32:21,33:22,34:23,35:24,36:25,37:26,38:27,39:28,40:29,41:30,42:31,43:32,44:33,45:34,46:35,47:36,48:37,49:38,50:39,51:40,52:41,54:43,55:44,56:45,57:46,58:47,59:48,60:49,61:50,62:51,63:52,64:53,65:54,66:55,67:56,68:57,69:58,70:59,71:60,79:75,508:95,184:99,3:100,9:240,2:t,4:r,5:i,14:a,53:f,72:l,89:h,124:g,146:m,156:b,189:c,270:d,271:N,293:E,339:R,342:A,343:O,400:C,404:V,405:T1,408:C1,410:T,412:S1,413:A1,421:y,422:d2,438:E2,439:[1,239],440:g2,441:A2,443:S2,444:c2,445:u2,446:v2,447:M2,451:J2,452:K2,455:j2,456:I2,509:C2,511:w2,512:N2,521:F2}),{439:[1,241]},{439:[1,242]},{2:t,3:244,4:r,5:i,409:[1,243]},{2:t,3:246,4:r,5:i,199:245},e(t2,[2,314]),{113:247,132:F,300:U},{2:t,3:114,4:r,5:i,113:253,131:j,132:[1,250],143:k,144:248,145:_2,152:L,156:_,181:D,196:252,200:257,201:256,261:254,262:255,269:I4,278:249,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,306:x,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:259,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},e(M,[2,677]),e(M,[2,678]),{2:t,3:169,4:r,5:i,40:261,56:166,77:a1,79:75,89:h,94:262,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,151:260,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,184:99,189:c,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:268,4:r,5:i,113:265,132:F,300:U,448:263,449:264,450:266,451:Sr},{2:t,3:269,4:r,5:i,143:vt,145:St,435:270},{2:t,3:169,4:r,5:i,56:166,77:a1,94:273,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{509:[1,274]},{2:t,3:100,4:r,5:i,508:276,510:275},{2:t,3:114,4:r,5:i,156:_,200:277,293:H,294:P,295:G,296:B,297:J},{2:t,3:169,4:r,5:i,56:166,77:a1,94:278,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},e(g3,B3,{186:282,164:[1,281],185:[1,279],187:[1,280],195:J3}),e(Tr,[2,762],{77:[1,284]}),e([2,4,5,10,72,77,78,93,98,107,118,128,131,132,137,143,145,152,154,156,162,164,168,169,179,180,181,183,185,187,195,198,232,244,245,249,251,269,270,274,275,277,284,285,286,287,288,289,290,291,293,294,295,296,297,298,299,300,301,302,303,306,307,310,314,316,321,424,428,606,767],[2,152],{149:[1,285],150:[1,286],190:[1,287],191:[1,288],192:[1,289],193:[1,290],194:[1,291]}),e(v,[2,1]),e(v,[2,2]),{6:292,131:[1,441],172:[1,464],243:[1,440],244:[1,375],245:[1,409],249:[1,413],374:[1,406],385:[1,297],406:[1,299],414:[1,551],418:[1,473],420:[1,445],421:[1,511],437:[1,444],439:[1,527],444:[1,344],464:[1,420],468:[1,450],474:[1,343],518:[1,309],519:[1,301],520:[1,401],522:[1,293],523:[1,294],524:[1,295],525:[1,296],526:[1,298],527:[1,300],528:[1,302],529:[1,303],530:[1,304],531:[1,305],532:[1,306],533:[1,307],534:[1,308],535:[1,310],536:[1,311],537:[1,312],538:[1,313],539:[1,314],540:[1,315],541:[1,316],542:[1,317],543:[1,318],544:[1,319],545:[1,320],546:[1,321],547:[1,322],548:[1,323],549:[1,324],550:[1,325],551:[1,326],552:[1,327],553:[1,328],554:[1,329],555:[1,330],556:[1,331],557:[1,332],558:[1,333],559:[1,334],560:[1,335],561:[1,336],562:[1,337],563:[1,338],564:[1,339],565:[1,340],566:[1,341],567:[1,342],568:[1,345],569:[1,346],570:[1,347],571:[1,348],572:[1,349],573:[1,350],574:[1,351],575:[1,352],576:[1,353],577:[1,354],578:[1,355],579:[1,356],580:[1,357],581:[1,358],582:[1,359],583:[1,360],584:[1,361],585:[1,362],586:[1,363],587:[1,364],588:[1,365],589:[1,366],590:[1,367],591:[1,368],592:[1,369],593:[1,370],594:[1,371],595:[1,372],596:[1,373],597:[1,374],598:[1,376],599:[1,377],600:[1,378],601:[1,379],602:[1,380],603:[1,381],604:[1,382],605:[1,383],606:[1,384],607:[1,385],608:[1,386],609:[1,387],610:[1,388],611:[1,389],612:[1,390],613:[1,391],614:[1,392],615:[1,393],616:[1,394],617:[1,395],618:[1,396],619:[1,397],620:[1,398],621:[1,399],622:[1,400],623:[1,402],624:[1,403],625:[1,404],626:[1,405],627:[1,407],628:[1,408],629:[1,410],630:[1,411],631:[1,412],632:[1,414],633:[1,415],634:[1,416],635:[1,417],636:[1,418],637:[1,419],638:[1,421],639:[1,422],640:[1,423],641:[1,424],642:[1,425],643:[1,426],644:[1,427],645:[1,428],646:[1,429],647:[1,430],648:[1,431],649:[1,432],650:[1,433],651:[1,434],652:[1,435],653:[1,436],654:[1,437],655:[1,438],656:[1,439],657:[1,442],658:[1,443],659:[1,446],660:[1,447],661:[1,448],662:[1,449],663:[1,451],664:[1,452],665:[1,453],666:[1,454],667:[1,455],668:[1,456],669:[1,457],670:[1,458],671:[1,459],672:[1,460],673:[1,461],674:[1,462],675:[1,463],676:[1,465],677:[1,466],678:[1,467],679:[1,468],680:[1,469],681:[1,470],682:[1,471],683:[1,472],684:[1,474],685:[1,475],686:[1,476],687:[1,477],688:[1,478],689:[1,479],690:[1,480],691:[1,481],692:[1,482],693:[1,483],694:[1,484],695:[1,485],696:[1,486],697:[1,487],698:[1,488],699:[1,489],700:[1,490],701:[1,491],702:[1,492],703:[1,493],704:[1,494],705:[1,495],706:[1,496],707:[1,497],708:[1,498],709:[1,499],710:[1,500],711:[1,501],712:[1,502],713:[1,503],714:[1,504],715:[1,505],716:[1,506],717:[1,507],718:[1,508],719:[1,509],720:[1,510],721:[1,512],722:[1,513],723:[1,514],724:[1,515],725:[1,516],726:[1,517],727:[1,518],728:[1,519],729:[1,520],730:[1,521],731:[1,522],732:[1,523],733:[1,524],734:[1,525],735:[1,526],736:[1,528],737:[1,529],738:[1,530],739:[1,531],740:[1,532],741:[1,533],742:[1,534],743:[1,535],744:[1,536],745:[1,537],746:[1,538],747:[1,539],748:[1,540],749:[1,541],750:[1,542],751:[1,543],752:[1,544],753:[1,545],754:[1,546],755:[1,547],756:[1,548],757:[1,549],758:[1,550],759:[1,552],760:[1,553],761:[1,554],762:[1,555],763:[1,556],764:[1,557],765:[1,558],766:[1,559]},{1:[2,6]},e(st,n,{17:5,18:7,19:8,20:9,21:10,22:11,23:12,24:13,25:14,26:15,27:16,28:17,29:18,30:19,31:20,32:21,33:22,34:23,35:24,36:25,37:26,38:27,39:28,40:29,41:30,42:31,43:32,44:33,45:34,46:35,47:36,48:37,49:38,50:39,51:40,52:41,54:43,55:44,56:45,57:46,58:47,59:48,60:49,61:50,62:51,63:52,64:53,65:54,66:55,67:56,68:57,69:58,70:59,71:60,79:75,508:95,184:99,3:100,12:560,2:t,4:r,5:i,53:f,72:l,89:h,124:g,146:m,156:b,189:c,270:d,271:N,293:E,339:R,342:A,343:O,400:C,404:V,405:T1,408:C1,410:T,412:S1,413:A1,421:y,422:d2,438:E2,440:g2,441:A2,443:S2,444:c2,445:u2,446:v2,447:M2,451:J2,452:K2,455:j2,456:I2,509:C2,511:w2,512:N2,521:F2}),e(Ar,[2,1046]),e(Ar,[2,1047]),e(st,[2,10]),{16:[1,561]},{2:t,3:246,4:r,5:i,199:562},{409:[1,563]},e(M,[2,765]),{77:Vt},{77:[1,565]},{77:Nr},{77:[1,567]},{77:[1,568]},{77:[1,569]},{2:t,3:169,4:r,5:i,56:166,77:a1,94:570,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},e(q2,H3,{354:571,156:j3}),{409:[1,573]},{2:t,3:574,4:r,5:i},{193:[1,575]},{2:t,3:581,4:r,5:i,132:Mt,137:Tt,143:vt,145:St,152:ct,183:[1,577],435:588,477:576,478:578,479:579,482:580,486:585,497:582,501:584},{130:[1,592],353:589,357:[1,591],414:[1,590]},{113:594,132:F,183:[2,1146],300:U,475:593},e(Or,[2,1140],{469:595,3:596,2:t,4:r,5:i}),{2:t,3:597,4:r,5:i},{4:[1,598]},{4:[1,599]},e(br,[2,507]),e(M,[2,691],{74:[1,600]}),e(Qe,[2,692]),{2:t,3:601,4:r,5:i},{2:t,3:246,4:r,5:i,199:602},{2:t,3:603,4:r,5:i},e(q2,Y3,{402:604,156:W3}),{409:[1,606]},{2:t,3:607,4:r,5:i},e(q2,Y3,{402:608,156:W3}),e(q2,Y3,{402:609,156:W3}),{2:t,3:610,4:r,5:i},e(X3,[2,1134]),e(X3,[2,1135]),e(M,n,{17:5,18:7,19:8,20:9,21:10,22:11,23:12,24:13,25:14,26:15,27:16,28:17,29:18,30:19,31:20,32:21,33:22,34:23,35:24,36:25,37:26,38:27,39:28,40:29,41:30,42:31,43:32,44:33,45:34,46:35,47:36,48:37,49:38,50:39,51:40,52:41,54:43,55:44,56:45,57:46,58:47,59:48,60:49,61:50,62:51,63:52,64:53,65:54,66:55,67:56,68:57,69:58,70:59,71:60,79:75,508:95,184:99,3:100,12:611,114:628,331:640,2:t,4:r,5:i,53:f,72:l,89:h,99:q1,112:H1,115:N1,116:O1,123:k1,124:Cr,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,146:m,154:r2,156:b,170:o2,171:f2,179:V1,180:x1,189:c,270:d,271:N,293:E,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,334:n2,335:i2,336:j1,337:s2,339:R,342:A,343:O,400:C,404:V,405:T1,408:C1,410:T,412:S1,413:A1,421:y,422:d2,438:E2,440:g2,441:A2,443:S2,444:c2,445:u2,446:v2,447:M2,451:J2,452:K2,455:j2,456:I2,509:C2,511:w2,512:N2,521:F2}),e(t2,[2,291]),e(t2,[2,292]),e(t2,[2,293]),e(t2,[2,294]),e(t2,[2,295]),e(t2,[2,296]),e(t2,[2,297]),e(t2,[2,298]),e(t2,[2,299]),e(t2,[2,300]),e(t2,[2,301]),e(t2,[2,302]),e(t2,[2,303]),e(t2,[2,304]),e(t2,[2,305]),e(t2,[2,306]),e(t2,[2,307]),e(t2,[2,308]),{2:t,3:169,4:r,5:i,26:657,27:656,36:652,40:651,56:166,77:a1,79:75,89:h,94:654,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,184:99,189:c,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,268:653,269:c1,270:d,271:[1,658],274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:[1,655],294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,343:O,423:191,424:w,428:I},e(t2,[2,312]),e(t2,[2,313]),{77:[1,659]},e([2,4,5,10,53,72,74,76,78,89,93,95,98,99,107,112,115,118,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,179,180,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,232,239,244,245,246,247,249,251,270,271,284,285,286,287,288,289,290,291,293,300,304,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,334,335,336,337,339,342,343,400,404,405,408,410,412,413,421,422,424,428,438,440,441,443,444,445,446,447,451,452,455,456,468,474,509,511,512,521,606,767],w4,{77:Vt,116:[1,660]}),{2:t,3:169,4:r,5:i,56:166,77:a1,94:661,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:662,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:663,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:664,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:665,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},e(t2,[2,286]),e([2,4,5,10,53,72,74,76,77,78,89,93,95,98,99,107,112,115,116,118,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,179,180,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,230,231,232,239,244,245,246,247,249,251,253,269,270,271,274,275,277,284,285,286,287,288,289,290,291,293,294,295,296,297,298,299,300,301,302,303,304,306,307,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,334,335,336,337,339,342,343,347,360,372,373,377,378,400,404,405,408,410,412,413,419,421,422,424,428,430,438,440,441,443,444,445,446,447,451,452,455,456,468,474,509,511,512,521,606,767,768,769],[2,361]),e(G2,[2,362]),e(G2,[2,363]),e(G2,Rr),e(G2,[2,365]),e([2,4,5,10,53,72,74,76,77,78,89,93,95,98,99,107,112,115,116,118,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,179,180,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,230,232,239,244,245,246,247,249,251,270,271,284,285,286,287,288,289,290,291,293,300,301,304,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,334,335,336,337,339,342,343,347,360,372,373,377,378,400,404,405,408,410,412,413,421,422,424,428,430,438,440,441,443,444,445,446,447,451,452,455,456,468,474,509,511,512,521,606,767],[2,366]),{2:t,3:667,4:r,5:i,131:[1,668],305:666},{2:t,3:669,4:r,5:i},e(G2,[2,372]),e(G2,[2,373]),{2:t,3:670,4:r,5:i,77:k4,113:672,131:j,132:F,143:k,152:L,181:D,196:673,201:675,261:674,298:t1,299:r1,300:U,306:x,423:676,428:I},{77:[1,677]},{2:t,3:169,4:r,5:i,56:166,77:a1,94:678,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,308:679,311:680,312:K3,316:m1,321:v1,423:191,424:w,428:I},{77:[1,682]},{77:[1,683]},e(ze,[2,629]),{2:t,3:698,4:r,5:i,77:m3,111:693,113:691,131:j,132:F,143:k,144:688,145:_2,152:L,156:_,181:D,196:690,200:696,201:695,261:692,262:694,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,304:[1,686],306:x,423:191,424:w,425:684,426:687,427:689,428:I,431:685},{2:t,3:169,4:r,5:i,56:166,77:a1,94:262,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,151:699,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:700,4:r,5:i,156:_,200:701,293:H,294:P,295:G,296:B,297:J},{77:[2,339]},{77:[2,340]},{77:[2,341]},{77:[2,342]},{77:[2,343]},{77:[2,344]},{77:[2,345]},{77:[2,346]},{77:[2,347]},{77:[2,348]},{2:t,3:707,4:r,5:i,131:Ir,132:wr,429:702,430:[1,703],432:704},{2:t,3:246,4:r,5:i,199:708},{293:[1,709]},e(q2,[2,477]),{2:t,3:246,4:r,5:i,199:710},{231:[1,712],458:711},{231:[2,700]},{2:t,3:221,4:r,5:i,77:E3,132:Wt,143:k,144:214,145:i1,152:L,156:_,181:D,199:215,200:217,201:216,202:219,209:713,213:Xt,214:220,293:H,294:P,295:G,296:B,297:J,306:x,423:191,424:w,428:I},{40:714,79:75,89:h,184:99,189:c},e(kr,[2,1096],{210:715,76:[1,716]}),e(U2,[2,185],{3:717,2:t,4:r,5:i,76:[1,718],154:[1,719]}),e(U2,[2,189],{3:720,2:t,4:r,5:i,76:[1,721]}),e(U2,[2,190],{3:722,2:t,4:r,5:i,76:[1,723]}),e(U2,[2,193]),e(U2,[2,194],{3:724,2:t,4:r,5:i,76:[1,725]}),e(U2,[2,197],{3:726,2:t,4:r,5:i,76:[1,727]}),e([2,4,5,10,72,74,76,78,93,98,118,128,154,162,168,169,183,206,208,222,223,224,225,226,227,228,229,230,231,232,249,251,310,314,606,767],Lr,{77:Vt,116:Dr}),e([2,4,5,10,72,74,76,78,93,98,118,128,162,168,169,206,208,222,223,224,225,226,227,228,229,230,231,232,249,251,310,314,606,767],[2,200]),e(M,[2,778]),{2:t,3:246,4:r,5:i,199:729},e(Kt,xr,{81:730,198:Vr}),e(R4,[2,1049]),e(Mr,[2,1062],{108:732,190:[1,733]}),e([10,78,183,310,314,606,767],xr,{423:191,81:734,117:735,3:736,114:739,144:761,158:771,160:772,2:t,4:r,5:i,72:$2,76:ee,77:te,112:re,115:N1,116:O1,118:ne,122:ie,123:ae,124:se,128:oe,129:fe,130:ue,131:le,132:ce,133:he,134:de,135:pe,136:be,137:Ee,138:ge,139:me,140:ve,141:Se,142:Te,143:Ae,145:Ne,146:Oe,148:Ce,149:Re,150:Ie,152:we,154:ke,156:Le,162:De,164:xe,166:Ve,168:Me,169:Ue,170:ye,171:Fe,172:_e,173:Pe,175:Ge,185:Be,187:Je,198:Vr,244:Y,245:W,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,424:w,428:I}),{357:[1,785]},{183:[1,786]},e(M,[2,599],{112:[1,787]}),{409:[1,788]},{183:[1,789]},e(M,[2,603],{112:[1,790],183:[1,791]}),{2:t,3:246,4:r,5:i,199:792},{40:793,74:[1,794],79:75,89:h,184:99,189:c},e(L4,[2,70]),{76:[1,795]},e(M,[2,672]),{11:106,310:[1,796],606:$e,767:Yt},e(M,[2,670]),e(M,[2,671]),{2:t,3:797,4:r,5:i},e(M,[2,592]),{146:[1,798]},e([2,4,5,10,53,72,74,76,77,78,89,95,124,128,143,145,146,148,149,152,154,156,181,183,187,189,230,270,271,293,301,306,310,314,339,342,343,347,348,360,372,373,377,378,400,404,405,406,407,408,410,412,413,421,422,424,428,438,440,441,443,444,445,446,447,451,452,455,456,509,511,512,518,519,520,521,606,767],Lr,{116:Dr}),e(M,[2,620]),e(M,[2,621]),e(M,[2,622]),e(M,Rr,{74:[1,799]}),{77:k4,113:672,131:j,132:F,143:k,152:L,181:D,196:673,201:675,261:674,298:t1,299:r1,300:U,306:x,423:676,428:I},e(k2,[2,323]),e(k2,[2,324]),e(k2,[2,325]),e(k2,[2,326]),e(k2,[2,327]),e(k2,[2,328]),e(k2,[2,329]),e(M,n,{17:5,18:7,19:8,20:9,21:10,22:11,23:12,24:13,25:14,26:15,27:16,28:17,29:18,30:19,31:20,32:21,33:22,34:23,35:24,36:25,37:26,38:27,39:28,40:29,41:30,42:31,43:32,44:33,45:34,46:35,47:36,48:37,49:38,50:39,51:40,52:41,54:43,55:44,56:45,57:46,58:47,59:48,60:49,61:50,62:51,63:52,64:53,65:54,66:55,67:56,68:57,69:58,70:59,71:60,79:75,508:95,184:99,3:100,114:628,331:640,12:800,2:t,4:r,5:i,53:f,72:l,89:h,99:q1,112:H1,115:N1,116:O1,123:k1,124:Cr,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,146:m,154:r2,156:b,170:o2,171:f2,179:V1,180:x1,189:c,270:d,271:N,293:E,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,334:n2,335:i2,336:j1,337:s2,339:R,342:A,343:O,400:C,404:V,405:T1,408:C1,410:T,412:S1,413:A1,421:y,422:d2,438:E2,440:g2,441:A2,443:S2,444:c2,445:u2,446:v2,447:M2,451:J2,452:K2,455:j2,456:I2,509:C2,511:w2,512:N2,521:F2}),e(M,[2,680],{74:He}),e(M,[2,681]),e(Ur,[2,359],{114:628,331:640,99:q1,112:H1,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,334:n2,335:i2,336:j1,337:s2}),e(M,[2,682],{74:[1,803]}),e(M,[2,683],{74:[1,804]}),e(Qe,[2,688]),e(Qe,[2,690]),e(Qe,[2,684]),e(Qe,[2,685]),{114:810,115:N1,116:O1,124:[1,805],230:yr,433:806,434:807,437:Fr},{2:t,3:811,4:r,5:i},e(q2,[2,661]),e(q2,[2,662]),e(M,[2,619],{114:628,331:640,99:q1,112:H1,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,334:n2,335:i2,336:j1,337:s2}),{2:t,3:100,4:r,5:i,508:276,510:812},e(M,[2,759],{74:D4}),e(R2,[2,761]),e(M,[2,764]),e(M,[2,686],{114:628,331:640,99:q1,112:H1,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,334:n2,335:i2,336:j1,337:s2}),e(Ut,B3,{186:814,195:J3}),e(Ut,B3,{186:815,195:J3}),e(Ut,B3,{186:816,195:J3}),e(Qt,[2,1092],{259:147,200:148,260:149,111:150,258:151,196:152,261:153,113:154,262:155,201:156,202:157,263:158,264:159,265:160,144:162,266:163,267:164,56:166,158:168,3:169,423:191,188:817,174:818,257:819,94:820,2:t,4:r,5:i,77:a1,131:j,132:F,137:s1,143:k,145:i1,149:o1,152:L,154:f1,156:_,179:u1,180:l1,181:D,244:Y,245:W,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,424:w,428:I}),{77:[1,822],131:j,196:821},{2:t,3:100,4:r,5:i,508:276,510:823},e(yt,[2,153]),e(yt,[2,154]),e(yt,[2,155]),e(yt,[2,156]),e(yt,[2,157]),e(yt,[2,158]),e(yt,[2,159]),e(v,[2,3]),e(v,[2,779]),e(v,[2,780]),e(v,[2,781]),e(v,[2,782]),e(v,[2,783]),e(v,[2,784]),e(v,[2,785]),e(v,[2,786]),e(v,[2,787]),e(v,[2,788]),e(v,[2,789]),e(v,[2,790]),e(v,[2,791]),e(v,[2,792]),e(v,[2,793]),e(v,[2,794]),e(v,[2,795]),e(v,[2,796]),e(v,[2,797]),e(v,[2,798]),e(v,[2,799]),e(v,[2,800]),e(v,[2,801]),e(v,[2,802]),e(v,[2,803]),e(v,[2,804]),e(v,[2,805]),e(v,[2,806]),e(v,[2,807]),e(v,[2,808]),e(v,[2,809]),e(v,[2,810]),e(v,[2,811]),e(v,[2,812]),e(v,[2,813]),e(v,[2,814]),e(v,[2,815]),e(v,[2,816]),e(v,[2,817]),e(v,[2,818]),e(v,[2,819]),e(v,[2,820]),e(v,[2,821]),e(v,[2,822]),e(v,[2,823]),e(v,[2,824]),e(v,[2,825]),e(v,[2,826]),e(v,[2,827]),e(v,[2,828]),e(v,[2,829]),e(v,[2,830]),e(v,[2,831]),e(v,[2,832]),e(v,[2,833]),e(v,[2,834]),e(v,[2,835]),e(v,[2,836]),e(v,[2,837]),e(v,[2,838]),e(v,[2,839]),e(v,[2,840]),e(v,[2,841]),e(v,[2,842]),e(v,[2,843]),e(v,[2,844]),e(v,[2,845]),e(v,[2,846]),e(v,[2,847]),e(v,[2,848]),e(v,[2,849]),e(v,[2,850]),e(v,[2,851]),e(v,[2,852]),e(v,[2,853]),e(v,[2,854]),e(v,[2,855]),e(v,[2,856]),e(v,[2,857]),e(v,[2,858]),e(v,[2,859]),e(v,[2,860]),e(v,[2,861]),e(v,[2,862]),e(v,[2,863]),e(v,[2,864]),e(v,[2,865]),e(v,[2,866]),e(v,[2,867]),e(v,[2,868]),e(v,[2,869]),e(v,[2,870]),e(v,[2,871]),e(v,[2,872]),e(v,[2,873]),e(v,[2,874]),e(v,[2,875]),e(v,[2,876]),e(v,[2,877]),e(v,[2,878]),e(v,[2,879]),e(v,[2,880]),e(v,[2,881]),e(v,[2,882]),e(v,[2,883]),e(v,[2,884]),e(v,[2,885]),e(v,[2,886]),e(v,[2,887]),e(v,[2,888]),e(v,[2,889]),e(v,[2,890]),e(v,[2,891]),e(v,[2,892]),e(v,[2,893]),e(v,[2,894]),e(v,[2,895]),e(v,[2,896]),e(v,[2,897]),e(v,[2,898]),e(v,[2,899]),e(v,[2,900]),e(v,[2,901]),e(v,[2,902]),e(v,[2,903]),e(v,[2,904]),e(v,[2,905]),e(v,[2,906]),e(v,[2,907]),e(v,[2,908]),e(v,[2,909]),e(v,[2,910]),e(v,[2,911]),e(v,[2,912]),e(v,[2,913]),e(v,[2,914]),e(v,[2,915]),e(v,[2,916]),e(v,[2,917]),e(v,[2,918]),e(v,[2,919]),e(v,[2,920]),e(v,[2,921]),e(v,[2,922]),e(v,[2,923]),e(v,[2,924]),e(v,[2,925]),e(v,[2,926]),e(v,[2,927]),e(v,[2,928]),e(v,[2,929]),e(v,[2,930]),e(v,[2,931]),e(v,[2,932]),e(v,[2,933]),e(v,[2,934]),e(v,[2,935]),e(v,[2,936]),e(v,[2,937]),e(v,[2,938]),e(v,[2,939]),e(v,[2,940]),e(v,[2,941]),e(v,[2,942]),e(v,[2,943]),e(v,[2,944]),e(v,[2,945]),e(v,[2,946]),e(v,[2,947]),e(v,[2,948]),e(v,[2,949]),e(v,[2,950]),e(v,[2,951]),e(v,[2,952]),e(v,[2,953]),e(v,[2,954]),e(v,[2,955]),e(v,[2,956]),e(v,[2,957]),e(v,[2,958]),e(v,[2,959]),e(v,[2,960]),e(v,[2,961]),e(v,[2,962]),e(v,[2,963]),e(v,[2,964]),e(v,[2,965]),e(v,[2,966]),e(v,[2,967]),e(v,[2,968]),e(v,[2,969]),e(v,[2,970]),e(v,[2,971]),e(v,[2,972]),e(v,[2,973]),e(v,[2,974]),e(v,[2,975]),e(v,[2,976]),e(v,[2,977]),e(v,[2,978]),e(v,[2,979]),e(v,[2,980]),e(v,[2,981]),e(v,[2,982]),e(v,[2,983]),e(v,[2,984]),e(v,[2,985]),e(v,[2,986]),e(v,[2,987]),e(v,[2,988]),e(v,[2,989]),e(v,[2,990]),e(v,[2,991]),e(v,[2,992]),e(v,[2,993]),e(v,[2,994]),e(v,[2,995]),e(v,[2,996]),e(v,[2,997]),e(v,[2,998]),e(v,[2,999]),e(v,[2,1e3]),e(v,[2,1001]),e(v,[2,1002]),e(v,[2,1003]),e(v,[2,1004]),e(v,[2,1005]),e(v,[2,1006]),e(v,[2,1007]),e(v,[2,1008]),e(v,[2,1009]),e(v,[2,1010]),e(v,[2,1011]),e(v,[2,1012]),e(v,[2,1013]),e(v,[2,1014]),e(v,[2,1015]),e(v,[2,1016]),e(v,[2,1017]),e(v,[2,1018]),e(v,[2,1019]),e(v,[2,1020]),e(v,[2,1021]),e(v,[2,1022]),e(v,[2,1023]),e(v,[2,1024]),e(v,[2,1025]),e(v,[2,1026]),e(v,[2,1027]),e(v,[2,1028]),e(v,[2,1029]),e(v,[2,1030]),e(v,[2,1031]),e(v,[2,1032]),e(v,[2,1033]),e(v,[2,1034]),e(v,[2,1035]),e(v,[2,1036]),e(v,[2,1037]),e(v,[2,1038]),e(v,[2,1039]),e(v,[2,1040]),e(v,[2,1041]),e(v,[2,1042]),e(v,[2,1043]),e(v,[2,1044]),e(v,[2,1045]),e(st,[2,7]),e(st,n,{17:5,18:7,19:8,20:9,21:10,22:11,23:12,24:13,25:14,26:15,27:16,28:17,29:18,30:19,31:20,32:21,33:22,34:23,35:24,36:25,37:26,38:27,39:28,40:29,41:30,42:31,43:32,44:33,45:34,46:35,47:36,48:37,49:38,50:39,51:40,52:41,54:43,55:44,56:45,57:46,58:47,59:48,60:49,61:50,62:51,63:52,64:53,65:54,66:55,67:56,68:57,69:58,70:59,71:60,79:75,508:95,184:99,3:100,12:824,2:t,4:r,5:i,53:f,72:l,89:h,124:g,146:m,156:b,189:c,270:d,271:N,293:E,339:R,342:A,343:O,400:C,404:V,405:T1,408:C1,410:T,412:S1,413:A1,421:y,422:d2,438:E2,440:g2,441:A2,443:S2,444:c2,445:u2,446:v2,447:M2,451:J2,452:K2,455:j2,456:I2,509:C2,511:w2,512:N2,521:F2}),{400:[1,828],405:[1,825],406:[1,826],407:[1,827]},{2:t,3:829,4:r,5:i},e(Ut,[2,1116],{292:830,770:832,78:[1,831],164:[1,834],185:[1,833]}),{2:t,3:169,4:r,5:i,56:166,77:a1,94:262,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,151:835,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:262,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,151:836,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:837,4:r,5:i,132:[1,838]},{2:t,3:839,4:r,5:i,132:[1,840]},{2:t,3:169,4:r,5:i,56:166,77:a1,94:841,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:842,4:r,5:i,99:q1,112:H1,114:628,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,331:640,334:n2,335:i2,336:j1,337:s2},{2:t,3:843,4:r,5:i},{154:[1,844]},e(Q3,H3,{354:845,156:j3}),{230:[1,846]},{2:t,3:847,4:r,5:i},e(M,[2,734],{74:_r}),{2:t,3:169,4:r,5:i,56:166,77:a1,94:849,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},e(R2,[2,737]),e(Pr,[2,1148],{423:191,480:850,144:851,139:x4,141:x4,145:_2,424:w,428:I}),{139:[1,852],141:[1,853]},e(z3,Gr,{494:855,497:856,77:[1,854],137:Tt}),e(Z3,[2,1172],{498:857,132:[1,858]}),e(ot,[2,1176],{500:859,501:860,152:ct}),e(ot,[2,752]),e(Br,[2,744]),{2:t,3:861,4:r,5:i,131:[1,862]},{2:t,3:863,4:r,5:i},{2:t,3:864,4:r,5:i},e(q2,H3,{354:865,156:j3}),e(q2,H3,{354:866,156:j3}),e(X3,[2,496]),e(X3,[2,497]),{183:[1,867]},{183:[2,1147]},e(V4,[2,1142],{470:868,473:869,137:[1,870]}),e(Or,[2,1141]),e(zt,Jr,{514:871,95:Hr,230:[1,872],518:jr,519:Yr,520:Wr}),{76:[1,877]},{76:[1,878]},{145:mr,454:879},{4:Zt,7:883,76:[1,881],276:880,391:882,393:qt},e(M,[2,461],{128:[1,886]}),e(M,[2,584]),{2:t,3:887,4:r,5:i},{302:[1,888]},e(Q3,Y3,{402:889,156:W3}),e(M,[2,598]),{2:t,3:246,4:r,5:i,199:891,403:890},{2:t,3:246,4:r,5:i,199:891,403:892},e(M,[2,777]),e(st,[2,674],{442:893,314:[1,894]}),{2:t,3:169,4:r,5:i,56:166,77:a1,94:895,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:896,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:897,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:898,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:899,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:900,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:901,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:902,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:903,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:904,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:905,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:906,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:907,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:908,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:909,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:910,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:911,4:r,5:i,77:[1,913],131:j,156:_,196:912,200:914,293:H,294:P,295:G,296:B,297:J},{2:t,3:915,4:r,5:i,77:[1,917],131:j,156:_,196:916,200:918,293:H,294:P,295:G,296:B,297:J},e(Ft,[2,445],{259:147,200:148,260:149,111:150,258:151,196:152,261:153,113:154,262:155,201:156,202:157,263:158,264:159,265:160,144:162,266:163,267:164,56:166,158:168,3:169,423:191,94:919,2:t,4:r,5:i,77:a1,131:j,132:F,137:s1,143:k,145:i1,149:o1,152:L,154:f1,156:_,179:u1,180:l1,181:D,244:Y,245:W,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,424:w,428:I}),e(Ft,[2,446],{259:147,200:148,260:149,111:150,258:151,196:152,261:153,113:154,262:155,201:156,202:157,263:158,264:159,265:160,144:162,266:163,267:164,56:166,158:168,3:169,423:191,94:920,2:t,4:r,5:i,77:a1,131:j,132:F,137:s1,143:k,145:i1,149:o1,152:L,154:f1,156:_,179:u1,180:l1,181:D,244:Y,245:W,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,424:w,428:I}),e(Ft,[2,447],{259:147,200:148,260:149,111:150,258:151,196:152,261:153,113:154,262:155,201:156,202:157,263:158,264:159,265:160,144:162,266:163,267:164,56:166,158:168,3:169,423:191,94:921,2:t,4:r,5:i,77:a1,131:j,132:F,137:s1,143:k,145:i1,149:o1,152:L,154:f1,156:_,179:u1,180:l1,181:D,244:Y,245:W,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,424:w,428:I}),e(Ft,[2,448],{259:147,200:148,260:149,111:150,258:151,196:152,261:153,113:154,262:155,201:156,202:157,263:158,264:159,265:160,144:162,266:163,267:164,56:166,158:168,3:169,423:191,94:922,2:t,4:r,5:i,77:a1,131:j,132:F,137:s1,143:k,145:i1,149:o1,152:L,154:f1,156:_,179:u1,180:l1,181:D,244:Y,245:W,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,424:w,428:I}),e(Ft,Xr,{259:147,200:148,260:149,111:150,258:151,196:152,261:153,113:154,262:155,201:156,202:157,263:158,264:159,265:160,144:162,266:163,267:164,56:166,158:168,3:169,423:191,94:923,2:t,4:r,5:i,77:a1,131:j,132:F,137:s1,143:k,145:i1,149:o1,152:L,154:f1,156:_,179:u1,180:l1,181:D,244:Y,245:W,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,424:w,428:I}),{2:t,3:169,4:r,5:i,56:166,77:a1,94:924,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:925,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},e(Ft,[2,450],{259:147,200:148,260:149,111:150,258:151,196:152,261:153,113:154,262:155,201:156,202:157,263:158,264:159,265:160,144:162,266:163,267:164,56:166,158:168,3:169,423:191,94:926,2:t,4:r,5:i,77:a1,131:j,132:F,137:s1,143:k,145:i1,149:o1,152:L,154:f1,156:_,179:u1,180:l1,181:D,244:Y,245:W,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,424:w,428:I}),{2:t,3:169,4:r,5:i,56:166,77:a1,94:927,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:928,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{164:[1,930],166:[1,932],332:929,338:[1,931]},{2:t,3:169,4:r,5:i,56:166,77:a1,94:933,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:934,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:698,4:r,5:i,77:[1,935],111:938,145:Kr,156:_,200:939,202:937,293:H,294:P,295:G,296:B,297:J,333:936},{99:[1,941],301:[1,942]},{2:t,3:169,4:r,5:i,56:166,77:a1,94:943,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:944,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:945,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{4:Zt,7:883,276:946,391:882,393:qt},e(Qr,[2,88]),e(Qr,[2,89]),{78:[1,947]},{78:[1,948]},{78:[1,949]},{78:[1,950],99:q1,112:H1,114:628,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,331:640,334:n2,335:i2,336:j1,337:s2},e(q2,P3,{344:209,77:Nr,198:G3}),{78:[2,1112]},{78:[2,1113]},{134:Er,135:gr},{2:t,3:169,4:r,5:i,56:166,77:a1,94:262,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,151:951,152:L,154:f1,156:_,158:168,164:[1,953],179:u1,180:l1,181:D,185:[1,952],196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:954,4:r,5:i,149:zr,180:[1,956]},e([2,4,5,10,53,72,74,76,77,78,89,93,95,98,99,107,118,122,128,129,130,131,132,134,135,137,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,232,239,244,245,246,247,249,251,270,271,284,285,286,287,288,289,290,291,293,300,304,310,312,313,314,318,334,335,337,339,342,343,400,404,405,408,410,412,413,421,422,424,428,438,440,441,443,444,445,446,447,451,452,455,456,468,474,509,511,512,521,606,767],[2,421],{114:628,331:640,112:H1,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,336:j1}),e(q3,[2,422],{114:628,331:640,115:N1,116:O1,123:k1,133:L1,136:I1,138:D1,180:x1,316:w1,320:R1}),e(q3,[2,423],{114:628,331:640,115:N1,116:O1,123:k1,133:L1,136:I1,138:D1,180:x1,316:w1,320:R1}),e(M4,[2,424],{114:628,331:640,320:R1}),e(M4,[2,425],{114:628,331:640,320:R1}),e(G2,[2,370]),e(G2,[2,1118]),e(G2,[2,1119]),e(G2,[2,371]),e([2,4,5,10,53,72,74,76,77,78,89,93,95,98,99,107,112,115,116,118,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,179,180,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,230,231,232,239,244,245,246,247,249,251,270,271,284,285,286,287,288,289,290,291,293,300,304,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,334,335,336,337,339,342,343,400,404,405,408,410,412,413,421,422,424,428,438,440,441,443,444,445,446,447,451,452,455,456,468,474,509,511,512,521,606,767],[2,367]),{2:t,3:169,4:r,5:i,56:166,77:a1,94:957,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},e(ze,[2,625]),e(ze,[2,626]),e(ze,[2,627]),e(ze,[2,628]),e(ze,[2,630]),{40:958,79:75,89:h,184:99,189:c},{99:q1,112:H1,114:628,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,308:959,311:680,312:K3,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,331:640,334:n2,335:i2,336:j1,337:s2},{309:960,310:Zr,311:961,312:K3,314:qr},e(U4,[2,377]),{2:t,3:169,4:r,5:i,56:166,77:a1,94:963,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:964,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{4:Zt,7:883,276:965,391:882,393:qt},e(ze,[2,631]),{74:[1,967],304:[1,966]},e(ze,[2,647]),e($r,[2,654]),e(ht,[2,632]),e(ht,[2,633]),e(ht,[2,634]),e(ht,[2,635]),e(ht,[2,636]),e(ht,[2,637]),e(ht,[2,638]),e(ht,[2,639]),e(ht,[2,640]),{2:t,3:169,4:r,5:i,56:166,77:a1,94:968,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},e([2,4,5,10,53,72,74,76,78,89,93,95,98,99,107,112,115,118,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,179,180,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,232,239,244,245,246,247,249,251,270,271,284,285,286,287,288,289,290,291,293,300,304,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,334,335,336,337,339,342,343,400,404,405,408,410,412,413,421,422,424,428,430,438,440,441,443,444,445,446,447,451,452,455,456,468,474,509,511,512,521,606,767],w4,{77:Vt,116:en}),{74:He,304:[1,970]},e(y4,[2,317],{77:Vt}),e(t2,[2,318]),{74:[1,972],430:[1,971]},e(ze,[2,644]),e(v3,[2,649]),{152:[1,973]},{152:[1,974]},{152:[1,975]},{40:980,77:[1,979],79:75,89:h,143:k,144:983,145:_2,149:S3,152:L,181:D,184:99,189:c,201:984,306:x,345:976,346:977,347:[1,978],348:T3,423:191,424:w,428:I},e(q2,P3,{344:985,198:G3}),{77:At,143:k,144:983,145:_2,149:S3,152:L,181:D,201:984,306:x,345:986,346:987,348:T3,423:191,424:w,428:I},{230:[1,990],459:989},{2:t,3:221,4:r,5:i,77:E3,132:Wt,143:k,144:214,145:i1,152:L,156:_,181:D,199:215,200:217,201:216,202:219,209:991,213:Xt,214:220,293:H,294:P,295:G,296:B,297:J,306:x,423:191,424:w,428:I},{231:[2,701]},{78:[1,992]},e(U2,[2,1098],{211:993,3:994,2:t,4:r,5:i}),e(kr,[2,1097]),e(U2,[2,183]),{2:t,3:995,4:r,5:i},{212:[1,996]},e(U2,[2,187]),{2:t,3:997,4:r,5:i},e(U2,[2,191]),{2:t,3:998,4:r,5:i},e(U2,[2,195]),{2:t,3:999,4:r,5:i},e(U2,[2,198]),{2:t,3:1e3,4:r,5:i},{2:t,3:1001,4:r,5:i},{148:[1,1002]},e($3,[2,172],{82:1003,183:[1,1004]}),{2:t,3:221,4:r,5:i,132:[1,1009],143:k,145:[1,1010],152:L,156:_,181:D,199:1005,200:1006,201:1007,202:1008,293:H,294:P,295:G,296:B,297:J,306:x},{2:t,3:1015,4:r,5:i,109:1011,110:1012,111:1013,112:tn},e(Mr,[2,1063]),e(Ze,[2,1054],{91:1016,182:1017,183:[1,1018]}),e(vr,[2,1053],{153:1019,179:je,180:Ye,181:We}),e([2,4,5,10,72,74,76,78,112,115,116,118,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,179,180,181,183,185,187,198,244,245,284,285,286,287,288,289,290,291,310,314,424,428,606,767],[2,90],{77:[1,1023]}),{119:[1,1024]},e(p2,[2,93]),{2:t,3:1025,4:r,5:i},e(p2,[2,95]),{2:t,3:169,4:r,5:i,56:166,77:a1,94:1026,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:1027,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:736,4:r,5:i,72:$2,76:ee,77:te,112:re,114:739,115:N1,116:O1,117:1029,118:ne,122:ie,123:ae,124:se,125:1028,128:oe,129:fe,130:ue,131:le,132:ce,133:he,134:de,135:pe,136:be,137:Ee,138:ge,139:me,140:ve,141:Se,142:Te,143:Ae,144:761,145:Ne,146:Oe,148:Ce,149:Re,150:Ie,152:we,154:ke,156:Le,158:771,160:772,162:De,164:xe,166:Ve,168:Me,169:Ue,170:ye,171:Fe,172:_e,173:Pe,175:Ge,185:Be,187:Je,244:Y,245:W,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,423:191,424:w,428:I},{77:[1,1030]},{77:[1,1031]},{77:[1,1032]},{77:[1,1033]},e(p2,[2,104]),e(p2,[2,105]),e(p2,[2,106]),e(p2,[2,107]),e(p2,[2,108]),e(p2,[2,109]),{2:t,3:1034,4:r,5:i},{2:t,3:1035,4:r,5:i,133:[1,1036]},e(p2,[2,113]),e(p2,[2,114]),e(p2,[2,115]),e(p2,[2,116]),e(p2,[2,117]),e(p2,[2,118]),{2:t,3:1037,4:r,5:i,77:k4,113:672,131:j,132:F,143:k,152:L,181:D,196:673,201:675,261:674,298:t1,299:r1,300:U,306:x,423:676,428:I},{145:[1,1038]},{77:[1,1039]},{145:[1,1040]},e(p2,[2,123]),{77:[1,1041]},{2:t,3:1042,4:r,5:i},{77:[1,1043]},{77:[1,1044]},{77:[1,1045]},{77:[1,1046]},{77:[1,1047],164:[1,1048]},{77:[1,1049]},{77:[1,1050]},{77:[1,1051]},{77:[1,1052]},{77:[1,1053]},{77:[1,1054]},{77:[1,1055]},{77:[1,1056]},{77:[1,1057]},{77:[2,1078]},{77:[2,1079]},{2:t,3:246,4:r,5:i,199:1058},{2:t,3:246,4:r,5:i,199:1059},{113:1060,132:F,300:U},e(M,[2,601],{112:[1,1061]}),{2:t,3:246,4:r,5:i,199:1062},{113:1063,132:F,300:U},{2:t,3:1064,4:r,5:i},e(M,[2,698]),e(M,[2,68]),{2:t,3:238,4:r,5:i,75:1065},{77:[1,1066]},e(M,[2,679]),e(M,[2,591]),{2:t,3:1015,4:r,5:i,111:1069,143:A3,145:N3,147:1067,340:1068,341:1070},{144:1073,145:_2,423:191,424:w,428:I},e(M,[2,676]),{2:t,3:169,4:r,5:i,56:166,77:a1,94:1074,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},e(Ft,Xr,{259:147,200:148,260:149,111:150,258:151,196:152,261:153,113:154,262:155,201:156,202:157,263:158,264:159,265:160,144:162,266:163,267:164,56:166,158:168,3:169,423:191,94:1075,2:t,4:r,5:i,77:a1,131:j,132:F,137:s1,143:k,145:i1,149:o1,152:L,154:f1,156:_,179:u1,180:l1,181:D,244:Y,245:W,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,424:w,428:I}),{113:1076,132:F,300:U},{2:t,3:268,4:r,5:i,450:1077,451:Sr},{2:t,3:169,4:r,5:i,56:166,77:a1,94:1079,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,230:yr,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I,433:1078,437:Fr},e(M,[2,656]),{114:1081,115:N1,116:O1,124:[1,1080]},e(M,[2,668]),e(M,[2,669]),{2:t,3:1083,4:r,5:i,77:rn,131:nn,436:1082},{114:810,115:N1,116:O1,124:[1,1086],434:1087},e(M,[2,758],{74:D4}),{2:t,3:100,4:r,5:i,508:1088},{2:t,3:169,4:r,5:i,56:166,77:a1,94:820,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,174:1089,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,257:819,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:820,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,174:1090,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,257:819,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:820,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,174:1091,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,257:819,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},e(Qt,[2,151]),e(Qt,[2,1093],{74:$t}),e(Nt,[2,276]),e(Nt,[2,283],{114:628,331:640,3:1094,113:1096,2:t,4:r,5:i,76:[1,1093],99:q1,112:H1,115:N1,116:O1,123:k1,124:a2,131:[1,1095],132:F,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,300:U,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,334:n2,335:i2,336:j1,337:s2}),e(g3,[2,1094],{197:1097,768:[1,1098]}),{131:j,196:1099},{74:D4,78:[1,1100]},e(st,[2,11]),{148:[1,1101],190:[1,1102]},{190:[1,1103]},{190:[1,1104]},{190:[1,1105]},e(M,[2,580],{76:[1,1107],77:[1,1106]}),{2:t,3:169,4:r,5:i,56:166,77:a1,94:262,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,151:1108,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},e(G2,[2,350]),e(Ut,[2,1117]),e(Ut,[2,1114]),e(Ut,[2,1115]),{74:He,78:[1,1109]},{74:He,78:[1,1110]},{74:[1,1111]},{74:[1,1112]},{74:[1,1113]},{74:[1,1114]},{74:[1,1115],99:q1,112:H1,114:628,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,331:640,334:n2,335:i2,336:j1,337:s2},e(G2,[2,358]),e(M,[2,585]),{302:[1,1116]},{2:t,3:1117,4:r,5:i,113:1118,132:F,300:U},{2:t,3:246,4:r,5:i,199:1119},{230:[1,1120]},{2:t,3:581,4:r,5:i,132:Mt,137:Tt,143:vt,145:St,152:ct,435:588,478:1121,479:579,482:580,486:585,497:582,501:584},e(M,[2,735],{114:628,331:640,99:q1,112:H1,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,334:n2,335:i2,336:j1,337:s2}),e(R2,[2,1150],{481:1122,487:1123,76:F4}),e(Pr,[2,1149]),{2:t,3:1127,4:r,5:i,132:Mt,137:Tt,144:1126,145:_2,152:ct,423:191,424:w,428:I,479:1125,497:582,501:584},{2:t,3:1127,4:r,5:i,132:Mt,137:Tt,143:vt,145:St,152:ct,435:588,479:1129,482:1128,486:585,497:582,501:584},{2:t,3:581,4:r,5:i,132:Mt,137:Tt,143:vt,145:St,152:ct,435:588,477:1130,478:578,479:579,482:580,486:585,497:582,501:584},e(Z3,[2,1168],{495:1131,132:[1,1132]}),e(z3,[2,1167]),e(ot,[2,1174],{499:1133,501:1134,152:ct}),e(Z3,[2,1173]),e(ot,[2,751]),e(ot,[2,1177]),e(z3,[2,754]),e(z3,[2,755]),e(ot,[2,753]),e(Br,[2,745]),{2:t,3:246,4:r,5:i,199:1135},{2:t,3:246,4:r,5:i,199:1136},{2:t,3:169,4:r,5:i,56:166,77:a1,94:1137,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},e(an,[2,1144],{471:1138,113:1139,132:F,300:U}),e(V4,[2,1143]),{2:t,3:1140,4:r,5:i},{339:sn,342:on,343:fn,515:1141},{2:t,3:246,4:r,5:i,199:1145},e(zt,[2,770]),e(zt,[2,771]),e(zt,[2,772]),{129:[1,1146]},{270:[1,1147]},{270:[1,1148]},e(Qe,[2,693]),e(Qe,[2,694],{124:[1,1149]}),{4:Zt,7:883,276:1150,391:882,393:qt},e([2,4,10,53,72,74,76,77,78,89,93,95,98,99,107,112,115,116,118,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,179,180,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,230,232,239,244,245,246,247,249,251,270,271,284,285,286,287,288,289,290,291,293,300,301,304,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,334,335,336,337,339,342,343,347,360,372,373,377,378,400,404,405,408,410,412,413,421,422,424,428,438,440,441,443,444,445,446,447,451,452,455,456,468,474,509,511,512,521,606,767],[2,547],{5:[1,1151]}),e([2,5,10,53,72,74,76,78,89,93,95,98,99,107,112,115,116,118,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,179,180,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,230,232,239,244,245,246,247,249,251,270,271,284,285,286,287,288,289,290,291,293,300,301,304,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,334,335,336,337,339,342,343,347,360,372,373,377,378,400,404,405,408,410,412,413,421,422,424,428,438,440,441,443,444,445,446,447,451,452,455,456,468,474,509,511,512,521,606,767],[2,544],{4:[1,1153],77:[1,1152]}),{77:[1,1154]},e(e3,[2,4]),{2:t,3:169,4:r,5:i,56:166,77:a1,94:1155,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},e(M,[2,593]),e(Q3,[2,573]),{2:t,3:1156,4:r,5:i,113:1157,132:F,300:U},e(M,[2,569],{74:un}),e(Qe,[2,571]),e(M,[2,618],{74:un}),e(M,[2,673]),e(M,n,{17:5,18:7,19:8,20:9,21:10,22:11,23:12,24:13,25:14,26:15,27:16,28:17,29:18,30:19,31:20,32:21,33:22,34:23,35:24,36:25,37:26,38:27,39:28,40:29,41:30,42:31,43:32,44:33,45:34,46:35,47:36,48:37,49:38,50:39,51:40,52:41,54:43,55:44,56:45,57:46,58:47,59:48,60:49,61:50,62:51,63:52,64:53,65:54,66:55,67:56,68:57,69:58,70:59,71:60,79:75,508:95,184:99,3:100,12:1159,2:t,4:r,5:i,53:f,72:l,89:h,124:g,146:m,156:b,189:c,270:d,271:N,293:E,339:R,342:A,343:O,400:C,404:V,405:T1,408:C1,410:T,412:S1,413:A1,421:y,422:d2,438:E2,440:g2,441:A2,443:S2,444:c2,445:u2,446:v2,447:M2,451:J2,452:K2,455:j2,456:I2,509:C2,511:w2,512:N2,521:F2}),e(e4,[2,381],{114:628,331:640,115:N1,116:O1,123:k1,133:L1,136:I1,138:D1,141:y1,142:F1,179:V1,180:x1,316:w1,320:R1,321:M1,322:_1,323:P1}),e(M4,[2,382],{114:628,331:640,320:R1}),e(e4,[2,383],{114:628,331:640,115:N1,116:O1,123:k1,133:L1,136:I1,138:D1,141:y1,142:F1,179:V1,180:x1,316:w1,320:R1,321:M1,322:_1,323:P1}),e(ln,[2,384],{114:628,331:640,115:N1,116:O1,123:k1,133:L1,136:I1,138:D1,141:y1,142:F1,179:V1,180:x1,316:w1,318:[1,1160],320:R1,321:M1,322:_1,323:P1}),e(ln,[2,386],{114:628,331:640,115:N1,116:O1,123:k1,133:L1,136:I1,138:D1,141:y1,142:F1,179:V1,180:x1,316:w1,318:[1,1161],320:R1,321:M1,322:_1,323:P1}),e(t2,[2,388],{114:628,331:640}),e(q3,[2,389],{114:628,331:640,115:N1,116:O1,123:k1,133:L1,136:I1,138:D1,180:x1,316:w1,320:R1}),e(q3,[2,390],{114:628,331:640,115:N1,116:O1,123:k1,133:L1,136:I1,138:D1,180:x1,316:w1,320:R1}),e(_4,[2,391],{114:628,331:640,115:N1,116:O1,123:k1,136:I1,316:w1,320:R1}),e(_4,[2,392],{114:628,331:640,115:N1,116:O1,123:k1,136:I1,316:w1,320:R1}),e(_4,[2,393],{114:628,331:640,115:N1,116:O1,123:k1,136:I1,316:w1,320:R1}),e([2,4,5,10,53,72,74,76,77,78,89,93,95,98,99,107,112,118,122,123,124,128,129,130,131,132,133,134,135,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,179,180,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,232,239,244,245,246,247,249,251,270,271,284,285,286,287,288,289,290,291,293,300,304,310,312,313,314,315,317,318,319,321,322,323,324,325,326,327,328,329,330,334,335,336,337,339,342,343,400,404,405,408,410,412,413,421,422,424,428,438,440,441,443,444,445,446,447,451,452,455,456,468,474,509,511,512,521,606,767],[2,394],{114:628,331:640,115:N1,116:O1,136:I1,316:w1,320:R1}),e(t4,[2,395],{114:628,331:640,115:N1,116:O1,123:k1,133:L1,136:I1,138:D1,179:V1,180:x1,316:w1,320:R1,321:M1}),e(t4,[2,396],{114:628,331:640,115:N1,116:O1,123:k1,133:L1,136:I1,138:D1,179:V1,180:x1,316:w1,320:R1,321:M1}),e(t4,[2,397],{114:628,331:640,115:N1,116:O1,123:k1,133:L1,136:I1,138:D1,179:V1,180:x1,316:w1,320:R1,321:M1}),e(t4,[2,398],{114:628,331:640,115:N1,116:O1,123:k1,133:L1,136:I1,138:D1,179:V1,180:x1,316:w1,320:R1,321:M1}),e(y4,[2,399],{77:Vt}),e(t2,[2,400]),{2:t,3:169,4:r,5:i,56:166,77:a1,94:1162,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},e(t2,[2,402]),e(y4,[2,403],{77:Vt}),e(t2,[2,404]),{2:t,3:169,4:r,5:i,56:166,77:a1,94:1163,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},e(t2,[2,406]),e(dt,[2,407],{114:628,331:640,112:H1,115:N1,116:O1,123:k1,133:L1,136:I1,138:D1,141:y1,142:F1,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,336:j1}),e(dt,[2,408],{114:628,331:640,112:H1,115:N1,116:O1,123:k1,133:L1,136:I1,138:D1,141:y1,142:F1,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,336:j1}),e(dt,[2,409],{114:628,331:640,112:H1,115:N1,116:O1,123:k1,133:L1,136:I1,138:D1,141:y1,142:F1,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,336:j1}),e(dt,[2,410],{114:628,331:640,112:H1,115:N1,116:O1,123:k1,133:L1,136:I1,138:D1,141:y1,142:F1,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,336:j1}),e([2,4,5,10,53,72,89,99,124,139,140,146,154,156,170,171,189,270,271,293,310,314,324,325,326,327,328,329,330,334,335,337,339,342,343,400,404,405,408,410,412,413,421,422,438,440,441,443,444,445,446,447,451,452,455,456,509,511,512,521,606,767],cn,{114:628,331:640,112:H1,115:N1,116:O1,123:k1,133:L1,136:I1,138:D1,141:y1,142:F1,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,336:j1}),e(dt,[2,412],{114:628,331:640,112:H1,115:N1,116:O1,123:k1,133:L1,136:I1,138:D1,141:y1,142:F1,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,336:j1}),e(dt,[2,413],{114:628,331:640,112:H1,115:N1,116:O1,123:k1,133:L1,136:I1,138:D1,141:y1,142:F1,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,336:j1}),e(dt,[2,414],{114:628,331:640,112:H1,115:N1,116:O1,123:k1,133:L1,136:I1,138:D1,141:y1,142:F1,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,336:j1}),e(dt,[2,415],{114:628,331:640,112:H1,115:N1,116:O1,123:k1,133:L1,136:I1,138:D1,141:y1,142:F1,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,336:j1}),e(dt,[2,416],{114:628,331:640,112:H1,115:N1,116:O1,123:k1,133:L1,136:I1,138:D1,141:y1,142:F1,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,336:j1}),{77:[1,1164]},{77:[2,451]},{77:[2,452]},{77:[2,453]},e(P4,[2,419],{114:628,331:640,99:q1,112:H1,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,336:j1}),e([2,4,5,10,53,72,74,76,77,78,89,93,95,98,107,118,122,128,129,130,131,132,134,135,137,143,145,146,148,149,150,152,156,162,164,166,168,169,171,172,173,175,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,232,239,244,245,246,247,249,251,270,271,284,285,286,287,288,289,290,291,293,300,304,310,312,313,314,318,337,339,342,343,400,404,405,408,410,412,413,421,422,424,428,438,440,441,443,444,445,446,447,451,452,455,456,468,474,509,511,512,521,606,767],[2,420],{114:628,331:640,99:q1,112:H1,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,334:n2,335:i2,336:j1}),{2:t,3:169,4:r,5:i,40:1165,56:166,77:a1,78:[1,1167],79:75,89:h,94:262,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,151:1166,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,184:99,189:c,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},e(t2,[2,433]),e(t2,[2,435]),e(t2,[2,442]),e(t2,[2,443]),{2:t,3:670,4:r,5:i,77:[1,1168]},{2:t,3:698,4:r,5:i,77:[1,1169],111:938,145:Kr,156:_,200:939,202:1171,293:H,294:P,295:G,296:B,297:J,333:1170},e(t2,[2,440]),e(P4,[2,437],{114:628,331:640,99:q1,112:H1,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,336:j1}),e(P4,[2,438],{114:628,331:640,99:q1,112:H1,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,336:j1}),e([2,4,5,10,53,72,74,76,77,78,89,93,95,98,99,107,118,122,124,128,129,130,131,132,134,135,137,139,140,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,232,239,244,245,246,247,249,251,270,271,284,285,286,287,288,289,290,291,293,300,304,310,312,313,314,318,324,325,326,327,328,329,330,334,335,336,337,339,342,343,400,404,405,408,410,412,413,421,422,424,428,438,440,441,443,444,445,446,447,451,452,455,456,468,474,509,511,512,521,606,767],[2,439],{114:628,331:640,112:H1,115:N1,116:O1,123:k1,133:L1,136:I1,138:D1,141:y1,142:F1,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1}),e(t2,[2,441]),e(t2,[2,309]),e(t2,[2,310]),e(t2,[2,311]),e(t2,[2,426]),{74:He,78:[1,1172]},{2:t,3:169,4:r,5:i,56:166,77:a1,94:1173,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:1174,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},e(t2,hn),e(G4,[2,289]),e(t2,[2,285]),{78:[1,1176],99:q1,112:H1,114:628,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,331:640,334:n2,335:i2,336:j1,337:s2},{78:[1,1177]},{309:1178,310:Zr,311:961,312:K3,314:qr},{310:[1,1179]},e(U4,[2,376]),{2:t,3:169,4:r,5:i,56:166,77:a1,94:1180,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{99:q1,112:H1,114:628,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,313:[1,1181],315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,331:640,334:n2,335:i2,336:j1,337:s2},{76:[1,1182],99:q1,112:H1,114:628,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,331:640,334:n2,335:i2,336:j1,337:s2},{74:[1,1183]},e(ze,[2,645]),{2:t,3:698,4:r,5:i,77:m3,111:693,113:691,131:j,132:F,143:k,144:688,145:_2,152:L,156:_,181:D,196:690,200:696,201:695,261:692,262:694,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,304:[1,1184],306:x,423:191,424:w,426:1185,427:689,428:I},{78:[1,1186],99:q1,112:H1,114:628,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,331:640,334:n2,335:i2,336:j1,337:s2},{2:t,3:1187,4:r,5:i,149:zr},e(t2,[2,369]),e(ze,[2,642]),{2:t,3:707,4:r,5:i,131:Ir,132:wr,430:[1,1188],432:1189},{2:t,3:698,4:r,5:i,77:m3,111:693,113:691,131:j,132:F,143:k,144:688,145:_2,152:L,156:_,181:D,196:690,200:696,201:695,261:692,262:694,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,306:x,423:191,424:w,426:1190,427:689,428:I},{2:t,3:698,4:r,5:i,77:m3,111:693,113:691,131:j,132:F,143:k,144:688,145:_2,152:L,156:_,181:D,196:690,200:696,201:695,261:692,262:694,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,306:x,423:191,424:w,426:1191,427:689,428:I},{2:t,3:698,4:r,5:i,77:m3,111:693,113:691,131:j,132:F,143:k,144:688,145:_2,152:L,156:_,181:D,196:690,200:696,201:695,261:692,262:694,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,306:x,423:191,424:w,426:1192,427:689,428:I},{77:At,143:k,144:983,145:_2,152:L,181:D,201:984,306:x,346:1193,423:191,424:w,428:I},e(H2,[2,463],{74:pt}),{149:S3,345:1195,348:T3},{2:t,3:169,4:r,5:i,56:166,77:a1,94:1199,100:1196,111:1198,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,349:1197,423:191,424:w,428:I},e(H2,[2,471]),e(dn,[2,474]),e(dn,[2,475]),e(t3,[2,479]),e(t3,[2,480]),{2:t,3:246,4:r,5:i,199:1200},{77:At,143:k,144:983,145:_2,152:L,181:D,201:984,306:x,346:1201,423:191,424:w,428:I},e(H2,[2,467],{74:pt}),{2:t,3:169,4:r,5:i,56:166,77:a1,94:1199,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,349:1197,423:191,424:w,428:I},{312:pn,460:1202,462:1203,463:1204},{2:t,3:169,4:r,5:i,56:166,77:a1,94:1206,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{230:[2,702]},e(U2,[2,181],{3:1207,2:t,4:r,5:i,76:[1,1208]}),e(U2,[2,182]),e(U2,[2,1099]),e(U2,[2,184]),e(U2,[2,186]),e(U2,[2,188]),e(U2,[2,192]),e(U2,[2,196]),e(U2,[2,199]),e([2,4,5,10,53,72,74,76,77,78,89,93,95,98,118,124,128,143,145,146,148,149,152,154,156,162,168,169,181,183,187,189,206,208,222,223,224,225,226,227,228,229,230,231,232,249,251,270,271,293,301,306,310,314,339,342,343,347,348,360,372,373,377,378,400,404,405,406,407,408,410,412,413,421,422,424,428,438,440,441,443,444,445,446,447,451,452,455,456,509,511,512,518,519,520,521,606,767],[2,201]),{2:t,3:1209,4:r,5:i},e(bt,[2,1050],{83:1210,92:1211,93:[1,1212],98:[1,1213]}),{2:t,3:221,4:r,5:i,77:[1,1215],132:Wt,143:k,144:214,145:i1,152:L,156:_,181:D,199:215,200:217,201:216,202:219,203:1214,209:1216,213:Xt,214:220,293:H,294:P,295:G,296:B,297:J,306:x,423:191,424:w,428:I},e(Kt,[2,164]),e(Kt,[2,165]),e(Kt,[2,166]),e(Kt,[2,167]),e(Kt,[2,168]),{2:t,3:670,4:r,5:i},e(R4,[2,83],{74:[1,1217]}),e(r4,[2,85]),e(r4,[2,86]),{113:1218,132:F,300:U},e([10,72,74,78,93,98,118,124,128,162,168,169,183,198,206,208,222,223,224,225,226,227,228,229,232,249,251,310,314,606,767],w4,{116:en}),e(Ze,[2,73]),e(Ze,[2,1055]),{2:t,3:169,4:r,5:i,56:166,77:a1,94:1219,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},e(p2,[2,126]),e(p2,[2,144]),e(p2,[2,145]),e(p2,[2,146]),{2:t,3:169,4:r,5:i,56:166,77:a1,78:[2,1070],94:262,111:150,113:154,127:1220,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,151:1221,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{77:[1,1222]},e(p2,[2,94]),e([2,4,5,10,72,74,76,77,78,118,122,124,128,129,130,131,132,134,135,137,139,140,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,181,183,185,187,198,244,245,284,285,286,287,288,289,290,291,310,314,424,428,606,767],[2,96],{114:628,331:640,99:q1,112:H1,115:N1,116:O1,123:k1,133:L1,136:I1,138:D1,141:y1,142:F1,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,334:n2,335:i2,336:j1,337:s2}),e([2,4,5,10,72,74,76,77,78,112,118,122,124,128,129,130,131,132,134,135,137,139,140,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,181,183,185,187,198,244,245,284,285,286,287,288,289,290,291,310,314,424,428,606,767],[2,97],{114:628,331:640,99:q1,115:N1,116:O1,123:k1,133:L1,136:I1,138:D1,141:y1,142:F1,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,334:n2,335:i2,336:j1,337:s2}),{2:t,3:736,4:r,5:i,72:$2,76:ee,77:te,78:[1,1223],112:re,114:739,115:N1,116:O1,117:1224,118:ne,122:ie,123:ae,124:se,128:oe,129:fe,130:ue,131:le,132:ce,133:he,134:de,135:pe,136:be,137:Ee,138:ge,139:me,140:ve,141:Se,142:Te,143:Ae,144:761,145:Ne,146:Oe,148:Ce,149:Re,150:Ie,152:we,154:ke,156:Le,158:771,160:772,162:De,164:xe,166:Ve,168:Me,169:Ue,170:ye,171:Fe,172:_e,173:Pe,175:Ge,185:Be,187:Je,244:Y,245:W,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,423:191,424:w,428:I},e(Q2,[2,1066],{153:1019,179:je,180:Ye,181:We}),{2:t,3:736,4:r,5:i,72:$2,76:ee,77:te,112:re,114:739,115:N1,116:O1,117:1226,118:ne,122:ie,123:ae,124:se,126:1225,128:oe,129:fe,130:ue,131:le,132:ce,133:he,134:de,135:pe,136:be,137:Ee,138:ge,139:me,140:ve,141:Se,142:Te,143:Ae,144:761,145:Ne,146:Oe,148:Ce,149:Re,150:Ie,152:we,154:ke,156:Le,158:771,160:772,162:De,164:xe,166:Ve,168:Me,169:Ue,170:ye,171:Fe,172:_e,173:Pe,175:Ge,185:Be,187:Je,244:Y,245:W,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:1227,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:1228,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:1229,4:r,5:i},e(p2,[2,110]),e(p2,[2,111]),e(p2,[2,112]),e(p2,[2,119]),{2:t,3:1230,4:r,5:i},{2:t,3:1015,4:r,5:i,111:1069,143:A3,145:N3,147:1231,340:1068,341:1070},{2:t,3:1232,4:r,5:i},{2:t,3:169,4:r,5:i,56:166,77:a1,94:262,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,151:1233,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},e(p2,[2,125]),e(Q2,[2,1072],{155:1234}),e(Q2,[2,1074],{157:1235}),e(Q2,[2,1076],{159:1236}),e(Q2,[2,1080],{161:1237}),e(Ot,r3,{163:1238,178:1239}),{77:[1,1240]},e(Q2,[2,1082],{165:1241}),e(Q2,[2,1084],{167:1242}),e(Ot,r3,{178:1239,163:1243}),e(Ot,r3,{178:1239,163:1244}),e(Ot,r3,{178:1239,163:1245}),e(Ot,r3,{178:1239,163:1246}),{2:t,3:736,4:r,5:i,72:$2,76:ee,77:te,112:re,114:739,115:N1,116:O1,117:1247,118:ne,122:ie,123:ae,124:se,128:oe,129:fe,130:ue,131:le,132:ce,133:he,134:de,135:pe,136:be,137:Ee,138:ge,139:me,140:ve,141:Se,142:Te,143:Ae,144:761,145:Ne,146:Oe,148:Ce,149:Re,150:Ie,152:we,154:ke,156:Le,158:771,160:772,162:De,164:xe,166:Ve,168:Me,169:Ue,170:ye,171:Fe,172:_e,173:Pe,175:Ge,185:Be,187:Je,244:Y,245:W,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:820,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,174:1248,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,257:819,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},e(bn,[2,1086],{176:1249}),e(M,[2,611],{183:[1,1250]}),e(M,[2,607],{183:[1,1251]}),e(M,[2,600]),{113:1252,132:F,300:U},e(M,[2,609],{183:[1,1253]}),e(M,[2,604]),e(M,[2,605],{112:[1,1254]}),e(L4,[2,69]),{40:1255,79:75,89:h,184:99,189:c},e(M,[2,455],{74:n4,128:[1,1256]}),e(i4,[2,456]),{124:[1,1258]},{2:t,3:1259,4:r,5:i},e(q2,[2,1120]),e(q2,[2,1121]),e(M,[2,623]),e(Ur,[2,360],{114:628,331:640,99:q1,112:H1,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,334:n2,335:i2,336:j1,337:s2}),e(dt,cn,{114:628,331:640,112:H1,115:N1,116:O1,123:k1,133:L1,136:I1,138:D1,141:y1,142:F1,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,336:j1}),e(Qe,[2,687]),e(Qe,[2,689]),e(M,[2,655]),e(M,[2,657],{114:628,331:640,99:q1,112:H1,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,334:n2,335:i2,336:j1,337:s2}),{2:t,3:169,4:r,5:i,56:166,77:a1,94:1260,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:1083,4:r,5:i,77:rn,131:nn,436:1261},e(O3,[2,664]),e(O3,[2,665]),e(O3,[2,666]),{2:t,3:169,4:r,5:i,56:166,77:a1,94:1262,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:1263,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{114:1081,115:N1,116:O1,124:[1,1264]},e(R2,[2,760]),e(Qt,[2,148],{74:$t}),e(Qt,[2,149],{74:$t}),e(Qt,[2,150],{74:$t}),{2:t,3:169,4:r,5:i,56:166,77:a1,94:820,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,257:1265,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:1266,4:r,5:i,113:1268,131:[1,1267],132:F,300:U},e(Nt,[2,278]),e(Nt,[2,280]),e(Nt,[2,282]),e(g3,[2,160]),e(g3,[2,1095]),{78:[1,1269]},e(Tr,[2,763]),{2:t,3:1270,4:r,5:i},{2:t,3:1271,4:r,5:i},{2:t,3:1273,4:r,5:i,388:1272},{2:t,3:1273,4:r,5:i,388:1274},{2:t,3:1275,4:r,5:i},{2:t,3:169,4:r,5:i,56:166,77:a1,94:262,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,151:1276,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:1277,4:r,5:i},{74:He,78:[1,1278]},e(G2,[2,351]),e(G2,[2,352]),{2:t,3:169,4:r,5:i,56:166,77:a1,94:1279,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:1280,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:1281,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:1282,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:1283,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},e(Q3,[2,509]),e(M,B4,{411:1284,76:J4,77:[1,1285]}),e(M,B4,{411:1287,76:J4}),{77:[1,1288]},{2:t,3:246,4:r,5:i,199:1289},e(R2,[2,736]),e(R2,[2,738]),e(R2,[2,1151]),{143:vt,145:St,435:1290},e(En,[2,1152],{423:191,483:1291,144:1292,145:_2,424:w,428:I}),{76:F4,139:[2,1156],485:1293,487:1294},e([10,74,76,78,132,139,145,152,310,314,424,428,606,767],Gr,{494:855,497:856,137:Tt}),e(R2,[2,741]),e(R2,x4),{74:_r,78:[1,1295]},e(ot,[2,1170],{496:1296,501:1297,152:ct}),e(Z3,[2,1169]),e(ot,[2,750]),e(ot,[2,1175]),e(M,[2,495],{77:[1,1298]}),{76:[1,1300],77:[1,1299]},{99:q1,112:H1,114:628,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,148:[1,1301],154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,331:640,334:n2,335:i2,336:j1,337:s2},e(H2,gn,{79:75,184:99,472:1302,40:1305,89:h,146:mn,189:c,474:vn}),e(an,[2,1145]),e(V4,[2,728]),{230:[1,1306]},e(H4,[2,774]),e(H4,[2,775]),e(H4,[2,776]),e(zt,Jr,{514:1307,95:Hr,518:jr,519:Yr,520:Wr}),e(zt,[2,773]),e(M,[2,315]),e(M,[2,316]),{2:t,3:169,4:r,5:i,56:166,77:a1,94:1308,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},e(Qe,[2,695],{124:[1,1309]}),e(e3,[2,546]),{131:[1,1311],392:1310,394:[1,1312]},e(e3,[2,5]),{2:t,3:169,4:r,5:i,56:166,77:a1,94:1199,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,349:1313,423:191,424:w,428:I},e(M,[2,460],{114:628,331:640,99:q1,112:H1,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,334:n2,335:i2,336:j1,337:s2}),e(M,[2,594]),e(M,[2,595]),{2:t,3:246,4:r,5:i,199:1314},e(M,[2,675]),{2:t,3:169,4:r,5:i,56:166,77:a1,94:1315,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:1316,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{78:[1,1317],99:q1,112:H1,114:628,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,331:640,334:n2,335:i2,336:j1,337:s2},{78:[1,1318],99:q1,112:H1,114:628,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,331:640,334:n2,335:i2,336:j1,337:s2},{2:t,3:169,4:r,5:i,40:1319,56:166,77:a1,79:75,89:h,94:262,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,151:1320,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,184:99,189:c,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{78:[1,1321]},{74:He,78:[1,1322]},e(t2,[2,431]),{2:t,3:169,4:r,5:i,56:166,77:a1,94:1323,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,40:1324,56:166,77:a1,78:[1,1326],79:75,89:h,94:262,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,151:1325,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,184:99,189:c,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},e(t2,[2,434]),e(t2,[2,436]),e(t2,j4,{279:1327,280:Y4}),{78:[1,1329],99:q1,112:H1,114:628,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,331:640,334:n2,335:i2,336:j1,337:s2},{78:[1,1330],99:q1,112:H1,114:628,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,331:640,334:n2,335:i2,336:j1,337:s2},{2:t,3:1331,4:r,5:i,180:[1,1332]},e(ze,[2,624]),e(t2,[2,368]),{310:[1,1333]},e(t2,[2,375]),{99:q1,112:H1,114:628,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,310:[2,379],315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,331:640,334:n2,335:i2,336:j1,337:s2},{2:t,3:169,4:r,5:i,56:166,77:a1,94:1334,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{4:Zt,7:883,276:1335,391:882,393:qt},{2:t,3:169,4:r,5:i,56:166,77:a1,94:1336,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},e(ze,[2,646]),e($r,[2,653]),e(ht,[2,641]),e(G4,hn),e(ze,[2,643]),e(v3,[2,648]),e(v3,[2,650]),e(v3,[2,651]),e(v3,[2,652]),e(H2,[2,462],{74:pt}),{77:[1,1338],143:k,144:1339,145:_2,152:L,181:D,201:1340,306:x,423:191,424:w,428:I},e(H2,[2,468]),{74:Ct,78:[1,1341]},{74:W4,78:[1,1343]},e([74,78,99,112,115,116,123,124,133,136,138,139,140,141,142,154,170,171,179,180,315,316,317,319,320,321,322,323,324,325,326,327,328,329,330,334,335,336,337],Sn),e(Y2,[2,484],{114:628,331:640,99:q1,112:H1,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,334:n2,335:i2,336:j1,337:s2}),{40:1347,77:At,79:75,89:h,143:k,144:983,145:_2,149:S3,152:L,181:D,184:99,189:c,201:984,306:x,345:1345,346:1346,348:T3,423:191,424:w,428:I},e(H2,[2,466],{74:pt}),e(M,[2,722],{461:1348,462:1349,463:1350,312:pn,468:[1,1351]}),e(W2,[2,706]),e(W2,[2,707]),{154:[1,1353],464:[1,1352]},{99:q1,112:H1,114:628,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,312:[2,703],315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,331:640,334:n2,335:i2,336:j1,337:s2},e(U2,[2,179]),{2:t,3:1354,4:r,5:i},e(M,[2,579]),e(Tn,[2,238],{84:1355,128:[1,1356]}),e(bt,[2,1051]),{77:[1,1357]},{77:[1,1358]},e($3,[2,169],{204:1359,215:1361,205:1362,216:1363,221:1366,74:An,206:a4,208:s4,222:o4,223:C3,224:R3,225:I3,226:w3,227:k3,228:L3,229:D3}),{2:t,3:221,4:r,5:i,40:714,77:E3,79:75,89:h,132:Wt,143:k,144:214,145:i1,152:L,156:_,181:D,184:99,189:c,199:215,200:217,201:216,202:219,203:1375,209:1216,213:Xt,214:220,293:H,294:P,295:G,296:B,297:J,306:x,423:191,424:w,428:I},e(f4,[2,177]),{2:t,3:1015,4:r,5:i,110:1376,111:1013,112:tn},e(r4,[2,87]),e(Ze,[2,147],{114:628,331:640,99:q1,112:H1,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,334:n2,335:i2,336:j1,337:s2}),{78:[1,1377]},{74:He,78:[2,1071]},{2:t,3:169,4:r,5:i,56:166,77:a1,78:[2,1064],94:1382,111:150,113:154,120:1378,121:1379,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,241:1380,244:Y,245:W,246:[1,1381],258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},e(p2,[2,98]),e(Q2,[2,1067],{153:1019,179:je,180:Ye,181:We}),{2:t,3:736,4:r,5:i,72:$2,76:ee,77:te,78:[1,1383],112:re,114:739,115:N1,116:O1,117:1384,118:ne,122:ie,123:ae,124:se,128:oe,129:fe,130:ue,131:le,132:ce,133:he,134:de,135:pe,136:be,137:Ee,138:ge,139:me,140:ve,141:Se,142:Te,143:Ae,144:761,145:Ne,146:Oe,148:Ce,149:Re,150:Ie,152:we,154:ke,156:Le,158:771,160:772,162:De,164:xe,166:Ve,168:Me,169:Ue,170:ye,171:Fe,172:_e,173:Pe,175:Ge,185:Be,187:Je,244:Y,245:W,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,423:191,424:w,428:I},e(Q2,[2,1068],{153:1019,179:je,180:Ye,181:We}),{78:[1,1385],99:q1,112:H1,114:628,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,331:640,334:n2,335:i2,336:j1,337:s2},{78:[1,1386],99:q1,112:H1,114:628,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,331:640,334:n2,335:i2,336:j1,337:s2},{78:[1,1387]},e(p2,[2,120]),{74:n4,78:[1,1388]},e(p2,[2,122]),{74:He,78:[1,1389]},{2:t,3:736,4:r,5:i,72:$2,76:ee,77:te,78:[1,1390],112:re,114:739,115:N1,116:O1,117:1391,118:ne,122:ie,123:ae,124:se,128:oe,129:fe,130:ue,131:le,132:ce,133:he,134:de,135:pe,136:be,137:Ee,138:ge,139:me,140:ve,141:Se,142:Te,143:Ae,144:761,145:Ne,146:Oe,148:Ce,149:Re,150:Ie,152:we,154:ke,156:Le,158:771,160:772,162:De,164:xe,166:Ve,168:Me,169:Ue,170:ye,171:Fe,172:_e,173:Pe,175:Ge,185:Be,187:Je,244:Y,245:W,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,423:191,424:w,428:I},{2:t,3:736,4:r,5:i,72:$2,76:ee,77:te,78:[1,1392],112:re,114:739,115:N1,116:O1,117:1393,118:ne,122:ie,123:ae,124:se,128:oe,129:fe,130:ue,131:le,132:ce,133:he,134:de,135:pe,136:be,137:Ee,138:ge,139:me,140:ve,141:Se,142:Te,143:Ae,144:761,145:Ne,146:Oe,148:Ce,149:Re,150:Ie,152:we,154:ke,156:Le,158:771,160:772,162:De,164:xe,166:Ve,168:Me,169:Ue,170:ye,171:Fe,172:_e,173:Pe,175:Ge,185:Be,187:Je,244:Y,245:W,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,423:191,424:w,428:I},{2:t,3:736,4:r,5:i,72:$2,76:ee,77:te,78:[1,1394],112:re,114:739,115:N1,116:O1,117:1395,118:ne,122:ie,123:ae,124:se,128:oe,129:fe,130:ue,131:le,132:ce,133:he,134:de,135:pe,136:be,137:Ee,138:ge,139:me,140:ve,141:Se,142:Te,143:Ae,144:761,145:Ne,146:Oe,148:Ce,149:Re,150:Ie,152:we,154:ke,156:Le,158:771,160:772,162:De,164:xe,166:Ve,168:Me,169:Ue,170:ye,171:Fe,172:_e,173:Pe,175:Ge,185:Be,187:Je,244:Y,245:W,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,423:191,424:w,428:I},{2:t,3:736,4:r,5:i,72:$2,76:ee,77:te,78:[1,1396],112:re,114:739,115:N1,116:O1,117:1397,118:ne,122:ie,123:ae,124:se,128:oe,129:fe,130:ue,131:le,132:ce,133:he,134:de,135:pe,136:be,137:Ee,138:ge,139:me,140:ve,141:Se,142:Te,143:Ae,144:761,145:Ne,146:Oe,148:Ce,149:Re,150:Ie,152:we,154:ke,156:Le,158:771,160:772,162:De,164:xe,166:Ve,168:Me,169:Ue,170:ye,171:Fe,172:_e,173:Pe,175:Ge,185:Be,187:Je,244:Y,245:W,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,423:191,424:w,428:I},{74:n3,78:[1,1398]},e(Y2,[2,143],{423:191,3:736,114:739,144:761,158:771,160:772,117:1400,2:t,4:r,5:i,72:$2,76:ee,77:te,112:re,115:N1,116:O1,118:ne,122:ie,123:ae,124:se,128:oe,129:fe,130:ue,131:le,132:ce,133:he,134:de,135:pe,136:be,137:Ee,138:ge,139:me,140:ve,141:Se,142:Te,143:Ae,145:Ne,146:Oe,148:Ce,149:Re,150:Ie,152:we,154:ke,156:Le,162:De,164:xe,166:Ve,168:Me,169:Ue,170:ye,171:Fe,172:_e,173:Pe,175:Ge,185:Be,187:Je,244:Y,245:W,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,424:w,428:I}),e(Ot,r3,{178:1239,163:1401}),{2:t,3:736,4:r,5:i,72:$2,76:ee,77:te,78:[1,1402],112:re,114:739,115:N1,116:O1,117:1403,118:ne,122:ie,123:ae,124:se,128:oe,129:fe,130:ue,131:le,132:ce,133:he,134:de,135:pe,136:be,137:Ee,138:ge,139:me,140:ve,141:Se,142:Te,143:Ae,144:761,145:Ne,146:Oe,148:Ce,149:Re,150:Ie,152:we,154:ke,156:Le,158:771,160:772,162:De,164:xe,166:Ve,168:Me,169:Ue,170:ye,171:Fe,172:_e,173:Pe,175:Ge,185:Be,187:Je,244:Y,245:W,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,423:191,424:w,428:I},{2:t,3:736,4:r,5:i,72:$2,76:ee,77:te,78:[1,1404],112:re,114:739,115:N1,116:O1,117:1405,118:ne,122:ie,123:ae,124:se,128:oe,129:fe,130:ue,131:le,132:ce,133:he,134:de,135:pe,136:be,137:Ee,138:ge,139:me,140:ve,141:Se,142:Te,143:Ae,144:761,145:Ne,146:Oe,148:Ce,149:Re,150:Ie,152:we,154:ke,156:Le,158:771,160:772,162:De,164:xe,166:Ve,168:Me,169:Ue,170:ye,171:Fe,172:_e,173:Pe,175:Ge,185:Be,187:Je,244:Y,245:W,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,423:191,424:w,428:I},{74:n3,78:[1,1406]},{74:n3,78:[1,1407]},{74:n3,78:[1,1408]},{74:n3,78:[1,1409]},{78:[1,1410],153:1019,179:je,180:Ye,181:We},{74:$t,78:[1,1411]},{2:t,3:736,4:r,5:i,72:$2,74:[1,1412],76:ee,77:te,112:re,114:739,115:N1,116:O1,117:1413,118:ne,122:ie,123:ae,124:se,128:oe,129:fe,130:ue,131:le,132:ce,133:he,134:de,135:pe,136:be,137:Ee,138:ge,139:me,140:ve,141:Se,142:Te,143:Ae,144:761,145:Ne,146:Oe,148:Ce,149:Re,150:Ie,152:we,154:ke,156:Le,158:771,160:772,162:De,164:xe,166:Ve,168:Me,169:Ue,170:ye,171:Fe,172:_e,173:Pe,175:Ge,185:Be,187:Je,244:Y,245:W,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,423:191,424:w,428:I},{2:t,3:1414,4:r,5:i},{2:t,3:1415,4:r,5:i},e(M,[2,602]),{2:t,3:1416,4:r,5:i},{113:1417,132:F,300:U},{78:[1,1418]},{2:t,3:169,4:r,5:i,56:166,77:a1,94:1419,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:1015,4:r,5:i,111:1069,143:A3,145:N3,340:1420,341:1070},{2:t,3:169,4:r,5:i,56:166,77:a1,94:1421,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{124:[1,1422]},e(M,[2,658],{114:628,331:640,99:q1,112:H1,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,334:n2,335:i2,336:j1,337:s2}),e(O3,[2,663]),{78:[1,1423],99:q1,112:H1,114:628,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,331:640,334:n2,335:i2,336:j1,337:s2},e(M,[2,659],{114:628,331:640,99:q1,112:H1,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,334:n2,335:i2,336:j1,337:s2}),{2:t,3:169,4:r,5:i,56:166,77:a1,94:1424,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},e(Nt,[2,275]),e(Nt,[2,277]),e(Nt,[2,279]),e(Nt,[2,281]),e(g3,[2,161]),e(M,[2,574]),{148:[1,1425]},e(M,[2,575]),e(R2,[2,541],{391:882,7:883,276:1426,4:Zt,390:[1,1427],393:qt}),e(M,[2,576]),e(M,[2,578]),{74:He,78:[1,1428]},e(M,[2,582]),e(G2,[2,349]),{74:[1,1429],99:q1,112:H1,114:628,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,331:640,334:n2,335:i2,336:j1,337:s2},{74:[1,1430],99:q1,112:H1,114:628,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,331:640,334:n2,335:i2,336:j1,337:s2},{74:[1,1431],99:q1,112:H1,114:628,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,331:640,334:n2,335:i2,336:j1,337:s2},{74:[1,1432],99:q1,112:H1,114:628,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,331:640,334:n2,335:i2,336:j1,337:s2},{74:[1,1433],99:q1,112:H1,114:628,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,331:640,334:n2,335:i2,336:j1,337:s2},e(M,[2,586]),{2:t,3:169,4:r,5:i,56:166,77:a1,94:262,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,151:1434,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:1435,4:r,5:i},e(M,[2,588]),{2:t,3:169,4:r,5:i,56:166,77:a1,94:1382,111:150,113:154,120:1436,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,241:1380,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{77:[1,1437]},{2:t,3:1438,4:r,5:i},{76:F4,139:[2,1154],484:1439,487:1440},e(En,[2,1153]),{139:[1,1441]},{139:[2,1157]},e(R2,[2,742]),e(ot,[2,749]),e(ot,[2,1171]),{2:t,3:1273,4:r,5:i,76:[1,1444],355:1442,362:1443,388:1445},{2:t,3:1015,4:r,5:i,100:1446,111:1447},{40:1448,79:75,89:h,184:99,189:c},{2:t,3:169,4:r,5:i,56:166,77:a1,94:1449,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},e(H2,[2,727]),{2:t,3:1015,4:r,5:i,111:1069,143:A3,145:N3,147:1450,340:1068,341:1070},{2:t,3:169,4:r,5:i,56:166,77:a1,94:262,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,151:1451,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},e(H2,[2,732]),{2:t,3:246,4:r,5:i,199:1452},{339:sn,342:on,343:fn,515:1453},e(Qe,[2,696],{114:628,331:640,99:q1,112:H1,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,334:n2,335:i2,336:j1,337:s2}),{2:t,3:169,4:r,5:i,56:166,77:a1,94:1454,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{74:[1,1455],78:[1,1456]},e(Y2,[2,548]),e(Y2,[2,549]),{74:W4,78:[1,1457]},e(Qe,[2,570]),e(e4,[2,385],{114:628,331:640,115:N1,116:O1,123:k1,133:L1,136:I1,138:D1,141:y1,142:F1,179:V1,180:x1,316:w1,320:R1,321:M1,322:_1,323:P1}),e(e4,[2,387],{114:628,331:640,115:N1,116:O1,123:k1,133:L1,136:I1,138:D1,141:y1,142:F1,179:V1,180:x1,316:w1,320:R1,321:M1,322:_1,323:P1}),e(t2,[2,401]),e(t2,[2,405]),{78:[1,1458]},{74:He,78:[1,1459]},e(t2,[2,427]),e(t2,[2,429]),{78:[1,1460],99:q1,112:H1,114:628,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,331:640,334:n2,335:i2,336:j1,337:s2},{78:[1,1461]},{74:He,78:[1,1462]},e(t2,[2,432]),e(t2,[2,330]),{77:[1,1463]},e(t2,j4,{279:1464,280:Y4}),e(t2,j4,{279:1465,280:Y4}),e(G4,[2,287]),e(t2,[2,284]),e(t2,[2,374]),e(U4,[2,378],{114:628,331:640,99:q1,112:H1,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,334:n2,335:i2,336:j1,337:s2}),{74:[1,1467],78:[1,1466]},{74:[1,1469],78:[1,1468],99:q1,112:H1,114:628,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,331:640,334:n2,335:i2,336:j1,337:s2},{2:t,3:1331,4:r,5:i},{2:t,3:169,4:r,5:i,56:166,77:a1,94:1199,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,349:1470,423:191,424:w,428:I},e(t3,[2,482]),e(t3,[2,483]),{40:1473,77:At,79:75,89:h,143:k,144:983,145:_2,149:S3,152:L,181:D,184:99,189:c,201:984,306:x,345:1471,346:1472,348:T3,423:191,424:w,428:I},{2:t,3:1015,4:r,5:i,111:1474},e(t3,[2,478]),{2:t,3:169,4:r,5:i,56:166,77:a1,94:1475,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{77:At,143:k,144:983,145:_2,152:L,181:D,201:984,306:x,346:1476,423:191,424:w,428:I},e(H2,[2,465],{74:pt}),e(H2,[2,472]),e(M,[2,699]),e(W2,[2,704]),e(W2,[2,705]),{2:t,3:169,4:r,5:i,56:166,77:a1,94:820,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,174:1477,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,257:819,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{170:[1,1479],313:[1,1478]},{464:[1,1480]},e(U2,[2,180]),e(u4,[2,240],{85:1481,232:[1,1482]}),{2:t,3:169,4:r,5:i,56:166,77:a1,94:1483,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:1484,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:1485,4:r,5:i},e($3,[2,170],{216:1363,221:1366,215:1486,205:1487,206:a4,208:s4,222:o4,223:C3,224:R3,225:I3,226:w3,227:k3,228:L3,229:D3}),{2:t,3:221,4:r,5:i,77:E3,132:Wt,143:k,144:214,145:i1,152:L,156:_,181:D,199:215,200:217,201:216,202:219,209:1488,213:Xt,214:220,293:H,294:P,295:G,296:B,297:J,306:x,423:191,424:w,428:I},e(it,[2,205]),e(it,[2,206]),{2:t,3:221,4:r,5:i,77:[1,1493],143:k,144:1491,145:i1,152:L,156:_,181:D,199:1490,200:1494,201:1492,202:1495,217:1489,293:H,294:P,295:G,296:B,297:J,306:x,423:191,424:w,428:I},{207:[1,1496],223:Nn},{207:[1,1498],223:On},e(et,[2,222]),{206:[1,1502],208:[1,1501],221:1500,223:C3,224:R3,225:I3,226:w3,227:k3,228:L3,229:D3},e(et,[2,224]),{223:[1,1503]},{208:[1,1505],223:[1,1504]},{208:[1,1507],223:[1,1506]},{208:[1,1508]},{223:[1,1509]},{223:[1,1510]},{74:An,204:1511,205:1362,206:a4,208:s4,215:1361,216:1363,221:1366,222:o4,223:C3,224:R3,225:I3,226:w3,227:k3,228:L3,229:D3},e(r4,[2,84]),e(p2,[2,100]),{74:x3,78:[1,1512]},{78:[1,1514]},e(Rt,[2,261]),{78:[2,1065]},e(Rt,[2,265],{114:628,331:640,99:q1,112:H1,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,246:[1,1515],247:[1,1516],315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,334:n2,335:i2,336:j1,337:s2}),e(p2,[2,99]),e(Q2,[2,1069],{153:1019,179:je,180:Ye,181:We}),e(p2,[2,101]),e(p2,[2,102]),e(p2,[2,103]),e(p2,[2,121]),e(p2,[2,124]),e(p2,[2,127]),e(Q2,[2,1073],{153:1019,179:je,180:Ye,181:We}),e(p2,[2,128]),e(Q2,[2,1075],{153:1019,179:je,180:Ye,181:We}),e(p2,[2,129]),e(Q2,[2,1077],{153:1019,179:je,180:Ye,181:We}),e(p2,[2,130]),e(Q2,[2,1081],{153:1019,179:je,180:Ye,181:We}),e(p2,[2,131]),e(Ot,[2,1088],{177:1517}),e(Ot,[2,1091],{153:1019,179:je,180:Ye,181:We}),{74:n3,78:[1,1518]},e(p2,[2,133]),e(Q2,[2,1083],{153:1019,179:je,180:Ye,181:We}),e(p2,[2,134]),e(Q2,[2,1085],{153:1019,179:je,180:Ye,181:We}),e(p2,[2,135]),e(p2,[2,136]),e(p2,[2,137]),e(p2,[2,138]),e(p2,[2,139]),e(p2,[2,140]),{2:t,3:169,4:r,5:i,56:166,77:a1,94:262,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,151:1519,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},e(bn,[2,1087],{153:1019,179:je,180:Ye,181:We}),e(M,[2,612]),e(M,[2,608]),e(M,[2,610]),e(M,[2,606]),e(L4,[2,71]),e(M,[2,454],{114:628,331:640,99:q1,112:H1,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,334:n2,335:i2,336:j1,337:s2}),e(i4,[2,457]),e(i4,[2,458],{114:628,331:640,99:q1,112:H1,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,334:n2,335:i2,336:j1,337:s2}),{2:t,3:169,4:r,5:i,56:166,77:a1,94:1520,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},e(O3,[2,667]),e(M,[2,660],{114:628,331:640,99:q1,112:H1,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,334:n2,335:i2,336:j1,337:s2}),{2:t,3:1521,4:r,5:i},e(R2,[2,550],{389:1522,395:1523,396:1524,370:1532,154:Cn,187:Rn,230:In,301:wn,347:kn,360:Ln,372:X4,373:Dn,377:xn,378:Vn}),e(R2,[2,540]),e(M,[2,581],{76:[1,1536]}),{2:t,3:169,4:r,5:i,56:166,77:a1,94:1537,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:1538,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:1539,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:1540,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:1541,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{74:He,78:[1,1542]},e(M,[2,590]),{74:x3,78:[1,1543]},{2:t,3:169,4:r,5:i,56:166,77:a1,94:1382,111:150,113:154,120:1544,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,241:1380,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},e([10,74,78,139,310,314,606,767],[2,746]),{139:[1,1545]},{139:[2,1155]},{2:t,3:1127,4:r,5:i,132:Mt,137:Tt,143:vt,145:St,152:ct,435:588,479:1129,482:1546,486:585,497:582,501:584},{78:[1,1547]},{74:[1,1548],78:[2,511]},{40:1549,79:75,89:h,184:99,189:c},e(Y2,[2,537]),{74:Ct,78:[1,1550]},e(f4,Sn),e(M,[2,1138],{416:1551,417:1552,72:Mn}),e(H2,gn,{79:75,184:99,114:628,331:640,40:1305,472:1554,89:h,99:q1,112:H1,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,146:mn,154:r2,170:o2,171:f2,179:V1,180:x1,189:c,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,334:n2,335:i2,336:j1,337:s2,474:vn}),e(H2,[2,730],{74:n4}),e(H2,[2,731],{74:He}),e([10,53,72,89,124,146,156,189,270,271,293,310,314,339,342,343,400,404,405,408,410,412,413,421,422,438,440,441,443,444,445,446,447,451,452,455,456,509,511,512,521,606,767],[2,1186],{516:1555,3:1556,2:t,4:r,5:i,76:[1,1557]}),e(K4,[2,1188],{517:1558,76:[1,1559]}),e(Qe,[2,697],{114:628,331:640,99:q1,112:H1,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,334:n2,335:i2,336:j1,337:s2}),{131:[1,1560]},e(e3,[2,543]),e(e3,[2,545]),e(t2,[2,417]),e(t2,[2,418]),e(t2,[2,444]),e(t2,[2,428]),e(t2,[2,430]),{118:Un,281:1561,282:1562,283:[1,1563]},e(t2,[2,331]),e(t2,[2,332]),e(t2,[2,319]),{131:[1,1565]},e(t2,[2,321]),{131:[1,1566]},{74:W4,78:[1,1567]},{77:At,143:k,144:983,145:_2,152:L,181:D,201:984,306:x,346:1568,423:191,424:w,428:I},e(H2,[2,470],{74:pt}),e(H2,[2,473]),e(f4,[2,493]),e(Y2,[2,485],{114:628,331:640,99:q1,112:H1,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,334:n2,335:i2,336:j1,337:s2}),e(H2,[2,464],{74:pt}),e(M,[2,723],{74:$t,198:[1,1569]}),{339:Q4,342:z4,465:1570},{2:t,3:169,4:r,5:i,56:166,77:a1,94:1573,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{119:[1,1575],170:[1,1576],313:[1,1574]},e(yn,[2,259],{86:1577,118:[1,1578]}),{119:[1,1579]},e(Tn,[2,239],{114:628,331:640,99:q1,112:H1,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,334:n2,335:i2,336:j1,337:s2}),{95:[1,1580],99:q1,112:H1,114:628,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,331:640,334:n2,335:i2,336:j1,337:s2},{95:[1,1581]},e(it,[2,203]),e(it,[2,204]),e(f4,[2,178]),e(it,[2,237],{218:1582,230:[1,1583],231:[1,1584]}),e(z2,[2,208],{3:1585,2:t,4:r,5:i,76:[1,1586]}),e(Fn,[2,1100],{219:1587,76:[1,1588]}),{2:t,3:1589,4:r,5:i,76:[1,1590]},{40:1591,79:75,89:h,184:99,189:c},e(z2,[2,216],{3:1592,2:t,4:r,5:i,76:[1,1593]}),e(z2,[2,219],{3:1594,2:t,4:r,5:i,76:[1,1595]}),{77:[1,1596]},e(et,[2,234]),{77:[1,1597]},e(et,[2,230]),e(et,[2,223]),{223:On},{223:Nn},e(et,[2,225]),e(et,[2,226]),{223:[1,1598]},e(et,[2,228]),{223:[1,1599]},{223:[1,1600]},e(et,[2,232]),e(et,[2,233]),{78:[1,1601],205:1487,206:a4,208:s4,215:1486,216:1363,221:1366,222:o4,223:C3,224:R3,225:I3,226:w3,227:k3,228:L3,229:D3},e(p2,[2,91]),{2:t,3:169,4:r,5:i,56:166,77:a1,94:1382,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,241:1602,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},e(p2,[2,92]),e(Rt,[2,266],{242:1603,243:[1,1604]}),{248:[1,1605]},e(Y2,[2,142],{423:191,3:736,114:739,144:761,158:771,160:772,117:1606,2:t,4:r,5:i,72:$2,76:ee,77:te,112:re,115:N1,116:O1,118:ne,122:ie,123:ae,124:se,128:oe,129:fe,130:ue,131:le,132:ce,133:he,134:de,135:pe,136:be,137:Ee,138:ge,139:me,140:ve,141:Se,142:Te,143:Ae,145:Ne,146:Oe,148:Ce,149:Re,150:Ie,152:we,154:ke,156:Le,162:De,164:xe,166:Ve,168:Me,169:Ue,170:ye,171:Fe,172:_e,173:Pe,175:Ge,185:Be,187:Je,244:Y,245:W,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,424:w,428:I}),e(p2,[2,132]),{74:He,78:[1,1607]},e(i4,[2,459],{114:628,331:640,99:q1,112:H1,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,334:n2,335:i2,336:j1,337:s2}),e(M,[2,577]),e(R2,[2,539]),e(R2,[2,551],{370:1532,396:1608,154:Cn,187:Rn,230:In,301:wn,347:kn,360:Ln,372:X4,373:Dn,377:xn,378:Vn}),e(k2,[2,553]),{374:[1,1609]},{374:[1,1610]},{2:t,3:246,4:r,5:i,199:1611},e(k2,[2,559],{77:[1,1612]}),{2:t,3:114,4:r,5:i,77:[1,1614],113:253,131:j,132:F,143:k,152:L,156:_,181:D,196:252,200:1615,201:256,261:254,262:255,269:I4,278:1613,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,306:x},e(k2,[2,563]),{301:[1,1616]},e(k2,[2,565]),e(k2,[2,566]),{339:[1,1617]},{77:[1,1618]},{2:t,3:1619,4:r,5:i},{78:[1,1620],99:q1,112:H1,114:628,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,331:640,334:n2,335:i2,336:j1,337:s2},{78:[1,1621],99:q1,112:H1,114:628,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,331:640,334:n2,335:i2,336:j1,337:s2},{78:[1,1622],99:q1,112:H1,114:628,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,331:640,334:n2,335:i2,336:j1,337:s2},{78:[1,1623],99:q1,112:H1,114:628,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,331:640,334:n2,335:i2,336:j1,337:s2},{78:[1,1624],99:q1,112:H1,114:628,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,331:640,334:n2,335:i2,336:j1,337:s2},e(M,B4,{411:1625,76:J4}),e(M,[2,596]),{74:x3,78:[1,1626]},{2:t,3:1127,4:r,5:i,132:Mt,137:Tt,143:vt,145:St,152:ct,435:588,479:1129,482:1627,486:585,497:582,501:584},e(R2,[2,740]),e(M,[2,498],{356:1628,358:1629,359:1630,4:_n,247:Pn,347:Gn,360:Bn}),e(l4,Z4,{3:1273,363:1635,388:1636,364:1637,365:1638,2:t,4:r,5:i,371:q4}),{78:[2,512]},{76:[1,1640]},e(M,[2,614]),e(M,[2,1139]),{372:[1,1642],418:[1,1641]},e(H2,[2,733]),e(M,n,{17:5,18:7,19:8,20:9,21:10,22:11,23:12,24:13,25:14,26:15,27:16,28:17,29:18,30:19,31:20,32:21,33:22,34:23,35:24,36:25,37:26,38:27,39:28,40:29,41:30,42:31,43:32,44:33,45:34,46:35,47:36,48:37,49:38,50:39,51:40,52:41,54:43,55:44,56:45,57:46,58:47,59:48,60:49,61:50,62:51,63:52,64:53,65:54,66:55,67:56,68:57,69:58,70:59,71:60,79:75,508:95,184:99,3:100,12:1643,2:t,4:r,5:i,53:f,72:l,89:h,124:g,146:m,156:b,189:c,270:d,271:N,293:E,339:R,342:A,343:O,400:C,404:V,405:T1,408:C1,410:T,412:S1,413:A1,421:y,422:d2,438:E2,440:g2,441:A2,443:S2,444:c2,445:u2,446:v2,447:M2,451:J2,452:K2,455:j2,456:I2,509:C2,511:w2,512:N2,521:F2}),e(M,[2,767]),e(K4,[2,1187]),e(M,n,{17:5,18:7,19:8,20:9,21:10,22:11,23:12,24:13,25:14,26:15,27:16,28:17,29:18,30:19,31:20,32:21,33:22,34:23,35:24,36:25,37:26,38:27,39:28,40:29,41:30,42:31,43:32,44:33,45:34,46:35,47:36,48:37,49:38,50:39,51:40,52:41,54:43,55:44,56:45,57:46,58:47,59:48,60:49,61:50,62:51,63:52,64:53,65:54,66:55,67:56,68:57,69:58,70:59,71:60,79:75,508:95,184:99,3:100,12:1644,2:t,4:r,5:i,53:f,72:l,89:h,124:g,146:m,156:b,189:c,270:d,271:N,293:E,339:R,342:A,343:O,400:C,404:V,405:T1,408:C1,410:T,412:S1,413:A1,421:y,422:d2,438:E2,440:g2,441:A2,443:S2,444:c2,445:u2,446:v2,447:M2,451:J2,452:K2,455:j2,456:I2,509:C2,511:w2,512:N2,521:F2}),e(K4,[2,1189]),{78:[1,1645]},{78:[1,1646],118:Un,282:1647},{78:[1,1648]},{119:[1,1649]},{119:[1,1650]},{78:[1,1651]},{78:[1,1652]},e(t3,[2,481]),e(H2,[2,469],{74:pt}),{2:t,3:246,4:r,5:i,143:vt,145:St,199:1654,435:1653},e(W2,[2,708]),e(W2,[2,710]),{146:[1,1655]},{99:q1,112:H1,114:628,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,313:[1,1656],315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,331:640,334:n2,335:i2,336:j1,337:s2},{343:V3,466:1657},{421:[1,1660],467:[1,1659]},{2:t,3:169,4:r,5:i,56:166,77:a1,94:1661,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},e(_t,[2,270],{87:1662,249:[1,1663],251:[1,1664]}),{119:[1,1665]},{2:t,3:169,4:r,5:i,56:166,77:a1,94:1671,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,233:1666,235:1667,236:i3,237:a3,238:s3,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:1672,4:r,5:i},{2:t,3:1673,4:r,5:i},e(it,[2,207]),{2:t,3:169,4:r,5:i,56:166,77:a1,94:1674,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:1015,4:r,5:i,100:1675,111:1447},e(z2,[2,209]),{2:t,3:1676,4:r,5:i},e(z2,[2,1102],{220:1677,3:1678,2:t,4:r,5:i}),e(Fn,[2,1101]),e(z2,[2,212]),{2:t,3:1679,4:r,5:i},{78:[1,1680]},e(z2,[2,217]),{2:t,3:1681,4:r,5:i},e(z2,[2,220]),{2:t,3:1682,4:r,5:i},{40:1683,79:75,89:h,184:99,189:c},{40:1684,79:75,89:h,184:99,189:c},e(et,[2,227]),e(et,[2,229]),e(et,[2,231]),e($3,[2,171]),e(Rt,[2,262]),e(Rt,[2,267]),{244:[1,1685],245:[1,1686]},e(Rt,[2,268],{246:[1,1687]}),e(Ot,[2,1089],{153:1019,179:je,180:Ye,181:We}),e(p2,[2,141]),e(k2,[2,552]),e(k2,[2,555]),{378:[1,1688]},e(k2,[2,1132],{399:1689,397:1690,77:Jn}),{131:j,196:1692},e(k2,[2,560]),{2:t,3:169,4:r,5:i,56:166,77:a1,94:1693,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},e(k2,[2,562]),e(k2,[2,564]),{2:t,3:114,4:r,5:i,77:[1,1695],113:253,131:j,132:F,143:k,152:L,156:_,181:D,196:252,200:257,201:256,261:254,262:255,269:I4,278:1694,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,306:x},{2:t,3:169,4:r,5:i,56:166,77:a1,94:1696,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},e(M,[2,583]),e(G2,[2,353]),e(G2,[2,354]),e(G2,[2,355]),e(G2,[2,356]),e(G2,[2,357]),e(M,[2,587]),e(M,[2,597]),e(R2,[2,739]),e(M,[2,494]),e(M,[2,499],{359:1697,4:_n,247:Pn,347:Gn,360:Bn}),e(o3,[2,501]),e(o3,[2,502]),{124:[1,1698]},{124:[1,1699]},{124:[1,1700]},{74:[1,1701],78:[2,510]},e(Y2,[2,538]),e(Y2,[2,513]),{187:[1,1709],193:[1,1710],366:1702,367:1703,368:1704,369:1705,370:1706,372:X4,373:[1,1707],374:[1,1711],377:[1,1708]},{2:t,3:1712,4:r,5:i},{40:1713,79:75,89:h,184:99,189:c},{419:[1,1714]},{420:[1,1715]},e(M,[2,766]),e(M,[2,768]),e(e3,[2,542]),e(t2,[2,334]),{78:[1,1716]},e(t2,[2,335]),{2:t,3:169,4:r,5:i,56:166,77:a1,94:1671,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,233:1717,235:1667,236:i3,237:a3,238:s3,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:1382,111:150,113:154,120:1718,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,241:1380,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},e(t2,[2,320]),e(t2,[2,322]),{2:t,3:1719,4:r,5:i},e(M,[2,725],{77:[1,1720]}),{2:t,3:1015,4:r,5:i,111:1069,143:A3,145:N3,147:1721,340:1068,341:1070},{339:Q4,342:z4,465:1722},e(W2,[2,712]),{77:[1,1724],347:[1,1725],348:[1,1723]},{170:[1,1727],313:[1,1726]},{170:[1,1729],313:[1,1728]},{99:q1,112:H1,114:628,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,313:[1,1730],315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,331:640,334:n2,335:i2,336:j1,337:s2},e(Ze,[2,250],{88:1731,162:[1,1732],168:[1,1734],169:[1,1733]}),{131:j,196:1735},{131:j,196:1736},{2:t,3:169,4:r,5:i,56:166,77:a1,94:1382,111:150,113:154,120:1737,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,241:1380,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},e(u4,[2,248],{234:1738,74:M3,239:[1,1740]}),e(f3,[2,242]),{146:[1,1741]},{77:[1,1742]},{77:[1,1743]},e(f3,[2,247],{114:628,331:640,99:q1,112:H1,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,334:n2,335:i2,336:j1,337:s2}),{78:[2,1056],96:1744,99:[1,1746],102:1745},{99:[1,1747]},e(it,[2,235],{114:628,331:640,99:q1,112:H1,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,334:n2,335:i2,336:j1,337:s2}),e(it,[2,236],{74:Ct}),e(z2,[2,210]),e(z2,[2,211]),e(z2,[2,1103]),e(z2,[2,213]),{2:t,3:1748,4:r,5:i,76:[1,1749]},e(z2,[2,218]),e(z2,[2,221]),{78:[1,1750]},{78:[1,1751]},e(Rt,[2,263]),e(Rt,[2,264]),e(Rt,[2,269]),{2:t,3:246,4:r,5:i,199:1752},e(k2,[2,557]),e(k2,[2,1133]),{2:t,3:1753,4:r,5:i},{74:[1,1754]},{78:[1,1755],99:q1,112:H1,114:628,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,331:640,334:n2,335:i2,336:j1,337:s2},e(k2,[2,567]),{2:t,3:169,4:r,5:i,56:166,77:a1,94:1756,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{78:[1,1757],99:q1,112:H1,114:628,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,331:640,334:n2,335:i2,336:j1,337:s2},e(o3,[2,500]),{2:t,3:1758,4:r,5:i},{131:j,196:1759},{2:t,3:1760,4:r,5:i},e(l4,Z4,{365:1638,364:1761,371:q4}),e(R2,[2,515]),e(R2,[2,516]),e(R2,[2,517]),e(R2,[2,518]),e(R2,[2,519]),{374:[1,1762]},{374:[1,1763]},e(Hn,[2,1126],{386:1764,374:[1,1765]}),{2:t,3:1766,4:r,5:i},{2:t,3:1767,4:r,5:i},e(l4,[2,521]),e(M,[2,1136],{415:1768,417:1769,72:Mn}),e(M,[2,615]),e(M,[2,616],{371:[1,1770]}),e(t2,[2,336]),e([78,118],[2,337],{74:M3}),{74:x3,78:[2,338]},e(M,[2,724]),{2:t,3:1015,4:r,5:i,100:1771,111:1447},e(W2,[2,711],{74:n4}),e(W2,[2,709]),{77:At,143:k,144:983,145:_2,152:L,181:D,201:984,306:x,346:1772,423:191,424:w,428:I},{2:t,3:1015,4:r,5:i,100:1773,111:1447},{348:[1,1774]},{343:V3,466:1775},{2:t,3:169,4:r,5:i,56:166,77:a1,94:1776,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{343:V3,466:1777},{2:t,3:169,4:r,5:i,56:166,77:a1,94:1778,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{343:V3,466:1779},e(Ze,[2,72]),{40:1780,79:75,89:h,164:[1,1781],184:99,189:c,240:[1,1782]},{40:1783,79:75,89:h,184:99,189:c,240:[1,1784]},{40:1785,79:75,89:h,184:99,189:c,240:[1,1786]},e(_t,[2,273],{250:1787,251:[1,1788]}),{252:1789,253:[2,1104],769:[1,1790]},e(yn,[2,260],{74:x3}),e(u4,[2,241]),{2:t,3:169,4:r,5:i,56:166,77:a1,94:1671,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,235:1791,236:i3,237:a3,238:s3,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:1792,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{77:[1,1793]},{2:t,3:169,4:r,5:i,56:166,77:a1,94:1671,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,233:1794,235:1667,236:i3,237:a3,238:s3,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:169,4:r,5:i,56:166,77:a1,94:1671,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,233:1795,235:1667,236:i3,237:a3,238:s3,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{78:[1,1796]},{78:[2,1057]},{77:[1,1797]},{77:[1,1798]},e(z2,[2,214]),{2:t,3:1799,4:r,5:i},{2:t,3:1800,4:r,5:i,76:[1,1801]},{2:t,3:1802,4:r,5:i,76:[1,1803]},e(k2,[2,1130],{398:1804,397:1805,77:Jn}),{78:[1,1806]},{131:j,196:1807},e(k2,[2,561]),{78:[1,1808],99:q1,112:H1,114:628,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,331:640,334:n2,335:i2,336:j1,337:s2},e(k2,[2,522]),e(o3,[2,503]),e(o3,[2,504]),e(o3,[2,505]),e(Y2,[2,514]),{2:t,3:1810,4:r,5:i,77:[2,1122],375:1809},{77:[1,1811]},{2:t,3:1813,4:r,5:i,77:[2,1128],387:1812},e(Hn,[2,1127]),{77:[1,1814]},{77:[1,1815]},e(M,[2,613]),e(M,[2,1137]),e(l4,Z4,{365:1638,364:1816,371:q4}),{74:Ct,78:[1,1817]},e(W2,[2,718],{74:pt}),{74:Ct,78:[1,1818]},e(W2,[2,720]),e(W2,[2,713]),{99:q1,112:H1,114:628,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,313:[1,1819],315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,331:640,334:n2,335:i2,336:j1,337:s2},e(W2,[2,716]),{99:q1,112:H1,114:628,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,313:[1,1820],315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,331:640,334:n2,335:i2,336:j1,337:s2},e(W2,[2,714]),e(Ze,[2,251]),{40:1821,79:75,89:h,184:99,189:c,240:[1,1822]},{40:1823,79:75,89:h,184:99,189:c},e(Ze,[2,253]),{40:1824,79:75,89:h,184:99,189:c},e(Ze,[2,254]),{40:1825,79:75,89:h,184:99,189:c},e(_t,[2,271]),{131:j,196:1826},{253:[1,1827]},{253:[2,1105]},e(f3,[2,243]),e(u4,[2,249],{114:628,331:640,99:q1,112:H1,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,334:n2,335:i2,336:j1,337:s2}),{2:t,3:169,4:r,5:i,56:166,77:a1,94:1671,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,233:1828,235:1667,236:i3,237:a3,238:s3,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{74:M3,78:[1,1829]},{74:M3,78:[1,1830]},e(bt,[2,1058],{97:1831,104:1832,3:1834,2:t,4:r,5:i,76:jn}),{2:t,3:169,4:r,5:i,56:166,77:a1,94:1837,103:1835,105:1836,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:1015,4:r,5:i,100:1838,111:1447},e(z2,[2,215]),e(it,[2,173]),{2:t,3:1839,4:r,5:i},e(it,[2,175]),{2:t,3:1840,4:r,5:i},e(k2,[2,556]),e(k2,[2,1131]),e(k2,[2,554]),{78:[1,1841]},e(k2,[2,568]),{77:[1,1842]},{77:[2,1123]},{2:t,3:1844,4:r,5:i,132:$4,376:1843},{77:[1,1846]},{77:[2,1129]},{2:t,3:1015,4:r,5:i,100:1847,111:1447},{2:t,3:1015,4:r,5:i,100:1848,111:1447},e(M,[2,617]),e(M,[2,726]),{347:[1,1850],348:[1,1849]},{343:V3,466:1851},{339:Q4,342:z4,465:1852},e(Ze,[2,252]),{40:1853,79:75,89:h,184:99,189:c},e(Ze,[2,255]),e(Ze,[2,257]),e(Ze,[2,258]),e(_t,[2,274]),{131:[2,1106],254:1854,649:[1,1855]},{74:M3,78:[1,1856]},e(f3,[2,245]),e(f3,[2,246]),e(bt,[2,74]),e(bt,[2,1059]),{2:t,3:1857,4:r,5:i},e(bt,[2,78]),{74:[1,1859],78:[1,1858]},e(Y2,[2,80]),e(Y2,[2,81],{114:628,331:640,76:[1,1860],99:q1,112:H1,115:N1,116:O1,123:k1,124:a2,133:L1,136:I1,138:D1,139:$1,140:e2,141:y1,142:F1,154:r2,170:o2,171:f2,179:V1,180:x1,315:G1,316:w1,317:B1,319:J1,320:R1,321:M1,322:_1,323:P1,324:Y1,325:W1,326:X1,327:K1,328:Q1,329:z1,330:Z1,334:n2,335:i2,336:j1,337:s2}),{74:Ct,78:[1,1861]},e(it,[2,174]),e(it,[2,176]),e(k2,[2,558]),{2:t,3:1844,4:r,5:i,132:$4,376:1862},{74:er,78:[1,1863]},e(Y2,[2,533]),e(Y2,[2,534]),{2:t,3:1015,4:r,5:i,100:1865,111:1447},{74:Ct,78:[1,1866]},{74:Ct,78:[1,1867]},{77:At,143:k,144:983,145:_2,152:L,181:D,201:984,306:x,346:1868,423:191,424:w,428:I},{348:[1,1869]},e(W2,[2,715]),e(W2,[2,717]),e(Ze,[2,256]),{131:j,196:1870},{131:[2,1107]},e(f3,[2,244]),e(bt,[2,77]),{78:[2,76]},{2:t,3:169,4:r,5:i,56:166,77:a1,94:1837,105:1871,111:150,113:154,131:j,132:F,137:s1,143:k,144:162,145:i1,149:o1,152:L,154:f1,156:_,158:168,179:u1,180:l1,181:D,196:152,200:148,201:156,202:157,244:Y,245:W,258:151,259:147,260:149,261:153,262:155,263:158,264:159,265:160,266:163,267:164,269:c1,270:d,274:h1,275:d1,277:p1,284:X,285:K,286:Q,287:z,288:Z,289:q,290:$,291:e1,293:H,294:P,295:G,296:B,297:J,298:t1,299:r1,300:U,301:n1,302:b1,303:E1,306:x,307:g1,316:m1,321:v1,423:191,424:w,428:I},{2:t,3:1872,4:r,5:i},{78:[1,1873]},{74:er,78:[1,1874]},{378:[1,1875]},{2:t,3:1876,4:r,5:i,132:[1,1877]},{74:Ct,78:[1,1878]},e(R2,[2,531]),e(R2,[2,532]),e(W2,[2,719],{74:pt}),e(W2,[2,721]),e(Yn,[2,1108],{255:1879,769:[1,1880]}),e(Y2,[2,79]),e(Y2,[2,82]),e(bt,[2,1060],{3:1834,101:1881,104:1882,2:t,4:r,5:i,76:jn}),e(R2,[2,523]),{2:t,3:246,4:r,5:i,199:1883},e(Y2,[2,535]),e(Y2,[2,536]),e(R2,[2,530]),e(_t,[2,1110],{256:1884,419:[1,1885]}),e(Yn,[2,1109]),e(bt,[2,75]),e(bt,[2,1061]),e(tr,[2,1124],{379:1886,381:1887,77:[1,1888]}),e(_t,[2,272]),e(_t,[2,1111]),e(R2,[2,526],{380:1889,382:1890,230:[1,1891]}),e(tr,[2,1125]),{2:t,3:1844,4:r,5:i,132:$4,376:1892},e(R2,[2,524]),{230:[1,1894],383:1893},{342:[1,1895]},{74:er,78:[1,1896]},e(R2,[2,527]),{339:[1,1897]},{384:[1,1898]},e(tr,[2,525]),{384:[1,1899]},{385:[1,1900]},{385:[1,1901]},{230:[2,528]},e(R2,[2,529])],defaultActions:{105:[2,6],195:[2,339],196:[2,340],197:[2,341],198:[2,342],199:[2,343],200:[2,344],201:[2,345],202:[2,346],203:[2,347],204:[2,348],211:[2,700],594:[2,1147],656:[2,1112],657:[2,1113],713:[2,701],783:[2,1078],784:[2,1079],930:[2,451],931:[2,452],932:[2,453],991:[2,702],1294:[2,1157],1381:[2,1065],1440:[2,1155],1549:[2,512],1745:[2,1057],1790:[2,1105],1810:[2,1123],1813:[2,1129],1855:[2,1107],1858:[2,76],1900:[2,528]},parseError:function(l2,m2){if(m2.recoverable)this.trace(l2);else{var h2=Error(l2);throw h2.hash=m2,h2}},parse:function(l2){var m2=this,h2=[0],V2=[null],s=[],Lt=this.table,o="",It=0,y2=0,Xe=0,Pt=s.slice.call(arguments,1),x2=Object.create(this.lexer),ft={yy:{}};for(var Gt in this.yy)Object.prototype.hasOwnProperty.call(this.yy,Gt)&&(ft.yy[Gt]=this.yy[Gt]);x2.setInput(l2,ft.yy),ft.yy.lexer=x2,ft.yy.parser=this,typeof x2.yylloc>"u"&&(x2.yylloc={});var Dt=x2.yylloc;s.push(Dt);var Ri=x2.options&&x2.options.ranges;function Ii(qe){h2.length=h2.length-2*qe,V2.length=V2.length-qe,s.length=s.length-qe}"function"==typeof ft.yy.parseError?this.parseError=ft.yy.parseError:this.parseError=Object.getPrototypeOf(this).parseError;for(var B2,u3,at,rt,nr,h4,wt,Xn,d4,Wn=function(){var qe;return"number"!=typeof(qe=x2.lex()||1)&&(qe=m2.symbols_[qe]||qe),qe},l3={};;){if(at=h2[h2.length-1],this.defaultActions[at]?rt=this.defaultActions[at]:((null===B2||typeof B2>"u")&&(B2=Wn()),rt=Lt[at]&&Lt[at][B2]),typeof rt>"u"||!rt.length||!rt[0]){var U3,y3="",Kn=function(qe){for(var ir=h2.length-1,Qn=0;;){if("2"in Lt[qe])return Qn;if(0===qe||ir<2)return!1;ir-=2,qe=h2[ir],++Qn}};if(Xe)1!==u3&&(U3=Kn(at));else{for(h4 in U3=Kn(at),d4=[],Lt[at])this.terminals_[h4]&&h4>2&&d4.push("'"+this.terminals_[h4]+"'");y3=x2.showPosition?"Parse error on line "+(It+1)+`:
`+x2.showPosition()+`
Expecting `+d4.join(", ")+", got '"+(this.terminals_[B2]||B2)+"'":"Parse error on line "+(It+1)+": Unexpected "+(1==B2?"end of input":"'"+(this.terminals_[B2]||B2)+"'"),this.parseError(y3,{text:x2.match,token:this.terminals_[B2]||B2,line:x2.yylineno,loc:Dt,expected:d4,recoverable:!1!==U3})}if(3==Xe){if(1===B2||1===u3)throw Error(y3||"Parsing halted while starting to recover from another error.");y2=x2.yyleng,o=x2.yytext,It=x2.yylineno,Dt=x2.yylloc,B2=Wn()}if(!1===U3)throw Error(y3||"Parsing halted. No suitable error recovery rule available.");Ii(U3),u3=2==B2?null:B2,B2=2,rt=Lt[at=h2[h2.length-1]]&&Lt[at][2],Xe=3}if(rt[0]instanceof Array&&rt.length>1)throw Error("Parse Error: multiple actions possible at state: "+at+", token: "+B2);switch(rt[0]){case 1:h2.push(B2),V2.push(x2.yytext),s.push(x2.yylloc),h2.push(rt[1]),B2=null,u3?(B2=u3,u3=null):(y2=x2.yyleng,o=x2.yytext,It=x2.yylineno,Dt=x2.yylloc,Xe>0&&Xe--);break;case 2:if(wt=this.productions_[rt[1]][1],l3.$=V2[V2.length-wt],l3._$={first_line:s[s.length-(wt||1)].first_line,last_line:s[s.length-1].last_line,first_column:s[s.length-(wt||1)].first_column,last_column:s[s.length-1].last_column},Ri&&(l3._$.range=[s[s.length-(wt||1)].range[0],s[s.length-1].range[1]]),"u">typeof(nr=this.performAction.apply(l3,[o,y2,It,ft.yy,rt[1],V2,s].concat(Pt))))return nr;wt&&(h2=h2.slice(0,-1*wt*2),V2=V2.slice(0,-1*wt),s=s.slice(0,-1*wt)),h2.push(this.productions_[rt[1]][0]),V2.push(l3.$),s.push(l3._$),Xn=Lt[h2[h2.length-2]][h2[h2.length-1]],h2.push(Xn);break;case 3:return!0}}return!0}},Oi=["A","ABSENT","ABSOLUTE","ACCORDING","ACTION","ADA","ADD","ADMIN","AFTER","ALWAYS","ASC","ASSERTION","ASSIGNMENT","ATTRIBUTE","ATTRIBUTES","BASE64","BEFORE","BERNOULLI","BLOCKED","BOM","BREADTH","C","CASCADE","CATALOG","CATALOG_NAME","CHAIN","CHARACTERISTICS","CHARACTERS","CHARACTER_SET_CATALOG","CHARACTER_SET_NAME","CHARACTER_SET_SCHEMA","CLASS_ORIGIN","COBOL","COLLATION","COLLATION_CATALOG","COLLATION_NAME","COLLATION_SCHEMA","COLUMNS","COLUMN_NAME","COMMAND_FUNCTION","COMMAND_FUNCTION_CODE","COMMITTED","CONDITION_NUMBER","CONNECTION","CONNECTION_NAME","CONSTRAINTS","CONSTRAINT_CATALOG","CONSTRAINT_NAME","CONSTRAINT_SCHEMA","CONSTRUCTOR","CONTENT","CONTINUE","CONTROL","CURSOR_NAME","DATA","DATETIME_INTERVAL_CODE","DATETIME_INTERVAL_PRECISION","DB","DEFAULTS","DEFERRABLE","DEFERRED","DEFINED","DEFINER","DEGREE","DEPTH","DERIVED","DESC","DESCRIPTOR","DIAGNOSTICS","DISPATCH","DOCUMENT","DOMAIN","DYNAMIC_FUNCTION","DYNAMIC_FUNCTION_CODE","EMPTY","ENCODING","ENFORCED","EXCLUDE","EXCLUDING","EXPRESSION","FILE","FINAL","FIRST","FLAG","FOLLOWING","FORTRAN","FOUND","FS","G","GENERAL","GENERATED","GO","GOTO","GRANTED","HEX","HIERARCHY","ID","IGNORE","IMMEDIATE","IMMEDIATELY","IMPLEMENTATION","INCLUDING","INCREMENT","INDENT","INITIALLY","INPUT","INSTANCE","INSTANTIABLE","INSTEAD","INTEGRITY","INVOKER","ISOLATION","K","KEY","KEY_MEMBER","KEY_TYPE","LAST","LENGTH","LEVEL","LIBRARY","LIMIT","LINK","LOCATION","LOCATOR","M","MAP","MAPPING","MATCHED","MAXVALUE","MESSAGE_LENGTH","MESSAGE_OCTET_LENGTH","MESSAGE_TEXT","MINVALUE","MORE","MUMPS","NAME","NAMES","NAMESPACE","NESTING","NEXT","NFC","NFD","NFKC","NFKD","NIL","NORMALIZED","NULLABLE","NULLS","NUMBER","OBJECT","OCTETS","OFF","OPTION","OPTIONS","ORDERING","ORDINALITY","OTHERS","OUTPUT","OVERRIDING","P","PAD","PARAMETER_MODE","PARAMETER_NAME","PARAMETER_ORDINAL_POSITION","PARAMETER_SPECIFIC_CATALOG","PARAMETER_SPECIFIC_NAME","PARAMETER_SPECIFIC_SCHEMA","PARTIAL","PASCAL","PASSING","PASSTHROUGH","PATH","PERMISSION","PLACING","PLI","PRECEDING","PRESERVE","PRIOR","PRIVILEGES","PUBLIC","READ","RECOVERY","RELATIVE","REPEATABLE","REQUIRING","RESPECT","RESTART","RESTORE","RESTRICT","RETURNED_CARDINALITY","RETURNED_LENGTH","RETURNED_OCTET_LENGTH","RETURNED_SQLSTATE","RETURNING","ROLE","ROUTINE","ROUTINE_CATALOG","ROUTINE_NAME","ROUTINE_SCHEMA","ROW_COUNT","SCALE","SCHEMA","SCHEMA_NAME","SCOPE_CATALOG","SCOPE_NAME","SCOPE_SCHEMA","SECTION","SECURITY","SELECTIVE","SELF","SEQUENCE","SERIALIZABLE","SERVER","SERVER_NAME","SESSION","SETS","SIMPLE","SIZE","SOURCE","SPACE","SPECIFIC_NAME","STANDALONE","STATE","STATEMENT","STRIP","STRUCTURE","STYLE","SUBCLASS_ORIGIN","T","TABLE_NAME","TEMPORARY","TIES","TOKEN","TOP_LEVEL_COUNT","TRANSACTION","TRANSACTIONS_COMMITTED","TRANSACTIONS_ROLLED_BACK","TRANSACTION_ACTIVE","TRANSFORM","TRANSFORMS","TRIGGER_CATALOG","TRIGGER_NAME","TRIGGER_SCHEMA","TYPE","UNBOUNDED","UNCOMMITTED","UNDER","UNLINK","UNNAMED","UNTYPED","URI","USAGE","USER_DEFINED_TYPE_CATALOG","USER_DEFINED_TYPE_CODE","USER_DEFINED_TYPE_NAME","USER_DEFINED_TYPE_SCHEMA","VALID","VERSION","VIEW","WHITESPACE","WORK","WRAPPER","WRITE","XMLDECLARATION","XMLSCHEMA","YES","ZONE"];function rr(){this.yy={}}return c4.parseError=function(Et,l2){if(!(l2.expected&&l2.expected.indexOf("'LITERAL'")>-1&&/[a-zA-Z_][a-zA-Z_0-9]*/.test(l2.token)&&Oi.indexOf(l2.token)>-1))throw SyntaxError(Et)},c4.lexer={EOF:1,parseError:function(m2,h2){if(this.yy.parser)this.yy.parser.parseError(m2,h2);else throw Error(m2)},setInput:function(l2,m2){return this.yy=m2||this.yy||{},this._input=l2,this._more=this._backtrack=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match="",this.conditionStack=["INITIAL"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var l2=this._input[0];return this.yytext+=l2,this.yyleng++,this.offset++,this.match+=l2,this.matched+=l2,l2.match(/(?:\r\n?|\n).*/g)?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),l2},unput:function(l2){var m2=l2.length,h2=l2.split(/(?:\r\n?|\n)/g);this._input=l2+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-m2),this.offset-=m2;var p=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),h2.length-1&&(this.yylineno-=h2.length-1);var V2=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:h2?(h2.length===p.length?this.yylloc.first_column:0)+p[p.length-h2.length].length-h2[0].length:this.yylloc.first_column-m2},this.options.ranges&&(this.yylloc.range=[V2[0],V2[0]+this.yyleng-m2]),this.yyleng=this.yytext.length,this},more:function(){return this._more=!0,this},reject:function(){return this.options.backtrack_lexer?(this._backtrack=!0,this):this.parseError("Lexical error on line "+(this.yylineno+1)+`. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).
`+this.showPosition(),{text:"",token:null,line:this.yylineno})},less:function(l2){this.unput(this.match.slice(l2))},pastInput:function(){var l2=this.matched.substr(0,this.matched.length-this.match.length);return(l2.length>20?"...":"")+l2.substr(-20).replace(/\n/g,"")},upcomingInput:function(){var l2=this.match;return l2.length<20&&(l2+=this._input.substr(0,20-l2.length)),(l2.substr(0,20)+(l2.length>20?"...":"")).replace(/\n/g,"")},showPosition:function(){var l2=this.pastInput(),m2=Array(l2.length+1).join("-");return l2+this.upcomingInput()+`
`+m2+"^"},test_match:function(l2,m2){var h2,p,V2;if(this.options.backtrack_lexer&&(V2={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done},this.options.ranges&&(V2.yylloc.range=this.yylloc.range.slice(0))),(p=l2[0].match(/(?:\r\n?|\n).*/g))&&(this.yylineno+=p.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:p?p[p.length-1].length-p[p.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+l2[0].length},this.yytext+=l2[0],this.match+=l2[0],this.matches=l2,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._backtrack=!1,this._input=this._input.slice(l2[0].length),this.matched+=l2[0],h2=this.performAction.call(this,this.yy,this,m2,this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),h2)return h2;if(this._backtrack)for(var s in V2)this[s]=V2[s];return!1},next:function(){if(this.done)return this.EOF;this._input||(this.done=!0),this._more||(this.yytext="",this.match="");for(var l2,m2,h2,p,V2=this._currentRules(),s=0;s<V2.length;s++)if((h2=this._input.match(this.rules[V2[s]]))&&(!m2||h2[0].length>m2[0].length)){if(m2=h2,p=s,this.options.backtrack_lexer){if(!1!==(l2=this.test_match(h2,V2[s])))return l2;if(!this._backtrack)return!1;m2=!1;continue}if(!this.options.flex)break}return m2?!1!==(l2=this.test_match(m2,V2[p]))&&l2:""===this._input?this.EOF:this.parseError("Lexical error on line "+(this.yylineno+1)+`. Unrecognized text.
`+this.showPosition(),{text:"",token:null,line:this.yylineno})},lex:function(){return this.next()||this.lex()},begin:function(m2){this.conditionStack.push(m2)},popState:function(){return this.conditionStack.length-1>0?this.conditionStack.pop():this.conditionStack[0]},_currentRules:function(){return this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]?this.conditions[this.conditionStack[this.conditionStack.length-1]].rules:this.conditions.INITIAL.rules},topState:function(m2){return(m2=this.conditionStack.length-1-Math.abs(m2||0))>=0?this.conditionStack[m2]:"INITIAL"},pushState:function(m2){this.begin(m2)},stateStackSize:function(){return this.conditionStack.length},options:{"case-insensitive":!0},performAction:function(m2,h2,p,V2){switch(p){case 0:return 270;case 1:return 306;case 2:return 424;case 3:return 303;case 4:case 5:return 5;case 6:case 7:return 300;case 8:case 9:return 132;case 10:return;case 11:break;case 12:return 320;case 13:case 247:return 323;case 14:return h2.yytext="VALUE",89;case 15:return h2.yytext="VALUE",189;case 16:return h2.yytext="ROW",189;case 17:return h2.yytext="COLUMN",189;case 18:return h2.yytext="MATRIX",189;case 19:return h2.yytext="INDEX",189;case 20:return h2.yytext="RECORDSET",189;case 21:return h2.yytext="TEXT",189;case 22:return h2.yytext="SELECT",189;case 23:return 524;case 24:return 385;case 25:return 406;case 26:return 519;case 27:return 290;case 28:case 29:return 273;case 30:return 164;case 31:return 404;case 32:return 170;case 33:return 229;case 34:return 166;case 35:return 207;case 36:return 291;case 37:return 76;case 38:return 422;case 39:case 85:return 246;case 40:return 408;case 41:case 115:return 360;case 42:return 289;case 43:return 518;case 44:return 441;case 45:return 334;case 46:return 445;case 47:return 335;case 48:case 51:case 53:case 55:return 319;case 49:return 119;case 50:case 52:case 54:case 132:return 112;case 56:case 96:case 97:return 512;case 57:return 307;case 58:return 275;case 59:return 372;case 60:return 130;case 61:return"CLOSE";case 62:return 247;case 63:case 64:return 190;case 65:return 438;case 66:return 371;case 67:return 474;case 68:return 444;case 69:return 277;case 70:return 240;case 71:return 286;case 72:return 271;case 73:return 206;case 74:return 238;case 75:return 269;case 76:return"CURSOR";case 77:case 190:return 409;case 78:return 294;case 79:return 295;case 80:return 296;case 81:return 452;case 82:return 347;case 83:return 342;case 84:return"DELETED";case 86:return 410;case 87:return 185;case 88:return 400;case 89:return 451;case 90:return 135;case 91:return 310;case 92:return 393;case 93:return 314;case 94:return 318;case 95:case 140:return 169;case 98:return 302;case 99:return 14;case 100:return 299;case 101:return 253;case 102:return 244;case 103:return 95;case 104:return 377;case 105:return 183;case 106:return 227;case 107:return 272;case 108:return 317;case 109:return 606;case 110:return 476;case 111:return 232;case 112:return 236;case 113:return 239;case 114:return 156;case 116:return 336;case 117:return 99;case 118:return 193;case 119:return 212;case 120:return 224;case 121:return 520;case 122:return 343;case 123:return 213;case 124:return 168;case 125:return 297;case 126:return 198;case 127:return 223;case 128:return 374;case 129:return 245;case 130:return"LET";case 131:return 225;case 133:return 249;case 134:return 464;case 135:return 191;case 136:return 288;case 137:return 394;case 138:return 287;case 139:return 456;case 141:return 407;case 142:return 222;case 143:return 649;case 144:return 274;case 145:return 248;case 146:return 384;case 147:return 154;case 148:return 301;case 149:return 243;case 150:return 437;case 151:return 230;case 152:return 419;case 153:return 129;case 154:return 251;case 155:return"OPEN";case 156:return 420;case 157:return 171;case 158:return 118;case 159:return 208;case 160:return 280;case 161:return 172;case 162:return 283;case 163:return 768;case 164:return 93;case 165:return 16;case 166:return 373;case 167:return 446;case 168:return 681;case 169:return 15;case 170:return 418;case 171:return 194;case 172:return"REDUCE";case 173:return 378;case 174:return 315;case 175:return 521;case 176:return 685;case 177:return 107;case 178:return 405;case 179:return 175;case 180:return 293;case 181:return 447;case 182:return 690;case 183:case 184:return 173;case 185:return 226;case 186:return 440;case 187:return 237;case 188:return 150;case 189:return 769;case 191:return 89;case 192:return 228;case 193:case 194:return 146;case 195:return 413;case 196:return 338;case 197:return 421;case 198:return"STRATEGY";case 199:return"STORE";case 200:return 284;case 201:return 285;case 202:case 203:return 357;case 204:return 467;case 205:case 206:return 361;case 207:return 192;case 208:return 313;case 209:return"TIMEOUT";case 210:return 148;case 211:return 195;case 212:case 213:case 231:return 439;case 214:return 513;case 215:return 298;case 216:return 455;case 217:return 162;case 218:return 187;case 219:return 98;case 220:return 339;case 221:return 412;case 222:return 231;case 223:return 149;case 224:return 348;case 225:return 134;case 226:return 414;case 227:return 312;case 228:return 128;case 229:return 443;case 230:return 72;case 232:case 233:return 131;case 234:return 115;case 235:return 137;case 236:return 179;case 237:return 321;case 238:return 180;case 239:return 133;case 240:return 138;case 241:return 330;case 242:return 327;case 243:return 329;case 244:return 326;case 245:return 324;case 246:return 322;case 248:return 142;case 249:return 141;case 250:return 139;case 251:return 325;case 252:case 255:return 328;case 253:return 140;case 254:return 124;case 256:return 77;case 257:return 78;case 258:return 145;case 259:return 428;case 260:return 430;case 261:return 304;case 262:return 509;case 263:return 511;case 264:return 122;case 265:return 116;case 266:return 74;case 267:return 337;case 268:return 152;case 269:return 767;case 270:return 143;case 271:return 181;case 272:return 136;case 273:return 123;case 274:return 316;case 275:return 4;case 276:return 10;case 277:return"INVALID"}},rules:[/^(?:``([^\`])+``)/i,/^(?:\[\?\])/i,/^(?:@\[)/i,/^(?:ARRAY\[)/i,/^(?:\[([^\]'])*?\])/i,/^(?:`([^\`'])*?`)/i,/^(?:N(['](\\.|[^']|\\')*?['])+)/i,/^(?:X(['](\\.|[^']|\\')*?['])+)/i,/^(?:(['](\\.|[^']|\\')*?['])+)/i,/^(?:(["](\\.|[^"]|\\")*?["])+)/i,/^(?:--(.*?)($|\r\n|\r|\n))/i,/^(?:\s+)/i,/^(?:\|\|)/i,/^(?:\|)/i,/^(?:VALUE\s+OF\s+SEARCH\b)/i,/^(?:VALUE\s+OF\s+SELECT\b)/i,/^(?:ROW\s+OF\s+SELECT\b)/i,/^(?:COLUMN\s+OF\s+SELECT\b)/i,/^(?:MATRIX\s+OF\s+SELECT\b)/i,/^(?:INDEX\s+OF\s+SELECT\b)/i,/^(?:RECORDSET\s+OF\s+SELECT\b)/i,/^(?:TEXT\s+OF\s+SELECT\b)/i,/^(?:SELECT\b)/i,/^(?:ABSOLUTE\b)/i,/^(?:ACTION\b)/i,/^(?:ADD\b)/i,/^(?:AFTER\b)/i,/^(?:AGGR\b)/i,/^(?:AGGREGATE\b)/i,/^(?:AGGREGATOR\b)/i,/^(?:ALL\b)/i,/^(?:ALTER\b)/i,/^(?:AND\b)/i,/^(?:ANTI\b)/i,/^(?:ANY\b)/i,/^(?:APPLY\b)/i,/^(?:ARRAY\b)/i,/^(?:AS\b)/i,/^(?:ASSERT\b)/i,/^(?:ASC\b)/i,/^(?:ATTACH\b)/i,/^(?:AUTO(_)?INCREMENT\b)/i,/^(?:AVG\b)/i,/^(?:BEFORE\b)/i,/^(?:BEGIN\b)/i,/^(?:BETWEEN\b)/i,/^(?:BREAK\b)/i,/^(?:NOT\s+BETWEEN\b)/i,/^(?:NOT\s+LIKE\b)/i,/^(?:BY\b)/i,/^(?:~~\*)/i,/^(?:!~~\*)/i,/^(?:~~)/i,/^(?:!~~)/i,/^(?:ILIKE\b)/i,/^(?:NOT\s+ILIKE\b)/i,/^(?:CALL\b)/i,/^(?:CASE\b)/i,/^(?:CAST\b)/i,/^(?:CHECK\b)/i,/^(?:CLASS\b)/i,/^(?:CLOSE\b)/i,/^(?:COLLATE\b)/i,/^(?:COLUMN\b)/i,/^(?:COLUMNS\b)/i,/^(?:COMMIT\b)/i,/^(?:CONSTRAINT\b)/i,/^(?:CONTENT\b)/i,/^(?:CONTINUE\b)/i,/^(?:CONVERT\b)/i,/^(?:CORRESPONDING\b)/i,/^(?:COUNT\b)/i,/^(?:CREATE\b)/i,/^(?:CROSS\b)/i,/^(?:CUBE\b)/i,/^(?:CURRENT_TIMESTAMP\b)/i,/^(?:CURSOR\b)/i,/^(?:DATABASE(S)?)/i,/^(?:DATEADD\b)/i,/^(?:DATEDIFF\b)/i,/^(?:TIMESTAMPDIFF\b)/i,/^(?:DECLARE\b)/i,/^(?:DEFAULT\b)/i,/^(?:DELETE\b)/i,/^(?:DELETED\b)/i,/^(?:DESC\b)/i,/^(?:DETACH\b)/i,/^(?:DISTINCT\b)/i,/^(?:DROP\b)/i,/^(?:ECHO\b)/i,/^(?:EDGE\b)/i,/^(?:END\b)/i,/^(?:ENUM\b)/i,/^(?:ELSE\b)/i,/^(?:ESCAPE\b)/i,/^(?:EXCEPT\b)/i,/^(?:EXEC\b)/i,/^(?:EXECUTE\b)/i,/^(?:EXISTS\b)/i,/^(?:EXPLAIN\b)/i,/^(?:FALSE\b)/i,/^(?:FETCH\b)/i,/^(?:FIRST\b)/i,/^(?:FOR\b)/i,/^(?:FOREIGN\b)/i,/^(?:FROM\b)/i,/^(?:FULL\b)/i,/^(?:FUNCTION\b)/i,/^(?:GLOB\b)/i,/^(?:GO\b)/i,/^(?:GRAPH\b)/i,/^(?:GROUP\b)/i,/^(?:GROUPING\b)/i,/^(?:HAVING\b)/i,/^(?:IF\b)/i,/^(?:IDENTITY\b)/i,/^(?:IS\b)/i,/^(?:IN\b)/i,/^(?:INDEX\b)/i,/^(?:INDEXED\b)/i,/^(?:INNER\b)/i,/^(?:INSTEAD\b)/i,/^(?:INSERT\b)/i,/^(?:INSERTED\b)/i,/^(?:INTERSECT\b)/i,/^(?:INTERVAL\b)/i,/^(?:INTO\b)/i,/^(?:JOIN\b)/i,/^(?:KEY\b)/i,/^(?:LAST\b)/i,/^(?:LET\b)/i,/^(?:LEFT\b)/i,/^(?:LIKE\b)/i,/^(?:LIMIT\b)/i,/^(?:MATCHED\b)/i,/^(?:MATRIX\b)/i,/^(?:MAX(\s+)?(?=\())/i,/^(?:MAX(\s+)?(?=(,|\))))/i,/^(?:MIN(\s+)?(?=\())/i,/^(?:MERGE\b)/i,/^(?:MINUS\b)/i,/^(?:MODIFY\b)/i,/^(?:NATURAL\b)/i,/^(?:NEXT\b)/i,/^(?:NEW\b)/i,/^(?:NOCASE\b)/i,/^(?:NO\b)/i,/^(?:NOT\b)/i,/^(?:NULL\b)/i,/^(?:NULLS\b)/i,/^(?:OFF\b)/i,/^(?:ON\b)/i,/^(?:ONLY\b)/i,/^(?:OF\b)/i,/^(?:OFFSET\b)/i,/^(?:OPEN\b)/i,/^(?:OPTION\b)/i,/^(?:OR\b)/i,/^(?:ORDER\b)/i,/^(?:OUTER\b)/i,/^(?:OVER\b)/i,/^(?:PATH\b)/i,/^(?:PARTITION\b)/i,/^(?:PERCENT\b)/i,/^(?:PIVOT\b)/i,/^(?:PLAN\b)/i,/^(?:PRIMARY\b)/i,/^(?:PRINT\b)/i,/^(?:PRIOR\b)/i,/^(?:QUERY\b)/i,/^(?:READ\b)/i,/^(?:RECORDSET\b)/i,/^(?:REDUCE\b)/i,/^(?:REFERENCES\b)/i,/^(?:REGEXP\b)/i,/^(?:REINDEX\b)/i,/^(?:RELATIVE\b)/i,/^(?:REMOVE\b)/i,/^(?:RENAME\b)/i,/^(?:REPEAT\b)/i,/^(?:REPLACE\b)/i,/^(?:REQUIRE\b)/i,/^(?:RESTORE\b)/i,/^(?:RETURN\b)/i,/^(?:RETURNS\b)/i,/^(?:RIGHT\b)/i,/^(?:ROLLBACK\b)/i,/^(?:ROLLUP\b)/i,/^(?:ROW\b)/i,/^(?:ROWS\b)/i,/^(?:SCHEMA(S)?)/i,/^(?:SEARCH\b)/i,/^(?:SEMI\b)/i,/^(?:SET\b)/i,/^(?:SETS\b)/i,/^(?:SHOW\b)/i,/^(?:SOME\b)/i,/^(?:SOURCE\b)/i,/^(?:STRATEGY\b)/i,/^(?:STORE\b)/i,/^(?:SUM\b)/i,/^(?:TOTAL\b)/i,/^(?:TABLE\b)/i,/^(?:TABLES\b)/i,/^(?:TARGET\b)/i,/^(?:TEMP\b)/i,/^(?:TEMPORARY\b)/i,/^(?:TEXTSTRING\b)/i,/^(?:THEN\b)/i,/^(?:TIMEOUT\b)/i,/^(?:TO\b)/i,/^(?:TOP\b)/i,/^(?:TRAN\b)/i,/^(?:TRANSACTION\b)/i,/^(?:TRIGGER\b)/i,/^(?:TRUE\b)/i,/^(?:TRUNCATE\b)/i,/^(?:UNION\b)/i,/^(?:UNIQUE\b)/i,/^(?:UNPIVOT\b)/i,/^(?:UPDATE\b)/i,/^(?:USE\b)/i,/^(?:USING\b)/i,/^(?:VALUE\b)/i,/^(?:VALUES\b)/i,/^(?:VERTEX\b)/i,/^(?:VIEW\b)/i,/^(?:WHEN\b)/i,/^(?:WHERE\b)/i,/^(?:WHILE\b)/i,/^(?:WITH\b)/i,/^(?:WORK\b)/i,/^(?:(\d*[.])?\d+[eE]\d+)/i,/^(?:(\d*[.])?\d+)/i,/^(?:->)/i,/^(?:#)/i,/^(?:\+)/i,/^(?:-)/i,/^(?:\*)/i,/^(?:\/)/i,/^(?:%)/i,/^(?:!===)/i,/^(?:===)/i,/^(?:!==)/i,/^(?:==)/i,/^(?:>=)/i,/^(?:&)/i,/^(?:\|)/i,/^(?:<<)/i,/^(?:>>)/i,/^(?:>)/i,/^(?:<=)/i,/^(?:<>)/i,/^(?:<)/i,/^(?:=)/i,/^(?:!=)/i,/^(?:\()/i,/^(?:\))/i,/^(?:@)/i,/^(?:\{)/i,/^(?:\})/i,/^(?:\])/i,/^(?::-)/i,/^(?:\?-)/i,/^(?:\.\.)/i,/^(?:\.)/i,/^(?:,)/i,/^(?:::)/i,/^(?::)/i,/^(?:;)/i,/^(?:\$)/i,/^(?:\?)/i,/^(?:!)/i,/^(?:\^)/i,/^(?:~)/i,/^(?:[0-9]*[a-zA-Z_]+[a-zA-Z_0-9]*)/i,/^(?:$)/i,/^(?:.)/i],conditions:{INITIAL:{rules:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277],inclusive:!0}}},rr.prototype=c4,c4.Parser=rr,new rr}();"u">typeof exports&&(exports.parser=xt,exports.Parser=xt.Parser,exports.parse=function(){return xt.parse.apply(xt,arguments)},exports.main=function(n){n[1]||(console.log("Usage: "+n[0]+" FILE"),process.exit(1));var t=ut("fs").readFileSync(ut("path").normalize(n[1]),"utf8");return exports.parser.parse(t)},ut.main===module&&exports.main(process.argv.slice(1))),u.prettyflag=!1,u.pretty=function(e,n){var t=u.prettyflag;u.prettyflag=!n;var r=u.parse(e).toString();return u.prettyflag=t,r};var U1=u.utils={};function p4(e){return"(y="+e+",y===y?y:undefined)"}function kt(e,n){return"(y="+e+',typeof y=="undefined"?undefined:'+n+")"}function Z2(){return!0}var T2=U1.escapeq=function(e){return(""+e).replace(/["'\\\n\r\u2028\u2029]/g,function(n){switch(n){case'"':case"'":case"\\":return"\\"+n;case`
`:return"\\n";case"\r":return"\\r";case"\u2028":return"\\u2028";case"\u2029":return"\\u2029"}})},ar=U1.undoubleq=function(e){return e.replace(/(\')/g,"''")},Zn=U1.doubleq=function(e){return e.replace(/(\'\')/g,"\\'")},b4=(U1.doubleqq=function(e){return e.replace(/\'/g,"'")},function(e){return e[0]===String.fromCharCode(65279)&&(e=e.substr(1)),e});U1.global="u">typeof self?self:"u">typeof window?window:"u">typeof __webpack_require__.g?__webpack_require__.g:Function("return this")(),U1.isNativeFunction=function(e){return"function"==typeof e&&!!~e.toString().indexOf("[native code]")},U1.isWebWorker=function(){try{var e=U1.global.importScripts;return U1.isNativeFunction(e)}catch{return!1}}(),U1.isNode=function(){try{return U1.isNativeFunction(U1.global.process.reallyExit)}catch{return!1}}(),U1.isBrowser=function(){try{return U1.isNativeFunction(U1.global.location.reload)}catch{return!1}}(),U1.isBrowserify=U1.isBrowser&&"u">typeof process&&process.browser,U1.isRequireJS=U1.isBrowser&&"function"==typeof ut.specified,U1.isMeteor="u">typeof Meteor&&Meteor.release,U1.isMeteorClient=U1.isMeteorClient=U1.isMeteor&&Meteor.isClient,U1.isMeteorServer=U1.isMeteor&&Meteor.isServer,U1.isCordova="object"==typeof cordova,U1.isReactNative=!1,U1.hasIndexedDB=!!U1.global.indexedDB,U1.isArray=function(e){return"[object Array]"===Object.prototype.toString.call(e)};var F3=U1.loadFile=function(e,n,t,r){if(!(U1.isNode||U1.isMeteorServer)){if(U1.isCordova)U1.global.requestFileSystem(LocalFileSystem.PERSISTENT,0,function(g){g.root.getFile(e,{create:!1},function(m){m.file(function(b){var c=new FileReader;c.onloadend=function(d){t(b4(this.result))},c.readAsText(b)})})});else if("string"==typeof e)"#"===e.substr(0,1)&&"u">typeof document?t(document.querySelector(e).textContent):$n(e,g=>t(b4(g)),r,n);else if(e instanceof Event){var f=e.target.files,l=new FileReader;f[0].name,l.onload=function(g){t(b4(g.target.result))},l.readAsText(f[0])}}};let qn="u">typeof fetch?fetch:null;async function $n(e,n,t,r){return r?sr(e,n,t):await sr(e,n,t)}function sr(e,n,t){return qn(e).then(r=>r.arrayBuffer()).then(r=>{n([...new Uint8Array(r)].map(f=>String.fromCharCode(f)).join(""))}).catch(r=>{if(t)return t(r);throw console.error(r),r})}U1.loadBinaryFile=function(e,n,t,r=i=>{throw i}){if(!(U1.isNode||U1.isMeteorServer)){if("string"==typeof e){var a=new XMLHttpRequest;a.open("GET",e,n),a.responseType="arraybuffer",a.onload=function(){for(var g=new Uint8Array(a.response),m=[],b=0;b<g.length;++b)m[b]=String.fromCharCode(g[b]);t(m.join(""))},a.onerror=r,a.send()}else if(e instanceof Event){var f=e.target.files,l=new FileReader;f[0].name,l.onload=function(g){t(g.target.result)},l.onerror=r,l.readAsArrayBuffer(f[0])}else e instanceof Blob&&t(e)}},U1.removeFile=function(e,n){if(!U1.isNode)throw Error("You can remove files only in Node.js and Apache Cordova")},U1.deleteFile=function(e,n){},U1.autoExtFilename=function(e,n,t){return t=t||{},"string"!=typeof e||e.match(/^[A-z]+:\/\/|\n|\..{2,4}$/)||0===t.autoExt||!1===t.autoExt?e:e+"."+n},U1.fileExists=function(e,n){if(!U1.isNode)throw Error("You can use exists() only in Node.js or Apach Cordova")},U1.saveFile=function(e,n,t,r){var i=1;if(void 0===e)i=n,t&&(i=t(i));else if(!U1.isNode){var a={disableAutoBom:!1};u.utils.extend(a,r);var f=new Blob([n],{type:"text/plain;charset=utf-8"});jt(f,e,a.disableAutoBom),t&&(i=t(i))}return i};var nt=U1.hash=function(e){for(var n=2166136261,t=e.length;t;)n^=e.charCodeAt(--t),n+=(n<<1)+(n<<4)+(n<<7)+(n<<8)+(n<<24);return n},ei=U1.arrayUnion=function(e,n){var t=n.slice(0);return e.forEach(function(r){0>t.indexOf(r)&&t.push(r)}),t},ti=U1.arrayDiff=function(e,n){return e.filter(function(t){return 0>n.indexOf(t)})},ri=U1.arrayIntersect=function(e,n){var t=[];return e.forEach(function(r){var i=!1;n.forEach(function(a){i=i||r===a}),i&&t.push(r)}),t},ni=U1.arrayUnionDeep=function(e,n){var t=n.slice(0);return e.forEach(function(r){var i=!1;t.forEach(function(a){i=i||Jt(r,a)}),i||t.push(r)}),t},ii=U1.arrayExceptDeep=function(e,n){var t=[];return e.forEach(function(r){var i=!1;n.forEach(function(a){i=i||Jt(r,a)}),i||t.push(r)}),t},ai=U1.arrayIntersectDeep=function(e,n){var t=[];return e.forEach(function(r){var i=!1;n.forEach(function(a){i=i||Jt(r,a,!0)}),i&&t.push(r)}),t},Bt=U1.cloneDeep=function e(n){if(null===n||"object"!=typeof n)return n;if(n instanceof Date)return new Date(n);if(n instanceof String)return n.toString();if(n instanceof Number)return+n;var t=new n.constructor;for(var r in n)n.hasOwnProperty(r)&&(t[r]=e(n[r]));return t},Jt=U1.deepEqual=function(e,n){if(e===n)return!0;if("object"==typeof e&&null!==e&&"object"==typeof n&&null!==n){if(Object.keys(e).length!==Object.keys(n).length)return!1;for(var t in e)if(!Jt(e[t],n[t]))return!1;return!0}return!1},E4=U1.distinctArray=function(e){for(var n={},t=0,r=e.length;t<r;t++)n["object"==typeof e[t]?Object.keys(e[t]).sort().map(function(l){return l+"`"+e[t][l]}).join("`"):e[t]]=e[t];var a=[];for(var f in n)a.push(n[f]);return a},D2=U1.extend=function(n,t){for(var r in n=n||{},t)t.hasOwnProperty(r)&&(n[r]=t[r]);return n},si=U1.getValueOf=function(e){return"object"==typeof e&&(e instanceof String||e instanceof Number)?e.valueOf():e},oi=U1.flatArray=function(e){if(!e||0===e.length)return[];if("object"==typeof e&&e instanceof u.Recordset)return e.data.map(function(t){return si(t[e.columns[0].columnid])});var n=Object.keys(e[0])[0];return void 0===n?[]:e.map(function(t){return t[n]})};U1.arrayOfArrays=function(e){return e.map(function(n){var t=[];for(var r in n)t.push(n[r]);return t})},Array.isArray||(Array.isArray=function(e){return"[object Array]"===Object.prototype.toString.call(e)}),U1.xlsnc=function(e){var n="";e>701&&(n=String.fromCharCode(65+(((e-26)/676|0)-1)%26),e%=676);var t=String.fromCharCode(65+e%26);return e>=26&&(t=String.fromCharCode(65+(e=(e/26|0)-1)%26)+t,e>26&&(t=String.fromCharCode(65+(e=(e/26|0)-1)%26)+t)),n+t},U1.xlscn=function(e){var n=e.charCodeAt(0)-65;return e.length>1&&(n=(n+1)*26+e.charCodeAt(1)-65,e.length>2&&(n=(n+1)*26+e.charCodeAt(2)-65)),n},U1.domEmptyChildren=function(e){for(var n=e.childNodes.length;n--;)e.removeChild(e.lastChild)};var g4={};U1.like=function(e,n,t){if(!g4[e]){t||(t="");for(var r=0,i="^";r<e.length;){var a=e[r],f="";r<e.length-1&&(f=e[r+1]),a===t?(i+="\\"+f,r++):"["===a&&"^"===f?(i+="[^",r++):"["===a||"]"===a?i+=a:"%"===a?i+="[\\s\\S]*":"_"===a?i+=".":"/.*+?|(){}".indexOf(a)>-1?i+="\\"+a:i+=a,r++}i+="$",g4[e]=RegExp(i,"i")}return(""+(n??"")).search(g4[e])>-1},U1.glob=function(e,n){for(var t=0,r="^";t<n.length;){var i=n[t],a="";t<n.length-1&&(a=n[t+1]),"["===i&&"^"===a?(r+="[^",t++):"["===i||"]"===i?r+=i:"*"===i?r+=".*":"?"===i?r+=".":"/.*+?|(){}".indexOf(i)>-1?r+="\\"+i:r+=i,t++}return r+="$",(""+(e||"")).toUpperCase().search(RegExp(r.toUpperCase()))>-1},U1.findAlaSQLPath=function(){if(U1.isWebWorker)return"";if(U1.isMeteorClient)return"/packages/dist/";if(U1.isMeteorServer)return"assets/packages/dist/";if(U1.isNode)return"";if(U1.isBrowser)for(var e=document.getElementsByTagName("script"),n=0;n<e.length;n++){if("alasql-worker.js"===e[n].src.substr(-16).toLowerCase())return e[n].src.substr(0,e[n].src.length-16);if("alasql-worker.min.js"===e[n].src.substr(-20).toLowerCase())return e[n].src.substr(0,e[n].src.length-20);if("alasql.js"===e[n].src.substr(-9).toLowerCase())return e[n].src.substr(0,e[n].src.length-9);if("alasql.min.js"===e[n].src.substr(-13).toLowerCase())return e[n].src.substr(0,e[n].src.length-13)}return""};var c3=function(){var e=u.private.externalXlsxLib||U1.global.XLSX||null;if(e)return e;if(U1.isNode||U1.isBrowserify||U1.isMeteorServer,!e)throw Error("Please include the xlsx.js library");return e};u.path=u.utils.findAlaSQLPath(),u.utils.uncomment=function(e){e=("__"+e+"__").split("");for(var t,n=!1,r=!1,i=!1,a=0,f=e.length;a<f;a++){var l="\\"!==e[a-1]||"\\"===e[a-2];n?e[a]===t&&l&&(n=!1):r?"*"===e[a]&&"/"===e[a+1]?(e[a]=e[a+1]="",r=!1,a++):e[a]="":i?((e[a+1]===`
`||"\r"===e[a+1]||e.length-2===a)&&(i=!1),e[a]=""):'"'===e[a]||"'"===e[a]?(n=!0,t=e[a]):"["===e[a]&&"@"!==e[a-1]?(n=!0,t="]"):"-"===e[a]&&"-"===e[a+1]?(e[a]="",i=!0):"/"===e[a]&&"*"===e[a+1]&&(e[a]="",r=!0)}return e=e.join("").slice(2,-2)},u.parser=xt,u.parser.parseError=function(e,n){throw Error("Have you used a reserved keyword without `escaping` it?\n"+e)},u.parse=function(e){return xt.parse(u.utils.uncomment(e))},u.engines={},u.databases={},u.databasenum=0,u.options={errorlog:!1,valueof:!0,dropifnotexists:!1,datetimeformat:"sql",casesensitive:!0,logtarget:"output",logprompt:!0,progress:!1,modifier:void 0,columnlookup:10,autovertex:!0,usedbo:!0,autocommit:!0,cache:!0,tsql:!0,mysql:!0,postgres:!0,oracle:!0,sqlite:!0,orientdb:!0,nocount:!1,nan:!1,excel:{cellDates:!0},joinstar:"overwrite",loopbreak:1e5,dateAsString:!0},u.vars={},u.declares={},u.prompthistory=[],u.plugins={},u.from={},u.into={},u.fn={},u.aggr={},u.busy=0,u.MAXSQLCACHESIZE=1e4,u.DEFAULTDATABASEID="alasql",u.lastid=0,u.buffer={},u.private={externalXlsxLib:null},u.setXLSX=function(e){u.private.externalXlsxLib=e},u.use=function(e){if(e||(e=u.DEFAULTDATABASEID),u.useid!==e){if(void 0!==u.databases[e]){u.useid=e;var n=u.databases[u.useid];u.tables=n.tables,n.resetSqlCache(),u.options.usedbo&&(u.databases.dbo=n)}else throw Error("Database does not exist: "+e)}},u.autoval=function(e,n,t,r){var i=r?u.databases[r]:u.databases[u.useid];if(!i.tables[e])throw Error("Tablename not found: "+e);if(!i.tables[e].identities[n])throw Error("Colname not found: "+n);return t?i.tables[e].identities[n].value||null:i.tables[e].identities[n].value-i.tables[e].identities[n].step||null},u.exec=function(e,n,t,r){if("function"==typeof n&&(r=t,t=n,n={}),delete u.error,n=n||{},!u.options.errorlog)return u.dexec(u.useid,e,n,t,r);try{return u.dexec(u.useid,e,n,t,r)}catch(i){u.error=i,t&&t(null,u.error)}},u.dexec=function(e,n,t,r,i){var a=u.databases[e],f=nt(n);if(u.options.cache){var l=a.sqlCache[f];if(l&&a.dbversion===l.dbversion)return l(t,r)}var h=a.astCache[f];if(u.options.cache&&!h?(h=u.parse(n))&&(a.astCache[f]=h):h=u.parse(n),h.statements){if(0===h.statements.length)return 0;if(1===h.statements.length){if(h.statements[0].compile){var l=h.statements[0].compile(e,t);if(!l)return;l.sql=n,l.dbversion=a.dbversion,u.options.cache&&(a.sqlCacheSize>u.MAXSQLCACHESIZE&&a.resetSqlCache(),a.sqlCacheSize++,a.sqlCache[f]=l);var g=u.res=l(t,r,i);return g}u.precompile(h.statements[0],u.useid,t);var g=u.res=h.statements[0].execute(e,t,r,i);return g}if(!r)return u.drun(e,h,t,r,i);u.adrun(e,h,t,r,i)}},u.drun=function(e,n,t,r,i){var a=u.useid;a!==e&&u.use(e);for(var f=[],l=0,h=n.statements.length;l<h;l++)if(n.statements[l]){if(n.statements[l].compile){var g=n.statements[l].compile(u.useid);f.push(u.res=g(t,null,i))}else u.precompile(n.statements[l],u.useid,t),f.push(u.res=n.statements[l].execute(u.useid,t))}return a!==e&&u.use(a),r&&r(f),u.res=f,f},u.adrun=function(e,n,t,r,i){var a=0,f=n.statements.length;!1!==u.options.progress&&u.options.progress(f,a++);var l=u.useid;l!==e&&u.use(e);var h=[];function g(m){void 0!==m&&h.push(m);var b=n.statements.shift();b?(b.compile?b.compile(u.useid)(t,g,i):(u.precompile(n.statements[0],u.useid,t),b.execute(u.useid,t,g)),!1!==u.options.progress&&u.options.progress(f,a++)):(l!==e&&u.use(l),r(h))}g()},u.compile=function(e,n){n=n||u.useid;var t=u.parse(e);if(1===t.statements.length){var r=t.statements[0].compile(n);return r.promise=function(i){return new Promise(function(a,f){r(i,function(l,h){h?f(h):a(l)})})},r}throw Error("Cannot compile, because number of statements in SQL is not equal to 1")},U1.global.Promise||(U1.global.Promise=Promise);var or=function(e,n,t,r){return new U1.global.Promise(function(i,a){u(e,n,function(f,l){l?a(l):(t&&r&&!1!==u.options.progress&&u.options.progress(t,r),i(f))})})};let fi=(e,n)=>{var t=n.resolve([]);return e.forEach(r=>{t=t.then(i=>or(r.sql,r.params,r.i,r.length).then(a=>[...i,a]))}),t};var ui=function(e){if(!(e.length<1)){for(var n,t,r,i=[],a=0;a<e.length;a++){if("string"==typeof(n=e[a])&&(n=[n]),!U1.isArray(n)||n.length<1||2<n.length)throw Error("Error in .promise parameter");t=n[0],r=n[1]||void 0,i.push({sql:t,params:r,i:a,length:e.length})}return fi(i,U1.global.Promise)}};u.promise=function(e,n){if(typeof Promise>"u")throw Error("Please include a Promise/A+ library");if("string"==typeof e)return or(e,n);if(!U1.isArray(e)||e.length<1||"u">typeof n)throw Error("Error in .promise parameters");return ui(e)};var h3=u.Database=function(e){var n=this;if(n===u){if(e){if(n=u.databases[e],u.databases[e]=n,!n)throw Error(`Database ${e} not found`)}else n=u.databases.alasql,u.options.tsql&&(u.databases.tempdb=u.databases.alasql)}return e||(e="db"+u.databasenum++),n.databaseid=e,u.databases[e]=n,n.dbversion=0,n.tables={},n.views={},n.triggers={},n.indices={},n.objects={},n.counter=0,n.resetSqlCache(),n};h3.prototype.resetSqlCache=function(){this.sqlCache={},this.sqlCacheSize=0,this.astCache={}},h3.prototype.exec=function(e,n,t){return u.dexec(this.databaseid,e,n,t)},h3.prototype.autoval=function(e,n,t){return u.autoval(e,n,t,this.databaseid)},h3.prototype.transaction=function(e){return e(new u.Transaction(this.databaseid))};class m4{transactionid=Date.now();committed=!1;bank;constructor(n){this.databaseid=n,this.dbversion=u.databases[n].dbversion,this.bank=JSON.stringify(u.databases[n])}commit(){this.committed=!0,u.databases[this.databaseid].dbversion=Date.now(),delete this.bank}rollback(){if(this.committed)throw Error("Transaction already commited");u.databases[this.databaseid]=JSON.parse(this.bank),delete this.bank}exec(n,t,r){return u.dexec(this.databaseid,n,t,r)}}m4.prototype.executeSQL=m4.prototype.exec,u.Transaction=m4;var fr=u.Table=function(e){this.data=[],this.columns=[],this.xcolumns={},this.inddefs={},this.indices={},this.uniqs={},this.uniqdefs={},this.identities={},this.checks=[],this.checkfns=[],this.beforeinsert={},this.afterinsert={},this.insteadofinsert={},this.beforedelete={},this.afterdelete={},this.insteadofdelete={},this.beforeupdate={},this.afterupdate={},this.insteadofupdate={},Object.assign(this,e)};fr.prototype.indexColumns=function(){var e=this;e.xcolumns={},e.columns.forEach(function(n){e.xcolumns[n.columnid]=n})},u.View=class{constructor(n){this.columns=[],this.xcolumns={},this.query=[],Object.assign(this,n)}};class ur{constructor(n){this.alasql=u,this.columns=[],this.xcolumns={},this.selectGroup=[],this.groupColumns={},Object.assign(this,n)}}u.Recordset=class{constructor(n){Object.assign(this,n)}},u.Query=ur;var S={extend:Object.assign,casesensitive:u.options.casesensitive,Base:class{constructor(n){Object.assign(this,n)}toString(){}toType(){}toJS(){}exec(){}compile(){}}};xt.yy=u.yy=S,S.Statements=class{constructor(n){Object.assign(this,n)}toString(){return this.statements.map(n=>n.toString()).join("; ")}compile(n){let t=this.statements.map(r=>r.compile(n));return 1===t.length?t[0]:(r,i)=>{let a=t.map(f=>f(r));return i&&i(a),a}}},S.Search=class{constructor(n){Object.assign(this,n)}toString(){let n="SEARCH ";return this.selectors&&(n+=this.selectors.toString()),this.from&&(n+="FROM "+this.from.toString()),n}toJS(n){return`this.queriesfn[${this.queriesidx-1}](this.params,null,${n})`}compile(n){var r=(i,a)=>{var f;return this.#e(n,i,function(l){f=hr(r.query,l),a&&(f=a(f))}),f};return r.query={},r}#e(n,t,r){var c,d,i,f,a={},l=Bt(this.selectors);function h(N,E,R){var A,O,C,V=N[E],T1=u.options.loopbreak||1e5;if(V.selid){if("PATH"===V.selid){for(var C1=[{node:R,stack:[]}],T={},S1=u.databases[u.useid].objects;C1.length>0;){var A1=C1.shift(),y=A1.node,d2=A1.stack,C=h(V.args,0,y);if(C.length>0){if(E+1+1>N.length)return d2;var E2=[];return d2&&d2.length>0&&d2.forEach(function(N2){E2=E2.concat(h(N,E+1,N2))}),E2}!("u">typeof T[y.$id])&&(T[y.$id]=!0,y.$out&&y.$out.length>0&&y.$out.forEach(function(N2){var F2=S1[N2],$e=d2.concat(F2);$e.push(S1[F2.$out[0]]),C1.push({node:S1[F2.$out[0]],stack:$e})}))}return[]}if("NOT"===V.selid){var O=h(V.args,0,R);return O.length>0?[]:E+1+1>N.length?[R]:h(N,E+1,R)}if("DISTINCT"===V.selid){if(0===(O=typeof V.args>"u"||0===V.args.length?E4(R):h(V.args,0,R)).length)return[];var O,I2=E4(O);return E+1+1>N.length?I2:h(N,E+1,I2)}if("AND"===V.selid){var I2=!0;return V.args.forEach(function(N2){I2=I2&&h(N2,0,R).length>0}),I2?E+1+1>N.length?[R]:h(N,E+1,R):[]}if("OR"===V.selid){var I2=!1;return V.args.forEach(function(N2){I2=I2||h(N2,0,R).length>0}),I2?E+1+1>N.length?[R]:h(N,E+1,R):[]}else if("ALL"===V.selid){var O=h(V.args[0],0,R);return 0===O.length?[]:E+1+1>N.length?O:h(N,E+1,O)}else if("ANY"===V.selid){var O=h(V.args[0],0,R);return 0===O.length?[]:E+1+1>N.length?[O[0]]:h(N,E+1,[O[0]])}else if("UNIONALL"===V.selid){var O=[];return V.args.forEach(function(N2){O=O.concat(h(N2,0,R))}),0===O.length?[]:E+1+1>N.length?O:h(N,E+1,O)}else if("UNION"===V.selid){var O=[];V.args.forEach(function(N2){O=O.concat(h(N2,0,R))});var O=E4(O);return 0===O.length?[]:E+1+1>N.length?O:h(N,E+1,O)}else if("IF"===V.selid){var O=h(V.args,0,R);return 0===O.length?[]:E+1+1>N.length?[R]:h(N,E+1,R)}else if("REPEAT"===V.selid){var g2,A2,S2=V.args[0].value;A2=V.args[1]?V.args[1].value:S2,V.args[2]&&(g2=V.args[2].variable);var c2=[];if(0===S2&&(E+1+1>N.length?c2=[R]:(g2&&(u.vars[g2]=0),c2=c2.concat(h(N,E+1,R)))),A2>0)for(var u2=[{value:R,lvl:1}],v2=0;u2.length>0;){var O=u2[0];if(u2.shift(),O.lvl<=A2){g2&&(u.vars[g2]=O.lvl);var M2=h(V.sels,0,O.value);M2.forEach(function(N2){u2.push({value:N2,lvl:O.lvl+1})}),O.lvl>=S2&&(E+1+1>N.length?c2=c2.concat(M2):M2.forEach(function(N2){c2=c2.concat(h(N,E+1,N2))}))}if(++v2>T1)throw Error("Infinite loop brake. Number of iterations = "+v2)}return c2}else if("OF"===V.selid){if(E+1+1>N.length)return[R];var J2=[];return Object.keys(R).forEach(function(w2){u.vars[V.args[0].variable]=w2,J2=J2.concat(h(N,E+1,R[w2]))}),J2}else if("TO"===V.selid){var K2=u.vars[V.args[0]],j2=[];if((j2=void 0!==K2?K2.slice(0):[]).push(R),E+1+1>N.length)return[R];u.vars[V.args[0]]=j2;var J2=h(N,E+1,R);return u.vars[V.args[0]]=K2,J2}else if("ARRAY"===V.selid){var O=h(V.args,0,R);return O.length>0?(A=O,E+1+1>N.length?[A]:h(N,E+1,A)):[]}else if("SUM"===V.selid){var O=h(V.args,0,R);if(!(O.length>0))return[];var A=O.reduce(function(F2,$e){return F2+$e},0);return E+1+1>N.length?[A]:h(N,E+1,A)}else if("AVG"===V.selid)return(O=h(V.args,0,R)).length>0?(A=O.reduce(function(w2,N2){return w2+N2},0)/O.length,E+1+1>N.length?[A]:h(N,E+1,A)):[];else if("COUNT"===V.selid)return(O=h(V.args,0,R)).length>0?(A=O.length,E+1+1>N.length?[A]:h(N,E+1,A)):[];else if("FIRST"===V.selid)return(O=h(V.args,0,R)).length>0?(A=O[0],E+1+1>N.length?[A]:h(N,E+1,A)):[];else if("LAST"===V.selid)return(O=h(V.args,0,R)).length>0?(A=O[O.length-1],E+1+1>N.length?[A]:h(N,E+1,A)):[];else if("MIN"===V.selid){if(0===(O=h(V.args,0,R)).length)return[];var A=O.reduce(function(N2,F2){return Math.min(N2,F2)},1/0);return E+1+1>N.length?[A]:h(N,E+1,A)}else if("MAX"===V.selid){var O=h(V.args,0,R);if(0===O.length)return[];var A=O.reduce(function(F2,$e){return Math.max(F2,$e)},-1/0);return E+1+1>N.length?[A]:h(N,E+1,A)}else if("PLUS"===V.selid){var c2=[],u2=h(V.args,0,R).slice();E+1+1>N.length?c2=c2.concat(u2):u2.forEach(function($e){c2=c2.concat(h(N,E+1,$e))});for(var v2=0;u2.length>0;){var O=u2.shift();if(O=h(V.args,0,O),u2=u2.concat(O),E+1+1>N.length?c2=c2.concat(O):O.forEach(function(Yt){var st=h(N,E+1,Yt);c2=c2.concat(st)}),++v2>T1)throw Error("Infinite loop brake. Number of iterations = "+v2)}return c2}else if("STAR"===V.selid){var c2=[];c2=h(N,E+1,R);var u2=h(V.args,0,R).slice();E+1+1>N.length?c2=c2.concat(u2):u2.forEach(function($e){c2=c2.concat(h(N,E+1,$e))});for(var v2=0;u2.length>0;){var O=u2[0];if(u2.shift(),O=h(V.args,0,O),u2=u2.concat(O),E+1+1<=N.length&&O.forEach(function(Yt){c2=c2.concat(h(N,E+1,Yt))}),++v2>T1)throw Error("Infinite loop brake. Number of iterations = "+v2)}return c2}else if("QUESTION"===V.selid){var c2=[];c2=c2.concat(h(N,E+1,R));var O=h(V.args,0,R);return E+1+1<=N.length&&O.forEach(function(F2){c2=c2.concat(h(N,E+1,F2))}),c2}else if("WITH"===V.selid){var O=h(V.args,0,R);if(0===O.length)return[];var C={status:1,values:O}}else{if("ROOT"===V.selid)return E+1+1>N.length?[R]:h(N,E+1,f);throw Error("Wrong selector "+V.selid)}}else if(V.srchid)var C=u.srch[V.srchid.toUpperCase()](R,V.args,a,t);else throw Error("Selector not found");typeof C>"u"&&(C={status:1,values:[R]});var I2=[];if(1===C.status){var C2=C.values;if(E+1+1>N.length)I2=C2;else for(var v2=0;v2<C.values.length;v2++)I2=I2.concat(h(N,E+1,C2[v2]))}return I2}if(void 0!==l&&l.length>0&&(l&&l[0]&&"PROP"===l[0].srchid&&l[0].args&&l[0].args[0]&&("XML"===l[0].args[0].toUpperCase()?(a.mode="XML",l.shift()):"HTML"===l[0].args[0].toUpperCase()?(a.mode="HTML",l.shift()):"JSON"===l[0].args[0].toUpperCase()&&(a.mode="JSON",l.shift())),l.length>0&&"VALUE"===l[0].srchid&&(a.value=!0,l.shift())),this.from instanceof S.Column){var g=this.from.databaseid||n;f=u.databases[g].tables[this.from.columnid].data}else if(this.from instanceof S.FuncValue&&u.from[this.from.funcid.toUpperCase()]){var m=this.from.args.map(function(N){return Function("params,alasql","var y;return "+N.toJS()).bind(this)(t,u)});f=u.from[this.from.funcid.toUpperCase()].apply(this,m)}else typeof this.from>"u"?f=u.databases[n].objects:(f=Function("params,alasql","var y;return "+this.from.toJS())(t,u),"object"==typeof Mongo&&"object"!=typeof Mongo.Collection&&f instanceof Mongo.Collection&&(f=f.find().fetch()));return(i=void 0!==l&&l.length>0?h(l,0,f):f,this.into)?("u">typeof this.into.args[0]&&(c=Function("params,alasql","var y;return "+this.into.args[0].toJS())(t,u)),"u">typeof this.into.args[1]&&(d=Function("params,alasql","var y;return "+this.into.args[1].toJS())(t,u)),i=u.into[this.into.funcid.toUpperCase()](c,d,i,[],r)):(a.value&&i.length>0&&(i=i[0]),r&&(i=r(i))),i}},u.srch={PROP(e,n,t){if("XML"!==t.mode)return"object"!=typeof e||null===e||"object"!=typeof n||typeof e[n[0]]>"u"?{status:-1,values:[]}:{status:1,values:[e[n[0]]]};{let r=e.children.filter(i=>i.name.toUpperCase()===n[0].toUpperCase());return{status:r.length?1:-1,values:r}}},APROP:(e,n)=>"object"!=typeof e||null===e||"object"!=typeof n||typeof e[n[0]]>"u"?{status:1,values:[void 0]}:{status:1,values:[e[n[0]]]},EQ:(e,n,t,r)=>e===Function("x,alasql,params","return "+n[0].toJS("x",""))(e,u,r)?{status:1,values:[e]}:{status:-1,values:[]},LIKE(e,n,t,r){var a=Function("x,alasql,params","return "+n[0].toJS("x",""));return e.toUpperCase().match(RegExp("^"+a(e,u,r).toUpperCase().replace(/%/g,".*").replace(/\?|_/g,".")+"$"),"g")?{status:1,values:[e]}:{status:-1,values:[]}},ATTR(e,n,t){if("XML"===t.mode)return typeof n>"u"?{status:1,values:[e.attributes]}:"object"==typeof e&&"object"==typeof e.attributes&&"u">typeof e.attributes[n[0]]?{status:1,values:[e.attributes[n[0]]]}:{status:-1,values:[]};throw Error("ATTR is not using in usual mode")},CONTENT(e,n,t){if("XML"!==t.mode)throw Error("ATTR is not using in usual mode");return{status:1,values:[e.content]}},SHARP(e,n){let t=u.databases[u.useid].objects[n[0]];return void 0!==e&&e===t?{status:1,values:[e]}:{status:-1,values:[]}},PARENT(){return console.error("PARENT not implemented",arguments),{status:-1,values:[]}},CHILD:(e,n,t)=>"object"==typeof e?Array.isArray(e)?{status:1,values:e}:"XML"===t.mode?{status:1,values:Object.keys(e.children).map(function(r){return e.children[r]})}:{status:1,values:Object.keys(e).map(function(r){return e[r]})}:{status:1,values:[]},KEYS:e=>"object"==typeof e&&null!==e?{status:1,values:Object.keys(e)}:{status:1,values:[]},WHERE:(e,n,t,r)=>Function("x,alasql,params","return "+n[0].toJS("x",""))(e,u,r)?{status:1,values:[e]}:{status:-1,values:[]},NAME:(e,n)=>e.name===n[0]?{status:1,values:[e]}:{status:-1,values:[]},CLASS:(e,n)=>e.$class==n?{status:1,values:[e]}:{status:-1,values:[]},VERTEX:e=>"VERTEX"===e.$node?{status:1,values:[e]}:{status:-1,values:[]},INSTANCEOF:(e,n)=>e instanceof u.fn[n[0]]?{status:1,values:[e]}:{status:-1,values:[]},EDGE:e=>"EDGE"===e.$node?{status:1,values:[e]}:{status:-1,values:[]},EX:(e,n,t,r)=>({status:1,values:[Function("x,alasql,params","return "+n[0].toJS("x",""))(e,u,r)]}),RETURN(e,n,t,r){var i={};return n&&n.length>0&&n.forEach(function(a){var l=Function("x,alasql,params","return "+a.toJS("x",""));typeof a.as>"u"&&(a.as=a.toString()),i[a.as]=l(e,u,r)}),{status:1,values:[i]}},REF:e=>({status:1,values:[u.databases[u.useid].objects[e]]}),OUT:e=>e.$out&&e.$out.length>0?{status:1,values:e.$out.map(function(t){return u.databases[u.useid].objects[t]})}:{status:-1,values:[]},OUTOUT(e){if(!e.$out||!(e.$out.length>0))return{status:-1,values:[]};var n=[];return e.$out.forEach(function(t){var r=u.databases[u.useid].objects[t];r&&r.$out&&r.$out.length>0&&r.$out.forEach(function(i){n=n.concat(u.databases[u.useid].objects[i])})}),{status:1,values:n}},IN:e=>e.$in&&e.$in.length>0?{status:1,values:e.$in.map(function(t){return u.databases[u.useid].objects[t]})}:{status:-1,values:[]},ININ(e){if(!e.$in||!(e.$in.length>0))return{status:-1,values:[]};var n=[];return e.$in.forEach(function(t){var r=u.databases[u.useid].objects[t];r&&r.$in&&r.$in.length>0&&r.$in.forEach(function(i){n=n.concat(u.databases[u.useid].objects[i])})}),{status:1,values:n}},AS:(e,n)=>(u.vars[n[0]]=e,{status:1,values:[e]}),AT:(e,n)=>({status:1,values:[u.vars[n[0]]]}),CLONEDEEP:e=>({status:1,values:[Bt(e)]}),SET:(e,n,t,r)=>(Function("x,params,alasql",n.map(function(f){return"@"===f.method?`alasql.vars[${JSON.stringify(f.variable)}]=`+f.expression.toJS("x",""):"$"===f.method?`params[${JSON.stringify(f.variable)}]=`+f.expression.toJS("x",""):`x[${JSON.stringify(f.column.columnid)}]=`+f.expression.toJS("x","")}).join(";"))(e,r,u),{status:1,values:[e]}),ROW(e,n,t,r){var i="var y;return [";return{status:1,values:[Function("x,params,alasql",i+=n.map(l=>l.toJS("x","")).join(",")+"]")(e,r,u)]}},D3:e=>("VERTEX"!==e.$node&&"EDGE"===e.$node&&(e.source=e.$in[0],e.target=e.$out[0]),{status:1,values:[e]}),ORDERBY:(e,n)=>({status:1,values:e.sort(di(n))})};var di=function(e){if(e){if("function"==typeof e?.[0]?.expression){var n=e[0].expression;return function(i,a){var f=n(i),l=n(a);return f>l?1:f===l?0:-1}}var t="",r="";return e.forEach(function(i){var a="";if(i.expression instanceof S.NumValue&&(i.expression=self.columns[i.expression.value-1]),i.expression instanceof S.Column){var f=i.expression.columnid;u.options.valueof&&(a=".valueOf()"),i.nocase&&(a+=".toUpperCase()"),"_"===f?t+="if(a"+a+("ASC"===i.direction?">":"<")+"b"+a+")return 1;"+("if(a"+a+"==b")+a+"){":t+=`if (
							(a[${JSON.stringify(f)}]||'')${a}
							${"ASC"===i.direction?">":"<"}
							(b[${JSON.stringify(f)}]||'')${a} 
						) return 1;

						if(
							(a[${JSON.stringify(f)}]||'')${a}
							==
							(b[${JSON.stringify(f)}]||'')${a}
						){
						`}else a=".valueOf()",i.nocase&&(a+=".toUpperCase()"),t+="if(("+i.toJS("a","")+"||'')"+a+("ASC"===i.direction?">(":"<(")+i.toJS("b","")+"||'')"+a+")return 1;"+("if(("+i.toJS("a","")+"||'')"+a+"==("+i.toJS("b","")+"||'')")+a+"){";r+="}"}),Function("a,b",t+="return 0;"+r+"return -1")}};function pi(e,n,t,r,i){let g;e.sources.length,e.sourceslen=e.sources.length;var h,l=e.sourceslen;if(e.query=e,e.A=r,e.B=i,e.cb=t,e.oldscope=n,e.queriesfn&&(e.sourceslen+=e.queriesfn.length,l+=e.queriesfn.length,e.queriesdata=[],e.queriesfn.forEach(function(m,b){m.query.params=e.params,lr([],-b-1,e)})),h=n?Bt(n):{},e.scope=h,e.sources.forEach(function(m,b){m.query=e;var c=m.datafn(e,e.params,lr,b,u);"u">typeof c&&((e.intofn||e.intoallfn)&&Array.isArray(c)&&(c=c.length),g=c),m.queriesdata=e.queriesdata}),0==e.sources.length||0===l)try{g=cr(e)}catch(m){if(t)return t(null,m);throw m}return g}function lr(e,n,t){if(n>=0){var r=t.sources[n];r.data=e,"function"==typeof r.data&&(r.getfn=r.data,r.dontcache=r.getfn.dontcache,("OUTER"==r.joinmode||"RIGHT"==r.joinmode||"ANTI"==r.joinmode)&&(r.dontcache=!1),r.data={})}else t.queriesdata[-n-1]=oi(e);if(t.sourceslen--,!(t.sourceslen>0))return cr(t)}function cr(e){var m,b,t,n=e.scope;if(gi(e),e.data=[],e.xgroups={},e.groups=[],Ht(e,n,0),e.groupfn){if(e.data=[],0===e.groups.length&&0===e.allgroups.length){var i={};e.selectGroup.length>0&&e.selectGroup.forEach(function(C){"COUNT"==C.aggregatorid||"SUM"==C.aggregatorid||"TOTAL"==C.aggregatorid?i[C.nick]=0:i[C.nick]=void 0}),e.groups=[i]}if(e.aggrKeys.length>0){var a="";e.aggrKeys.forEach(function(C){a+=`g[${JSON.stringify(C.nick)}] = alasql.aggr[${JSON.stringify(C.funcid)}](undefined,g[${JSON.stringify(C.nick)}],3);`});var f=Function("g,params,alasql","var y;"+a)}for(var l=0,h=e.groups.length;l<h;l++){var i=e.groups[l];if(f&&f(i,e.params,u),!e.havingfn||e.havingfn(i,e.params,u)){var g=e.selectgfn(i,e.params,u);for(let V in e.groupColumns)e.groupColumns[V]!==V&&g[e.groupColumns[V]]&&!e.groupColumns[e.groupColumns[V]]&&delete g[e.groupColumns[V]];e.data.push(g)}}}if(Ei(e),e.unionallfn){if(e.corresponding)e.unionallfn.query.modifier||(e.unionallfn.query.modifier=void 0),m=e.unionallfn(e.params);else{e.unionallfn.query.modifier||(e.unionallfn.query.modifier="RECORDSET"),b=e.unionallfn(e.params),m=[],h=b.data.length;for(var l=0;l<h;l++){for(var c={},d=Math.min(e.columns.length,b.columns.length)-1;0<=d;d--)c[e.columns[d].columnid]=b.data[l][b.columns[d].columnid];m.push(c)}}e.data=e.data.concat(m)}else if(e.unionfn){if(e.corresponding)e.unionfn.query.modifier||(e.unionfn.query.modifier="ARRAY"),m=e.unionfn(e.params);else{e.unionfn.query.modifier||(e.unionfn.query.modifier="RECORDSET"),b=e.unionfn(e.params),m=[],h=b.data.length;for(var l=0;l<h;l++){if(c={},e.columns.length){t=Math.min(e.columns.length,b.columns.length);for(var d=0;d<t;d++)c[e.columns[d].columnid]=b.data[l][b.columns[d].columnid]}else{t=b.columns.length;for(var d=0;d<t;d++)c[b.columns[d].columnid]=b.data[l][b.columns[d].columnid]}m.push(c)}}e.data=ni(e.data,m)}else if(e.exceptfn){if(e.corresponding){e.exceptfn.query.modifier||(e.exceptfn.query.modifier="ARRAY");var m=e.exceptfn(e.params)}else{e.exceptfn.query.modifier||(e.exceptfn.query.modifier="RECORDSET");for(var b=e.exceptfn(e.params),m=[],l=0,h=b.data.length;l<h;l++){for(var c={},d=Math.min(e.columns.length,b.columns.length)-1;0<=d;d--)c[e.columns[d].columnid]=b.data[l][b.columns[d].columnid];m.push(c)}}e.data=ii(e.data,m)}else if(e.intersectfn){if(e.corresponding)e.intersectfn.query.modifier||(e.intersectfn.query.modifier=void 0),m=e.intersectfn(e.params);else for(e.intersectfn.query.modifier||(e.intersectfn.query.modifier="RECORDSET"),b=e.intersectfn(e.params),m=[],h=b.data.length,l=0;l<h;l++){for(c={},t=Math.min(e.columns.length,b.columns.length),d=0;d<t;d++)c[e.columns[d].columnid]=b.data[l][b.columns[d].columnid];m.push(c)}e.data=ai(e.data,m)}if(e.orderfn){if(e.explain)var N=Date.now();e.data=e.data.sort(e.orderfn),e.explain&&e.explaination.push({explid:e.explid++,description:"QUERY BY",ms:Date.now()-N})}if(bi(e),"u">typeof angular&&e.removeKeys.push("$$hashKey"),e.removeKeys.length>0){var E=e.removeKeys;if((t=E.length)>0)for(h=e.data.length,l=0;l<h;l++)for(d=0;d<t;d++)delete e.data[l][E[d]];e.columns.length>0&&(e.columns=e.columns.filter(function(C){var V=!1;return E.forEach(function(T1){C.columnid==T1&&(V=!0)}),!V}))}if("u">typeof e.removeLikeKeys&&e.removeLikeKeys.length>0){for(var R=e.removeLikeKeys,l=0,h=e.data.length;l<h;l++)for(var A in c=e.data[l])for(d=0;d<e.removeLikeKeys.length;d++)u.utils.like(e.removeLikeKeys[d],A)&&delete c[A];e.columns.length>0&&(e.columns=e.columns.filter(function(C){var V=!1;return R.forEach(function(T1){u.utils.like(T1,C.columnid)&&(V=!0)}),!V}))}if(e.pivotfn&&e.pivotfn(),e.unpivotfn&&e.unpivotfn(),e.intoallfn){var O=e.intoallfn(e.columns,e.cb,e.params,e.alasql);return O}if(!e.intofn)return O=e.data,e.cb&&(O=e.cb(e.data,e.A,e.B)),O;for(h=e.data.length,l=0;l<h;l++)e.intofn(e.data[l],l,e.params,e.alasql);return e.cb&&e.cb(e.data.length,e.A,e.B),e.data.length}function bi(e){if(e.limit){var t,n=0;e.offset&&(n=(n=0|e.offset||0)<0?0:n),t=e.percent?(e.data.length*e.limit/100|0)+n:(0|e.limit)+n,e.data=e.data.slice(n,t)}}function Ei(e){if(e.distinct){for(var n={},t=Object.keys(e.data[0]||[]),r=0,i=e.data.length;r<i;r++)n[t.map(function(l){return e.data[r][l]}).join("`")]=e.data[r];for(var f in e.data=[],n)e.data.push(n[f])}}var gi=function(e){for(var n=0,t=e.sources.length;n<t;n++){var r=e.sources[n];if(delete r.ix,n>0&&"ix"==r.optimization&&r.onleftfn&&r.onrightfn){if(r.databaseid&&u.databases[r.databaseid].tables[r.tableid]){u.databases[r.databaseid].tables[r.tableid].indices||(e.database.tables[r.tableid].indices={});var i=u.databases[r.databaseid].tables[r.tableid].indices[nt(r.onrightfns+"`"+r.srcwherefns)];!u.databases[r.databaseid].tables[r.tableid].dirty&&i&&(r.ix=i)}if(!r.ix){r.ix={};for(var h,a={},f=0,l=r.data.length;(h=r.data[f])||r.getfn&&(h=r.getfn(f))||f<l;){if(r.getfn&&!r.dontcache&&(r.data[f]=h),a[r.alias||r.tableid]=h,r.srcwherefn(a,e.params,u)){var g=r.onrightfn(a,e.params,u),m=r.ix[g];m||(m=r.ix[g]=[]),m.push(h)}f++}r.databaseid&&u.databases[r.databaseid].tables[r.tableid]&&(u.databases[r.databaseid].tables[r.tableid].indices[nt(r.onrightfns+"`"+r.srcwherefns)]=r.ix)}}else if(r.wxleftfn){if(u.databases[r.databaseid].engineid||(i=u.databases[r.databaseid].tables[r.tableid].indices[nt(r.wxleftfns+"`")]),!u.databases[r.databaseid].tables[r.tableid].dirty&&i)r.ix=i,r.data=r.ix[r.wxrightfn(null,e.params,u)];else{for(r.ix={},a={},f=0,l=r.data.length;(h=r.data[f])||r.getfn&&(h=r.getfn(f))||f<l;)r.getfn&&!r.dontcache&&(r.data[f]=h),a[r.alias||r.tableid]=r.data[f],g=r.wxleftfn(a,e.params,u),(m=r.ix[g])||(m=r.ix[g]=[]),m.push(r.data[f]),f++;u.databases[r.databaseid].engineid||(u.databases[r.databaseid].tables[r.tableid].indices[nt(r.wxleftfns+"`")]=r.ix)}r.srcwherefns&&(r.data?(a={},r.data=r.data.filter(function(c){return a[r.alias]=c,r.srcwherefn(a,e.params,u)})):r.data=[])}else if(r.srcwherefns&&!r.dontcache){if(r.data){var a={};r.data=r.data.filter(function(d){return a[r.alias]=d,r.srcwherefn(a,e.params,u)}),a={},f=0,l=r.data.length;for(var b=[];(h=r.data[f])||r.getfn&&(h=r.getfn(f))||f<l;)r.getfn&&!r.dontcache&&(r.data[f]=h),a[r.alias]=h,r.srcwherefn(a,e.params,u)&&b.push(h),f++;r.data=b}else r.data=[]}r.databaseid&&u.databases[r.databaseid].tables[r.tableid]}};function Ht(e,n,t){if(t>=e.sources.length)e.wherefn(n,e.params,u)&&(e.groupfn?e.groupfn(n,e.params,u):e.data.push(e.selectfn(n,e.params,u)));else if(e.sources[t].applyselect){var r=e.sources[t];r.applyselect(e.params,function(O){if(O.length>0)for(var C=0;C<O.length;C++)n[r.alias]=O[C],Ht(e,n,t+1);else"OUTER"==r.applymode&&(n[r.alias]={},Ht(e,n,t+1))},n)}else{var r=e.sources[t],i=e.sources[t+1],a=r.alias||r.tableid,f=!1,l=r.data,h=!1;r.getfn&&(!r.getfn||r.dontcache)||"RIGHT"==r.joinmode||"OUTER"==r.joinmode||"ANTI"==r.joinmode||"ix"!=r.optimization||(l=r.ix[r.onleftfn(n,e.params,u)]||[],h=!0);var g=0;if(typeof l>"u")throw Error("Data source number "+t+" in undefined");for(var b,m=l.length;(b=l[g])||!h&&r.getfn&&(b=r.getfn(g))||g<m;){h||!r.getfn||r.dontcache||(l[g]=b),n[a]=b;var c=!r.onleftfn;if(!c){var d=r.onleftfn(n,e.params,u),N=r.onrightfn(n,e.params,u);(d instanceof String||d instanceof Number)&&(d=d.valueOf()),(N instanceof String||N instanceof Number)&&(N=d.valueOf()),c=d==N}c&&r.onmiddlefn(n,e.params,u)&&("SEMI"!=r.joinmode&&"ANTI"!=r.joinmode&&Ht(e,n,t+1),"LEFT"!=r.joinmode&&"INNER"!=r.joinmode&&(b._rightjoin=!0),f=!0),g++}if("LEFT"!=r.joinmode&&"OUTER"!=r.joinmode&&"SEMI"!=r.joinmode||f||(n[a]={},Ht(e,n,t+1)),0==t)for(var E=t+1;E<e.sources.length;E++){if("OUTER"==i.joinmode||"RIGHT"==i.joinmode||"ANTI"==i.joinmode){n[r.alias]={};for(var b,R=0,A=i.data.length;(b=i.data[R])||i.getfn&&(b=i.getfn(R))||R<A;)i.getfn&&!i.dontcache&&(i.data[R]=b),b._rightjoin?delete b._rightjoin:(n[i.alias]=b,Ht(e,n,E+1)),R++}r=e.sources[E],i=e.sources[E+1]}n[a]=void 0}}function hr(e,n){if(typeof n>"u"||"number"==typeof n||"string"==typeof n||"boolean"==typeof n)return n;var f,t=e.modifier||u.options.modifier,r=e.columns;if(typeof r>"u"||0==r.length){if(n.length>0){for(var i={},a=Math.min(n.length,u.options.columnlookup||10)-1;0<=a;a--)for(var f in n[a])i[f]=!0;r=Object.keys(i).map(function(N){return{columnid:N}})}else r=[]}if("VALUE"===t)n.length>0?(f=r&&r.length>0?r[0].columnid:Object.keys(n[0])[0],n=n[0][f]):n=void 0;else if("ROW"===t){if(n.length>0){var f,l=[];for(var f in n[0])l.push(n[0][f]);n=l}else n=void 0}else if("COLUMN"===t){var f,h=[];if(n.length>0){f=r&&r.length>0?r[0].columnid:Object.keys(n[0])[0];for(var a=0,g=n.length;a<g;a++)h.push(n[a][f])}n=h}else if("MATRIX"===t){for(var h=[],a=0;a<n.length;a++){for(var l=[],m=n[a],b=0;b<r.length;b++)l.push(m[r[b].columnid]);h.push(l)}n=h}else if("INDEX"===t){var f,c,h={};if(r&&r.length>0)f=r[0].columnid,c=r[1].columnid;else{var d=Object.keys(n[0]);f=d[0],c=d[1]}for(var a=0,g=n.length;a<g;a++)h[n[a][f]]=n[a][c];n=h}else if("RECORDSET"===t)n=new u.Recordset({columns:r,data:n});else if("TEXTSTRING"===t){f=r&&r.length>0?r[0].columnid:Object.keys(n[0])[0];for(var a=0,g=n.length;a<g;a++)n[a]=n[a][f];n=n.join(`
`)}return n}function dr(e,n,t){var r="",i=[],a={};return n.forEach(function(f){if(e.ixsources={},e.sources.forEach(function(h){e.ixsources[h.alias]=h}),e.ixsources[f])var l,l=e.ixsources[f].columns;t&&"json"==u.options.joinstar&&(r+="r['"+f+"']={};"),l&&l.length>0?l.forEach(function(h){let g=T2(h.columnid);if(t&&"underscore"==u.options.joinstar)i.push("'"+f+"_"+g+"':p['"+f+"']['"+g+"']");else if(t&&"json"==u.options.joinstar)r+="r['"+f+"']['"+g+"']=p['"+f+"']['"+g+"'];";else{var m="p['"+f+"']['"+g+"']";if(a[h.columnid]){var c=m+" !== undefined ? "+m+" : "+a[h.columnid].value;i[a[h.columnid].id]=a[h.columnid].key+c,a[h.columnid].value=c}else{var b="'"+g+"':";i.push(b+m),a[h.columnid]={id:i.length-1,value:m,key:b}}}e.selectColumns[g]=!0;var d={columnid:h.columnid,dbtypeid:h.dbtypeid,dbsize:h.dbsize,dbprecision:h.dbprecision,dbenum:h.dbenum};e.columns.push(d),e.xcolumns[d.columnid]=d}):(r+='var w=p["'+f+'"];for(var k in w){r[k]=w[k]};',e.dirtyColumns=!0)}),{s:i.join(","),sp:r}}S.Select=class{constructor(n){Object.assign(this,n)}toString(){var n;return n="",this.explain&&(n+="EXPLAIN "),n+="SELECT ",this.modifier&&(n+=this.modifier+" "),this.distinct&&(n+="DISTINCT "),this.top&&(n+="TOP "+this.top.value+" ",this.percent&&(n+="PERCENT ")),n+=this.columns.map(function(t){var r;return r=t.toString(),"u">typeof t.as&&(r+=" AS "+t.as),r}).join(", "),this.from&&(n+=" FROM "+this.from.map(function(t){var r;return r=t.toString(),t.as&&(r+=" AS "+t.as),r}).join(",")),this.joins&&(n+=this.joins.map(function(t){var r;if(r=" ",t.joinmode&&(r+=t.joinmode+" "),t.table)r+="JOIN "+t.table.toString();else if(t.select)r+="JOIN ("+t.select.toString()+")";else if(t instanceof u.yy.Apply)r+=t.toString();else throw Error("Wrong type in JOIN mode");return t.as&&(r+=" AS "+t.as),t.using&&(r+=" USING "+t.using.toString()),t.on&&(r+=" ON "+t.on.toString()),r}).join("")),this.where&&(n+=" WHERE "+this.where.toString()),this.group&&this.group.length>0&&(n+=" GROUP BY "+this.group.map(function(t){return t.toString()}).join(", ")),this.having&&(n+=" HAVING "+this.having.toString()),this.order&&this.order.length>0&&(n+=" ORDER BY "+this.order.map(function(t){return t.toString()}).join(", ")),this.limit&&(n+=" LIMIT "+this.limit.value),this.offset&&(n+=" OFFSET "+this.offset.value),this.union&&(n+=" UNION "+(this.corresponding?"CORRESPONDING ":"")+this.union.toString()),this.unionall&&(n+=" UNION ALL "+(this.corresponding?"CORRESPONDING ":"")+this.unionall.toString()),this.except&&(n+=" EXCEPT "+(this.corresponding?"CORRESPONDING ":"")+this.except.toString()),this.intersect&&(n+=" INTERSECT "+(this.corresponding?"CORRESPONDING ":"")+this.intersect.toString()),n}toJS(n){return"alasql.utils.flatArray(this.queriesfn["+(this.queriesidx-1)+"](this.params,null,"+n+"))[0]"}compile(n,t){var r=u.databases[n],i=new ur;if(i.removeKeys=[],i.aggrKeys=[],i.explain=this.explain,i.explaination=[],i.explid=1,i.modifier=this.modifier,i.database=r,this.compileWhereExists(i),this.compileQueries(i),i.defcols=this.compileDefCols(i,n),i.fromfn=this.compileFrom(i),this.joins&&this.compileJoins(i),i.rownums=[],this.compileSelectGroup0(i),this.group||i.selectGroup.length>0?i.selectgfns=this.compileSelectGroup1(i):i.selectfns=this.compileSelect1(i,t),this.compileRemoveColumns(i),this.where&&this.compileWhereJoins(i),i.wherefn=this.compileWhere(i),(this.group||i.selectGroup.length>0)&&(i.groupfn=this.compileGroup(i)),this.having&&(i.havingfn=this.compileHaving(i)),this.order&&(i.orderfn=this.compileOrder(i,t)),this.group||i.selectGroup.length>0?i.selectgfn=this.compileSelectGroup2(i):i.selectfn=this.compileSelect2(i,t),i.distinct=this.distinct,this.pivot&&(i.pivotfn=this.compilePivot(i)),this.unpivot&&(i.pivotfn=this.compileUnpivot(i)),this.top?i.limit=this.top.value:this.limit&&(i.limit=this.limit.value,this.offset&&(i.offset=this.offset.value)),i.percent=this.percent,i.corresponding=this.corresponding,this.union?(i.unionfn=this.union.compile(n),this.union.order?i.orderfn=this.union.compileOrder(i,t):i.orderfn=null):this.unionall?(i.unionallfn=this.unionall.compile(n),this.unionall.order?i.orderfn=this.unionall.compileOrder(i,t):i.orderfn=null):this.except?(i.exceptfn=this.except.compile(n),this.except.order?i.orderfn=this.except.compileOrder(i,t):i.orderfn=null):this.intersect&&(i.intersectfn=this.intersect.compile(n),this.intersect.order?i.intersectfn=this.intersect.compileOrder(i,t):i.orderfn=null),this.into){if(this.into instanceof S.Table)u.options.autocommit&&u.databases[this.into.databaseid||n].engineid?i.intoallfns=`return alasql
								.engines[${JSON.stringify(u.databases[this.into.databaseid||n].engineid)}]
								.intoTable(
									${JSON.stringify(this.into.databaseid||n)},
									${JSON.stringify(this.into.tableid)},
									this.data,
									columns,
									cb
								);`:i.intofns=`alasql
							.databases[${JSON.stringify(this.into.databaseid||n)}]
							.tables[${JSON.stringify(this.into.tableid)}]
							.data.push(r);
						`;else if(this.into instanceof S.VarValue)i.intoallfns=`
					alasql.vars[${JSON.stringify(this.into.variable)}]=this.data;
					res=this.data.length;
					if(cb) res = cb(res);
					return res;
				`;else if(this.into instanceof S.FuncValue){var a="return alasql.into["+JSON.stringify(this.into.funcid.toUpperCase())+"](";this.into.args&&this.into.args.length>0?(a+=this.into.args[0].toJS()+",",this.into.args.length>1?a+=this.into.args[1].toJS()+",":a+="undefined,"):a+="undefined, undefined,",i.intoallfns=a+"this.data,columns,cb)"}else this.into instanceof S.ParamValue&&(i.intofns=`params[${JSON.stringify(this.into.param)}].push(r)`);i.intofns?i.intofn=Function("r,i,params,alasql","var y;"+i.intofns):i.intoallfns&&(i.intoallfn=Function("columns,cb,params,alasql","var y;"+i.intoallfns))}var f=function(l,h,g){return i.params=l,pi(i,g,function(b,c){if(c)return h(null,c);if(i.rownums.length>0)for(var d=0,N=b.length;d<N;d++)for(var E=0,R=i.rownums.length;E<R;E++)b[d][i.rownums[E]]=d+1;var A=hr(i,b);return h&&h(A),A})};return f.query=i,f}execute(n,t,r){return this.compile(n)(t,r)}compileWhereExists(n){this.exists&&(n.existsfn=this.exists.map(function(t){var r=t.compile(n.database.databaseid);return r.query.modifier="RECORDSET",r}))}compileQueries(n){this.queries&&(n.queriesfn=this.queries.map(function(t){var r=t.compile(n.database.databaseid);return r.query.modifier="RECORDSET",r}))}},S.ExistsValue=class{constructor(n){Object.assign(this,n)}toString(){return"EXISTS("+this.value.toString()+")"}toType(){return"boolean"}toJS(n,t,r){return"this.existsfn["+this.existsidx+"](params,null,"+n+").data.length"}},u.precompile=function(e,n,t){e&&(e.params=t,e.queries&&(e.queriesfn=e.queries.map(function(r){var i=r.compile(n||e.database.databaseid);return i.query.modifier="RECORDSET",i})),e.exists&&(e.existsfn=e.exists.map(function(r){var i=r.compile(n||e.database.databaseid);return i.query.modifier="RECORDSET",i})))},S.Select.prototype.compileFrom=function(e){e.sources=[],e.aliases={},this.from&&(this.from.forEach(function(t){var r="",i=t.as||t.tableid;if(t instanceof S.Table)e.aliases[i]={tableid:t.tableid,databaseid:t.databaseid||e.database.databaseid,type:"table"};else if(t instanceof S.Select)e.aliases[i]={type:"subquery"};else if(t instanceof S.Search)e.aliases[i]={type:"subsearch"};else if(t instanceof S.ParamValue)e.aliases[i]={type:"paramvalue"};else if(t instanceof S.FuncValue)e.aliases[i]={type:"funcvalue"};else if(t instanceof S.VarValue)e.aliases[i]={type:"varvalue"};else if(t instanceof S.FromData)e.aliases[i]={type:"fromdata"};else if(t instanceof S.Json)e.aliases[i]={type:"json"};else if(t.inserted)e.aliases[i]={type:"inserted"};else throw Error("Wrong table at FROM");var a={alias:i,databaseid:t.databaseid||e.database.databaseid,tableid:t.tableid,joinmode:"INNER",onmiddlefn:Z2,srcwherefns:"",srcwherefn:Z2};if(t instanceof S.Table)a.columns=u.databases[a.databaseid].tables[a.tableid].columns,u.options.autocommit&&u.databases[a.databaseid].engineid&&!u.databases[a.databaseid].tables[a.tableid].view?a.datafn=function(f,l,h,g,m){return m.engines[m.databases[a.databaseid].engineid].fromTable(a.databaseid,a.tableid,h,g,f)}:u.databases[a.databaseid].tables[a.tableid].view?a.datafn=function(f,l,h,g,m){var b=m.databases[a.databaseid].tables[a.tableid].select(l);return h&&(b=h(b,g,f)),b}:a.datafn=function(f,l,h,g,m){var b=m.databases[a.databaseid].tables[a.tableid].data;return h&&(b=h(b,g,f)),b};else if(t instanceof S.Select)a.subquery=t.compile(e.database.databaseid),typeof a.subquery.query.modifier>"u"&&(a.subquery.query.modifier="RECORDSET"),a.columns=a.subquery.query.columns,a.datafn=function(f,l,h,g,m){var b;return a.subquery(f.params,function(c){return b=c.data,h&&(b=h(b,g,f)),b}),b};else if(t instanceof S.Search)a.subsearch=t,a.columns=[],a.datafn=function(f,l,h,g,m){var b;return a.subsearch.execute(f.database.databaseid,f.params,function(c){return b=c,h&&(b=h(b,g,f)),b}),b};else if(t instanceof S.ParamValue)r="var res = alasql.prepareFromData(params['"+t.param+"']",t.array&&(r+=",true"),r+=");if(cb)res=cb(res,idx,query);return res",a.datafn=Function("query,params,cb,idx,alasql",r);else if(t.inserted)r="var res = alasql.prepareFromData(alasql.inserted",t.array&&(r+=",true"),r+=");if(cb)res=cb(res,idx,query);return res",a.datafn=Function("query,params,cb,idx,alasql",r);else if(t instanceof S.Json)r="var res = alasql.prepareFromData("+t.toJS(),t.array&&(r+=",true"),r+=");if(cb)res=cb(res,idx,query);return res",a.datafn=Function("query,params,cb,idx,alasql",r);else if(t instanceof S.VarValue)r="var res = alasql.prepareFromData(alasql.vars['"+t.variable+"']",t.array&&(r+=",true"),r+=");if(cb)res=cb(res,idx,query);return res",a.datafn=Function("query,params,cb,idx,alasql",r);else if(t instanceof S.FuncValue)r="var res=alasql.from["+JSON.stringify(t.funcid.toUpperCase())+"](",t.args&&t.args.length>0?(t.args[0]?r+=t.args[0].toJS("query.oldscope")+",":r+="null,",t.args[1]?r+=t.args[1].toJS("query.oldscope")+",":r+="null,"):r+="null,null,",r+="cb,idx,query);/*if(cb)res=cb(res,idx,query);*/return res",a.datafn=Function("query, params, cb, idx, alasql",r);else if(t instanceof S.FromData)a.datafn=function(f,l,h,g,m){var b=t.data;return h&&(b=h(b,g,f)),b};else throw Error("Wrong table at FROM");e.sources.push(a)}),e.defaultTableid=e.sources[0].alias)},u.prepareFromData=function(e,n){var t,r,i=e;if("string"==typeof e){if(i=e.split(/\r?\n/),n)for(t=0,r=i.length;t<r;t++)i[t]=[i[t]]}else if(n)for(i=[],t=0,r=e.length;t<r;t++)i.push([e[t]]);else if("object"==typeof e&&!Array.isArray(e)){if("u">typeof Mongo&&"u">typeof Mongo.Collection&&e instanceof Mongo.Collection)i=e.find().fetch();else for(var a in i=[],e)e.hasOwnProperty(a)&&i.push([a,e[a]])}return i},S.Select.prototype.compileJoins=function(e){this.joins.forEach(function(t){if("CROSS"===t.joinmode){if(t.using||t.on)throw Error("CROSS JOIN cannot have USING or ON clauses");t.joinmode="INNER"}if(t instanceof S.Apply){(a={alias:t.as,applymode:t.applymode,onmiddlefn:Z2,srcwherefns:"",srcwherefn:Z2,columns:[]}).applyselect=t.select.compile(e.database.databaseid),a.columns=a.applyselect.query.columns,a.datafn=function(T1,C1,T,S1,A1){var y;return T&&(y=T(y,S1,T1)),y},e.sources.push(a);return}if(t.table){if(r=t.table,a={alias:t.as||r.tableid,databaseid:r.databaseid||e.database.databaseid,tableid:r.tableid,joinmode:t.joinmode,onmiddlefn:Z2,srcwherefns:"",srcwherefn:Z2,columns:[]},!u.databases[a.databaseid].tables[a.tableid])throw Error("Table '"+a.tableid+"' is not exists in database '"+a.databaseid+"'");a.columns=u.databases[a.databaseid].tables[a.tableid].columns,u.options.autocommit&&u.databases[a.databaseid].engineid?a.datafn=function(T1,C1,T,S1,A1){return A1.engines[A1.databases[a.databaseid].engineid].fromTable(a.databaseid,a.tableid,T,S1,T1)}:u.databases[a.databaseid].tables[a.tableid].view?a.datafn=function(T1,C1,T,S1,A1){var y=A1.databases[a.databaseid].tables[a.tableid].select(C1);return T&&(y=T(y,S1,T1)),y}:a.datafn=function(T1,C1,T,S1,A1){var y=A1.databases[a.databaseid].tables[a.tableid].data;return T&&(y=T(y,S1,T1)),y},e.aliases[a.alias]={tableid:r.tableid,databaseid:r.databaseid||e.database.databaseid}}else if(t.select)r=t.select,(a={alias:t.as,joinmode:t.joinmode,onmiddlefn:Z2,srcwherefns:"",srcwherefn:Z2,columns:[]}).subquery=r.compile(e.database.databaseid),typeof a.subquery.query.modifier>"u"&&(a.subquery.query.modifier="RECORDSET"),a.columns=a.subquery.query.columns,a.datafn=function(T1,C1,T,S1,A1){a.data=a.subquery(T1.params,null,T,S1).data;var y=a.data;return T&&(y=T(y,S1,T1)),y},e.aliases[a.alias]={type:"subquery"};else if(t.param){var r,i,a;a={alias:t.as,joinmode:t.joinmode,onmiddlefn:Z2,srcwherefns:"",srcwherefn:Z2},i="var res=alasql.prepareFromData(params['"+t.param.param+"']",t.array&&(i+=",true"),i+=");if(cb)res=cb(res, idx, query);return res",a.datafn=Function("query,params,cb,idx, alasql",i),e.aliases[a.alias]={type:"paramvalue"}}else if(t.variable)a={alias:t.as,joinmode:t.joinmode,onmiddlefn:Z2,srcwherefns:"",srcwherefn:Z2},i="var res=alasql.prepareFromData(alasql.vars['"+t.variable+"']",t.array&&(i+=",true"),i+=");if(cb)res=cb(res, idx, query);return res",a.datafn=Function("query,params,cb,idx, alasql",i),e.aliases[a.alias]={type:"varvalue"};else if(t.func){a={alias:t.as,joinmode:t.joinmode,onmiddlefn:Z2,srcwherefns:"",srcwherefn:Z2};var l="var res=alasql.from["+JSON.stringify(t.func.funcid.toUpperCase())+"](",h=t.func.args;h&&h.length>0?(h[0]?l+=h[0].toJS("query.oldscope")+",":l+="null,",h[1]?l+=h[1].toJS("query.oldscope")+",":l+="null,"):l+="null,null,",l+="cb,idx,query);/*if(cb)res=cb(res,idx,query);*/return res",a.datafn=Function("query, params, cb, idx, alasql",l),e.aliases[a.alias]={type:"funcvalue"}}var g=a.alias;if(t.natural){if(t.using||t.on)throw Error("NATURAL JOIN cannot have USING or ON clauses");if(e.sources.length>0){var m=e.sources[e.sources.length-1],b=u.databases[m.databaseid].tables[m.tableid],c=u.databases[a.databaseid].tables[a.tableid];if(b&&c){var d=b.columns.map(function(T1){return T1.columnid}),N=c.columns.map(function(T1){return T1.columnid});t.using=ri(d,N).map(function(T1){return{columnid:T1}})}else throw Error("In this version of Alasql NATURAL JOIN works for tables with predefined columns only")}}if(t.using)m=e.sources[e.sources.length-1],a.onleftfns=t.using.map(function(T1){return"p['"+(m.alias||m.tableid)+"']['"+T1.columnid+"']"}).join('+"`"+'),a.onleftfn=Function("p,params,alasql","var y;return "+a.onleftfns),a.onrightfns=t.using.map(function(T1){return"p['"+(a.alias||a.tableid)+"']['"+T1.columnid+"']"}).join('+"`"+'),a.onrightfn=Function("p,params,alasql","var y;return "+a.onrightfns),a.optimization="ix";else if(t.on){if(t.on instanceof S.Op&&"="===t.on.op&&!t.on.allsome){a.optimization="ix";var E="",R="",A="",O=!1,C=t.on.left.toJS("p",e.defaultTableid,e.defcols),V=t.on.right.toJS("p",e.defaultTableid,e.defcols);C.indexOf("p['"+g+"']")>-1&&!(V.indexOf("p['"+g+"']")>-1)?(C.match(/p\['.*?'\]/g)||[]).every(function(T1){return T1==="p['"+g+"']"})?R=C:O=!0:!(C.indexOf("p['"+g+"']")>-1)&&V.indexOf("p['"+g+"']")>-1&&(V.match(/p\['.*?'\]/g)||[]).every(function(T1){return T1==="p['"+g+"']"})?E=C:O=!0,V.indexOf("p['"+g+"']")>-1&&!(C.indexOf("p['"+g+"']")>-1)?(V.match(/p\['.*?'\]/g)||[]).every(function(T1){return T1==="p['"+g+"']"})?R=V:O=!0:!(V.indexOf("p['"+g+"']")>-1)&&C.indexOf("p['"+g+"']")>-1&&(C.match(/p\['.*?'\]/g)||[]).every(function(T1){return T1==="p['"+g+"']"})?E=V:O=!0,O&&(R="",E="",A=t.on.toJS("p",e.defaultTableid,e.defcols),a.optimization="no"),a.onleftfns=E,a.onrightfns=R,a.onmiddlefns=A||"true",a.onleftfn=Function("p,params,alasql","var y;return "+a.onleftfns),a.onrightfn=Function("p,params,alasql","var y;return "+a.onrightfns),a.onmiddlefn=Function("p,params,alasql","var y;return "+a.onmiddlefns)}else a.optimization="no",a.onmiddlefns=t.on.toJS("p",e.defaultTableid,e.defcols),a.onmiddlefn=Function("p,params,alasql","var y;return "+t.on.toJS("p",e.defaultTableid,e.defcols))}e.sources.push(a)})},S.Select.prototype.compileWhere=function(e){if(!this.where)return function(){return!0};if("function"==typeof this.where)return this.where;var n=this.where.toJS("p",e.defaultTableid,e.defcols);return e.wherefns=n,Function("p,params,alasql","var y;return "+n)},S.Select.prototype.compileWhereJoins=function(e){},S.Select.prototype.compileGroup=function(e){if(e.sources.length>0)var n=e.sources[0].alias;else var n="";var t=e.defcols,r=[[]];this.group&&(r=T4(this.group,e));var i=[];r.forEach(function(f){i=ei(i,f)}),e.allgroups=i,e.ingroup=[];var a="";return r.forEach(function(f){a+="var g=this.xgroups[";var l=f.map(function(b){var c=b.split("	")[0],d=b.split("	")[1];return""===c?"1":(e.ingroup.push(c),d)});0===l.length&&(l=["''"]),a+=l.join('+"`"+')+"];if(!g) {this.groups.push((g=this.xgroups["+l.join('+"`"+')+"] = {"+f.map(function(b){var c=b.split("	")[0],d=b.split("	")[1];return""===c?"":"'"+c+"':"+d+","}).join("");var h=ti(i,f);a+=h.map(function(b){return"'"+b.split("	")[0]+"':null,"}).join("");var g="",m="";"u">typeof e.groupStar&&(m+="for(var f in p['"+e.groupStar+"']) {g[f]=p['"+e.groupStar+"'][f];};"),a+=e.selectGroup.map(function(b){var c=b.expression.toJS("p",n,t),d=b.nick;let N=E=>E.args[0].toJS("p",n,t);if(b instanceof S.AggrValue){if(b.distinct&&(g+=",g['$$_VALUES_"+d+"']={},g['$$_VALUES_"+d+"']["+c+"]=true"),"SUM"===b.aggregatorid){if("funcid"in b.expression){let E=N(b.expression);return`'${d}':(${E})|| typeof ${E} == 'number' ? ${c} : null,`}return`'${d}':(${c})|| typeof ${c} == 'number' ? ${c} : null,`}if("TOTAL"===b.aggregatorid){if("funcid"in b.expression){let E=N(b.expression);return`'${d}':(${E}) || typeof ${E} == 'number' ?
							${E} : ${E} == 'string' && typeof Number(${E}) == 'number' ? Number(${E}) :
							typeof ${E} == 'boolean' ?  Number(${E}) : 0,`}return`'${d}':(${c})|| typeof ${c} == 'number' ?
							${c} : ${c} == 'string' && typeof Number(${c}) == 'number' ? Number(${c}) :
							typeof ${c} === 'boolean' ?  Number(${c}) : 0,`}if("FIRST"===b.aggregatorid||"LAST"===b.aggregatorid)return"'"+d+"':"+c+",";if("MIN"===b.aggregatorid){if("funcid"in b.expression){let E=N(b.expression);return`'${d}': (typeof ${E} == 'number' ? ${c} : typeof ${E} == 'object' ?
							typeof Number(${E}) == 'number' && ${E}!== null? ${c} : null : null),`}return`'${d}': (typeof ${c} == 'number' ? ${c} : typeof ${c} == 'object' ?
							typeof Number(${c}) == 'number' && ${c}!== null? ${c} : null : null),`}if("MAX"===b.aggregatorid){if("funcid"in b.expression){let E=N(b.expression);return`'${d}' : (typeof ${E} == 'number' ? ${c} : typeof ${E} == 'object' ?
							typeof Number(${E}) == 'number' ? ${c} : null : null),`}return`'${d}' : (typeof ${c} == 'number' ? ${c} : typeof ${c} == 'object' ?
							typeof Number(${c}) == 'number' ? ${c} : null : null),`}if("ARRAY"===b.aggregatorid)return"'"+d+"':["+c+"],";if("COUNT"===b.aggregatorid)return"*"===b.expression.columnid?"'"+d+"':1,":"'"+d+"':(typeof "+c+' == "undefined" || '+c+" === null) ? 0 : 1,";if("AVG"===b.aggregatorid)return e.removeKeys.push("_SUM_"+d),e.removeKeys.push("_COUNT_"+d),"'"+d+"':"+c+",'_SUM_"+d+"':("+c+")||0,'_COUNT_"+d+"':(typeof "+c+' == "undefined" || '+c+" === null) ? 0 : 1,";if("AGGR"===b.aggregatorid)return g+=",g['"+d+"']="+b.expression.toJS("g",-1),"";if("REDUCE"===b.aggregatorid)return e.aggrKeys.push(b),"'"+d+"':alasql.aggr['"+b.funcid+"']("+c+",undefined,1),"}return""}).join("")+("}"+g+",g));")+m+"} else {"+e.selectGroup.map(function(b){var c=b.nick,d=b.expression.toJS("p",n,t);let N=A=>A.args[0].toJS("p",n,t);if(b instanceof S.AggrValue){var E="",R="";if(b.distinct)var E="if(typeof "+d+'!="undefined" && (!g[\'$$_VALUES_'+c+"']["+d+"])) {",R="g['$$_VALUES_"+c+"']["+d+"]=true;}";if("SUM"===b.aggregatorid){if("funcid"in b.expression){let A=N(b.expression);return E+`if(g['${c}'] == null && ${A} == null){g['${c}'] = null}
							else if(typeof g['${c}']!== 'object' && typeof g['${c}']!== 'number' && typeof ${A}!== 'object' && typeof ${A}!== 'number'){g['${c}'] = null}
							else if(typeof g['${c}']!== 'object' && typeof g['${c}']!== 'number' && typeof ${A} == 'number'){g['${c}'] = ${d}}
							else if(typeof g['${c}']!== 'number' && typeof ${A}!== 'number' && typeof ${A}!== 'object'){g['${c}'] = g['${c}']}
							else if((g['${c}'] == null || (typeof g['${c}']!== 'number' && typeof g['${c}']!== 'object')) && (${A} == null || (typeof ${A}!== 'number' && typeof ${A}!== 'object'))){g['${c}'] = null}
							else if(typeof g['${c}'] == 'number' && typeof ${A} ==null){g['${c}'] = g['${c}']}
							else if(typeof g['${c}'] == null && typeof ${A} =='number'){g['${c}'] = ${d}}
							else{g['${c}'] += ${d}||0}`+R}return E+`if(g['${c}'] == null && ${d} == null){g['${c}'] = null}
							 else if(typeof g['${c}']!== 'object' && typeof g['${c}']!== 'number'&& typeof ${d}!== 'object' && typeof ${d}!== 'number'){g['${c}'] = null}
							 else if(typeof g['${c}']!== 'object' && typeof g['${c}']!== 'number' && typeof ${d} == 'number'){g['${c}'] = ${d}}
							 else if(typeof g['${c}']!== 'number' && typeof ${d}!== 'number' && typeof ${d}!== 'object'){g['${c}'] = g['${c}']}
							 else if((g['${c}'] == null || (typeof g['${c}']!== 'number' && typeof g['${c}']!== 'object')) && (${d} == null || (typeof ${d}!== 'number' && typeof ${d}!== 'object'))){g['${c}'] = null}
							 else if(typeof g['${c}'] == 'number' && typeof ${d} ==null){g['${c}'] = g['${c}']}
							 else if(typeof g['${c}'] == null && typeof ${d} =='number'){g['${c}'] = ${d}}
							 else{g['${c}'] += ${d}||0}`+R}if("TOTAL"===b.aggregatorid){if("funcid"in b.expression){let A=N(b.expression);return E+`if(typeof g['${c}'] == 'string' && !isNaN(g['${c}']) && typeof Number(g['${c}']) == 'number' &&
						typeof ${A} == 'string' && !isNaN(${A}) && typeof Number(${A}) == 'number'){g['${c}'] = Number(g['${c}']) + Number(${A})}
						else if(typeof g['${c}'] == 'string' && typeof ${A} == 'string'){g['${c}'] = 0}
						else if(typeof g['${c}'] == 'string' && typeof ${A} == 'number'){g['${c}'] = ${A}}
						else if(typeof ${A} == 'string' && typeof g['${c}'] == 'number'){g['${c}'] = g['${c}']}
						else{g['${c}'] += ${A}||0}`+R}return E+`if(typeof g['${c}'] == 'string' && !isNaN(g['${c}']) && typeof Number(g['${c}']) == 'number' &&
						typeof ${d} == 'string' && !isNaN(${d}) && typeof Number(${d}) == 'number'){g['${c}'] = Number(g['${c}']) + Number(${d})}
						else if(typeof g['${c}'] == 'string' && typeof ${d} == 'string'){g['${c}'] = 0}
						else if(typeof g['${c}'] == 'string' && typeof ${d} == 'number'){g['${c}'] = ${d}}
						else if(typeof ${d} == 'string' && typeof g['${c}'] == 'number'){g['${c}'] = g['${c}']}
						else{g['${c}'] += ${d}||0}`+R}if("COUNT"===b.aggregatorid)return"*"===b.expression.columnid?E+"g['"+c+"']++;"+R:E+"if(typeof "+d+'!="undefined" && '+d+" !== null) g['"+c+"']++;"+R;if("ARRAY"===b.aggregatorid)return E+"g['"+c+"'].push("+d+");"+R;if("MIN"===b.aggregatorid){if("funcid"in b.expression){let A=N(b.expression);return E+`if((g['${c}'] == null && ${A}!== null) ? y = ${d} : (g['${c}']!== null &&
							${A} == null) ? y = g['${c}']:((y=${d}) < g['${c}'])){ if(typeof y == 'number')
							{g['${c}'] = y;}else if(typeof y == 'object' && y instanceof Date){g['${c}'] = y;}
							else if(typeof y == 'object' && typeof Number(y) == 'number'){g['${c}'] = Number(y);}}
							else if(g['${c}']!== null && typeof g['${c}'] == 'object' && y instanceof Date){g['${c}'] = g['${c}']}
							else if(g['${c}']!== null && typeof g['${c}'] == 'object'){g['${c}'] = Number(g['${c}'])}`+R}return E+`if((g['${c}'] == null && ${d}!== null) ? y = ${d} : (g['${c}']!== null &&
							${d} == null) ? y = g['${c}']:((y=${d}) < g['${c}'])){ if(typeof y == 'number')
							{g['${c}'] = y;}else if(typeof y == 'object' && y instanceof Date){g['${c}'] = y;}
							else if(typeof y == 'object' && typeof Number(y) == 'number'){g['${c}'] = Number(y);}}
							else if(g['${c}']!== null && typeof g['${c}'] == 'object' && y instanceof Date){g['${c}'] = g['${c}']}
							else if(g['${c}']!== null && typeof g['${c}'] == 'object'){g['${c}'] = Number(g['${c}'])}`+R}if("MAX"===b.aggregatorid){if("funcid"in b.expression){let A=N(b.expression);return E+`if((g['${c}'] == null && ${A}!== null) ? y = ${d} : (g['${c}']!== null &&
							${A} == null) ? y = g['${c}']:((y=${d}) > g['${c}'])){ if(typeof y == 'number')
							{g['${c}'] = y;}else if(typeof y == 'object' && y instanceof Date){g['${c}'] = y;}
							else if(typeof y == 'object' && typeof Number(y) == 'number'){g['${c}'] = Number(y);}}
							else if(g['${c}']!== null && typeof g['${c}'] == 'object' && y instanceof Date){g['${c}'] = g['${c}']}
							else if(g['${c}']!== null && typeof g['${c}'] == 'object'){g['${c}'] = Number(g['${c}'])}`+R}return E+`if((g['${c}'] == null && ${d}!== null) ? y = ${d} : (g['${c}']!== null &&
							${d} == null) ? y = g['${c}']:((y=${d}) > g['${c}'])){ if(typeof y == 'number')
							{g['${c}'] = y;}else if(typeof y == 'object' && y instanceof Date){g['${c}'] = y;}
							else if(typeof y == 'object' && typeof Number(y) == 'number'){g['${c}'] = Number(y);}}
							else if(g['${c}']!== null && typeof g['${c}'] == 'object' && y instanceof Date){g['${c}'] = g['${c}']}
							else if(g['${c}']!== null && typeof g['${c}'] == 'object'){g['${c}'] = Number(g['${c}'])}`+R}if("FIRST"===b.aggregatorid)return"";if("LAST"===b.aggregatorid)return E+"g['"+c+"']="+d+";"+R;if("AVG"===b.aggregatorid)return""+E+"g['_SUM_"+c+"']+=(y="+d+")||0;g['_COUNT_"+c+"']+=(typeof y == \"undefined\" || y === null) ? 0 : 1;g['"+c+"']=g['_SUM_"+c+"']/g['_COUNT_"+c+"'];"+R;if("AGGR"===b.aggregatorid)return""+E+"g['"+c+"']="+b.expression.toJS("g",-1)+";"+R;if("REDUCE"===b.aggregatorid)return""+E+"g['"+c+"']=alasql.aggr."+b.funcid+"("+d+",g['"+c+"'],2);"+R}return""}).join("")+"}"}),Function("p,params,alasql","var y;"+a)},S.Select.prototype.compileSelect1=function(e,n){var t=this;e.columns=[],e.xcolumns={},e.selectColumns={},e.dirtyColumns=!1;var r="var r={",i="",a=[];return this.columns.forEach(function(f){if(f instanceof S.Column){if("*"===f.columnid){if(f.func)i+="r=params['"+f.param+"'](p['"+e.sources[0].alias+"'],p,params,alasql);";else if(f.tableid){var l=dr(e,[f.tableid],!1);l.s&&(a=a.concat(l.s)),i+=l.sp}else{var l=dr(e,Object.keys(e.aliases),!0);l.s&&(a=a.concat(l.s)),i+=l.sp}}else{var h=f.tableid,g=f.databaseid||e.sources[0].databaseid||e.database.databaseid;if((h||(h=e.defcols[f.columnid]),h||(h=e.defaultTableid),"_"!==f.columnid)?n&&n.length>1&&Array.isArray(n[0])&&n[0].length>=1&&n[0][0].hasOwnProperty("sheetid")?i='var r={};var w=p["'+h+'"];var cols=['+t.columns.map(function(E){return"'"+E.columnid+"'"}).join(",")+"];var colas=["+t.columns.map(function(E){return"'"+(E.as||E.columnid)+"'"}).join(",")+"];for (var i=0;i<Object.keys(p['"+h+"']).length;i++) for(var k=0;k<cols.length;k++){if (!r.hasOwnProperty(i)) r[i]={}; r[i][colas[k]]=w[i][cols[k]];}":a.push("'"+T2(f.as||f.columnid)+"':p['"+h+"']['"+f.columnid+"']"):a.push("'"+T2(f.as||f.columnid)+"':p['"+h+"']"),e.selectColumns[T2(f.as||f.columnid)]=!0,e.aliases[h]&&"table"===e.aliases[h].type){if(!u.databases[g].tables[e.aliases[h].tableid])throw Error("Table '"+h+"' does not exist in database");var b=u.databases[g].tables[e.aliases[h].tableid].columns,c=u.databases[g].tables[e.aliases[h].tableid].xcolumns;if(c&&b.length>0){var d=c[f.columnid];if(void 0===d)throw Error("Column does not exist: "+f.columnid);var N={columnid:f.as||f.columnid,dbtypeid:d.dbtypeid,dbsize:d.dbsize,dbpecision:d.dbprecision,dbenum:d.dbenum};e.columns.push(N),e.xcolumns[N.columnid]=N}else{var N={columnid:f.as||f.columnid};e.columns.push(N),e.xcolumns[N.columnid]=N,e.dirtyColumns=!0}}else{var N={columnid:f.as||f.columnid};e.columns.push(N),e.xcolumns[N.columnid]=N}}}else if(f instanceof S.AggrValue){t.group||(t.group=[""]),f.as||(f.as=T2(f.toString())),"SUM"===f.aggregatorid||"MAX"===f.aggregatorid||"MIN"===f.aggregatorid||"FIRST"===f.aggregatorid||"LAST"===f.aggregatorid||"AVG"===f.aggregatorid||"ARRAY"===f.aggregatorid||"REDUCE"===f.aggregatorid||"TOTAL"===f.aggregatorid?a.push("'"+T2(f.as)+"':"+p4(f.expression.toJS("p",e.defaultTableid,e.defcols))):"COUNT"===f.aggregatorid&&a.push("'"+T2(f.as)+"':1");var N={columnid:f.as||f.columnid||f.toString()};e.columns.push(N),e.xcolumns[N.columnid]=N}else{a.push("'"+T2(f.as||f.columnid||f.toString())+"':"+p4(f.toJS("p",e.defaultTableid,e.defcols))),e.selectColumns[T2(f.as||f.columnid||f.toString())]=!0;var N={columnid:f.as||f.columnid||f.toString()};e.columns.push(N),e.xcolumns[N.columnid]=N}}),r+=a.join(",")+"};"+i},S.Select.prototype.compileSelect2=function(e,n){var t=e.selectfns;return this.orderColumns&&this.orderColumns.length>0&&this.orderColumns.forEach(function(r,i){var a="$$$"+i;r instanceof S.Column&&e.xcolumns[r.columnid]?t+="r['"+a+"']=r['"+r.columnid+"'];":r instanceof S.ParamValue&&e.xcolumns[n[r.param]]?t+="r['"+a+"']=r['"+n[r.param]+"'];":t+="r['"+a+"']="+r.toJS("p",e.defaultTableid,e.defcols)+";",e.removeKeys.push(a)}),Function("p,params,alasql","var y;"+t+"return r")},S.Select.prototype.compileSelectGroup0=function(e){var n=this;n.columns.forEach(function(t,r){if(t instanceof S.Column&&"*"===t.columnid)e.groupStar=t.tableid||"default";else{var i;i=t instanceof S.Column?T2(t.columnid):T2(t.toString(!0));for(var a=0;a<r;a++)if(i===n.columns[a].nick){i=n.columns[a].nick+":"+r;break}if(t.nick=i,n.group){var f=n.group.findIndex(function(l){return l.columnid===t.columnid&&l.tableid===t.tableid});f>-1&&(n.group[f].nick=i)}t.funcid&&("ROWNUM"===t.funcid.toUpperCase()||"ROW_NUMBER"===t.funcid.toUpperCase())&&e.rownums.push(t.as)}}),this.columns.forEach(function(t){t.findAggregator&&t.findAggregator(e)}),this.having&&this.having.findAggregator&&this.having.findAggregator(e)},S.Select.prototype.compileSelectGroup1=function(e){var t="var r = {};";return this.columns.forEach(function(r){if(r instanceof S.Column&&"*"===r.columnid)return t+="for(var k in g) {r[k]=g[k]};","";var i=r.as;void 0===i&&(i=r instanceof S.Column?T2(r.columnid):r.nick),e.groupColumns[i]=r.nick,t+="r['"+i+"']="+p4(r.toJS("g",""))+";";for(var a=0;a<e.removeKeys.length;a++)if(e.removeKeys[a]===i){e.removeKeys.splice(a,1);break}}),t},S.Select.prototype.compileSelectGroup2=function(e){var t=e.selectgfns;return this.columns.forEach(function(r){e.ingroup.indexOf(r.nick)>-1&&(t+="r['"+(r.as||r.nick)+"']=g['"+r.nick+"'];")}),this.orderColumns&&this.orderColumns.length>0&&this.orderColumns.forEach(function(r,i){var a="$$$"+i;r instanceof S.Column&&e.groupColumns[r.columnid]?t+="r['"+a+"']=r['"+r.columnid+"'];":t+="r['"+a+"']="+r.toJS("g","")+";",e.removeKeys.push(a)}),Function("g,params,alasql","var y;"+t+"return r")},S.Select.prototype.compileRemoveColumns=function(e){"u">typeof this.removecolumns&&(e.removeKeys=e.removeKeys.concat(this.removecolumns.filter(function(t){return typeof t.like>"u"}).map(function(t){return t.columnid})),e.removeLikeKeys=this.removecolumns.filter(function(t){return"u">typeof t.like}).map(function(t){return t.like.value}))},S.Select.prototype.compileHaving=function(e){if(this.having){var n=this.having.toJS("g",-1);return e.havingfns=n,Function("g,params,alasql","var y;return "+n)}return function(){return!0}},S.Select.prototype.compileOrder=function(e,n){var t=this;if(t.orderColumns=[],this.order){if(this.order&&1==this.order.length&&this.order[0].expression&&"function"==typeof this.order[0].expression){var r=this.order[0].expression,i="FIRST"==this.order[0].nullsOrder?-1:"LAST"==this.order[0].nullsOrder?1:0;return function(l,h){var g=r(l),m=r(h);if(i){if(null==g)return null==m?0:i;if(null==m)return-i}return g>m?1:g==m?0:-1}}var a="",f="";return this.order.forEach(function(l,h){if(l.expression instanceof S.NumValue){if(l.expression.value>t.columns.length)throw Error(`You are trying to order by column number ${l.expression.value} but you have only selected ${t.columns.length} columns.`);var g=t.columns[l.expression.value-1]}else var g=l.expression;t.orderColumns.push(g);var m="$$$"+h,b="";if(l.expression instanceof S.Column){var c=l.expression.columnid;if(u.options.valueof)b=".valueOf()";else if(e.xcolumns[c]){var d=e.xcolumns[c].dbtypeid;("DATE"==d||"DATETIME"==d||"DATETIME2"==d||"STRING"==d||"NUMBER"==d)&&(b=".valueOf()")}}if(l.expression instanceof S.ParamValue){var c=n[l.expression.param];if(u.options.valueof)b=".valueOf()";else if(e.xcolumns[c]){var d=e.xcolumns[c].dbtypeid;("DATE"==d||"DATETIME"==d||"DATETIME2"==d||"STRING"==d||"NUMBER"==d)&&(b=".valueOf()")}}l.nocase&&(b+=".toUpperCase()"),l.nullsOrder&&("FIRST"==l.nullsOrder?a+="if((a['"+m+"'] != null) && (b['"+m+"'] == null)) return 1;":"LAST"==l.nullsOrder&&(a+="if((a['"+m+"'] == null) && (b['"+m+"'] != null)) return 1;"),a+="if((a['"+m+"'] == null) == (b['"+m+"'] == null)) {",f+="}"),a+="if((a['"+m+"']||'')"+b+("ASC"==l.direction?">":"<")+"(b['"+m+"']||'')"+b+")return 1;"+("if((a['"+m+"']||'')"+b+"==(b['"+m+"']||'')")+b+"){",f+="}"}),a+="return 0;"+f+"return -1",e.orderfns=a,Function("a,b","var y;"+a)}},S.Select.prototype.compilePivot=function(e){var t=this.pivot.columnid,r=this.pivot.expr.aggregatorid,i=this.pivot.inlist,a=null;if(null==(a=this.pivot.expr.expression.hasOwnProperty("columnid")?this.pivot.expr.expression.columnid:this.pivot.expr.expression.expression.columnid))throw"columnid not found";return i&&(i=i.map(function(f){return f.expr.columnid})),function(){var f=this,l=f.columns.filter(function(A){return A.columnid!=t&&A.columnid!=a}).map(function(A){return A.columnid}),h=[],g={},m={},b={},c=[];if(f.data.forEach(function(A){if(!i||i.indexOf(A[t])>-1){var O=l.map(function(V){return A[V]}).join("`"),C=m[O];if(C||(C={},m[O]=C,c.push(C),l.forEach(function(V){C[V]=A[V]})),b[O]||(b[O]={}),b[O][A[t]]?b[O][A[t]]++:b[O][A[t]]=1,g[A[t]]||(g[A[t]]=!0,h.push(A[t])),"SUM"==r||"AVG"==r||"TOTAL"==r)typeof C[A[t]]>"u"&&(C[A[t]]=0),C[A[t]]+=+A[a];else if("COUNT"==r)typeof C[A[t]]>"u"&&(C[A[t]]=0),C[A[t]]++;else if("MIN"==r)typeof C[A[t]]>"u"&&(C[A[t]]=A[a]),A[a]<C[A[t]]&&(C[A[t]]=A[a]);else if("MAX"==r)typeof C[A[t]]>"u"&&(C[A[t]]=A[a]),A[a]>C[A[t]]&&(C[A[t]]=A[a]);else if("FIRST"==r)typeof C[A[t]]>"u"&&(C[A[t]]=A[a]);else if("LAST"==r)C[A[t]]=A[a];else if(u.aggr[r])u.aggr[r](C[A[t]],A[a]);else throw Error("Wrong aggregator in PIVOT clause")}}),"AVG"==r)for(var d in m){var N=m[d];for(var E in N)-1==l.indexOf(E)&&E!=a&&(N[E]=N[E]/b[d][E])}f.data=c,i&&(h=i);var R=f.columns.filter(function(A){return A.columnid==a})[0];f.columns=f.columns.filter(function(A){return!(A.columnid==t||A.columnid==a)}),h.forEach(function(A){var O=Bt(R);O.columnid=A,f.columns.push(O)})}},S.Select.prototype.compileUnpivot=function(e){var t=this.unpivot.tocolumnid,r=this.unpivot.forcolumnid,i=this.unpivot.inlist.map(function(a){return a.columnid});return function(){var a=[],f=e.columns.map(function(l){return l.columnid}).filter(function(l){return -1==i.indexOf(l)&&l!=r&&l!=t});e.data.forEach(function(l){i.forEach(function(h){var g={};f.forEach(function(m){g[m]=l[m]}),g[r]=h,g[t]=l[h],a.push(g)})}),e.data=a}};var mi=function(e,n){for(var t=[],r=0,i=e.length,a=0;a<i+1;a++){for(var f=[],l=0;l<i;l++){if(e[l]instanceof S.Column){e[l].nick=T2(e[l].columnid),n.groupColumns[T2(e[l].columnid)]=e[l].nick;var h=e[l].nick+"	"+e[l].toJS("p",n.sources[0].alias,n.defcols)}else{n.groupColumns[T2(e[l].toString())]=T2(e[l].toString());var h=T2(e[l].toString())+"	"+e[l].toJS("p",n.sources[0].alias,n.defcols)}r&1<<l&&f.push(h)}t.push(f),r=(r<<1)+1}return t},vi=function(e,n){for(var t=[],r=e.length,i=1<<r,a=0;a<i;a++){for(var f=[],l=0;l<r;l++)a&1<<l&&(f=f.concat(T4(e[l],n)));t.push(f)}return t},Si=function(e,n){return e.reduce(function(t,r){return t=t.concat(T4(r,n))},[])},S4=function(e,n){for(var t=[],r=0;r<e.length;r++)for(var i=0;i<n.length;i++)t.push(e[r].concat(n[i]));return t};function T4(e,n){if(!Array.isArray(e))return e instanceof S.FuncValue?(n.groupColumns[T2(e.toString())]=T2(e.toString()),[e.toString()+"	"+e.toJS("p",n.sources[0].alias,n.defcols)]):e instanceof S.Column?(e.nick=T2(e.columnid),n.groupColumns[e.nick]=e.nick,[e.nick+"	"+e.toJS("p",n.sources[0].alias,n.defcols)]):(n.groupColumns[T2(e.toString())]=T2(e.toString()),[T2(e.toString())+"	"+e.toJS("p",n.sources[0].alias,n.defcols)]);for(var t=[[]],r=0;r<e.length;r++)if(e[r]instanceof S.Column)e[r].nick=e[r].nick?T2(e[r].nick):T2(e[r].columnid),n.groupColumns[e[r].nick]=e[r].nick,t=t.map(function(i){return i.concat(e[r].nick+"	"+e[r].toJS("p",n.sources[0].alias,n.defcols))});else if(e[r]instanceof S.FuncValue)n.groupColumns[T2(e[r].toString())]=T2(e[r].toString()),t=t.map(function(i){return i.concat(T2(e[r].toString())+"	"+e[r].toJS("p",n.sources[0].alias,n.defcols))});else if(e[r]instanceof S.GroupExpression){if("ROLLUP"==e[r].type)t=S4(t,mi(e[r].group,n));else if("CUBE"==e[r].type)t=S4(t,vi(e[r].group,n));else if("GROUPING SETS"==e[r].type)t=S4(t,Si(e[r].group,n));else throw Error("Unknown grouping function")}else t=""===e[r]?[["1	1"]]:t.map(function(i){return n.groupColumns[T2(e[r].toString())]=T2(e[r].toString()),i.concat(T2(e[r].toString())+"	"+e[r].toJS("p",n.sources[0].alias,n.defcols))});return t}S.Select.prototype.compileDefCols=function(e,n){var t={".":{}};return this.from&&this.from.forEach(function(r){if(t["."][r.as||r.tableid]=!0,r instanceof S.Table){var i=r.as||r.tableid,a=u.databases[r.databaseid||n].tables[r.tableid];if(void 0===a)throw Error("Table does not exist: "+r.tableid);a.columns&&a.columns.forEach(function(f){t[f.columnid]?t[f.columnid]="-":t[f.columnid]=i})}else if(!(r instanceof S.Select)&&!(r instanceof S.Search)&&!(r instanceof S.ParamValue)&&!(r instanceof S.VarValue)&&!(r instanceof S.FuncValue)&&!(r instanceof S.FromData)&&!(r instanceof S.Json)&&!r.inserted)throw Error("Unknown type of FROM clause")}),this.joins&&this.joins.forEach(function(r){if(t["."][r.as||r.table.tableid]=!0,r.table){var i=r.table.tableid;r.as&&(i=r.as);var i=r.as||r.table.tableid,a=u.databases[r.table.databaseid||n].tables[r.table.tableid];a.columns&&a.columns.forEach(function(f){t[f.columnid]?t[f.columnid]="-":t[f.columnid]=i})}else if(!r.select&&!r.param&&!r.func)throw Error("Unknown type of FROM clause")}),t},S.Union=class{constructor(n){Object.assign(this,n)}toString(){return"UNION"}compile(n){return null}},S.Apply=class{constructor(n){Object.assign(this,n)}toString(){var n=this.applymode+" APPLY ("+this.select.toString()+")";return this.as&&(n+=" AS "+this.as),n}},S.Over=class{constructor(n){Object.assign(this,n)}toString(){var n="OVER (";return this.partition&&(n+="PARTITION BY "+this.partition.toString(),this.order&&(n+=" ")),this.order&&(n+="ORDER BY "+this.order.toString()),n+=")"}};{let e=Object.assign;class t{constructor(T){e(this,T)}toString(){var T=this.expression.toString();return this.order&&(T+=" "+this.order.toString()),this.nocase&&(T+=" COLLATE NOCASE"),this.direction&&(T+=" "+this.direction),T}findAggregator(T){this.expression.findAggregator&&this.expression.findAggregator(T)}toJS(T,S1,A1){return this.expression.reduced?"true":this.expression.toJS(T,S1,A1)}compile(T,S1,A1){return!!this.reduced||Function("p","var y;return "+this.toJS(T,S1,A1))}}class O{constructor(T){e(this,T)}toString(){var T;return T=this.columnid==+this.columnid?"["+this.columnid+"]":this.columnid,this.tableid&&(T=+this.columnid===this.columnid?this.tableid+T:this.tableid+"."+T,this.databaseid&&(T=this.databaseid+"."+T)),T}toJS(T,S1,A1){var y="";if(this.tableid||""!==S1||A1){if("g"===T)y="g['"+this.nick+"']";else if(this.tableid)y="_"!==this.columnid?T+"['"+this.tableid+"']['"+this.columnid+"']":"g"===T?"g['_']":T+"['"+this.tableid+"']";else if(A1){var d2=A1[this.columnid];if("-"===d2)throw Error('Cannot resolve column "'+this.columnid+'" because it exists in two source tables');y=d2?"_"!==this.columnid?T+"['"+d2+"']['"+this.columnid+"']":T+"['"+d2+"']":"_"!==this.columnid?T+"['"+(this.tableid||S1)+"']['"+this.columnid+"']":T+"['"+(this.tableid||S1)+"']"}else y=-1===S1?T+"['"+this.columnid+"']":"_"!==this.columnid?T+"['"+(this.tableid||S1)+"']['"+this.columnid+"']":T+"['"+(this.tableid||S1)+"']"}else y="_"!==this.columnid?T+"['"+this.columnid+"']":"g"===T?"g['_']":T;return y}}class V{constructor(T){e(this,T)}}V.prototype.toString=t.prototype.toString,e(S,{AggrValue:class{constructor(T){e(this,T)}toString(){var T="";return"REDUCE"===this.aggregatorid?T+=this.funcid.replace(pr,"")+"(":T+=this.aggregatorid+"(",this.distinct&&(T+="DISTINCT "),this.expression&&(T+=this.expression.toString()),T+=")",this.over&&(T+=" "+this.over.toString()),T}findAggregator(T){var S1=T2(this.toString())+":"+T.selectGroup.length,A1=!1;if(!this.nick){this.nick=S1;for(var A1=!1,y=0;y<T.removeKeys.length;y++)if(T.removeKeys[y]===S1){A1=!0;break}A1||T.removeKeys.push(S1)}T.selectGroup.push(this)}toType(){return["SUM","COUNT","AVG","MIN","MAX","AGGR","VAR","STDDEV","TOTAL"].indexOf(this.aggregatorid)>-1?"number":["ARRAY"].indexOf(this.aggregatorid)>-1?"array":(["FIRST","LAST"].indexOf(this.aggregatorid),this.expression.toType())}toJS(){var T=this.nick;return void 0===T&&(T=T2(this.toString())),"g['"+T+"']"}},ArrayValue:class{constructor(T){e(this,T)}toString(){return"ARRAY[]"}toType(){return"object"}toJS(T,S1,A1){return"[("+this.value.map(function(y){return y.toJS(T,S1,A1)}).join("), (")+")]"}},Column:O,DomainValueValue:class{constructor(T){e(this,T)}toString(){return"VALUE"}toType(){return"object"}toJS(T,S1,A1){return T}},Expression:t,ExpressionStatement:class{constructor(T){e(this,T)}toString(){return this.expression.toString()}execute(T,S1,A1){if(this.expression){u.precompile(this,T,S1);var d2=Function("params,alasql,p","var y;return "+this.expression.toJS("({})","",null)).bind(this)(S1,u);return A1&&(d2=A1(d2)),d2}}},GroupExpression:class{constructor(T){e(this,T)}toString(){return this.type+"("+this.group.toString()+")"}},JavaScript:class{constructor(T){e(this,T)}toString(){return"``"+this.value+"``"}toJS(){return"("+this.value+")"}execute(T,S1,A1){var y=1;return Function("params,alasql,p",this.value)(S1,u),A1&&(y=A1(y)),y}},Join:class{constructor(T){e(this,T)}toString(){var T=" ";return this.joinmode&&(T+=this.joinmode+" "),T+="JOIN "+this.table.toString()}},Literal:class{constructor(T){e(this,T)}toString(){var T=this.value;return this.value1&&(T=this.value1+"."+T),T}},LogicValue:class{constructor(T){e(this,T)}toString(){return this.value?"TRUE":"FALSE"}toType(){return"boolean"}toJS(){return this.value?"true":"false"}},NullValue:class{constructor(T){e(this,T)}toString(){return"NULL"}toJS(){return"undefined"}},NumValue:class{constructor(T){e(this,T)}toString(){return this.value.toString()}toType(){return"number"}toJS(){return""+this.value}},Op:class{constructor(T){e(this,T)}toString(){if("IN"===this.op||"NOT IN"===this.op)return this.left.toString()+" "+this.op+" ("+this.right.toString()+")";if(this.allsome)return this.left.toString()+" "+this.op+" "+this.allsome+" ("+this.right.toString()+")";if("->"===this.op||"!"===this.op){var T=this.left.toString()+this.op;return"string"!=typeof this.right&&"number"!=typeof this.right&&(T+="("),T+=this.right.toString(),"string"!=typeof this.right&&"number"!=typeof this.right&&(T+=")"),T}if("BETWEEN"===this.op||"NOT BETWEEN"===this.op){var T=this.left.toString()+" "+this.op+" "+this.right1.toString()+" AND "+this.right2.toString();return T}return this.left.toString()+" "+this.op+" "+(this.allsome?this.allsome+" ":"")+this.right.toString()}findAggregator(T){this.left&&this.left.findAggregator&&this.left.findAggregator(T),this.right&&this.right.findAggregator&&!this.allsome&&this.right.findAggregator(T)}toType(T){if(["-","*","/","%","^"].indexOf(this.op)>-1)return"number";if(["||"].indexOf(this.op)>-1)return"string";if("+"===this.op){if("string"===this.left.toType(T)||"string"===this.right.toType(T))return"string";if("number"===this.left.toType(T)||"number"===this.right.toType(T))return"number"}return["AND","OR","NOT","=","==","===","!=","!==","!===",">",">=","<","<=","IN","NOT IN","LIKE","NOT LIKE","REGEXP","GLOB"].indexOf(this.op)>-1||"BETWEEN"===this.op||"NOT BETWEEN"===this.op||"IS NULL"===this.op||"IS NOT NULL"===this.op||this.allsome?"boolean":this.op?"unknown":this.left.toType()}toJS(T,S1,A1){var y,d2=[],E2=this.op,g2=this,c2=function(C2){return C2.toJS&&(C2=C2.toJS(T,S1,A1)),"y["+(d2.push(C2)-1)+"]"},u2=function(){return c2(g2.left)},v2=function(){return c2(g2.right)};if("="===this.op?E2="===":"<>"===this.op?E2="!=":"OR"===this.op&&(E2="||"),"->"===this.op){var M2="("+u2()+"||{})";if("string"==typeof this.right)y=M2+'["'+T2(this.right)+'"]';else if("number"==typeof this.right)y=M2+"["+this.right+"]";else if(this.right instanceof S.FuncValue){var J2=[];if(!(!this.right.args||0===this.right.args.length))var J2=this.right.args.map(c2);y=""+M2+"["+JSON.stringify(this.right.funcid)+"]("+J2.join(",")+")"}else y=""+M2+"["+v2()+"]"}if("!"===this.op&&"string"==typeof this.right&&(y="alasql.databases[alasql.useid].objects["+u2()+']["'+this.right+'"]'),"IS"===this.op){let C2=u2(),w2=v2();y=this.right instanceof S.NullValue||"NOT"===this.right.op&&this.right.right instanceof S.NullValue?`((${C2} == null) === (${w2} == null))`:`((${C2} == ${w2}) || (${C2}  < 0 && true == ${w2}))`}if("=="===this.op&&(y="alasql.utils.deepEqual("+u2()+","+v2()+")"),("==="===this.op||"!==="===this.op)&&(y="("+("!==="===this.op?"!":"")+"(("+u2()+").valueOf()===("+v2()+").valueOf()))"),"!=="===this.op&&(y="(!alasql.utils.deepEqual("+u2()+","+v2()+"))"),"||"===this.op&&(y="(''+("+u2()+"||'')+("+v2()+'||""))'),"LIKE"===this.op||"NOT LIKE"===this.op){var y="("+("NOT LIKE"===this.op?"!":"")+"alasql.utils.like("+v2()+","+u2();this.escape&&(y+=","+c2(this.escape)),y+="))"}if("REGEXP"===this.op&&(y="alasql.stdfn.REGEXP_LIKE("+u2()+","+v2()+")"),"GLOB"===this.op&&(y="alasql.utils.glob("+u2()+","+v2()+")"),"BETWEEN"===this.op||"NOT BETWEEN"===this.op){var K2=u2();y="("+("NOT BETWEEN"===this.op?"!":"")+"(("+c2(this.right1)+"<="+K2+") && ("+K2+"<="+c2(this.right2)+")))"}if("IN"===this.op){if(this.right instanceof S.Select)y="("+("alasql.utils.flatArray(this.queriesfn["+this.queriesidx+"](params,null,")+T+")).indexOf(alasql.utils.getValueOf("+u2()+"))>-1)";else if(Array.isArray(this.right)){if(!u.options.cache||this.right.filter(C2=>C2 instanceof S.ParamValue).length>0)y="(new Set(["+this.right.map(c2).join(",")+"]).has(alasql.utils.getValueOf("+u2()+")))";else{u.sets||(u.sets={});let C2=this.right.map(N2=>N2.value),w2=C2.join(",");u.sets[w2]||(u.sets[w2]=new Set(C2)),y='alasql.sets["'+w2+'"].has(alasql.utils.getValueOf('+u2()+"))"}}else y="("+v2()+".indexOf("+u2()+")>-1)"}if("NOT IN"===this.op){if(this.right instanceof S.Select)y="(alasql.utils.flatArray(this.queriesfn["+this.queriesidx+"](params,null,p)).indexOf(alasql.utils.getValueOf("+u2()+"))<0)";else if(Array.isArray(this.right)){if(!u.options.cache||this.right.filter(C2=>C2 instanceof S.ParamValue).length>0)y="(!(new Set(["+this.right.map(c2).join(",")+"]).has(alasql.utils.getValueOf("+u2()+"))))";else{u.sets||(u.sets={});let C2=this.right.map(N2=>N2.value),w2=C2.join(",");u.sets[w2]||(u.sets[w2]=new Set(C2)),y='!alasql.sets["'+w2+'"].has(alasql.utils.getValueOf('+u2()+"))"}}else y="("+v2()+".indexOf("+u2()+")==-1)"}if("ALL"===this.allsome){if(this.right instanceof S.Select)y="alasql.utils.flatArray(this.query.queriesfn["+this.queriesidx+"](params,null,p)).every(function(b){return ("+(u2()+")")+E2+"b})";else if(Array.isArray(this.right))y=""+(1==this.right.length?c2(this.right[0]):"["+this.right.map(c2).join(",")+"]")+".every(function(b){return ("+(u2()+")")+E2+"b})";else throw Error("NOT IN operator without SELECT")}if("SOME"===this.allsome||"ANY"===this.allsome){if(this.right instanceof S.Select)y="alasql.utils.flatArray(this.query.queriesfn["+this.queriesidx+"](params,null,p)).some(function(b){return ("+(u2()+")")+E2+"b})";else if(Array.isArray(this.right))y=""+(1==this.right.length?c2(this.right[0]):"["+this.right.map(c2).join(",")+"]")+".some(function(b){return ("+(u2()+")")+E2+"b})";else throw Error("SOME/ANY operator without SELECT")}if("AND"===this.op){if(this.left.reduced){if(this.right.reduced)return"true";y=v2()}else this.right.reduced&&(y=u2());E2="&&"}var j2=y||"("+u2()+E2+v2()+")",I2="y=[("+d2.join("), (")+")]";return"&&"===E2||"||"===E2||"IS"===E2||"IS NULL"===E2||"IS NOT NULL"===E2?"("+I2+", "+j2+")":"("+I2+", y.some(function(e){return e == null}) ? void 0 : "+j2+")"}},OrderExpression:V,ParamValue:class{constructor(T){e(this,T)}toString(){return"$"+this.param}toJS(){return"string"==typeof this.param?"params['"+this.param+"']":"params["+this.param+"]"}},StringValue:class{constructor(T){e(this,T)}toString(){return"'"+this.value.toString()+"'"}toType(){return"string"}toJS(){return"'"+T2(this.value)+"'"}},Table:class{constructor(T){e(this,T)}toString(){var T=this.tableid;return this.databaseid&&(T=this.databaseid+"."+T),T}},UniOp:class{constructor(T){e(this,T)}toString(){var T;let{op:S1,right:A1}=this,y=A1.toString();return"~"===S1&&(T=S1+y),"-"===S1&&(T=S1+y),"+"===S1&&(T=S1+y),"#"===S1&&(T=S1+y),"NOT"===S1&&(T=S1+"("+y+")"),null===S1&&(T="("+y+")"),T||(T="("+y+")"),T}findAggregator(T){this.right.findAggregator&&this.right.findAggregator(T)}toType(){return"-"===this.op||"+"===this.op?"number":"NOT"===this.op?"boolean":void 0}toJS(T,S1,A1){return"~"===this.op?"(~("+this.right.toJS(T,S1,A1)+"))":"-"===this.op?"(-("+this.right.toJS(T,S1,A1)+"))":"+"===this.op?"("+this.right.toJS(T,S1,A1)+")":"NOT"===this.op?"!("+this.right.toJS(T,S1,A1)+")":"#"===this.op?this.right instanceof O?"(alasql.databases[alasql.useid].objects['"+this.right.columnid+"'])":"(alasql.databases[alasql.useid].objects["+this.right.toJS(T,S1,A1)+"])":null==this.op?"("+this.right.toJS(T,S1,A1)+")":void 0}},VarValue:class{constructor(T){e(this,T)}toString(){return"@"+this.variable}toType(){return"unknown"}toJS(){return"alasql.vars['"+T2(this.variable)+"']"}},View:class{constructor(T){e(this,T)}toString(){var T=this.viewid;return this.databaseid&&(T=this.databaseid+"."+T),T}}})}S.FromData=function(e){return S.extend(this,e)},S.FromData.prototype.toString=function(){return this.data?"DATA("+(1e16*Math.random()|0)+")":"?"},S.FromData.prototype.toJS=function(){},S.Select.prototype.exec=function(e,n){this.preparams&&(e=this.preparams.concat(e));var t=u.useid,r=u.databases[t],i=this.toString(),a=nt(i),f=this.compile(t);if(f)return f.sql=i,f.dbversion=r.dbversion,r.sqlCacheSize>u.MAXSQLCACHESIZE&&r.resetSqlCache(),r.sqlCacheSize++,r.sqlCache[a]=f,u.res=f(e,n)},S.Select.prototype.Select=function(){var e=this,n=[];if(arguments.length>1)n=Array.prototype.slice.call(arguments);else if(1==arguments.length)n=Array.isArray(arguments[0])?arguments[0]:[arguments[0]];else throw Error("Wrong number of arguments of Select() function");return e.columns=[],n.forEach(function(t){if("string"==typeof t)e.columns.push(new S.Column({columnid:t}));else if("function"==typeof t){var r=0;e.preparams?r=e.preparams.length:e.preparams=[],e.preparams.push(t),e.columns.push(new S.Column({columnid:"*",func:t,param:r}))}}),e},S.Select.prototype.From=function(e){if(this.from||(this.from=[]),Array.isArray(e)){var t=0;this.preparams?t=this.preparams.length:this.preparams=[],this.preparams.push(e),this.from.push(new S.ParamValue({param:t}))}else if("string"==typeof e)this.from.push(new S.Table({tableid:e}));else throw Error("Unknown arguments in From() function");return this},S.Select.prototype.OrderBy=function(){var e=this,n=[];if(e.order=[],0==arguments.length)n=["_"];else if(arguments.length>1)n=Array.prototype.slice.call(arguments);else if(1==arguments.length)n=Array.isArray(arguments[0])?arguments[0]:[arguments[0]];else throw Error("Wrong number of arguments of Select() function");return n.length>0&&n.forEach(function(t){var r=new S.Column({columnid:t});"function"==typeof t&&(r=t),e.order.push(new S.OrderExpression({expression:r,direction:"ASC"}))}),e},S.Select.prototype.Top=function(e){return this.top=new S.NumValue({value:e}),this},S.Select.prototype.GroupBy=function(){var e=this,n=[];if(arguments.length>1)n=Array.prototype.slice.call(arguments);else if(1==arguments.length)n=Array.isArray(arguments[0])?arguments[0]:[arguments[0]];else throw Error("Wrong number of arguments of Select() function");return e.group=[],n.forEach(function(t){var r=new S.Column({columnid:t});e.group.push(r)}),e},S.Select.prototype.Where=function(e){return"function"==typeof e&&(this.where=e),this},S.FuncValue=function(e){return Object.assign(this,e)};let pr=/[^0-9A-Z_$]+/i;S.FuncValue.prototype.toString=function(){let e="";return u.fn[this.funcid]?e+=this.funcid:u.aggr[this.funcid]?e+=this.funcid:(u.stdlib[this.funcid.toUpperCase()]||u.stdfn[this.funcid.toUpperCase()])&&(e+=this.funcid.toUpperCase().replace(pr,"")),"CURRENT_TIMESTAMP"!==this.funcid&&(e+="(",this.args&&this.args.length>0&&(e+=this.args.map(function(n){return n.toString()}).join(",")),e+=")"),e},S.FuncValue.prototype.execute=function(e,n,t){let r=1;return u.precompile(this,e,n),Function("params,alasql","var y;return "+this.toJS("","",null))(n,u),t&&(r=t(r)),r},S.FuncValue.prototype.findAggregator=function(e){this.args&&this.args.length>0&&this.args.forEach(function(n){n.findAggregator&&n.findAggregator(e)})},S.FuncValue.prototype.toJS=function(e,n,t){var r="",i=this.funcid;return!u.fn[i]&&u.stdlib[i.toUpperCase()]?this.args&&this.args.length>0?r+=u.stdlib[i.toUpperCase()].apply(this,this.args.map(function(a){return a.toJS(e,n)})):r+=u.stdlib[i.toUpperCase()]():(!u.fn[i]&&u.stdfn[i.toUpperCase()]?(this.newid&&(r+="new "),r+="alasql.stdfn["+JSON.stringify(this.funcid.toUpperCase())+"](",this.args&&this.args.length>0&&(r+=this.args.map(function(a){return a.toJS(e,n,t)}).join(","))):(this.newid&&(r+="new "),r+="alasql.fn["+JSON.stringify(this.funcid)+"](",this.args&&this.args.length>0&&(r+=this.args.map(function(a){return a.toJS(e,n,t)}).join(","))),r+=")"),r};var O2=u.stdlib={},L2=u.stdfn={};O2.ABS=function(e){return"Math.abs("+e+")"},O2.CLONEDEEP=function(e){return"alasql.utils.cloneDeep("+e+")"},L2.CONCAT=function(){return Array.prototype.slice.call(arguments).join("")},O2.EXP=function(e){return"Math.pow(Math.E,"+e+")"},O2.IIF=function(e,n,t){if(3==arguments.length)return"(("+e+")?("+n+"):("+t+"))";throw Error("Number of arguments of IFF is not equals to 3")},O2.IFNULL=function(e,n){return"((typeof "+e+' ==="undefined" || null ===  '+e+")?"+n+":"+e+")"},O2.INSTR=function(e,n){return"(("+e+").indexOf("+n+")+1)"},O2.LEN=O2.LENGTH=function(e){return kt(e,"y.length")},O2.LOWER=O2.LCASE=function(e){return kt(e,"String(y).toLowerCase()")},O2.LTRIM=function(e){return kt(e,'y.replace(/^[ ]+/,"")')},O2.RTRIM=function(e){return kt(e,'y.replace(/[ ]+$/,"")')},O2.MAX=O2.GREATEST=function(){return"["+Array.prototype.join.call(arguments,",")+"].reduce(function (a, b) { return a > b ? a : b; })"},O2.MIN=O2.LEAST=function(){return"["+Array.prototype.join.call(arguments,",")+"].reduce(function (a, b) { return a < b ? a : b; })"},O2.SUBSTRING=O2.SUBSTR=O2.MID=function(e,n,t){return 2==arguments.length?kt(e,"y.substr("+n+"-1)"):3==arguments.length?kt(e,"y.substr("+n+"-1,"+t+")"):void 0},L2.REGEXP_LIKE=function(e,n,t){return(e||"").search(RegExp(n,t))>-1},O2.ISNULL=O2.NULLIF=function(e,n){return"("+e+"=="+n+"?undefined:"+e+")"},O2.POWER=function(e,n){return"Math.pow("+e+","+n+")"},O2.RANDOM=function(e){return 0==arguments.length?"Math.random()":"(Math.random()*("+e+")|0)"},O2.ROUND=function(e,n){return 2==arguments.length?"Math.round(("+e+")*Math.pow(10,("+n+")))/Math.pow(10,("+n+"))":"Math.round("+e+")"},O2.CEIL=O2.CEILING=function(e){return"Math.ceil("+e+")"},O2.FLOOR=function(e){return"Math.floor("+e+")"},O2.ROWNUM=function(){return"1"},O2.ROW_NUMBER=function(){return"1"},O2.SQRT=function(e){return"Math.sqrt("+e+")"},O2.TRIM=function(e){return kt(e,"y.trim()")},O2.UPPER=O2.UCASE=function(e){return kt(e,"String(y).toUpperCase()")},L2.CONCAT_WS=function(){var e=Array.prototype.slice.call(arguments);return(e=e.filter(n=>!(null===n||typeof n>"u"))).slice(1,e.length).join(e[0]||"")},u.aggr.GROUP_CONCAT=function(e,n,t){return 1===t?""+e:(2===t&&(n+=","+e),n)},u.aggr.median=u.aggr.MEDIAN=function(e,n,t){if(2===t)return null!==e&&n.push(e),n;if(1===t)return null===e?[]:[e];if(!n.length)return null;var r=n.sort((l,h)=>l>h?1:l<h?-1:0),i=(r.length+1)/2,a=0|i,f=r[a-1];return i!==a&&("number"==typeof f||f instanceof Number)?(f+r[a])/2:f},u.aggr.QUART=function(e,n,t,r){if(2===t)return null!==e&&n.push(e),n;if(1===t)return null===e?[]:[e];if(!n.length)return n;r=r||1;var i=n.sort(function(f,l){return f===l?0:f>l?1:-1}),a=r*(i.length+1)/4;return Number.isInteger(a)?i[a-1]:i[Math.floor(a)]},u.aggr.QUART2=function(e,n,t){return u.aggr.QUART(e,n,t,2)},u.aggr.QUART3=function(e,n,t){return u.aggr.QUART(e,n,t,3)},u.aggr.VAR=function(e,n,t){if(1===t)return null===e?{arr:[],sum:0}:{arr:[e],sum:e};if(2===t)return null===e||(n.arr.push(e),n.sum+=e),n;for(var r=n.arr.length,i=n.sum/r,a=0,f=0;f<r;f++)a+=(n.arr[f]-i)*(n.arr[f]-i);return a/(r-1)},u.aggr.STDEV=function(e,n,t){return 1===t||2===t?u.aggr.VAR(e,n,t):Math.sqrt(u.aggr.VAR(e,n,t))},u.aggr.VARP=function(e,n,t){if(1==t)return{arr:[e],sum:e};if(2==t)return n.arr.push(e),n.sum+=e,n;for(var r=n.arr.length,i=n.sum/r,a=0,f=0;f<r;f++)a+=(n.arr[f]-i)*(n.arr[f]-i);return a/r},u.aggr.STD=u.aggr.STDDEV=u.aggr.STDEVP=function(e,n,t){return 1==t||2==t?u.aggr.VARP(e,n,t):Math.sqrt(u.aggr.VARP(e,n,t))},u._aggrOriginal=u.aggr,u.aggr={},Object.keys(u._aggrOriginal).forEach(function(e){u.aggr[e]=function(n,t,r){if(!(3===r&&typeof t>"u"))return u._aggrOriginal[e].apply(null,arguments)}}),L2.REPLACE=function(e,n,t){return(e||"").split(n).join(t)};for(var X2=[],d3=0;d3<256;d3++)X2[d3]=(d3<16?"0":"")+d3.toString(16);L2.NEWID=L2.UUID=L2.GEN_RANDOM_UUID=function(){var e=4294967295*Math.random()|0,n=4294967295*Math.random()|0,t=4294967295*Math.random()|0,r=4294967295*Math.random()|0;return X2[255&e]+X2[e>>8&255]+X2[e>>16&255]+X2[e>>24&255]+"-"+X2[255&n]+X2[n>>8&255]+"-"+X2[n>>16&15|64]+X2[n>>24&255]+"-"+X2[63&t|128]+X2[t>>8&255]+"-"+X2[t>>16&255]+X2[t>>24&255]+X2[255&r]+X2[r>>8&255]+X2[r>>16&255]+X2[r>>24&255]},S.CaseValue=function(e){return Object.assign(this,e)},S.CaseValue.prototype.toString=function(){var e="CASE ";return this.expression&&(e+=this.expression.toString()),this.whens&&(e+=this.whens.map(function(n){return" WHEN "+n.when.toString()+" THEN "+n.then.toString()}).join()),e+=" END"},S.CaseValue.prototype.findAggregator=function(e){this.expression&&this.expression.findAggregator&&this.expression.findAggregator(e),this.whens&&this.whens.length>0&&this.whens.forEach(function(n){n.when.findAggregator&&n.when.findAggregator(e),n.then.findAggregator&&n.then.findAggregator(e)}),this.elses&&this.elses.findAggregator&&this.elses.findAggregator(e)},S.CaseValue.prototype.toJS=function(e,n,t){var r="((function("+e+",params,alasql){var y,r;";return this.expression?r+="v="+this.expression.toJS(e,n,t)+";"+(this.whens||[]).map(function(i){return" if(v=="+i.when.toJS(e,n,t)+") {r="+i.then.toJS(e,n,t)+"}"}).join(" else "):r+=(this.whens||[]).map(function(i){return" if("+i.when.toJS(e,n,t)+") {r="+i.then.toJS(e,n,t)+"}"}).join(" else "),this.elses&&(r+=" else {r="+this.elses.toJS(e,n,t)+"}"),r+=";return r;}).bind(this))("+e+",params,alasql)"},S.Json=function(e){return Object.assign(this,e)},S.Json.prototype.toString=function(){return""+mt(this.value)};var mt=u.utils.JSONtoString=function(e){var n="";if("string"==typeof e)n='"'+e+'"';else if("number"==typeof e)n=e;else if("boolean"==typeof e)n=e;else if("object"==typeof e){if(Array.isArray(e))n+="["+e.map(function(a){return mt(a)}).join(",")+"]";else if(!e.toJS||e instanceof S.Json){n="{";var t=[];for(var r in e){var i="";if("string"==typeof r)i+='"'+r+'"';else if("number"==typeof r)i+=r;else if("boolean"==typeof r)i+=r;else throw Error("THis is not ES6... no expressions on left side yet");i+=":"+mt(e[r]),t.push(i)}n+=t.join(",")+"}"}else if(e.toString)n=e.toString();else throw Error("1Can not show JSON object "+JSON.stringify(e))}else throw Error("2Can not show JSON object "+JSON.stringify(e));return n};function _3(e,n,t,r){var i="";if("string"==typeof e)i='"'+e+'"';else if("number"==typeof e)i="("+e+")";else if("boolean"==typeof e)i=e;else if("object"==typeof e){if(Array.isArray(e))i+="["+e.map(function(h){return _3(h,n,t,r)}).join(",")+"]";else if(!e.toJS||e instanceof S.Json){i="{";var a=[];for(var f in e){var l="";if("string"==typeof f)l+='"'+f+'"';else if("number"==typeof f)l+=f;else if("boolean"==typeof f)l+=f;else throw Error("THis is not ES6... no expressions on left side yet");l+=":"+_3(e[f],n,t,r),a.push(l)}i+=a.join(",")+"}"}else if(e.toJS)i=e.toJS(n,t,r);else throw Error("1Can not parse JSON object "+JSON.stringify(e))}else throw Error("2Can not parse JSON object "+JSON.stringify(e));return i}function Ti(e){var n=e.getMonth()+1,t=e.getYear(),r=e.getFullYear(),i=e.getDate(),a=e.toString().substr(4,3),f=("0"+i).substr(-2),l=("0"+n).substr(-2),h=("0"+t).substr(-2);return{month:n,year:t,fullYear:r,date:i,day:a,formattedDate:f,formattedMonth:l,formattedYear:h,formattedHour:("0"+e.getHours()).substr(-2),formattedMinutes:("0"+e.getMinutes()).substr(-2),formattedSeconds:("0"+e.getSeconds()).substr(-2),formattedMilliseconds:("00"+e.getMilliseconds()).substr(-3)}}S.Json.prototype.toJS=function(e,n,t){return _3(this.value,e,n,t)},S.Convert=function(e){return Object.assign(this,e)},S.Convert.prototype.toString=function(){var e="CONVERT(";return e+=this.dbtypeid,"u">typeof this.dbsize&&(e+="("+this.dbsize,this.dbprecision&&(e+=","+this.dbprecision),e+=")"),e+=","+this.expression.toString(),this.style&&(e+=","+this.style),e+=")"},S.Convert.prototype.toJS=function(e,n,t){return"alasql.stdfn.CONVERT("+this.expression.toJS(e,n,t)+',{dbtypeid:"'+this.dbtypeid+'",dbsize:'+this.dbsize+",dbprecision:"+this.dbprecision+",style:"+this.style+"})"},u.stdfn.CONVERT=function(e,n){var i,a,t=e,r=n.dbtypeid?.toUpperCase();if((n.style||"Date"==n.dbtypeid||["DATE","DATETIME","DATETIME2"].indexOf(r)>-1)&&(a=Ti(i=/\d{8}/.test(t)?new Date(+t.substr(0,4),+t.substr(4,2)-1,+t.substr(6,2)):Ke(t))),n.style)switch(n.style){case 1:t=a.formattedMonth+"/"+a.formattedDate+"/"+a.formattedYear;break;case 2:t=a.formattedYear+"."+a.formattedMonth+"."+a.formattedDate;break;case 3:t=a.formattedDate+"/"+a.formattedMonth+"/"+a.formattedYear;break;case 4:t=a.formattedDate+"."+a.formattedMonth+"."+a.formattedYear;break;case 5:t=a.formattedDate+"-"+a.formattedMonth+"-"+a.formattedYear;break;case 6:t=a.formattedDate+" "+a.day.toLowerCase()+" "+a.formattedYear;break;case 7:t=a.day+" "+a.formattedDate+","+a.formattedYear;break;case 8:case 108:t=a.formattedHour+":"+a.formattedMinutes+":"+a.formattedSeconds;break;case 10:t=a.formattedMonth+"-"+a.formattedDate+"-"+a.formattedYear;break;case 11:t=a.formattedYear+"/"+a.formattedMonth+"/"+a.formattedDate;break;case 12:t=a.formattedYear+a.formattedMonth+a.formattedDate;break;case 101:t=a.formattedMonth+"/"+a.formattedDate+"/"+a.fullYear;break;case 102:t=a.fullYear+"."+a.formattedMonth+"."+a.formattedDate;break;case 103:t=a.formattedDate+"/"+a.formattedMonth+"/"+a.fullYear;break;case 104:t=a.formattedDate+"."+a.formattedMonth+"."+a.fullYear;break;case 105:t=a.formattedDate+"-"+a.formattedMonth+"-"+a.fullYear;break;case 106:t=a.formattedDate+" "+a.day.toLowerCase()+" "+a.fullYear;break;case 107:t=a.day+" "+a.formattedDate+","+a.fullYear;break;case 110:t=a.formattedMonth+"-"+a.formattedDate+"-"+a.fullYear;break;case 111:t=a.fullYear+"/"+a.formattedMonth+"/"+a.formattedDate;break;case 112:t=a.fullYear+a.formattedMonth+a.formattedDate;break;default:throw Error("The CONVERT style "+n.style+" is not realized yet.")}if("Date"==n.dbtypeid)return i;if("DATE"==r)return a.formattedYear+"."+a.formattedMonth+"."+a.formattedDate;if("DATETIME"==r||"DATETIME2"==r)return a.fullYear+"."+a.formattedMonth+"."+a.formattedDate+(" "+a.formattedHour+":"+a.formattedMinutes+":"+a.formattedSeconds)+"."+a.formattedMilliseconds;if(["MONEY"].indexOf(r)>-1){var l=+t;return(0|l)+100*l%100/100}if(["BOOLEAN"].indexOf(r)>-1)return!!t;if(["INT","INTEGER","SMALLINT","BIGINT","SERIAL","SMALLSERIAL","BIGSERIAL"].indexOf(n.dbtypeid.toUpperCase())>-1)return 0|t;if(["STRING","VARCHAR","NVARCHAR","CHARACTER VARIABLE"].indexOf(n.dbtypeid.toUpperCase())>-1)return n.dbsize?(""+t).substr(0,n.dbsize):""+t;if(["CHAR","CHARACTER","NCHAR"].indexOf(r)>-1)return(t+Array(n.dbsize+1).join(" ")).substr(0,n.dbsize);if(["NUMBER","FLOAT","DECIMAL","NUMERIC"].indexOf(r)>-1){var l=+t;return l=void 0!==n.dbsize?parseFloat(l.toPrecision(n.dbsize)):l,l=void 0!==n.dbprecision?parseFloat(l.toFixed(n.dbprecision)):l}if(["JSON"].indexOf(r)>-1){if("object"==typeof t)return t;try{return JSON.parse(t)}catch{throw Error("Cannot convert string to JSON")}}return t},S.ColumnDef=function(e){return Object.assign(this,e)},S.ColumnDef.prototype.toString=function(){var e=this.columnid;return this.dbtypeid&&(e+=" "+this.dbtypeid),this.dbsize&&(e+="("+this.dbsize,this.dbprecision&&(e+=","+this.dbprecision),e+=")"),this.primarykey&&(e+=" PRIMARY KEY"),this.notnull&&(e+=" NOT NULL"),e},S.CreateTable=function(e){return Object.assign(this,e)},S.CreateTable.prototype.toString=function(){var e="CREATE";return(this.temporary&&(e+=" TEMPORARY"),this.view?e+=" VIEW":e+=" "+(this.class?"CLASS":"TABLE"),this.ifnotexists&&(e+=" IF  NOT EXISTS"),e+=" "+this.table.toString(),this.viewcolumns&&(e+="("+this.viewcolumns.map(function(t){return t.toString()}).join(",")+")"),this.as)?e+=" AS "+this.as:e+=" ("+this.columns.map(function(t){return t.toString()}).join(",")+")",this.view&&this.select&&(e+=" AS "+this.select.toString()),e},S.CreateTable.prototype.execute=function(e,n,t){var b,r=u.databases[this.table.databaseid||e],i=this.table.tableid;if(!i)throw Error("Table name is not defined");var a=this.columns,f=this.constraints||[];if(this.ifnotexists&&r.tables[i])return t?t(0):0;if(r.tables[i])throw Error("Can not create table '"+i+"', because it already exists in the database '"+r.databaseid+"'");var l=r.tables[i]=new u.Table;this.class&&(l.isclass=!0);var h=[],g=[];if(a&&a.forEach(function(c){var d=c.dbtypeid;u.fn[d]||(d=d.toUpperCase()),["SERIAL","SMALLSERIAL","BIGSERIAL"].indexOf(d)>-1&&(c.identity={value:1,step:1});var N={columnid:c.columnid,dbtypeid:d,dbsize:c.dbsize,dbprecision:c.dbprecision,notnull:c.notnull,identity:c.identity};if(c.identity&&(l.identities[c.columnid]={value:+c.identity.value,step:+c.identity.step}),c.check&&l.checks.push({id:c.check.constrantid,fn:Function("r","var y;return "+c.check.expression.toJS("r",""))}),c.default&&h.push(JSON.stringify(""+c.columnid)+":"+c.default.toJS("r","")),c.primarykey){var E=l.pk={};E.columns=[c.columnid],E.onrightfns=`r[${JSON.stringify(c.columnid)}]`,E.onrightfn=Function("r","var y;return "+E.onrightfns),E.hh=nt(E.onrightfns),l.uniqs[E.hh]={}}if(c.unique){var R={};l.uk=l.uk||[],l.uk.push(R),R.columns=[c.columnid],R.onrightfns=`r[${JSON.stringify(c.columnid)}]`,R.onrightfn=Function("r","var y;return "+R.onrightfns),R.hh=nt(R.onrightfns),l.uniqs[R.hh]={}}if(c.foreignkey){var A=c.foreignkey.table,O=u.databases[A.databaseid||e].tables[A.tableid];if(typeof A.columnid>"u"){if(O.pk.columns&&O.pk.columns.length>0)A.columnid=O.pk.columns[0];else throw Error("FOREIGN KEY allowed only to tables with PRIMARY KEYs")}l.checks.push({fn:function(V){var T1={};if(typeof V[c.columnid]>"u")return!0;T1[A.columnid]=V[c.columnid];var C1=O.pk.onrightfn(T1);if(!O.uniqs[O.pk.hh][C1])throw Error("Foreign key violation");return!0}})}c.onupdate&&g.push(`r[${JSON.stringify(c.columnid)}]=`+c.onupdate.toJS("r","")),l.columns.push(N),l.xcolumns[N.columnid]=N}),l.defaultfns=h.join(","),l.onupdatefns=g.join(";"),f.forEach(function(c){var d;if("PRIMARY KEY"===c.type){if(l.pk)throw Error("Primary key already exists");var N=l.pk={};N.columns=c.columns,N.onrightfns=N.columns.map(function(O){return`r[${JSON.stringify(O)}]`}).join("+'`'+"),N.onrightfn=Function("r","var y;return "+N.onrightfns),N.hh=nt(N.onrightfns),l.uniqs[N.hh]={}}else if("CHECK"===c.type)d=Function("r","var y;return "+c.expression.toJS("r",""));else if("UNIQUE"===c.type){var E={};l.uk=l.uk||[],l.uk.push(E),E.columns=c.columns,E.onrightfns=E.columns.map(function(O){return`r[${JSON.stringify(O)}]`}).join("+'`'+"),E.onrightfn=Function("r","var y;return "+E.onrightfns),E.hh=nt(E.onrightfns),l.uniqs[E.hh]={}}else if("FOREIGN KEY"===c.type){var R=c.fktable;c.fkcolumns&&c.fkcolumns.length>0&&(R.fkcolumns=c.fkcolumns);var A=u.databases[R.databaseid||e].tables[R.tableid];if(typeof R.fkcolumns>"u"&&(R.fkcolumns=A.pk.columns),R.columns=c.columns,R.fkcolumns.length>R.columns.length)throw Error("Invalid foreign key on table "+l.tableid);d=function(O){var C={};if(R.fkcolumns.forEach(function(C1,T){null!=O[R.columns[T]]&&(C[C1]=O[R.columns[T]])}),0===Object.keys(C).length)return!0;if(Object.keys(C).length!==R.columns.length)throw Error("Invalid foreign key on table "+l.tableid);var V=u.databases[R.databaseid||e].tables[R.tableid],T1=V.pk.onrightfn(C);if(!V.uniqs[V.pk.hh][T1])throw Error("Foreign key violation");return!0}}d&&l.checks.push({fn:d,id:c.constraintid,fk:"FOREIGN KEY"===c.type})}),this.view&&this.viewcolumns){var m=this;this.viewcolumns.forEach(function(c,d){m.select.columns[d].as=c.columnid})}return(this.view&&this.select&&(l.view=!0,l.select=this.select.compile(this.table.databaseid||e)),r.engineid)?u.engines[r.engineid].createTable(this.table.databaseid||e,i,this.ifnotexists,t):(l.insert=function(c,d){var N=u.inserted;u.inserted=[c];var E=this,R=!1,A=!1;for(var O in E.beforeinsert){var C=E.beforeinsert[O];C&&(C.funcid?!1===u.fn[C.funcid](c)&&(A=A||!0):C.statement&&!1===C.statement.execute(e)&&(A=A||!0))}if(!A){var V=!1;for(O in E.insteadofinsert)V=!0,(C=E.insteadofinsert[O])&&(C.funcid?u.fn[C.funcid](c):C.statement&&C.statement.execute(e));if(!V){for(var T1 in E.identities){var C1=E.identities[T1];c[T1]=C1.value}if(E.checks&&E.checks.length>0&&E.checks.forEach(function(A1){if(!A1.fn(c))throw Error("Violation of CHECK constraint "+(A1.id||""))}),E.columns.forEach(function(A1){if(A1.notnull&&typeof c[A1.columnid]>"u")throw Error("Wrong NULL value in NOT NULL column "+A1.columnid)}),E.pk){var T=E.pk,S1=T.onrightfn(c);if("u">typeof E.uniqs[T.hh][S1]){if(d)R=E.uniqs[T.hh][S1];else throw Error("Cannot insert record, because it already exists in primary key index")}}if(E.uk&&E.uk.length&&E.uk.forEach(function(A1){var y=A1.onrightfn(c);if("u">typeof E.uniqs[A1.hh][y]){if(d)R=E.uniqs[A1.hh][y];else throw Error("Cannot insert record, because it already exists in unique index")}}),R)E.update(function(A1){for(var y in c)A1[y]=c[y]},E.data.indexOf(R),n);else{for(var T1 in E.data.push(c),E.identities){var C1=E.identities[T1];C1.value+=C1.step}if(E.pk){var T=E.pk,S1=T.onrightfn(c);E.uniqs[T.hh][S1]=c}E.uk&&E.uk.length&&E.uk.forEach(function(A1){var y=A1.onrightfn(c);E.uniqs[A1.hh][y]=c})}for(var O in E.afterinsert){var C=E.afterinsert[O];C&&(C.funcid?u.fn[C.funcid](c):C.statement&&C.statement.execute(e))}u.inserted=N}}},l.delete=function(c){var d=this,N=d.data[c],E=!1;for(var R in d.beforedelete){var A=d.beforedelete[R];A&&(A.funcid?!1===u.fn[A.funcid](N)&&(E=E||!0):A.statement&&!1===A.statement.execute(e)&&(E=E||!0))}if(E)return!1;var O=!1;for(var R in d.insteadofdelete){O=!0;var A=d.insteadofdelete[R];A&&(A.funcid?u.fn[A.funcid](N):A.statement&&A.statement.execute(e))}if(!O){if(this.pk){var C=this.pk,V=C.onrightfn(N);if(typeof this.uniqs[C.hh][V]>"u")throw Error("Something wrong with primary key index on table");this.uniqs[C.hh][V]=void 0}d.uk&&d.uk.length&&d.uk.forEach(function(T1){var C1=T1.onrightfn(N);if(typeof d.uniqs[T1.hh][C1]>"u")throw Error("Something wrong with unique index on table");d.uniqs[T1.hh][C1]=void 0})}},l.deleteall=function(){this.data.length=0,this.pk&&(this.uniqs[this.pk.hh]={}),l.uk&&l.uk.length&&l.uk.forEach(function(c){l.uniqs[c.hh]={}})},l.update=function(c,d,N){var R,E=Bt(this.data[d]);if(this.pk&&((R=this.pk).pkaddr=R.onrightfn(E,N),typeof this.uniqs[R.hh][R.pkaddr]>"u"))throw Error("Something wrong with index on table");l.uk&&l.uk.length&&l.uk.forEach(function(T1){if(T1.ukaddr=T1.onrightfn(E),typeof l.uniqs[T1.hh][T1.ukaddr]>"u")throw Error("Something wrong with unique index on table")}),c(E,N,u);var A=!1;for(var O in l.beforeupdate){var C=l.beforeupdate[O];C&&(C.funcid?!1===u.fn[C.funcid](this.data[d],E)&&(A=A||!0):C.statement&&!1===C.statement.execute(e)&&(A=A||!0))}if(A)return!1;var V=!1;for(var O in l.insteadofupdate){V=!0;var C=l.insteadofupdate[O];C&&(C.funcid?u.fn[C.funcid](this.data[d],E):C.statement&&C.statement.execute(e))}if(!V){if(l.checks&&l.checks.length>0&&l.checks.forEach(function(T1){if(!T1.fn(E))throw Error("Violation of CHECK constraint "+(T1.id||""))}),l.columns.forEach(function(T1){if(T1.notnull&&typeof E[T1.columnid]>"u")throw Error("Wrong NULL value in NOT NULL column "+T1.columnid)}),this.pk&&(R.newpkaddr=R.onrightfn(E),"u">typeof this.uniqs[R.hh][R.newpkaddr]&&R.newpkaddr!==R.pkaddr))throw Error("Record already exists");for(var O in l.uk&&l.uk.length&&l.uk.forEach(function(T1){if(T1.newukaddr=T1.onrightfn(E),"u">typeof l.uniqs[T1.hh][T1.newukaddr]&&T1.newukaddr!==T1.ukaddr)throw Error("Record already exists")}),this.pk&&(this.uniqs[R.hh][R.pkaddr]=void 0,this.uniqs[R.hh][R.newpkaddr]=E),l.uk&&l.uk.length&&l.uk.forEach(function(T1){l.uniqs[T1.hh][T1.ukaddr]=void 0,l.uniqs[T1.hh][T1.newukaddr]=E}),this.data[d]=E,l.afterupdate){var C=l.afterupdate[O];C&&(C.funcid?u.fn[C.funcid](this.data[d],E):C.statement&&C.statement.execute(e))}}},u.options.nocount||(b=1),t&&(b=t(b)),b)},u.fn.Date=Object,u.fn.Date=Date,u.fn.Number=Number,u.fn.String=String,u.fn.Boolean=Boolean,L2.EXTEND=u.utils.extend,L2.CHAR=String.fromCharCode.bind(String),L2.ASCII=function(e){return e.charCodeAt(0)},L2.COALESCE=function(){for(var e=0;e<arguments.length;e++)if(null!==arguments[e]&&!(typeof arguments[e]>"u")&&!("number"==typeof arguments[e]&&isNaN(arguments[e])))return arguments[e]},L2.USER=function(){return"alasql"},L2.OBJECT_ID=function(e){return!!u.tables[e]},L2.DATE=function(e){return isNaN(e)||8!==e.length?Ke(e):new Date(+e.substr(0,4),+e.substr(4,2)-1,+e.substr(6,2))},L2.NOW=function(){if(u.options.dateAsString){var e=new Date;return e.getFullYear()+"-"+("0"+(e.getMonth()+1)).substr(-2)+"-"+("0"+e.getDate()).substr(-2)+(" "+("0"+e.getHours()).substr(-2)+":"+("0"+e.getMinutes()).substr(-2)+":"+("0"+e.getSeconds()).substr(-2))+"."+("00"+e.getMilliseconds()).substr(-3)}return new Date},L2.GETDATE=L2.NOW,L2.CURRENT_TIMESTAMP=L2.NOW,L2.SECOND=function(n){var n=Ke(n);return n.getSeconds()},L2.MINUTE=function(n){var n=Ke(n);return n.getMinutes()},L2.HOUR=function(n){var n=Ke(n);return n.getHours()},L2.DAYOFWEEK=L2.WEEKDAY=function(n){var n=Ke(n);return n.getDay()},L2.DAY=L2.DAYOFMONTH=function(n){var n=Ke(n);return n.getDate()},L2.MONTH=function(n){var n=Ke(n);return n.getMonth()+1},L2.YEAR=function(n){var n=Ke(n);return n.getFullYear()};var A4={year:31536e6,quarter:7884e6,month:2592e6,week:6048e5,day:864e5,dayofyear:864e5,weekday:864e5,hour:36e5,minute:6e4,second:1e3,millisecond:1,microsecond:.001};u.stdfn.DATEDIFF=function(e,n,t){return(Ke(t).getTime()-Ke(n).getTime())/A4[e.toLowerCase()]|0},u.stdfn.DATEADD=function(i,n,t){var r=Ke(t),i=i.toLowerCase();switch(i){case"year":r.setFullYear(r.getFullYear()+n);break;case"quarter":r.setMonth(r.getMonth()+3*n);break;case"month":r.setMonth(r.getMonth()+n);break;default:r=new Date(r.getTime()+n*A4[i])}return r},u.stdfn.INTERVAL=function(e,n){return e*A4[n.toLowerCase()]},u.stdfn.DATE_ADD=u.stdfn.ADDDATE=function(e,n){return new Date(Ke(e).getTime()+n)},u.stdfn.DATE_SUB=u.stdfn.SUBDATE=function(e,n){return new Date(Ke(e).getTime()-n)};var Ai=/^\d{4}\.\d{2}\.\d{2} \d{2}:\d{2}:\d{2}/;function Ke(e){return"string"==typeof e&&Ai.test(e)&&(e=e.replace(".","-").replace(".","-")),new Date(e)}function N4(e){var n="";if(void 0===e)n+="undefined";else if(Array.isArray(e)){n+="<style>table {border:1px black solid; border-collapse: collapse; border-spacing: 0px;}td,th {border:1px black solid; padding-left:5px; padding-right:5px}th {background-color: #EEE}</style><table>";var t=[];for(var r in e[0])t.push(r);n+="<tr><th>#",t.forEach(function(f){n+="<th>"+f});for(var i=0,a=e.length;i<a;i++)n+="<tr><th>"+(i+1),t.forEach(function(f){n+="<td> ",e[i][f]==+e[i][f]?(n+='<div style="text-align:right">',typeof e[i][f]>"u"?n+="NULL":n+=e[i][f],n+="</div>"):typeof e[i][f]>"u"?n+="NULL":"string"==typeof e[i][f]?n+=e[i][f]:n+=mt(e[i][f])});n+="</table>"}else n+="<p>"+mt(e)+"</p>";return n}function O4(e,n,t){if(!(t<=0)){var i=(n-e.scrollTop)/t*10;setTimeout(function(){e.scrollTop!==n&&(e.scrollTop=e.scrollTop+i,O4(e,n,t-10))},10)}}function C4(e,n,t,r,i,a){var l,f={};function h(m){for(var b="",c=0;c<m.byteLength/10240;++c)b+=String.fromCharCode.apply(null,new Uint8Array(m.slice(10240*c,10240*c+10240)));return b+String.fromCharCode.apply(null,new Uint8Array(m.slice(10240*c)))}function g(m){return m&&!1===u.options.casesensitive?m.toLowerCase():m}return t=t||{},u.utils.extend(f,t),typeof f.headers>"u"&&(f.headers=!0),n=u.utils.autoExtFilename(n,"xls",t),u.utils.loadBinaryFile(n,!!r,function(m){if(m instanceof ArrayBuffer)var b=h(m),c=e.read(btoa(b),{type:"base64",...u.options.excel,...t});else var c=e.read(m,{type:"binary",...u.options.excel,...t});d=typeof f.sheetid>"u"?c.SheetNames[0]:"number"==typeof f.sheetid?c.SheetNames[f.sheetid]:f.sheetid;var d,N,E=[];if(typeof f.range>"u"?N=c.Sheets[d]["!ref"]:(N=f.range,c.Sheets[d][N]&&(N=c.Sheets[d][N])),N){for(var R=N.split(":"),A=R[0].match(/[A-Z]+/)[0],O=+R[0].match(/[0-9]+/)[0],C=R[1].match(/[A-Z]+/)[0],V=+R[1].match(/[0-9]+/)[0],T1={},C1=u.utils.xlscn(A),T=u.utils.xlscn(C),S1=C1;S1<=T;S1++){var A1=u.utils.xlsnc(S1);f.headers?c.Sheets[d][A1+""+O]?T1[A1]=g(c.Sheets[d][A1+""+O].v):T1[A1]=g(A1):T1[A1]=A1}f.headers&&O++;for(var y=O;y<=V;y++){for(var d2={},S1=C1;S1<=T;S1++){var A1=u.utils.xlsnc(S1);c.Sheets[d][A1+""+y]&&(d2[T1[A1]]=c.Sheets[d][A1+""+y].v)}E.push(d2)}}else E.push([]);E.length>0&&E[E.length-1]&&0==Object.keys(E[E.length-1]).length&&E.pop(),r&&(E=r(E,i,a))},function(m){throw m}),l}function Ni(e){return e=(e=e.trim()).replace(/<!--[\s\S]*?-->/g,""),n();function n(){return{declaration:t(),root:r()}}function t(){if(l(/^<\?xml\s*/)){for(var b={attributes:{}};!(h()||g("?>"));){var c=a();if(!c)return b;b.attributes[c.name]=c.value}return l(/\?>\s*/),b}}function r(){var m=l(/^<([\w-:.]+)\s*/);if(m){for(var d,b={name:m[1],attributes:{},children:[]};!(h()||g(">")||g("?>")||g("/>"));){var c=a();if(!c)return b;b.attributes[c.name]=c.value}if(l(/^\s*\/>\s*/))return b;for(l(/\??>\s*/),b.content=i();d=r();)b.children.push(d);return l(/^<\/[\w-:.]+>\s*/),b}}function i(){var m=l(/^([^<]*)/);return m?m[1]:""}function a(){var m=l(/([\w:-]+)\s*=\s*("[^"]*"|'[^']*'|\w+)\s*/);if(m)return{name:m[1],value:f(m[2])}}function f(m){return m.replace(/^['"]|['"]$/g,"")}function l(m){var b=e.match(m);if(b)return e=e.slice(b[0].length),b}function h(){return 0==e.length}function g(m){return 0==e.indexOf(m)}}S.DropTable=function(e){return Object.assign(this,e)},S.DropTable.prototype.toString=function(){var e="DROP ";return this.view?e+="VIEW":e+="TABLE",this.ifexists&&(e+=" IF EXISTS"),e+=" "+this.tables.toString()},S.DropTable.prototype.execute=function(e,n,t){var r=this.ifexists,i=0,a=0,f=this.tables.length;return this.tables.forEach(function(l){var h=u.databases[l.databaseid||e],g=l.tableid;if(!r||r&&h.tables[g]){if(h.tables[g])h.engineid?u.engines[h.engineid].dropTable(l.databaseid||e,g,r,function(m){delete h.tables[g],i+=m,++a==f&&t&&t(i)}):(delete h.tables[g],i++,++a==f&&t&&t(i));else if(!u.options.dropifnotexists)throw Error(`Can not drop table ${JSON.stringify(l.tableid)} because it does not exist in the database.`)}else++a==f&&t&&t(i)}),i},S.TruncateTable=function(e){return Object.assign(this,e)},S.TruncateTable.prototype.toString=function(){return"TRUNCATE TABLE "+this.table.toString()},S.TruncateTable.prototype.execute=function(e,n,t){var r=u.databases[this.table.databaseid||e],i=this.table.tableid;if(r.engineid)return u.engines[r.engineid].truncateTable(this.table.databaseid||e,i,this.ifexists,t);if(r.tables[i])r.tables[i].data=[];else throw Error("Cannot truncate table becaues it does not exist");return t?t(0):0},S.CreateVertex=function(e){return Object.assign(this,e)},S.CreateVertex.prototype.toString=function(){var e="CREATE VERTEX ";return this.class&&(e+=this.class+" "),this.sharp&&(e+="#"+this.sharp+" "),this.sets?e+=this.sets.toString():this.content?e+=this.content.toString():this.select&&(e+=this.select.toString()),e},S.CreateVertex.prototype.toJS=function(e){return"this.queriesfn["+(this.queriesidx-1)+"](this.params,null,"+e+")"},S.CreateVertex.prototype.compile=function(e){var t=this.sharp;if("u">typeof this.name)var r="x.name="+this.name.toJS(),i=Function("x",r);if(this.sets&&this.sets.length>0)var r=this.sets.map(function(h){return`x[${JSON.stringify(h.column.columnid)}]=`+h.expression.toJS("x","")}).join(";"),a=Function("x,params,alasql",r);return function(l,h){var g,m=u.databases[e],c={$id:"u">typeof t?t:m.counter++,$node:"VERTEX"};return m.objects[c.$id]=c,g=c,i&&i(c),a&&a(c,l,u),h&&(g=h(g)),g}},S.CreateEdge=function(e){return Object.assign(this,e)},S.CreateEdge.prototype.toString=function(){var e="CREATE EDGE ";return this.class&&(e+=this.class+" "),e},S.CreateEdge.prototype.toJS=function(e){return"this.queriesfn["+(this.queriesidx-1)+"](this.params,null,"+e+")"},S.CreateEdge.prototype.compile=function(e){var t=Function("params,alasql","var y;return "+this.from.toJS()),r=Function("params,alasql","var y;return "+this.to.toJS());if("u">typeof this.name)var i="x.name="+this.name.toJS(),a=Function("x",i);if(this.sets&&this.sets.length>0)var i=this.sets.map(function(g){return`x[${JSON.stringify(g.column.columnid)}]=`+g.expression.toJS("x","")}).join(";"),f=Function("x,params,alasql","var y;"+i);return function(h,g){var m=0,b=u.databases[e],c={$id:b.counter++,$node:"EDGE"},d=t(h,u),N=r(h,u);return c.$in=[d.$id],c.$out=[N.$id],void 0===d.$out&&(d.$out=[]),d.$out.push(c.$id),N.$in,N.$in.push(c.$id),b.objects[c.$id]=c,m=c,a&&a(c),f&&f(c,h,u),g&&(m=g(m)),m}},S.CreateGraph=function(e){return Object.assign(this,e)},S.CreateGraph.prototype.toString=function(){var e="CREATE GRAPH ";return this.class&&(e+=this.class+" "),e},S.CreateGraph.prototype.execute=function(e,n,t){var r=[];return this.from&&u.from[this.from.funcid]&&(this.graph=u.from[this.from.funcid.toUpperCase()]),this.graph.forEach(function(f){if(f.source){var g,c,l={};"u">typeof f.as&&(u.vars[f.as]=l),"u">typeof f.prop&&(l.name=f.prop),"u">typeof f.sharp&&(l.$id=f.sharp),"u">typeof f.name&&(l.name=f.name),"u">typeof f.class&&(l.$class=f.class);var h=u.databases[e];if(typeof l.$id>"u"&&(l.$id=h.counter++),l.$node="EDGE","u">typeof f.json&&D2(l,Function("params,alasql","var y;return "+f.json.toJS())(n,u)),f.source.vars){var m=u.vars[f.source.vars];g="object"==typeof m?m:h.objects[m]}else{var b=f.source.sharp;typeof b>"u"&&(b=f.source.prop),typeof(g=u.databases[e].objects[b])>"u"&&u.options.autovertex&&("u">typeof f.source.prop||"u">typeof f.source.name)&&typeof(g=i(f.source.prop||f.source.name))>"u"&&(g=a(f.source))}if(f.source.vars){var m=u.vars[f.target.vars];c="object"==typeof m?m:h.objects[m]}else{var d=f.target.sharp;typeof d>"u"&&(d=f.target.prop),typeof(c=u.databases[e].objects[d])>"u"&&u.options.autovertex&&("u">typeof f.target.prop||"u">typeof f.target.name)&&typeof(c=i(f.target.prop||f.target.name))>"u"&&(c=a(f.target))}if(l.$in=[g.$id],l.$out=[c.$id],typeof g.$out>"u"&&(g.$out=[]),g.$out.push(l.$id),typeof c.$in>"u"&&(c.$in=[]),c.$in.push(l.$id),h.objects[l.$id]=l,"u">typeof l.$class){if(typeof u.databases[e].tables[l.$class]>"u")throw Error("No such class. Pleace use CREATE CLASS");u.databases[e].tables[l.$class].data.push(l)}r.push(l.$id)}else a(f)}),t&&(r=t(r)),r;function i(f){var l=u.databases[u.useid].objects;for(var h in l)if(l[h].name===f)return l[h]}function a(f){var l={};"u">typeof f.as&&(u.vars[f.as]=l),"u">typeof f.prop&&(l.$id=f.prop,l.name=f.prop),"u">typeof f.sharp&&(l.$id=f.sharp),"u">typeof f.name&&(l.name=f.name),"u">typeof f.class&&(l.$class=f.class);var h=u.databases[e];if(typeof l.$id>"u"&&(l.$id=h.counter++),l.$node="VERTEX","u">typeof f.json&&D2(l,Function("params,alasql","var y;return "+f.json.toJS())(n,u)),h.objects[l.$id]=l,"u">typeof l.$class){if(typeof u.databases[e].tables[l.$class]>"u")throw Error("No such class. Pleace use CREATE CLASS");u.databases[e].tables[l.$class].data.push(l)}return r.push(l.$id),l}},S.CreateGraph.prototype.compile1=function(e){var t=Function("params,alasql","var y;return "+this.from.toJS()),r=Function("params,alasql","var y;return "+this.to.toJS());if("u">typeof this.name)var i="x.name="+this.name.toJS(),a=Function("x",i);if(this.sets&&this.sets.length>0)var i=this.sets.map(function(g){return`x[${JSON.stringify(g.column.columnid)}]=`+g.expression.toJS("x","")}).join(";"),f=Function("x,params,alasql","var y;"+i);return function(h,g){var m=0,b=u.databases[e],c={$id:b.counter++,$node:"EDGE"},d=t(h,u),N=r(h,u);return c.$in=[d.$id],c.$out=[N.$id],typeof d.$out>"u"&&(d.$out=[]),d.$out.push(c.$id),typeof N.$in>"u"&&(N.$in=[]),N.$in.push(c.$id),b.objects[c.$id]=c,m=c,a&&a(c),f&&f(c,h,u),g&&(m=g(m)),m}},S.AlterTable=function(e){return Object.assign(this,e)},S.AlterTable.prototype.toString=function(){var e="ALTER TABLE "+this.table.toString();return this.renameto&&(e+=" RENAME TO "+this.renameto),e},S.AlterTable.prototype.execute=function(e,n,t){var r=u.databases[e];if(r.dbversion=Date.now(),this.renameto){var i=this.table.tableid,a=this.renameto,f=1;if(r.tables[a])throw Error(`Can not rename a table "${i}" to "${a}" because the table with this name already exists`);if(a===i)throw Error(`Can not rename a table "${i}" to itself`);return r.tables[a]=r.tables[i],delete r.tables[i],f=1,t&&t(f),f}if(this.addcolumn){r=u.databases[this.table.databaseid||e],r.dbversion++;var l=this.table.tableid,h=r.tables[l],g=this.addcolumn.columnid;if(h.xcolumns[g])throw Error(`Cannot add column "${g}" because it already exists in table "${l}"`);var m={columnid:g,dbtypeid:this.addcolumn.dbtypeid,dbsize:this.dbsize,dbprecision:this.dbprecision,dbenum:this.dbenum,defaultfns:null};h.columns.push(m),h.xcolumns[g]=m;for(var c=0,d=h.data.length;c<d;c++)h.data[c][g]=void 0;return t?t(1):1}if(this.modifycolumn){var r=u.databases[this.table.databaseid||e];r.dbversion++;var l=this.table.tableid,h=r.tables[l],g=this.modifycolumn.columnid;if(!h.xcolumns[g])throw Error(`Cannot modify column "${g}" because it was not found in table "${l}"`);return(m=h.xcolumns[g]).dbtypeid=this.dbtypeid,m.dbsize=this.dbsize,m.dbprecision=this.dbprecision,m.dbenum=this.dbenum,t?t(1):1}if(this.renamecolumn){var r=u.databases[this.table.databaseid||e];r.dbversion++;var m,l=this.table.tableid,h=r.tables[l],g=this.renamecolumn,N=this.to;if(!h.xcolumns[g])throw Error('Column "'+g+'" is not found in the table "'+l+'"');if(h.xcolumns[N])throw Error('Column "'+N+'" already exists in the table "'+l+'"');if(g==N)return t?t(0):0;for(var E=0;E<h.columns.length;E++)h.columns[E].columnid==g&&(h.columns[E].columnid=N);h.xcolumns[N]=h.xcolumns[g],delete h.xcolumns[g];for(var c=0,d=h.data.length;c<d;c++)h.data[c][N]=h.data[c][g],delete h.data[c][g];return h.data.length}if(this.dropcolumn){var r=u.databases[this.table.databaseid||e];r.dbversion++;for(var l=this.table.tableid,h=r.tables[l],g=this.dropcolumn,R=!1,E=0;E<h.columns.length;E++)if(h.columns[E].columnid==g){R=!0,h.columns.splice(E,1);break}if(!R)throw Error(`Cannot drop column "${g}" because it was not found in the table ${l}"`);for(delete h.xcolumns[g],c=0,d=h.data.length;c<d;c++)delete h.data[c][g];return t?t(h.data.length):h.data.length}throw Error("Unknown ALTER TABLE method")},S.CreateIndex=function(e){return Object.assign(this,e)},S.CreateIndex.prototype.toString=function(){var e="CREATE";return this.unique&&(e+=" UNIQUE"),e+=" INDEX "+this.indexid+" ON "+this.table.toString()+"("+this.columns.toString()+")"},S.CreateIndex.prototype.execute=function(e,n,t){var r=u.databases[e],i=this.table.tableid,a=r.tables[i],f=this.indexid;r.indices[f]=i;var l=this.columns.map(function(R){return R.expression.toJS("r","")}).join("+'`'+"),h=Function("r,params,alasql","return "+l);if(this.unique){a.uniqdefs[f]={rightfns:l};var g=a.uniqs[f]={};if(a.data.length>0)for(var m=0,b=a.data.length;m<b;m++){var c=l(a.data[m]);g[c]||(g[c]={num:0}),g[c].num++}}else{var d=nt(l);a.inddefs[f]={rightfns:l,hh:d},a.indices[d]={};var N=a.indices[d]={};if(a.data.length>0)for(var m=0,b=a.data.length;m<b;m++){var c=h(a.data[m],n,u);N[c]||(N[c]=[]),N[c].push(a.data[m])}}var E=1;return t&&(E=t(E)),E},S.Reindex=function(e){return Object.assign(this,e)},S.Reindex.prototype.toString=function(){return"REINDEX "+this.indexid},S.Reindex.prototype.execute=function(e,n,t){var r=u.databases[e],i=this.indexid,a=r.indices[i];r.tables[a].indexColumns();var l=1;return t&&(l=t(l)),l},S.DropIndex=function(e){return Object.assign(this,e)},S.DropIndex.prototype.toString=function(){return"DROP INDEX"+this.indexid},S.DropIndex.prototype.compile=function(e){return this.indexid,function(){return 1}},S.WithSelect=function(e){return Object.assign(this,e)},S.WithSelect.prototype.toString=function(){return"WITH "+this.withs.map(function(n){return n.name+" AS ("+n.select.toString()+")"}).join(",")+" "+this.select.toString()},S.WithSelect.prototype.execute=function(e,n,t){var r=this,i=[];return r.withs.forEach(function(f){i.push(u.databases[e].tables[f.name]),(u.databases[e].tables[f.name]=new fr({tableid:f.name})).data=f.select.execute(e,n)}),this.select.execute(e,n,function(f){return r.withs.forEach(function(l,h){i[h]?u.databases[e].tables[l.name]=i[h]:delete u.databases[e].tables[l.name]}),t&&(f=t(f)),f})},S.If=function(e){return Object.assign(this,e)},S.If.prototype.toString=function(){var e="IF ";return e+=this.expression.toString()+" "+this.thenstat.toString(),this.elsestat&&(e+=" ELSE "+this.thenstat.toString()),e},S.If.prototype.execute=function(e,n,t){var r;return Function("params,alasql,p","var y;return "+this.expression.toJS("({})","",null)).bind(this)(n,u)?r=this.thenstat.execute(e,n,t):this.elsestat?r=this.elsestat.execute(e,n,t):t&&(r=t(r)),r},S.While=function(e){return Object.assign(this,e)},S.While.prototype.toString=function(){return"WHILE "+this.expression.toString()+" "+this.loopstat.toString()},S.While.prototype.execute=function(e,n,t){var r=this,i=[],a=Function("params,alasql,p","var y;return "+this.expression.toJS());if(t){var f=!1,l=function(g){f?i.push(g):f=!0,setTimeout(function(){a(n,u)?r.loopstat.execute(e,n,l):i=t(i)},0)};l()}else for(;a(n,u);){var h=r.loopstat.execute(e,n);i.push(h)}return i},S.Break=function(e){return Object.assign(this,e)},S.Break.prototype.toString=function(){return"BREAK"},S.Break.prototype.execute=function(e,n,t,r){var i=1;return t&&(i=t(i)),i},S.Continue=function(e){return Object.assign(this,e)},S.Continue.prototype.toString=function(){return"CONTINUE"},S.Continue.prototype.execute=function(e,n,t,r){var i=1;return t&&(i=t(i)),i},S.BeginEnd=function(e){return Object.assign(this,e)},S.BeginEnd.prototype.toString=function(){return"BEGIN "+this.statements.toString()+" END"},S.BeginEnd.prototype.execute=function(e,n,t,r){var i=this,a=[],f=0;function l(){i.statements[f].execute(e,n,function(h){if(a.push(h),++f<i.statements.length)return l();t&&(a=t(a))})}return l(),a},S.Insert=function(e){return Object.assign(this,e)},S.Insert.prototype.toString=function(){var e="INSERT ";return this.orreplace&&(e+="OR REPLACE "),this.replaceonly&&(e="REPLACE "),e+="INTO "+this.into.toString(),this.columns&&(e+="("+this.columns.toString()+")"),this.values&&(e+=" VALUES "+this.values.map(function(t){return"("+t.toString()+")"}).join(",")),this.select&&(e+=" "+this.select.toString()),e},S.Insert.prototype.toJS=function(e,n,t){return"this.queriesfn["+(this.queriesidx-1)+"](this.params,null,"+e+")"},S.Insert.prototype.compile=function(e){var n=this;e=n.into.databaseid||e;var t=u.databases[e],r=n.into.tableid,i=t.tables[r];if(!i)throw"Table '"+r+"' could not be found";var h,a="",f="db.tables['"+r+"'].dirty=true;",l="var a,aa=[],x;";if(this.values){this.exists&&(this.existsfn=this.exists.map(function(E){var R=E.compile(e);return R.query.modifier="RECORDSET",R})),this.queries&&(this.queriesfn=this.queries.map(function(E){var R=E.compile(e);return R.query.modifier="RECORDSET",R})),n.values.forEach(function(E){var R=[];n.columns?n.columns.forEach(function(A,O){var C="'"+A.columnid+"':";i.xcolumns&&i.xcolumns[A.columnid]?["INT","FLOAT","NUMBER","MONEY"].indexOf(i.xcolumns[A.columnid].dbtypeid)>=0?C+="(x="+E[O].toJS()+",x==undefined?undefined:+x)":u.fn[i.xcolumns[A.columnid].dbtypeid]?C+="(new "+i.xcolumns[A.columnid].dbtypeid+"("+E[O].toJS()+"))":C+=E[O].toJS():C+=E[O].toJS(),R.push(C)}):Array.isArray(E)&&i.columns&&i.columns.length>0?i.columns.forEach(function(A,O){var C="'"+A.columnid+"':";["INT","FLOAT","NUMBER","MONEY"].indexOf(A.dbtypeid)>=0?C+="+"+E[O].toJS():u.fn[A.dbtypeid]?C+="(new "+A.dbtypeid+"("+E[O].toJS()+"))":C+=E[O].toJS(),R.push(C)}):a=_3(E),t.tables[r].defaultfns&&R.unshift(t.tables[r].defaultfns),a?f+="a="+a+";":f+="a={"+R.join(",")+"};",t.tables[r].isclass&&(f+="var db=alasql.databases['"+e+"'];a.$class=\""+r+'";a.$id=db.counter++;db.objects[a.$id]=a;'),t.tables[r].insert?f+="var db=alasql.databases['"+e+"'];"+("db.tables['"+r+"'].insert(a,")+(n.orreplace?"true":"false")+");":f+="aa.push(a);"}),h=l+f,t.tables[r].insert||(f+="alasql.databases['"+e+"'].tables['"+r+"'].data=alasql.databases['"+e+"'].tables['"+r+"'].data.concat(aa);"),t.tables[r].insert&&t.tables[r].isclass?f+="return a.$id;":f+="return "+n.values.length;var g=Function("db, params, alasql","var y;"+l+f).bind(this)}else if(this.select){this.select.modifier="RECORDSET",this.queries&&(this.select.queries=this.queries);var m=this.select.compile(e);if(t.engineid&&u.engines[t.engineid].intoTable){var b=function(E,R){var A=m(E);return u.engines[t.engineid].intoTable(t.databaseid,r,A.data,null,R)};return b}var d=Function("r,db,params,alasql","return alasql.utils.extend(r,{"+i.defaultfns+"})"),g=function(R,A,O){var C=m(A).data;if(R.tables[r].insert)for(var V=0,T1=C.length;V<T1;V++){var C1=Bt(C[V]);d(C1,R,A,O),R.tables[r].insert(C1,n.orreplace)}else R.tables[r].data=R.tables[r].data.concat(C);if(!O.options.nocount)return C.length}}else if(this.default)var N="db.tables['"+r+"'].data.push({"+i.defaultfns+"});return 1;",g=Function("db,params,alasql",N);else throw Error("Wrong INSERT parameters");if(t.engineid&&u.engines[t.engineid].intoTable&&u.options.autocommit)var b=function(R,A){var O=Function("db,params","var y;"+h+"return aa;")(t,R);return u.engines[t.engineid].intoTable(t.databaseid,r,O,null,A)};else var b=function(R,A){var O=u.databases[e];u.options.autocommit&&O.engineid&&u.engines[O.engineid].loadTableData(e,r);var C=g(O,R,u);return u.options.autocommit&&O.engineid&&u.engines[O.engineid].saveTableData(e,r),u.options.nocount&&(C=void 0),A&&A(C),C};return b},S.Insert.prototype.execute=function(e,n,t){return this.compile(e)(n,t)},S.CreateTrigger=function(e){return Object.assign(this,e)},S.CreateTrigger.prototype.toString=function(){var e="CREATE TRIGGER "+this.trigger+" ";return this.when&&(e+=this.when+" "),e+=this.action+" ON ",this.table.databaseid&&(e+=this.table.databaseid+"."),e+=this.table.tableid+" "+this.statement.toString()},S.CreateTrigger.prototype.execute=function(e,n,t){var r=1,i=this.trigger;e=this.table.databaseid||e;var a=u.databases[e],f=this.table.tableid,l={action:this.action,when:this.when,statement:this.statement,funcid:this.funcid,tableid:this.table.tableid};return a.triggers[i]=l,"INSERT"==l.action&&"BEFORE"==l.when?a.tables[f].beforeinsert[i]=l:"INSERT"==l.action&&"AFTER"==l.when?a.tables[f].afterinsert[i]=l:"INSERT"==l.action&&"INSTEADOF"==l.when?a.tables[f].insteadofinsert[i]=l:"DELETE"==l.action&&"BEFORE"==l.when?a.tables[f].beforedelete[i]=l:"DELETE"==l.action&&"AFTER"==l.when?a.tables[f].afterdelete[i]=l:"DELETE"==l.action&&"INSTEADOF"==l.when?a.tables[f].insteadofdelete[i]=l:"UPDATE"==l.action&&"BEFORE"==l.when?a.tables[f].beforeupdate[i]=l:"UPDATE"==l.action&&"AFTER"==l.when?a.tables[f].afterupdate[i]=l:"UPDATE"==l.action&&"INSTEADOF"==l.when&&(a.tables[f].insteadofupdate[i]=l),t&&(r=t(r)),r},S.DropTrigger=function(e){return Object.assign(this,e)},S.DropTrigger.prototype.toString=function(){return"DROP TRIGGER "+this.trigger},S.DropTrigger.prototype.execute=function(e,n,t){var r=0,i=u.databases[e],a=this.trigger;if(i.triggers[a]){var l=i.triggers[a].tableid;if(l)r=1,delete i.tables[l].beforeinsert[a],delete i.tables[l].afterinsert[a],delete i.tables[l].insteadofinsert[a],delete i.tables[l].beforedelete[a],delete i.tables[l].afterdelete[a],delete i.tables[l].insteadofdelete[a],delete i.tables[l].beforeupdate[a],delete i.tables[l].afterupdate[a],delete i.tables[l].insteadofupdate[a],delete i.triggers[a];else throw Error("Trigger Table not found")}else throw Error("Trigger not found");return t&&(r=t(r)),r},S.Delete=function(e){return Object.assign(this,e)},S.Delete.prototype.toString=function(){var e="DELETE FROM "+this.table.toString();return this.where&&(e+=" WHERE "+this.where.toString()),e},S.Delete.prototype.compile=function(e){e=this.table.databaseid||e;var t,n=this.table.tableid,r=u.databases[e];if(this.where){this.exists&&(this.existsfn=this.exists.map(function(a){var f=a.compile(e);return f.query.modifier="RECORDSET",f})),this.queries&&(this.queriesfn=this.queries.map(function(a){var f=a.compile(e);return f.query.modifier="RECORDSET",f}));var i=Function("r,params,alasql","var y;return ("+this.where.toJS("r","")+")").bind(this);t=function(a,f){if(r.engineid&&u.engines[r.engineid].deleteFromTable)return u.engines[r.engineid].deleteFromTable(e,n,i,a,f);u.options.autocommit&&r.engineid&&("LOCALSTORAGE"==r.engineid||"FILESTORAGE"==r.engineid)&&u.engines[r.engineid].loadTableData(e,n);for(var l=r.tables[n],h=l.data.length,g=[],m=0,b=l.data.length;m<b;m++)i(l.data[m],a,u)?l.delete&&l.delete(m,a,u):g.push(l.data[m]);for(var c in l.data=g,l.afterdelete){var d=l.afterdelete[c];d&&(d.funcid?u.fn[d.funcid]():d.statement&&d.statement.execute(e))}var N=h-l.data.length;return u.options.autocommit&&r.engineid&&("LOCALSTORAGE"==r.engineid||"FILESTORAGE"==r.engineid)&&u.engines[r.engineid].saveTableData(e,n),f&&f(N),N}}else t=function(a,f){u.options.autocommit&&r.engineid&&u.engines[r.engineid].loadTableData(e,n),r.tables[n].dirty=!0;var h=r.tables[n].data.length;for(var g in r.tables[n].data.length=0,r.tables[n].uniqs)r.tables[n].uniqs[g]={};for(var g in r.tables[n].indices)r.tables[n].indices[g]={};return u.options.autocommit&&r.engineid&&u.engines[r.engineid].saveTableData(e,n),f&&f(h),h};return t},S.Delete.prototype.execute=function(e,n,t){return this.compile(e)(n,t)},S.Update=function(e){return Object.assign(this,e)},S.Update.prototype.toString=function(){var e="UPDATE "+this.table.toString();return this.columns&&(e+=" SET "+this.columns.toString()),this.where&&(e+=" WHERE "+this.where.toString()),e},S.SetColumn=function(e){return Object.assign(this,e)},S.SetColumn.prototype.toString=function(){return this.column.toString()+"="+this.expression.toString()},S.Update.prototype.compile=function(e){e=this.table.databaseid||e;var n=this.table.tableid;if(this.where){this.exists&&(this.existsfn=this.exists.map(function(f){var l=f.compile(e);return l.query.modifier="RECORDSET",l})),this.queries&&(this.queriesfn=this.queries.map(function(f){var l=f.compile(e);return l.query.modifier="RECORDSET",l}));var t=Function("r,params,alasql","var y;return "+this.where.toJS("r","")).bind(this)}var r=u.databases[e].tables[n].onupdatefns||"";r+=";",this.columns.forEach(function(f){r+="r['"+f.column.columnid+"']="+f.expression.toJS("r","")+";"});var i=Function("r,params,alasql","var y;"+r);return function(f,l){var h=u.databases[e];if(h.engineid&&u.engines[h.engineid].updateTable)return u.engines[h.engineid].updateTable(e,n,i,t,f,l);u.options.autocommit&&h.engineid&&u.engines[h.engineid].loadTableData(e,n);var g=h.tables[n];if(!g)throw Error("Table '"+n+"' not exists");for(var m=0,b=0,c=g.data.length;b<c;b++)(!t||t(g.data[b],f,u))&&(g.update?g.update(i,b,f):i(g.data[b],f,u),m++);return u.options.autocommit&&h.engineid&&u.engines[h.engineid].saveTableData(e,n),l&&l(m),m}},S.Update.prototype.execute=function(e,n,t){return this.compile(e)(n,t)},S.Merge=function(e){return Object.assign(this,e)},S.Merge.prototype.toString=function(){var e="MERGE ";return e+=this.into.tableid+" ",this.into.as&&(e+="AS "+this.into.as+" "),e+="USING "+this.using.tableid+" ",this.using.as&&(e+="AS "+this.using.as+" "),e+="ON "+this.on.toString()+" ",this.matches.forEach(function(n){e+="WHEN ",n.matched||(e+="NOT "),e+="MATCHED ",n.bytarget&&(e+="BY TARGET "),n.bysource&&(e+="BY SOURCE "),n.expr&&(e+="AND "+n.expr.toString()+" "),e+="THEN ",n.action.delete&&(e+="DELETE "),n.action.insert&&(e+="INSERT ",n.action.columns&&(e+="("+n.action.columns.toString()+") "),n.action.values&&(e+="VALUES ("+n.action.values.toString()+") "),n.action.defaultvalues&&(e+="DEFAULT VALUES ")),n.action.update&&(e+="UPDATE "+n.action.update.map(function(t){return t.toString()}).join(",")+" ")}),e},S.Merge.prototype.execute=function(e,n,t){var r=1;return t&&(r=t(r)),r},S.CreateDatabase=function(e){return Object.assign(this,e)},S.CreateDatabase.prototype.toString=function(){var e="CREATE";return this.engineid&&(e+=" "+this.engineid),e+=" DATABASE",this.ifnotexists&&(e+=" IF NOT EXISTS"),e+=" "+this.databaseid,this.args&&this.args.length>0&&(e+="("+this.args.map(function(n){return n.toString()}).join(", ")+")"),this.as&&(e+=" AS "+this.as),e},S.CreateDatabase.prototype.execute=function(e,n,t){if(this.args&&this.args.length>0&&this.args.map(function(l){return Function("params,alasql","var y;return "+l.toJS())(n,u)}),this.engineid){var i=u.engines[this.engineid].createDatabase(this.databaseid,this.args,this.ifnotexists,this.as,t);return i}var a=this.databaseid;if(u.databases[a])throw Error("Database '"+a+"' already exists");new u.Database(a);var i=1;return t?t(i):i},S.AttachDatabase=function(e){return Object.assign(this,e)},S.AttachDatabase.prototype.toString=function(e){var n="ATTACH";return this.engineid&&(n+=" "+this.engineid),n+=" DATABASE "+this.databaseid,e&&(n+="(",e.length>0&&(n+=e.map(function(t){return t.toString()}).join(", ")),n+=")"),this.as&&(n+=" AS "+this.as),n},S.AttachDatabase.prototype.execute=function(e,n,t){if(!u.engines[this.engineid])throw Error('Engine "'+this.engineid+'" is not defined.');return u.engines[this.engineid].attachDatabase(this.databaseid,this.as,this.args,n,t)},S.DetachDatabase=function(e){return Object.assign(this,e)},S.DetachDatabase.prototype.toString=function(){return"DETACH DATABASE "+this.databaseid},S.DetachDatabase.prototype.execute=function(e,n,t){if(!u.databases[this.databaseid].engineid)throw Error('Cannot detach database "'+this.engineid+'", because it was not attached.');var r,i=this.databaseid;if(i===u.DEFAULTDATABASEID)throw Error("Drop of default database is prohibited");if(u.databases[i]){var a=u.databases[i].engineid&&"FILESTORAGE"==u.databases[i].engineid,f=u.databases[i].filename||"";delete u.databases[i],a&&(u.databases[i]={},u.databases[i].isDetached=!0,u.databases[i].filename=f),i===u.useid&&u.use(),r=1}else if(this.ifexists)r=0;else throw Error("Database '"+i+"' does not exist");return t&&t(r),r},S.UseDatabase=function(e){return Object.assign(this,e)},S.UseDatabase.prototype.toString=function(){return"USE DATABASE "+this.databaseid},S.UseDatabase.prototype.execute=function(e,n,t){var r=this.databaseid;if(!u.databases[r])throw Error("Database '"+r+"' does not exist");return u.use(r),t&&t(1),1},S.DropDatabase=function(e){return Object.assign(this,e)},S.DropDatabase.prototype.toString=function(){var e="DROP";return this.ifexists&&(e+=" IF EXISTS"),e+=" DATABASE "+this.databaseid},S.DropDatabase.prototype.execute=function(e,n,t){if(this.engineid)return u.engines[this.engineid].dropDatabase(this.databaseid,this.ifexists,t);var r,i=this.databaseid;if(i===u.DEFAULTDATABASEID)throw Error("Drop of default database is prohibited");if(u.databases[i]){if(u.databases[i].engineid)throw Error("Cannot drop database '"+i+"', because it is attached. Detach it.");delete u.databases[i],i===u.useid&&u.use(),r=1}else if(this.ifexists)r=0;else throw Error("Database '"+i+"' does not exist");return t&&t(r),r},S.Declare=function(e){return Object.assign(this,e)},S.Declare.prototype.toString=function(){var e="DECLARE ";return this.declares&&this.declares.length>0&&(e=this.declares.map(function(n){var t="";return t+="@"+n.variable+" "+n.dbtypeid,this.dbsize&&(t+="("+this.dbsize,this.dbprecision&&(t+=","+this.dbprecision),t+=")"),n.expression&&(t+=" = "+n.expression.toString()),t}).join(",")),e},S.Declare.prototype.execute=function(e,n,t){var r=1,i=this;return i.declares&&i.declares.length>0&&i.declares.forEach(function(a){var f=a.dbtypeid;u.fn[f]||(f=f.toUpperCase()),u.declares[a.variable]={dbtypeid:f,dbsize:a.dbsize,dbprecision:a.dbprecision},a.expression&&(u.vars[a.variable]=Function("params,alasql","return "+a.expression.toJS("({})","",null)).bind(i)(n,u),u.declares[a.variable]&&(u.vars[a.variable]=u.stdfn.CONVERT(u.vars[a.variable],u.declares[a.variable])))}),t&&(r=t(r)),r},S.ShowDatabases=function(e){return Object.assign(this,e)},S.ShowDatabases.prototype.toString=function(){var e="SHOW DATABASES";return this.like&&(e+="LIKE "+this.like.toString()),e},S.ShowDatabases.prototype.execute=function(e,n,t){if(this.engineid)return u.engines[this.engineid].showDatabases(this.like,t);var r=this,i=[];for(var a in u.databases)i.push({databaseid:a});return r.like&&i&&i.length>0&&(i=i.filter(function(f){return u.utils.like(r.like.value,f.databaseid)})),t&&t(i),i},S.ShowTables=function(e){return Object.assign(this,e)},S.ShowTables.prototype.toString=function(){var e="SHOW TABLES";return this.databaseid&&(e+=" FROM "+this.databaseid),this.like&&(e+=" LIKE "+this.like.toString()),e},S.ShowTables.prototype.execute=function(e,n,t){var r=u.databases[this.databaseid||e],i=this,a=[];for(var f in r.tables)a.push({tableid:f});return i.like&&a&&a.length>0&&(a=a.filter(function(l){return u.utils.like(i.like.value,l.tableid)})),t&&t(a),a},S.ShowColumns=function(e){return Object.assign(this,e)},S.ShowColumns.prototype.toString=function(){var e="SHOW COLUMNS";return this.table.tableid&&(e+=" FROM "+this.table.tableid),this.databaseid&&(e+=" FROM "+this.databaseid),e},S.ShowColumns.prototype.execute=function(e,n,t){var i=u.databases[this.databaseid||e].tables[this.table.tableid];if(!i||!i.columns)return t&&t([]),[];var a=i.columns.map(function(f){return{columnid:f.columnid,dbtypeid:f.dbtypeid,dbsize:f.dbsize}});return t&&t(a),a},S.ShowIndex=function(e){return Object.assign(this,e)},S.ShowIndex.prototype.toString=function(){var e="SHOW INDEX";return this.table.tableid&&(e+=" FROM "+this.table.tableid),this.databaseid&&(e+=" FROM "+this.databaseid),e},S.ShowIndex.prototype.execute=function(e,n,t){var i=u.databases[this.databaseid||e].tables[this.table.tableid],a=[];if(i&&i.indices)for(var f in i.indices)a.push({hh:f,len:Object.keys(i.indices[f]).length});return t&&t(a),a},S.ShowCreateTable=function(e){return Object.assign(this,e)},S.ShowCreateTable.prototype.toString=function(){var e="SHOW CREATE TABLE "+this.table.tableid;return this.databaseid&&(e+=" FROM "+this.databaseid),e},S.ShowCreateTable.prototype.execute=function(e){var t=u.databases[this.databaseid||e].tables[this.table.tableid];if(t){var r="CREATE TABLE "+this.table.tableid+" (",i=[];return t.columns&&(t.columns.forEach(function(a){var f=a.columnid+" "+a.dbtypeid;a.dbsize&&(f+="("+a.dbsize+")"),a.primarykey&&(f+=" PRIMARY KEY"),i.push(f)}),r+=i.join(", ")),r+=")"}throw Error('There is no such table "'+this.table.tableid+'"')},S.SetVariable=function(e){return Object.assign(this,e)},S.SetVariable.prototype.toString=function(){var e="SET ";return"u">typeof this.value&&(e+=this.variable.toUpperCase()+" "+(this.value?"ON":"OFF")),this.expression&&(e+=this.method+this.variable+" = "+this.expression.toString()),e},S.SetVariable.prototype.execute=function(e,n,t){if("u">typeof this.value){var r=this.value;"ON"==r?r=!0:"OFF"==r&&(r=!1),u.options[this.variable]=r}else if(this.expression){this.exists&&(this.existsfn=this.exists.map(function(l){var h=l.compile(e);return h.query&&!h.query.modifier&&(h.query.modifier="RECORDSET"),h})),this.queries&&(this.queriesfn=this.queries.map(function(l){var h=l.compile(e);return h.query&&!h.query.modifier&&(h.query.modifier="RECORDSET"),h}));var a=Function("params,alasql","return "+this.expression.toJS("({})","",null)).bind(this)(n,u);if(u.declares[this.variable]&&(a=u.stdfn.CONVERT(a,u.declares[this.variable])),this.props&&this.props.length>0){if("@"==this.method)var i="alasql.vars['"+this.variable+"']";else var i="params['"+this.variable+"']";Function("value,params,alasql","var y;"+(i+=this.props.map(function(l){return"string"==typeof l?"['"+l+"']":"number"==typeof l?"["+l+"]":"["+l.toJS()+"]"}).join())+"=value")(a,n,u)}else"@"==this.method?u.vars[this.variable]=a:n[this.variable]=a}var a=1;return t&&(a=t(a)),a},u.test=function(e,n,t){if(0==arguments.length){u.log(u.con.results);return}var r=Date.now();if(1==arguments.length){t(),u.con.log(Date.now()-r);return}2==arguments.length&&(t=n,n=1);for(var i=0;i<n;i++)t();u.con.results[e]=Date.now()-r},u.log=function(e,n){var t=u.useid,r=u.options.logtarget;if(U1.isNode&&(r="console"),i="string"==typeof e?u(e,n):e,"console"===r||U1.isNode)"string"==typeof e&&u.options.logprompt&&console.log(t+">",e),Array.isArray(i)&&console.table?console.table(i):console.log(mt(i));else{a="output"===r?document.getElementsByTagName("output")[0]:"string"==typeof r?document.getElementById(r):r;var i,a,f="";if("string"==typeof e&&u.options.logprompt&&(f+="<pre><code>"+u.pretty(e)+"</code></pre>"),Array.isArray(i)){if(0===i.length)f+="<p>[ ]</p>";else if("object"!=typeof i[0]||Array.isArray(i[0]))for(var l=0,h=i.length;l<h;l++)f+="<p>"+N4(i[l])+"</p>";else f+=N4(i)}else f+=N4(i);a.innerHTML+=f}},u.clear=function(){var e=u.options.logtarget;U1.isNode||U1.isMeteorServer?console.clear&&console.clear():("output"===e?document.getElementsByTagName("output")[0]:"string"==typeof e?document.getElementById(e):e).innerHTML=""},u.write=function(e){var t,n=u.options.logtarget;U1.isNode||U1.isMeteorServer?console.log&&console.log(e):(t="output"===n?document.getElementsByTagName("output")[0]:"string"==typeof n?document.getElementById(n):n,t.innerHTML+=e)},u.prompt=function(e,n,t){if(U1.isNode)throw Error("The prompt not realized for Node.js");var r=0;if("string"==typeof e&&(e=document.getElementById(e)),"string"==typeof n&&(n=document.getElementById(n)),n.textContent=u.useid,t){u.prompthistory.push(t),r=u.prompthistory.length;try{var i=Date.now();u.log(t),u.write('<p style="color:blue">'+(Date.now()-i)+" ms</p>")}catch(f){u.write("<p>"+u.useid+"&gt;&nbsp;<b>"+t+"</b></p>"),u.write('<p style="color:red">'+f+"<p>")}}var a=e.getBoundingClientRect().top+document.getElementsByTagName("body")[0].scrollTop;O4(document.getElementsByTagName("body")[0],a,500),e.onkeydown=function(f){if(13===f.which){var l=e.value,h=u.useid;e.value="",u.prompthistory.push(l),r=u.prompthistory.length;try{var g=Date.now();u.log(l),u.write('<p style="color:blue">'+(Date.now()-g)+" ms</p>")}catch(b){u.write("<p>"+h+"&gt;&nbsp;"+u.pretty(l,!1)+"</p>"),u.write('<p style="color:red">'+b+"<p>")}e.focus(),n.textContent=u.useid;var m=e.getBoundingClientRect().top+document.getElementsByTagName("body")[0].scrollTop;O4(document.getElementsByTagName("body")[0],m,500)}else 38===f.which?(--r<0&&(r=0),u.prompthistory[r]&&(e.value=u.prompthistory[r],f.preventDefault())):40===f.which&&(++r>=u.prompthistory.length?(r=u.prompthistory.length,e.value=""):u.prompthistory[r]&&(e.value=u.prompthistory[r],f.preventDefault()))}},S.BeginTransaction=function(e){return Object.assign(this,e)},S.BeginTransaction.prototype.toString=function(){return"BEGIN TRANSACTION"},S.BeginTransaction.prototype.execute=function(e,n,t){return u.databases[e].engineid?u.engines[u.databases[u.useid].engineid].begin(e,t):(t&&t(1),1)},S.CommitTransaction=function(e){return Object.assign(this,e)},S.CommitTransaction.prototype.toString=function(){return"COMMIT TRANSACTION"},S.CommitTransaction.prototype.execute=function(e,n,t){return u.databases[e].engineid?u.engines[u.databases[u.useid].engineid].commit(e,t):(t&&t(1),1)},S.RollbackTransaction=function(e){return Object.assign(this,e)},S.RollbackTransaction.prototype.toString=function(){return"ROLLBACK TRANSACTION"},S.RollbackTransaction.prototype.execute=function(e,n,t){return u.databases[e].engineid?u.engines[u.databases[e].engineid].rollback(e,t):(t&&t(1),1)},u.options.tsql&&(u.stdfn.OBJECT_ID=function(e,n){typeof n>"u"&&(n="T"),n=n.toUpperCase();var t=e.split("."),r=u.useid,i=t[0];2==t.length&&(r=t[0],i=t[1]);var a=u.databases[r].tables;for(var f in r=u.databases[r].databaseid,a)if(f==i)return a[f].view&&"V"==n||!a[f].view&&"T"==n?r+"."+f:void 0}),u.options.mysql&&(u.fn.TIMESTAMPDIFF=function(e,n,t){return u.stdfn.DATEDIFF(e,n,t)}),(u.options.mysql||u.options.sqlite)&&(u.from.INFORMATION_SCHEMA=function(e,n,t,r,i){if("VIEWS"==e||"TABLES"==e){var a=[];for(var f in u.databases){var l=u.databases[f].tables;for(var h in l)(l[h].view&&"VIEWS"==e||!l[h].view&&"TABLES"==e)&&a.push({TABLE_CATALOG:f,TABLE_NAME:h})}return t&&(a=t(a,r,i)),a}throw Error("Unknown INFORMATION_SCHEMA table")}),u.options.postgres,u.options.oracle,u.options.sqlite,u.into.SQL=function(e,n,t,r,i){"object"==typeof e&&(n=e,e=void 0);var a,f={};if(u.utils.extend(f,n),typeof f.tableid>"u")throw Error("Table for INSERT TO is not defined.");var l="";0===r.length&&"object"==typeof t[0]&&(r=Object.keys(t[0]).map(function(m){return{columnid:m}}));for(var h=0,g=t.length;h<g;h++)l+="INSERT INTO "+n.tableid+"("+r.map(function(m){return m.columnid}).join(",")+") VALUES ("+r.map(function(m){var b=t[h][m.columnid];return m.typeid?("STRING"===m.typeid||"VARCHAR"===m.typeid||"NVARCHAR"===m.typeid||"CHAR"===m.typeid||"NCHAR"===m.typeid)&&(b="'"+ar(b)+"'"):"string"==typeof b&&(b="'"+ar(b)+"'"),b})+`);
`;return e=u.utils.autoExtFilename(e,"sql",n),a=u.utils.saveFile(e,l),i&&(a=i(a)),a},u.into.HTML=function(e,n,t,r,i){var a=1;if("object"!=typeof document){var f={headers:!0};u.utils.extend(f,n);var l=document.querySelector(e);if(!l)throw Error("Selected HTML element is not found");0===r.length&&"object"==typeof t[0]&&(r=Object.keys(t[0]).map(function(E){return{columnid:E}}));var h=document.createElement("table"),g=document.createElement("thead");if(h.appendChild(g),f.headers){for(var m=document.createElement("tr"),b=0;b<r.length;b++){var c=document.createElement("th");c.textContent=r[b].columnid,m.appendChild(c)}g.appendChild(m)}var d=document.createElement("tbody");h.appendChild(d);for(var N=0;N<t.length;N++){for(var m=document.createElement("tr"),b=0;b<r.length;b++){var c=document.createElement("td");c.textContent=t[N][r[b].columnid],m.appendChild(c)}d.appendChild(m)}u.utils.domEmptyChildren(l),l.appendChild(h)}return i&&(a=i(a)),a},u.into.JSON=function(e,n,t,r,i){var a=1;"object"==typeof e&&(n=e,e=void 0);var f=JSON.stringify(t);return e=u.utils.autoExtFilename(e,"json",n),a=u.utils.saveFile(e,f),i&&(a=i(a)),a},u.into.TXT=function(e,n,t,r,i){0===r.length&&t.length>0&&(r=Object.keys(t[0]).map(function(h){return{columnid:h}})),"object"==typeof e&&(n=e,e=void 0);var a=t.length,f="";if(t.length>0){var l=r[0].columnid;f+=t.map(function(h){return h[l]}).join(`
`)}return e=u.utils.autoExtFilename(e,"txt",n),a=u.utils.saveFile(e,f),i&&(a=i(a)),a},u.into.TAB=u.into.TSV=function(e,n,t,r,i){var a={};return u.utils.extend(a,n),a.separator="	",e=u.utils.autoExtFilename(e,"tab",n),a.autoExt=!1,u.into.CSV(e,a,t,r,i)},u.into.CSV=function(e,n,t,r,i){0===r.length&&t.length>0&&(r=Object.keys(t[0]).map(function(h){return{columnid:h}})),"object"==typeof e&&(n=e,e=void 0);var a={headers:!0};a.separator=";",a.quote='"',a.utf8Bom=!0,n&&!n.headers&&"u">typeof n.headers&&(a.utf8Bom=!1),u.utils.extend(a,n);var f=t.length,l=a.utf8Bom?"\uFEFF":"";return a.headers&&(l+=a.quote+r.map(function(h){return h.columnid.trim()}).join(a.quote+a.separator+a.quote)+a.quote+`\r
`),t.forEach(function(h){l+=r.map(function(g){var m=h[g.columnid];return""!==a.quote&&(m=(m+"").replace(RegExp("\\"+a.quote,"g"),a.quote+a.quote)),+m!=m&&(m=a.quote+m+a.quote),m}).join(a.separator)+`\r
`}),e=u.utils.autoExtFilename(e,"csv",n),f=u.utils.saveFile(e,l,null,{disableAutoBom:!0}),i&&(f=i(f)),f},u.into.XLS=function(e,n,t,r,i){"object"==typeof e&&(n=e,e=void 0);var a={};n&&n.sheets&&(a=n.sheets);var f={headers:!0};"u">typeof a.Sheet1?f=a[0]:"u">typeof n&&(f=n),typeof f.sheetid>"u"&&(f.sheetid="Sheet1");var l=g();e=u.utils.autoExtFilename(e,"xls",n);var h=u.utils.saveFile(e,l);return i&&(h=i(h)),h;function g(){var b='<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" 		xmlns="http://www.w3.org/TR/REC-html40"><head> 		<meta charset="utf-8" /> 		<!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets> ';if(b+=" <x:ExcelWorksheet><x:Name>"+f.sheetid+"</x:Name><x:WorksheetOptions><x:DisplayGridlines/>     </x:WorksheetOptions> 		</x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--></head><body","u">typeof f.style&&(b+=' style="',"function"==typeof f.style?b+=f.style(f):b+=f.style,b+='"'),b+="><table>","u">typeof f.caption){var c=f.caption;"string"==typeof c&&(c={title:c}),b+="<caption","u">typeof c.style&&(b+=' style="',"function"==typeof c.style?b+=c.style(f,c):b+=c.style,b+='" '),b+=">"+c.title+"</caption>"}return"u">typeof f.columns?r=f.columns:0==r.length&&t.length>0&&"object"==typeof t[0]&&(r=Array.isArray(t[0])?t[0].map(function(d,N){return{columnid:N}}):Object.keys(t[0]).map(function(d){return{columnid:d}})),r.forEach(function(d,N){"u">typeof f.column&&D2(d,f.column),typeof d.width>"u"&&(f.column&&"undefined"!=f.column.width?d.width=f.column.width:d.width="120px"),"number"==typeof d.width&&(d.width=d.width+"px"),typeof d.columnid>"u"&&(d.columnid=N),typeof d.title>"u"&&(d.title=""+d.columnid.trim()),f.headers&&Array.isArray(f.headers)&&(d.title=f.headers[N])}),b+="<colgroups>",r.forEach(function(d){b+='<col style="width: '+d.width+'"></col>'}),b+="</colgroups>",f.headers&&(b+="<thead><tr>",r.forEach(function(d,N){b+="<th ","u">typeof d.style&&(b+=' style="',"function"==typeof d.style?b+=d.style(f,d,N):b+=d.style,b+='" '),b+=">","u">typeof d.title&&("function"==typeof d.title?b+=d.title(f,d,N):b+=d.title),b+="</th>"}),b+="</tr></thead>"),b+="<tbody>",t&&t.length>0&&t.forEach(function(d,N){if(!(N>f.limit)){b+="<tr";var E={};D2(E,f.row),f.rows&&f.rows[N]&&D2(E,f.rows[N]),"u">typeof E&&"u">typeof E.style&&(b+=' style="',"function"==typeof E.style?b+=E.style(f,d,N):b+=E.style,b+='" '),b+=">",r.forEach(function(R,A){var O={};D2(O,f.cell),D2(O,E.cell),"u">typeof f.column&&D2(O,f.column.cell),D2(O,R.cell),f.cells&&f.cells[N]&&f.cells[N][A]&&D2(O,f.cells[N][A]);var C=d[R.columnid];"function"==typeof O.value&&(C=O.value(C,f,d,R,O,N,A));var V=O.typeid;"function"==typeof V&&(V=V(C,f,d,R,O,N,A)),typeof V>"u"&&("number"==typeof C?V="number":"string"==typeof C?V="string":"boolean"==typeof C?V="boolean":"object"==typeof C&&C instanceof Date&&(V="date"));var T1="";"money"==V?T1='mso-number-format:"\\#\\,\\#\\#0\\\\ _р_\\.";white-space:normal;':"number"==V?T1=" ":"date"==V?T1='mso-number-format:"Short Date";':n.types&&n.types[V]&&n.types[V].typestyle&&(T1=n.types[V].typestyle),b+="<td style='"+(T1=T1||'mso-number-format:"\\@";')+"' ","u">typeof O.style&&(b+=' style="',"function"==typeof O.style?b+=O.style(C,f,d,R,N,A):b+=O.style,b+='" '),b+=">";var C1=O.format;if(typeof C>"u")b+="";else if("u">typeof C1){if("function"==typeof C1)b+=C1(C);else if("string"==typeof C1)b+=C;else throw Error("Unknown format type. Should be function or string")}else"number"==V||"date"==V?b+=C.toString():"money"==V?b+=(+C).toFixed(2):b+=C;b+="</td>"}),b+="</tr>"}}),b+="</tbody></table></body></html>"}},u.into.XLSXML=function(e,n,t,r,i){n=n||{},"object"==typeof e&&(n=e,e=void 0);var f,l,a={};n&&n.sheets?(a=n.sheets,f=t,l=r):(a.Sheet1=n,f=[t],l=[r]),e=u.utils.autoExtFilename(e,"xls",n);var h=u.utils.saveFile(e,g());return i&&(h=i(h)),h;function g(){var b="",c=" </Styles>",d={},N=62;function E(T){var S1="";for(var A1 in T){for(var y in S1+="<"+A1,T[A1])S1+=" ","x:"==y.substr(0,2)?S1+=y:S1+="ss:",S1+=y+"="+JSON.stringify(T[A1][y]);S1+="/>"}var d2=nt(S1);return d[d2]||(d[d2]={styleid:N},b+=`<Style ss:ID=${JSON.stringify("s"+N)}>`+S1.replace(/<\s*\/\s*Style /gi,"<")+"</Style>",N++),"s"+d[d2].styleid}function R(T){try{return Object.values(T)}catch{return Object.keys(T).map(function(A1){return T[A1]})}}var A=0;for(var O in a){var C=a[O],V="u">typeof C.dataidx?C.dataidx:A++,T1=R(f[V]),C1=void 0;"u">typeof C.columns?C1=C.columns:(void 0===(C1=l[V])||0==C1.length&&T1.length>0)&&"object"==typeof T1[0]&&(C1=Array.isArray(T1[0])?T1[0].map(function(T,S1){return{columnid:S1}}):Object.keys(T1[0]).map(function(T){return{columnid:T}})),C1.forEach(function(T,S1){"u">typeof C.column&&D2(T,C.column),typeof T.width>"u"&&(C.column&&"u">typeof C.column.width?T.width=C.column.width:T.width=120),"number"==typeof T.width&&(T.width=T.width),typeof T.columnid>"u"&&(T.columnid=S1),typeof T.title>"u"&&(T.title=""+T.columnid.trim()),C.headers&&Array.isArray(C.headers)&&(T.title=C.headers[S1])}),c+="<Worksheet ss:Name="+JSON.stringify(O)+'> 	  			<Table ss:ExpandedColumnCount="'+C1.length+'" ss:ExpandedRowCount="'+((C.headers?1:0)+Math.min(T1.length,C.limit||T1.length))+'" x:FullColumns="1" 	   			x:FullRows="1" ss:DefaultColumnWidth="65" ss:DefaultRowHeight="15">',C1.forEach(function(T,S1){c+=`
					<Column 
						ss:Index="${S1+1}" 
						ss:AutoFitWidth="0" 
						ss:Width=${JSON.stringify(""+T.width)}
					/>`}),C.headers&&(c+='<Row ss:AutoFitHeight="0">',C1.forEach(function(T,S1){if(c+="<Cell ","u">typeof T.style){var A1={};"function"==typeof T.style?D2(A1,T.style(C,T,S1)):D2(A1,T.style),c+="ss:StyleID="+JSON.stringify(E(A1))}c+='><Data ss:Type="String">',"u">typeof T.title&&("function"==typeof T.title?c+=T.title(C,T,S1):c+=T.title),c+="</Data></Cell>"}),c+="</Row>"),T1&&T1.length>0&&T1.forEach(function(T,S1){if(!(S1>C.limit)){var A1={};if(D2(A1,C.row),C.rows&&C.rows[S1]&&D2(A1,C.rows[S1]),c+="<Row ","u">typeof A1){var y={};"u">typeof A1.style&&("function"==typeof A1.style?D2(y,A1.style(C,T,S1)):D2(y,A1.style),c+="ss:StyleID="+JSON.stringify(E(y)))}c+=">",C1.forEach(function(d2,E2){var g2={};D2(g2,C.cell),D2(g2,A1.cell),"u">typeof C.column&&D2(g2,C.column.cell),D2(g2,d2.cell),C.cells&&C.cells[S1]&&C.cells[S1][E2]&&D2(g2,C.cells[S1][E2]);var A2=T[d2.columnid];"function"==typeof g2.value&&(A2=g2.value(A2,C,T,d2,g2,S1,E2));var S2=g2.typeid;"function"==typeof S2&&(S2=S2(A2,C,T,d2,g2,S1,E2)),typeof S2>"u"&&("number"==typeof A2?S2="number":"string"==typeof A2?S2="string":"boolean"==typeof A2?S2="boolean":"object"==typeof A2&&A2 instanceof Date&&(S2="date"));var c2="String";"number"==S2?c2="Number":"date"==S2&&(c2="Date");var u2="";"money"==S2?u2='mso-number-format:"\\#\\,\\#\\#0\\\\ _р_\\.";white-space:normal;':"number"==S2?u2=" ":"date"==S2?u2='mso-number-format:"Short Date";':n.types&&n.types[S2]&&n.types[S2].typestyle&&(u2=n.types[S2].typestyle),u2=u2||'mso-number-format:"\\@";',c+="<Cell ";var v2={};"u">typeof g2.style&&("function"==typeof g2.style?D2(v2,g2.style(A2,C,T,d2,S1,E2)):D2(v2,g2.style),c+="ss:StyleID="+JSON.stringify(E(v2))),c+="><Data ss:Type="+JSON.stringify(c2)+">";var M2=g2.format;if(typeof A2>"u")c+="";else if("u">typeof M2){if("function"==typeof M2)c+=M2(A2);else if("string"==typeof M2)c+=A2;else throw Error("Unknown format type. Should be function or string")}else"number"==S2||"date"==S2?c+=A2.toString():"money"==S2?c+=(+A2).toFixed(2):c+=A2;c+="</Data></Cell>"}),c+="</Row>"}}),c+="</Table></Worksheet>"}return c+="</Workbook>",'<?xml version="1.0"?> 		<Workbook xmlns="urn:schemas-microsoft-com:office:spreadsheet" 		 xmlns:o="urn:schemas-microsoft-com:office:office" 		 xmlns:x="urn:schemas-microsoft-com:office:excel" 		 xmlns:ss="urn:schemas-microsoft-com:office:spreadsheet" 		 xmlns:html="http://www.w3.org/TR/REC-html40"> 		 <DocumentProperties xmlns="urn:schemas-microsoft-com:office:office"> 		 </DocumentProperties> 		 <OfficeDocumentSettings xmlns="urn:schemas-microsoft-com:office:office"> 		  <AllowPNG/> 		 </OfficeDocumentSettings> 		 <ExcelWorkbook xmlns="urn:schemas-microsoft-com:office:excel"> 		  <ActiveSheet>0</ActiveSheet> 		 </ExcelWorkbook> 		 <Styles> 		  <Style ss:ID="Default" ss:Name="Normal"> 		   <Alignment ss:Vertical="Bottom"/> 		   <Borders/> 		   <Font ss:FontName="Calibri" x:Family="Swiss" ss:Size="12" ss:Color="#000000"/> 		   <Interior/> 		   <NumberFormat/> 		   <Protection/> 		  </Style>'+b+c}},u.into.XLSX=function(e,n,t,r,i){var a=1;n=n||{},Jt(r,[{columnid:"_"}])&&(t=t.map(function(b){return b._}),r=void 0),e=u.utils.autoExtFilename(e,"xlsx",n);var f=c3();"object"==typeof e&&(n=e,e=void 0);var l={SheetNames:[],Sheets:{}};return n.sourcefilename?u.utils.loadBinaryFile(n.sourcefilename,!!i,function(b){l=f.read(b,{type:"binary",...u.options.excel,...n}),h()}):h(),i&&(a=i(a)),a;function h(){"object"==typeof n&&Array.isArray(n)?t&&t.length>0&&t.forEach(function(b,c){g(n[c],b,void 0,c+1)}):g(n,t,r,1),m(i)}function g(b,c,d,N){var E={sheetid:"Sheet "+N,headers:!0};u.utils.extend(E,b);var R=Object.keys(c).length;(!d||0==d.length)&&R>0&&(d=Object.keys(c[0]).map(function(g2){return{columnid:g2}}));var A={};l.SheetNames.indexOf(E.sheetid)>-1||(l.SheetNames.push(E.sheetid),l.Sheets[E.sheetid]={}),A=l.Sheets[E.sheetid];var O="A1";E.range&&(O=E.range);var C=u.utils.xlscn(O.match(/[A-Z]+/)[0]),V=+O.match(/[0-9]+/)[0]-1;if(l.Sheets[E.sheetid]["!ref"])var T1=l.Sheets[E.sheetid]["!ref"],C1=u.utils.xlscn(T1.match(/[A-Z]+/)[0]),T=+T1.match(/[0-9]+/)[0]-1;else var C1=1,T=1;var S1=d.length?0:1,A1=Math.max(C+d.length-1+S1,C1),y=Math.max(V+R+2,T),d2=V+1;l.Sheets[E.sheetid]["!ref"]="A1:"+u.utils.xlsnc(A1)+y,E.headers&&(d.forEach(function(g2,A2){A[u.utils.xlsnc(C+A2)+""+d2]={v:g2.columnid.trim()}}),d2++);for(var E2=0;E2<R;E2++)d.forEach(function(g2,A2){var S2={v:c[E2][g2.columnid]};"number"==typeof c[E2][g2.columnid]?S2.t="n":"string"==typeof c[E2][g2.columnid]?S2.t="s":"boolean"==typeof c[E2][g2.columnid]?S2.t="b":"object"==typeof c[E2][g2.columnid]&&c[E2][g2.columnid]instanceof Date&&(S2.t="d"),A[u.utils.xlsnc(C+A2)+""+d2]=S2}),d2++}function m(b){var c;if(typeof e>"u")a=l;else if(c=c3(),U1.isNode||U1.isMeteorServer)c.writeFile(l,e);else{var N=c.write(l,{bookType:"xlsx",bookSST:!1,type:"binary"});jt(new Blob([function(R){for(var A=new ArrayBuffer(R.length),O=new Uint8Array(A),C=0;C!=R.length;++C)O[C]=255&R.charCodeAt(C);return A}(N)],{type:"application/octet-stream"}),e)}}},u.from.METEOR=function(e,n,t,r,i){var a=e.find(n).fetch();return t&&(a=t(a,r,i)),a},u.from.TABLETOP=function(e,n,t,r,i){var a=[],f={headers:!0,simpleSheet:!0,key:e};return u.utils.extend(f,n),f.callback=function(l){a=l,t&&(a=t(a,r,i))},Tabletop.init(f),null},u.from.HTML=function(e,n,t,r,i){var a={};u.utils.extend(a,n);var f=document.querySelector(e);if(!f&&"TABLE"!==f.tagName)throw Error("Selected HTML element is not a TABLE");var l=[],h=a.headers;if(h&&!Array.isArray(h)){h=[];for(var g=f.querySelector("thead tr").children,m=0;m<g.length;m++)g.item(m).style&&"none"===g.item(m).style.display&&a.skipdisplaynone?h.push(void 0):h.push(g.item(m).textContent)}for(var b=f.querySelectorAll("tbody tr"),c=0;c<b.length;c++){var d=b.item(c).children,N={};for(m=0;m<d.length;m++)d.item(m).style&&"none"===d.item(m).style.display&&a.skipdisplaynone||(h?N[h[m]]=d.item(m).textContent:N[m]=d.item(m).textContent);l.push(N)}return t&&(l=t(l,r,i)),l},u.from.RANGE=function(e,n,t,r,i){for(var a=[],f=e;f<=n;f++)a.push(f);return t&&(a=t(a,r,i)),a},u.from.FILE=function(e,n,t,r,i){if("string"==typeof e)a=e;else if(e instanceof Event)a=e.target.files[0].name;else throw Error("Wrong usage of FILE() function");var a,f=a.split("."),l=f[f.length-1].toUpperCase();if(u.from[l])return u.from[l](e,n,t,r,i);throw Error("Cannot recognize file type for loading")},u.from.JSON=function(e,n,t,r,i){var a;return e=u.utils.autoExtFilename(e,"json",n),u.utils.loadFile(e,!!t,function(f){a=JSON.parse(f),t&&(a=t(a,r,i))}),a},u.from.TXT=function(e,n,t,r,i){var a;return e=u.utils.autoExtFilename(e,"txt",n),u.utils.loadFile(e,!!t,function(f){""===(a=f.split(/\r?\n/))[a.length-1]&&a.pop();for(var l=0,h=a.length;l<h;l++)a[l]==+a[l]&&(a[l]=+a[l]),a[l]=[a[l]];t&&(a=t(a,r,i))}),a},u.from.TAB=u.from.TSV=function(e,n,t,r,i){return(n=n||{}).separator="	",e=u.utils.autoExtFilename(e,"tab",n),n.autoext=!1,u.from.CSV(e,n,t,r,i)},u.from.CSV=function(e,n,t,r,i){e=""+e;var a={separator:",",quote:'"',headers:!0,raw:!1};u.utils.extend(a,n);var f,l=[];function h(g){var O,C,m=a.separator.charCodeAt(0),b=a.quote.charCodeAt(0),c={},d={},N=[],E=g.length,R=0,A=0;function V(){if(R>=E)return d;if(C)return C=!1,c;var S1=R;if(g.charCodeAt(S1)===b){for(var A1=S1;A1++<E;)if(g.charCodeAt(A1)===b){if(g.charCodeAt(A1+1)!==b)break;++A1}R=A1+2;var y=g.charCodeAt(A1+1);return 13===y?(C=!0,10===g.charCodeAt(A1+2)&&++R):10===y&&(C=!0),g.substring(S1+1,A1).replace(/""/g,'"')}for(;R<E;){var y=g.charCodeAt(R++),d2=1;if(10===y)C=!0;else if(13===y)C=!0,10===g.charCodeAt(R)&&(++R,++d2);else if(y!==m)continue;return g.substring(S1,R-d2)}return g.substring(S1)}for(;(O=V())!==d;){for(var T1=[];O!==c&&O!==d;)T1.push(O.trim()),O=V();if(a.headers){if(0===A){if("boolean"==typeof a.headers)l=T1;else if(Array.isArray(a.headers)){l=a.headers;var C1={};l.forEach(function(S1,A1){C1[S1]=T1[A1],!a.raw&&"u">typeof C1[S1]&&0!==C1[S1].length&&C1[S1].trim()==+C1[S1]&&(C1[S1]=+C1[S1])}),N.push(C1)}}else{var C1={};l.forEach(function(A1,y){C1[A1]=T1[y],!a.raw&&"u">typeof C1[A1]&&0!==C1[A1].length&&C1[A1].trim()==+C1[A1]&&(C1[A1]=+C1[A1])}),N.push(C1)}A++}else{var C1={};T1.forEach(function(A1,y){C1[y]=T1[y],!a.raw&&"u">typeof C1[y]&&0!==C1[y].length&&C1[y].trim()==+C1[y]&&(C1[y]=+C1[y])}),N.push(C1)}}if(f=N,a.headers&&i&&i.sources&&i.sources[r]){var T=i.sources[r].columns=[];l.forEach(function(S1){T.push({columnid:S1})})}t&&(f=t(f,r,i))}return RegExp(`
`).test(e)?h(e):(e=u.utils.autoExtFilename(e,"csv",n),u.utils.loadFile(e,!!t,h,i.cb)),f},u.from.XLS=function(e,n,t,r,i){return n=n||{},e=u.utils.autoExtFilename(e,"xls",n),n.autoExt=!1,C4(c3(),e,n,t,r,i)},u.from.XLSX=function(e,n,t,r,i){return n=n||{},e=u.utils.autoExtFilename(e,"xlsx",n),n.autoExt=!1,C4(c3(),e,n,t,r,i)},u.from.ODS=function(e,n,t,r,i){return n=n||{},e=u.utils.autoExtFilename(e,"ods",n),n.autoExt=!1,C4(c3(),e,n,t,r,i)},u.from.XML=function(e,n,t,r,i){var a;return u.utils.loadFile(e,!!t,function(f){a=Ni(f).root,t&&(a=t(a,r,i))}),a},u.from.GEXF=function(e,n,t,r,i){var a;return u("SEARCH FROM XML("+e+")",[],function(f){a=f,t&&(a=t(a))}),a},S.Print=function(e){return Object.assign(this,e)},S.Print.prototype.toString=function(){var e="PRINT";return this.statement&&(e+=" "+this.statement.toString()),e},S.Print.prototype.execute=function(e,n,t){var r=this,i=1;if(u.precompile(this,e,n),this.exprs&&this.exprs.length>0){var a=this.exprs.map(function(l){return mt(Function("params,alasql,p","var y;return "+l.toJS("({})","",null)).bind(r)(n,u))});console.log.apply(console,a)}else this.select?console.log(mt(this.select.execute(e,n))):console.log();return t&&(i=t(i)),i},S.Source=function(e){return Object.assign(this,e)},S.Source.prototype.toString=function(){var e="SOURCE";return this.url&&(e+=" '"+this.url+" '"),e},S.Source.prototype.execute=function(e,n,t){var r;return F3(this.url,!!t,function(i){return r=u(i),t&&(r=t(r)),r},function(i){throw i}),r},S.Require=function(e){return Object.assign(this,e)},S.Require.prototype.toString=function(){var e="REQUIRE";return this.paths&&this.paths.length>0&&(e+=this.paths.map(function(n){return n.toString()}).join(",")),this.plugins&&this.plugins.length>0&&(e+=this.plugins.map(function(n){return n.toUpperCase()}).join(",")),e},S.Require.prototype.execute=function(e,n,t){var r=this,i=0,a="";return this.paths&&this.paths.length>0?this.paths.forEach(function(f){F3(f.value,!!t,function(l){i++,a+=l,!(i<r.paths.length)&&(Function("params,alasql",a)(n,u),t&&(i=t(i)))})}):this.plugins&&this.plugins.length>0?this.plugins.forEach(function(f){u.plugins[f]||F3(u.path+"/alasql-"+f.toLowerCase()+".js",!!t,function(l){i++,a+=l,!(i<r.plugins.length)&&(Function("params,alasql",a)(n,u),u.plugins[f]=!0,t&&(i=t(i)))})}):t&&(i=t(i)),i},S.Assert=function(e){return Object.assign(this,e)},S.Source.prototype.toString=function(){var e="ASSERT";return this.value&&(e+=" "+JSON.stringify(this.value)),e},S.Assert.prototype.execute=function(e){if(!Jt(u.res,this.value))throw Error((this.message||"Assert wrong")+": "+JSON.stringify(u.res)+" == "+JSON.stringify(this.value));return 1};var lt=u.engines.INDEXEDDB=function(){};async function p3(e){let n=globalThis.indexedDB;if(!n)throw Error("IndexedDB is not supported in this browser");if(n.databases)return(await n.databases()).find(a=>a.name===e)||0;let t=n.open(e);return new Promise(function(r,i){t.onsuccess=()=>{t.result.close(),r({name:e,version:t.result.version})},t.onupgradeneeded=a=>{a.target.transaction.abort(),r(0)},t.onerror=()=>{i(Error("IndexedDB error"))},t.onblocked=()=>{r({name:e,version:t.result.version})}})}lt.showDatabases=function(e,n){if(!indexedDB.databases){n(null,Error("SHOW DATABASE is not supported in this browser"));return}indexedDB.databases().then(t=>{let r=[],i=e&&RegExp(e.value.replace(/\%/g,".*"),"g");for(var a=0;a<t.length;a++)(!e||t[a].name.match(i))&&r.push({databaseid:t[a].name});n(r)})},lt.createDatabase=async function(e,n,t,r,i){if(await p3(e).catch(f=>{throw i&&i(null,f),f})){if(t)i&&i(0);else{let f=Error(`IndexedDB: Cannot create new database "${e}" because it already exists`);i&&i(null,f)}}else{let f=indexedDB.open(e,1);f.onsuccess=()=>{f.result.close(),i(1)}}},lt.dropDatabase=async function(e,n,t){await p3(e).catch(i=>{throw t&&t(null,i),i})?indexedDB.deleteDatabase(e).onsuccess=()=>{t&&t(1)}:n?t&&t(0):t&&t(null,Error(`IndexedDB: Cannot drop new database "${e}" because it does not exist'`))},lt.attachDatabase=async function(e,n,t,r,i){if(!await p3(e).catch(g=>{throw i&&i(null,g),g})){let g=Error(`IndexedDB: Cannot attach database "${e}" because it does not exist`);throw i&&i(null,g),g}let f=await new Promise((g,m)=>{let b=indexedDB.open(e);b.onsuccess=()=>{g(b.result.objectStoreNames),b.result.close()}}),l=new u.Database(n||e);l.engineid="INDEXEDDB",l.ixdbid=e,l.tables=[];for(var h=0;h<f.length;h++)l.tables[f[h]]={};i&&i(1)},lt.createTable=async function(e,n,t,r){let i=u.databases[e].ixdbid,a=await p3(i).catch(l=>{throw r&&r(null,l),l});if(!a){let l=Error('IndexedDB: Cannot create table in database "'+i+'" because it does not exist');throw r&&r(null,l),l}let f=indexedDB.open(i,a.version+1);f.onupgradeneeded=function(l){f.result.createObjectStore(n,{autoIncrement:!0})},f.onsuccess=function(l){f.result.close(),r&&r(1)},f.onerror=l=>{r(null,l)},f.onblocked=function(l){r(null,Error(`Cannot create table "${n}" because database "${e}"  is blocked`))}},lt.dropTable=async function(e,n,t,r){let l;let i=u.databases[e].ixdbid,a=await p3(i).catch(h=>{throw r&&r(null,h),h});if(!a){let h=Error('IndexedDB: Cannot drop table in database "'+i+'" because it does not exist');throw r&&r(null,h),h}let f=indexedDB.open(i,a.version+1);f.onupgradeneeded=function(h){var g=f.result;g.objectStoreNames.contains(n)?(g.deleteObjectStore(n),delete u.databases[e].tables[n]):t||(l=Error(`IndexedDB: Cannot drop table "${n}" because it does not exist`),h.target.transaction.abort())},f.onsuccess=function(h){f.result.close(),r&&r(1)},f.onerror=function(h){r&&r(null,l||h)},f.onblocked=function(h){r(null,Error(`Cannot drop table "${n}" because database "${e}" is blocked`))}},lt.intoTable=function(e,n,t,r,i){let a=u.databases[e].ixdbid,f=indexedDB.open(a);var h=u.databases[e].tables[n];f.onupgradeneeded=g=>{g.target.transaction.abort();let m=Error(`Cannot insert into table "${n}" because database "${e}" does not exist`);i&&i(null,m)},f.onsuccess=()=>{for(var g=f.result,m=g.transaction([n],"readwrite"),b=m.objectStore(n),c=0,d=t.length;c<d;c++)b.add(t[c]);m.oncomplete=function(){for(var N in g.close(),h.afterinsert)if(h.afterinsert[N]){var E=h.afterinsert[N];E.funcid?u.fn[E.funcid](t):E.statement&&E.statement.execute(e)}i&&i(d)}}},lt.fromTable=function(e,n,t,r,i){let a=u.databases[e].ixdbid,f=indexedDB.open(a);f.onupgradeneeded=l=>{l.target.transaction.abort();let h=Error(`Cannot select from table "${n}" because database "${e}" does not exist`);t&&t(null,h)},f.onsuccess=()=>{let l=[],h=f.result,g=h.transaction([n]).objectStore(n).openCursor();g.onsuccess=()=>{let m=g.result;if(m){let b=typeof m===Object?m.value:{[m.key]:m.value};l.push(b),m.continue()}else h.close(),t&&t(l,r,i)}}},lt.deleteFromTable=function(e,n,t,r,i){let a=u.databases[e].ixdbid,f=indexedDB.open(a);f.onsuccess=()=>{let l=f.result,h=l.transaction([n],"readwrite").objectStore(n).openCursor(),g=0;h.onsuccess=()=>{var m=h.result;m?((!t||t(m.value,r,u))&&(m.delete(),g++),m.continue()):(l.close(),i&&i(g))}}},lt.updateTable=function(e,n,t,r,i,a){let f=u.databases[e].ixdbid,l=indexedDB.open(f);l.onsuccess=function(){let h=l.result,g=h.transaction([n],"readwrite").objectStore(n).openCursor(),m=0;g.onsuccess=()=>{var b=g.result;if(b){if(!r||r(b.value,i)){var c=b.value;t(c,i),b.update(c),m++}b.continue()}else h.close(),a&&a(m)}}};var b2=u.engines.LOCALSTORAGE=function(){};b2.get=function(e){var t,n=localStorage.getItem(e);if(!(typeof n>"u")){try{t=JSON.parse(n)}catch{throw Error("Cannot parse JSON object from localStorage"+n)}return t}},b2.set=function(e,n){typeof n>"u"?localStorage.removeItem(e):localStorage.setItem(e,JSON.stringify(n))},b2.storeTable=function(e,n){var t=u.databases[e],r=t.tables[n],i={};i.columns=r.columns,i.data=r.data,i.identities=r.identities,b2.set(t.lsdbid+"."+n,i)},b2.restoreTable=function(e,n){var t=u.databases[e],r=b2.get(t.lsdbid+"."+n),i=new u.Table;for(var a in r)i[a]=r[a];return t.tables[n]=i,i.indexColumns(),i},b2.removeTable=function(e,n){var t=u.databases[e];localStorage.removeItem(t.lsdbid+"."+n)},b2.createDatabase=function(e,n,t,r,i){var a=1,f=b2.get("alasql");if(t&&f&&f.databases&&f.databases[e])a=0;else{if(f||(f={databases:{}}),f.databases&&f.databases[e])throw Error('localStorage: Cannot create new database "'+e+'" because it already exists');f.databases[e]=!0,b2.set("alasql",f),b2.set(e,{databaseid:e,tables:{}})}return i&&(a=i(a)),a},b2.dropDatabase=function(e,n,t){var r=1,i=b2.get("alasql");if(n&&i&&i.databases&&!i.databases[e])r=0;else{if(!i){if(n)return t?t(0):0;throw Error("There is no any AlaSQL databases in localStorage")}if(i.databases&&!i.databases[e])throw Error('localStorage: Cannot drop database "'+e+'" because there is no such database');delete i.databases[e],b2.set("alasql",i);var a=b2.get(e);for(var f in a.tables)localStorage.removeItem(e+"."+f);localStorage.removeItem(e)}return t&&(r=t(r)),r},b2.attachDatabase=function(e,n,t,r,i){var a=1;if(u.databases[n])throw Error('Unable to attach database as "'+n+'" because it already exists');n||(n=e);var f=new u.Database(n);if(f.engineid="LOCALSTORAGE",f.lsdbid=e,f.tables=b2.get(e).tables,!u.options.autocommit&&f.tables)for(var l in f.tables)b2.restoreTable(n,l);return i&&(a=i(a)),a},b2.showDatabases=function(e,n){var t=[],r=b2.get("alasql");if(e)var i=RegExp(e.value.replace(/%/g,".*"),"g");if(r&&r.databases){for(var a in r.databases)t.push({databaseid:a});e&&t&&t.length>0&&(t=t.filter(function(f){return f.databaseid.match(i)}))}return n&&(t=n(t)),t},b2.createTable=function(e,n,t,r){var i=1,a=u.databases[e].lsdbid;if(b2.get(a+"."+n)&&!t)throw Error('Table "'+n+'" alsready exists in localStorage database "'+a+'"');var l=b2.get(a);return u.databases[e].tables[n],l.tables[n]=!0,b2.set(a,l),b2.storeTable(e,n),r&&(i=r(i)),i},b2.truncateTable=function(e,n,t,r){var f,i=1,a=u.databases[e].lsdbid;if(f=u.options.autocommit?b2.get(a):u.databases[e],!t&&!f.tables[n])throw Error('Cannot truncate table "'+n+'" in localStorage, because it does not exist');return b2.restoreTable(e,n).data=[],b2.storeTable(e,n),r&&(i=r(i)),i},b2.dropTable=function(e,n,t,r){var f,i=1,a=u.databases[e].lsdbid;if(f=u.options.autocommit?b2.get(a):u.databases[e],!t&&!f.tables[n])throw Error('Cannot drop table "'+n+'" in localStorage, because it does not exist');return delete f.tables[n],b2.set(a,f),b2.removeTable(e,n),r&&(i=r(i)),i},b2.fromTable=function(e,n,t,r,i){u.databases[e].lsdbid;var f=b2.restoreTable(e,n).data;return t&&(f=t(f,r,i)),f},b2.intoTable=function(e,n,t,r,i){u.databases[e].lsdbid;var f=t.length,l=b2.restoreTable(e,n);for(var h in l.identities){var g=l.identities[h];for(var m in t)t[m][h]=g.value,g.value+=g.step}return l.data||(l.data=[]),l.data=l.data.concat(t),b2.storeTable(e,n),i&&(f=i(f)),f},b2.loadTableData=function(e,n){u.databases[e],u.databases[e].lsdbid,b2.restoreTable(e,n)},b2.saveTableData=function(e,n){var t=u.databases[e],r=u.databases[e].lsdbid;b2.storeTable(r,n),t.tables[n].data=void 0},b2.commit=function(e,n){var t=u.databases[e],r=u.databases[e].lsdbid,i={databaseid:r,tables:{}};if(t.tables)for(var a in t.tables)i.tables[a]=!0,b2.storeTable(e,a);return b2.set(r,i),n?n(1):1},b2.begin=b2.commit,b2.rollback=function(e,n){};var b3=u.engines.SQLITE=function(){};b3.createDatabase=function(e,n,t,r,i){throw Error("Connot create SQLITE database in memory. Attach it.")},b3.dropDatabase=function(e){throw Error("This is impossible to drop SQLite database. Detach it.")},b3.attachDatabase=function(e,n,t,r,i){if(u.databases[n])throw Error('Unable to attach database as "'+n+'" because it already exists');if(t[0]&&t[0]instanceof S.StringValue||t[0]instanceof S.ParamValue){if(t[0]instanceof S.StringValue)var f=t[0].value;else if(t[0]instanceof S.ParamValue)var f=r[t[0].param];return u.utils.loadBinaryFile(f,!0,function(l){var h=new u.Database(n||e);h.engineid="SQLITE",h.sqldbid=e;var g=h.sqldb=new SQL.Database(l);h.tables=[],g.exec("SELECT * FROM sqlite_master WHERE type='table'")[0].values.forEach(function(b){h.tables[b[1]]={};var c=h.tables[b[1]].columns=[],N=u.parse(b[4]).statements[0].columns;N&&N.length>0&&N.forEach(function(E){c.push(E)})}),i(1)},function(l){throw Error('Cannot open SQLite database file "'+t[0].value+'"')}),1}throw Error("Cannot attach SQLite database without a file")},b3.fromTable=function(e,n,t,r,i){var a=u.databases[e].sqldb.exec("SELECT * FROM "+n),f=i.sources[r].columns=[];a[0].columns.length>0&&a[0].columns.forEach(function(h){f.push({columnid:h})});var l=[];a[0].values.length>0&&a[0].values.forEach(function(h){var g={};f.forEach(function(m,b){g[m.columnid]=h[b]}),l.push(g)}),t&&t(l,r,i)},b3.intoTable=function(e,n,t,r,i){for(var a=u.databases[e].sqldb,f=0,l=t.length;f<l;f++){var h="INSERT INTO "+n+" (",g=t[f],m=Object.keys(g);h+=m.join(",")+") VALUES ("+m.map(function(c){var d=g[c];return"string"==typeof d&&(d="'"+d+"'"),d}).join(",")+")",a.exec(h)}return i&&i(l),l};var P2=u.engines.FILESTORAGE=u.engines.FILE=function(){};if(P2.createDatabase=function(e,n,t,r,i){var a=1,f=n[0].value;return u.utils.fileExists(f,function(l){if(l){if(t)return a=0,i&&(a=i(a)),a;throw Error("Cannot create new database file, because it already exists")}u.utils.saveFile(f,JSON.stringify({tables:{}}),function(g){i&&(a=i(a))})}),a},P2.dropDatabase=function(e,n,t){var r,i="";return"object"==typeof e&&e.value?i=e.value:(i=(u.databases[e]||{}).filename||"",delete u.databases[e]),u.utils.fileExists(i,function(f){if(f)r=1,u.utils.deleteFile(i,function(){r=1,t&&(r=t(r))});else{if(!n)throw Error("Cannot drop database file, because it does not exist");r=0,t&&(r=t(r))}}),r},P2.attachDatabase=function(e,n,t,r,i){var a=1;if(u.databases[n])throw Error('Unable to attach database as "'+n+'" because it already exists');var f=new u.Database(n||e);return f.engineid="FILESTORAGE",f.filename=t[0].value,F3(f.filename,!!i,function(l){try{f.data=JSON.parse(l)}catch{throw Error("Data in FileStorage database are corrupted")}if(f.tables=f.data.tables,!u.options.autocommit&&f.tables)for(var h in f.tables)f.tables[h].data=f.data[h];i&&(a=i(a))}),a},P2.createTable=function(e,n,t,r){var i=u.databases[e];if(i.data[n]&&!t)throw Error('Table "'+n+'" alsready exists in the database "'+fsdbid+'"');var l=u.databases[e].tables[n];return i.data.tables[n]={columns:l.columns},i.data[n]=[],P2.updateFile(e),r&&r(1),1},P2.updateFile=function(e){var n=u.databases[e];if(n.issaving){n.postsave=!0;return}n.issaving=!0,n.postsave=!1,u.utils.saveFile(n.filename,JSON.stringify(n.data),function(){n.issaving=!1,n.postsave&&setTimeout(function(){P2.updateFile(e)},50)})},P2.dropTable=function(e,n,t,r){var a=u.databases[e];if(!t&&!a.tables[n])throw Error('Cannot drop table "'+n+'" in fileStorage, because it does not exist');return delete a.tables[n],delete a.data.tables[n],delete a.data[n],P2.updateFile(e),r&&r(1),1},P2.fromTable=function(e,n,t,r,i){var f=u.databases[e].data[n];return t&&(f=t(f,r,i)),f},P2.intoTable=function(e,n,t,r,i){var a=u.databases[e],f=t.length,l=a.data[n];return l||(l=[]),a.data[n]=l.concat(t),P2.updateFile(e),i&&i(f),f},P2.loadTableData=function(e,n){var t=u.databases[e];t.tables[n].data=t.data[n]},P2.saveTableData=function(e,n){var t=u.databases[e];t.data[n]=t.tables[n].data,t.tables[n].data=null,P2.updateFile(e)},P2.commit=function(e,n){var t=u.databases[e];if(t.tables)for(var i in t.tables)t.data.tables[i]={columns:t.tables[i].columns},t.data[i]=t.tables[i].data;return P2.updateFile(e),n?n(1):1},P2.begin=P2.commit,P2.rollback=function(e,n){var t=1,r=u.databases[e];function i(){setTimeout(function(){if(r.issaving)return i();u.loadFile(r.filename,!!n,function(a){for(var f in r.data=a,r.tables={},r.data.tables){var l=new u.Table({columns:r.data.tables[f].columns});D2(l,r.data.tables[f]),r.tables[f]=l,u.options.autocommit||(r.tables[f].data=r.data[f]),r.tables[f].indexColumns()}delete u.databases[e],u.databases[e]=new u.Database(e),D2(u.databases[e],r),u.databases[e].engineid="FILESTORAGE",u.databases[e].filename=r.filename,n&&(t=n(t))})},100)}r.dbversion++,i()},U1.isBrowser&&!U1.isWebWorker){if(!(u=u||!1))throw Error("alasql was not found");u.worker=function(){throw Error("Can find webworker in this enviroment")},"u">typeof Worker&&(u.worker=function(e,n,t){if(!0===e&&(e=void 0),typeof e>"u"){for(var r=document.getElementsByTagName("script"),i=0;i<r.length;i++)if("alasql-worker.js"===r[i].src.substr(-16).toLowerCase()){e=r[i].src.substr(0,r[i].src.length-16)+"alasql.js";break}else if("alasql-worker.min.js"===r[i].src.substr(-20).toLowerCase()){e=r[i].src.substr(0,r[i].src.length-20)+"alasql.min.js";break}else if("alasql.js"===r[i].src.substr(-9).toLowerCase()){e=r[i].src;break}else if("alasql.min.js"===r[i].src.substr(-13).toLowerCase()){e=r[i].src.substr(0,r[i].src.length-13)+"alasql.min.js";break}}if(typeof e>"u")throw Error("Path to alasql.js is not specified");if(!1!==e){var a="importScripts('";a+=e+"');self.onmessage = function(event) {alasql(event.data.sql,event.data.params, function(data){postMessage({id:event.data.id, data:data});});}";var f=new Blob([a],{type:"text/plain"});if(u.webworker=new Worker(URL.createObjectURL(f)),u.webworker.onmessage=function(h){var g=h.data.id;u.buffer[g](h.data.data),delete u.buffer[g]},u.webworker.onerror=function(h){throw h},arguments.length>1){var l="REQUIRE "+n.map(function(h){return'"'+h+'"'}).join(",");u(l,[],t)}}else if(!1===e){delete u.webworker;return}});/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */var jt=jt||function(e){if(!(typeof e>"u"||"u">typeof navigator&&/MSIE [1-9]\./.test(navigator.userAgent))){var n=e.document,t=function(){return e.URL||e.webkitURL||e},r=n.createElementNS("http://www.w3.org/1999/xhtml","a"),i="download"in r,a=function(A){var O=new MouseEvent("click");A.dispatchEvent(O)},f=/constructor/i.test(e.HTMLElement)||e.safari,l=/CriOS\/[\d]+/.test(navigator.userAgent),h=function(A){(e.setImmediate||e.setTimeout)(function(){throw A},0)},b=function(A){setTimeout(function(){"string"==typeof A?t().revokeObjectURL(A):A.remove()},4e4)},c=function(A,O,C){O=[].concat(O);for(var V=O.length;V--;){var T1=A["on"+O[V]];if("function"==typeof T1)try{T1.call(A,C||A)}catch(C1){h(C1)}}},d=function(A){return/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(A.type)?new Blob([String.fromCharCode(65279),A],{type:A.type}):A},N=function(A,O,C){C||(A=d(A));var T,V=this,C1="application/octet-stream"===A.type,S1=function(){c(V,"writestart progress write writeend".split(" "))};if(V.readyState=V.INIT,i){T=t().createObjectURL(A),setTimeout(function(){r.href=T,r.download=O,a(r),S1(),b(T),V.readyState=V.DONE});return}!function(){if((l||C1&&f)&&e.FileReader){var y=new FileReader;y.onloadend=function(){var E2=l?y.result:y.result.replace(/^data:[^;]*;/,"data:attachment/file;");e.open(E2,"_blank")||(e.location.href=E2),E2=void 0,V.readyState=V.DONE,S1()},y.readAsDataURL(A),V.readyState=V.INIT;return}(T||(T=t().createObjectURL(A)),C1)?e.location.href=T:e.open(T,"_blank")||(e.location.href=T),V.readyState=V.DONE,S1(),b(T)}()},E=N.prototype;return"u">typeof navigator&&navigator.msSaveOrOpenBlob?function(A,O,C){return O=O||A.name||"download",C||(A=d(A)),navigator.msSaveOrOpenBlob(A,O)}:(E.abort=function(){},E.readyState=E.INIT=0,E.WRITING=1,E.DONE=2,E.error=E.onwritestart=E.onprogress=E.onwrite=E.onabort=E.onerror=E.onwriteend=null,function(A,O,C){return new N(A,O||A.name||"download",C)})}}("u">typeof self&&self||"u">typeof window&&window||this.content);module.exports?module.exports.saveAs=jt:null===__webpack_require__.amdD||null===__webpack_require__.amdO||void 0!==(__WEBPACK_AMD_DEFINE_RESULT__=(function(){return jt}).call(exports,__webpack_require__,exports,module))&&(module.exports=__WEBPACK_AMD_DEFINE_RESULT__),(U1.isCordova||U1.isMeteorServer||U1.isNode)&&console.log("It looks like you are using the browser version of AlaSQL. Please use the alasql.fs.js file instead."),u.utils.saveAs=jt}return new h3("alasql"),u.use("alasql"),u})?__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports,[]):__WEBPACK_AMD_DEFINE_FACTORY__)&&(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},"./node_modules/keyborg/dist/keyborg.esm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{PW:()=>KEYBORG_FOCUSIN,Vm:()=>createKeyborg,ub:()=>disposeKeyborg});/*!
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */let _canUseWeakRef="undefined"!=typeof WeakRef;class WeakRefInstance{constructor(instance){_canUseWeakRef&&"object"==typeof instance?this._weakRef=new WeakRef(instance):this._instance=instance}deref(){var _a,_b,_c;let instance;return this._weakRef?(instance=null===(_a=this._weakRef)||void 0===_a?void 0:_a.deref())||delete this._weakRef:(null===(_c=null===(_b=instance=this._instance)||void 0===_b?void 0:_b.isDisposed)||void 0===_c?void 0:_c.call(_b))&&delete this._instance,instance}}/*!
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */let KEYBORG_FOCUSIN="keyborg:focusin";function canOverrideNativeFocus(win){let HTMLElement1=win.HTMLElement,origFocus=HTMLElement1.prototype.focus,isCustomFocusCalled=!1;return HTMLElement1.prototype.focus=function focus(){isCustomFocusCalled=!0},win.document.createElement("button").focus(),HTMLElement1.prototype.focus=origFocus,isCustomFocusCalled}let _canOverrideNativeFocus=!1;function setupFocusEvent(win){_canOverrideNativeFocus||(_canOverrideNativeFocus=canOverrideNativeFocus(win));let origFocus=win.HTMLElement.prototype.focus;if(origFocus.__keyborgNativeFocus)return;win.HTMLElement.prototype.focus=focus;let data=win.__keyborgData={focusInHandler:e=>{var _a;let target=e.target;if(!target)return;let event=document.createEvent("HTMLEvents");event.initEvent(KEYBORG_FOCUSIN,!0,!0);let details={relatedTarget:e.relatedTarget||void 0};(_canOverrideNativeFocus||data.lastFocusedProgrammatically)&&(details.isFocusedProgrammatically=target===(null===(_a=data.lastFocusedProgrammatically)||void 0===_a?void 0:_a.deref()),data.lastFocusedProgrammatically=void 0),event.details=details,target.dispatchEvent(event)}};function focus(){let keyborgNativeFocusEvent=win.__keyborgData;return keyborgNativeFocusEvent&&(keyborgNativeFocusEvent.lastFocusedProgrammatically=new WeakRefInstance(this)),origFocus.apply(this,arguments)}win.document.addEventListener("focusin",win.__keyborgData.focusInHandler,!0),focus.__keyborgNativeFocus=origFocus}function disposeFocusEvent(win){let proto=win.HTMLElement.prototype,origFocus=proto.focus.__keyborgNativeFocus,keyborgNativeFocusEvent=win.__keyborgData;keyborgNativeFocusEvent&&(win.document.removeEventListener("focusin",keyborgNativeFocusEvent.focusInHandler,!0),delete win.__keyborgData),origFocus&&(proto.focus=origFocus)}let _lastId=0,_state=new class{constructor(){this.__keyborgCoreRefs={},this._isNavigatingWithKeyboard=!1}add(keyborg){let id=keyborg.id;id in this.__keyborgCoreRefs||(this.__keyborgCoreRefs[id]=new WeakRefInstance(keyborg))}remove(id){delete this.__keyborgCoreRefs[id],0===Object.keys(this.__keyborgCoreRefs).length&&(this._isNavigatingWithKeyboard=!1)}setVal(isNavigatingWithKeyboard){if(this._isNavigatingWithKeyboard!==isNavigatingWithKeyboard)for(let id of(this._isNavigatingWithKeyboard=isNavigatingWithKeyboard,Object.keys(this.__keyborgCoreRefs))){let keyborg=this.__keyborgCoreRefs[id].deref();keyborg?keyborg.update(isNavigatingWithKeyboard):this.remove(id)}}getVal(){return this._isNavigatingWithKeyboard}};class KeyborgCore{constructor(win,props){this._isMouseUsed=!1,this._onFocusIn=e=>{if(this._isMouseUsed){this._isMouseUsed=!1;return}if(_state.getVal())return;let details=e.details;details.relatedTarget&&!details.isFocusedProgrammatically&&void 0!==details.isFocusedProgrammatically&&_state.setVal(!0)},this._onMouseDown=e=>{0!==e.buttons&&(0!==e.clientX||0!==e.clientY||0!==e.screenX||0!==e.screenY)&&(this._isMouseUsed=!0,_state.setVal(!1))},this._onKeyDown=e=>{var _a;let isNavigatingWithKeyboard=_state.getVal(),keyCode=e.keyCode,triggerKeys=this._triggerKeys;!isNavigatingWithKeyboard&&(!triggerKeys||triggerKeys.has(keyCode))?_state.setVal(!0):isNavigatingWithKeyboard&&(null===(_a=this._dismissKeys)||void 0===_a?void 0:_a.has(keyCode))&&this._scheduleDismiss()},this.id="c"+ ++_lastId,this._win=win;let doc=win.document;if(props){let triggerKeys=props.triggerKeys,dismissKeys=props.dismissKeys;(null==triggerKeys?void 0:triggerKeys.length)&&(this._triggerKeys=new Set(triggerKeys)),(null==dismissKeys?void 0:dismissKeys.length)&&(this._dismissKeys=new Set(dismissKeys))}doc.addEventListener(KEYBORG_FOCUSIN,this._onFocusIn,!0),doc.addEventListener("mousedown",this._onMouseDown,!0),win.addEventListener("keydown",this._onKeyDown,!0),setupFocusEvent(win),_state.add(this)}dispose(){let win=this._win;if(win){this._dismissTimer&&(win.clearTimeout(this._dismissTimer),this._dismissTimer=void 0),disposeFocusEvent(win);let doc=win.document;doc.removeEventListener(KEYBORG_FOCUSIN,this._onFocusIn,!0),doc.removeEventListener("mousedown",this._onMouseDown,!0),win.removeEventListener("keydown",this._onKeyDown,!0),delete this._win,_state.remove(this.id)}}isDisposed(){return!!this._win}update(isNavigatingWithKeyboard){var _a,_b;let keyborgs=null===(_b=null===(_a=this._win)||void 0===_a?void 0:_a.__keyborg)||void 0===_b?void 0:_b.refs;if(keyborgs)for(let id of Object.keys(keyborgs))Keyborg.update(keyborgs[id],isNavigatingWithKeyboard)}_scheduleDismiss(){let win=this._win;if(win){this._dismissTimer&&(win.clearTimeout(this._dismissTimer),this._dismissTimer=void 0);let was=win.document.activeElement;this._dismissTimer=win.setTimeout(()=>{this._dismissTimer=void 0;let cur=win.document.activeElement;was&&cur&&was===cur&&_state.setVal(!1)},500)}}}class Keyborg{constructor(win,props){this._cb=[],this._id="k"+ ++_lastId,this._win=win;let current=win.__keyborg;current?(this._core=current.core,current.refs[this._id]=this):(this._core=new KeyborgCore(win,props),win.__keyborg={core:this._core,refs:{[this._id]:this}})}static create(win,props){return new Keyborg(win,props)}static dispose(instance){instance.dispose()}static update(instance,isNavigatingWithKeyboard){instance._cb.forEach(callback=>callback(isNavigatingWithKeyboard))}dispose(){var _a;let current=null===(_a=this._win)||void 0===_a?void 0:_a.__keyborg;(null==current?void 0:current.refs[this._id])&&(delete current.refs[this._id],0===Object.keys(current.refs).length&&(current.core.dispose(),delete this._win.__keyborg)),this._cb=[],delete this._core,delete this._win}isNavigatingWithKeyboard(){return _state.getVal()}subscribe(callback){this._cb.push(callback)}unsubscribe(callback){let index=this._cb.indexOf(callback);index>=0&&this._cb.splice(index,1)}setVal(isNavigatingWithKeyboard){_state.setVal(isNavigatingWithKeyboard)}}function createKeyborg(win,props){return Keyborg.create(win,props)}function disposeKeyborg(instance){Keyborg.dispose(instance)}},"./node_modules/react-query/es/core/focusManager.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{j:()=>focusManager});var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js"),_subscribable__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react-query/es/core/subscribable.js"),_utils__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-query/es/core/utils.js"),focusManager=new(function(_Subscribable){function FocusManager(){var _this;return(_this=_Subscribable.call(this)||this).setup=function(onFocus){var _window;if(!_utils__WEBPACK_IMPORTED_MODULE_1__.sk&&(null==(_window=window)?void 0:_window.addEventListener)){var listener=function(){return onFocus()};return window.addEventListener("visibilitychange",listener,!1),window.addEventListener("focus",listener,!1),function(){window.removeEventListener("visibilitychange",listener),window.removeEventListener("focus",listener)}}},_this}(0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__.Z)(FocusManager,_Subscribable);var _proto=FocusManager.prototype;return _proto.onSubscribe=function onSubscribe(){this.cleanup||this.setEventListener(this.setup)},_proto.onUnsubscribe=function onUnsubscribe(){if(!this.hasListeners()){var _this$cleanup;null==(_this$cleanup=this.cleanup)||_this$cleanup.call(this),this.cleanup=void 0}},_proto.setEventListener=function setEventListener(setup){var _this$cleanup2,_this2=this;this.setup=setup,null==(_this$cleanup2=this.cleanup)||_this$cleanup2.call(this),this.cleanup=setup(function(focused){"boolean"==typeof focused?_this2.setFocused(focused):_this2.onFocus()})},_proto.setFocused=function setFocused(focused){this.focused=focused,focused&&this.onFocus()},_proto.onFocus=function onFocus(){this.listeners.forEach(function(listener){listener()})},_proto.isFocused=function isFocused(){return"boolean"==typeof this.focused?this.focused:"undefined"==typeof document||[void 0,"visible","prerender"].includes(document.visibilityState)},FocusManager}(_subscribable__WEBPACK_IMPORTED_MODULE_2__.l))},"./node_modules/react-query/es/core/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{QueryClient:()=>_queryClient__WEBPACK_IMPORTED_MODULE_0__.S});var _queryClient__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react-query/es/core/queryClient.js"),_types__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-query/es/core/types.js");__webpack_require__.o(_types__WEBPACK_IMPORTED_MODULE_1__,"QueryClientProvider")&&__webpack_require__.d(__webpack_exports__,{QueryClientProvider:function(){return _types__WEBPACK_IMPORTED_MODULE_1__.QueryClientProvider}}),__webpack_require__.o(_types__WEBPACK_IMPORTED_MODULE_1__,"useQuery")&&__webpack_require__.d(__webpack_exports__,{useQuery:function(){return _types__WEBPACK_IMPORTED_MODULE_1__.useQuery}})},"./node_modules/react-query/es/core/logger.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{E:()=>setLogger,j:()=>getLogger});var logger=console;function getLogger(){return logger}function setLogger(newLogger){logger=newLogger}},"./node_modules/react-query/es/core/notifyManager.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{V:()=>notifyManager});var _utils__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react-query/es/core/utils.js"),notifyManager=new(function(){function NotifyManager(){this.queue=[],this.transactions=0,this.notifyFn=function(callback){callback()},this.batchNotifyFn=function(callback){callback()}}var _proto=NotifyManager.prototype;return _proto.batch=function batch(callback){var result;this.transactions++;try{result=callback()}finally{this.transactions--,this.transactions||this.flush()}return result},_proto.schedule=function schedule(callback){var _this=this;this.transactions?this.queue.push(callback):(0,_utils__WEBPACK_IMPORTED_MODULE_0__.A4)(function(){_this.notifyFn(callback)})},_proto.batchCalls=function batchCalls(callback){var _this2=this;return function(){for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];_this2.schedule(function(){callback.apply(void 0,args)})}},_proto.flush=function flush(){var _this3=this,queue=this.queue;this.queue=[],queue.length&&(0,_utils__WEBPACK_IMPORTED_MODULE_0__.A4)(function(){_this3.batchNotifyFn(function(){queue.forEach(function(callback){_this3.notifyFn(callback)})})})},_proto.setNotifyFunction=function setNotifyFunction(fn){this.notifyFn=fn},_proto.setBatchNotifyFunction=function setBatchNotifyFunction(fn){this.batchNotifyFn=fn},NotifyManager}())},"./node_modules/react-query/es/core/onlineManager.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{N:()=>onlineManager});var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js"),_subscribable__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react-query/es/core/subscribable.js"),_utils__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-query/es/core/utils.js"),onlineManager=new(function(_Subscribable){function OnlineManager(){var _this;return(_this=_Subscribable.call(this)||this).setup=function(onOnline){var _window;if(!_utils__WEBPACK_IMPORTED_MODULE_1__.sk&&(null==(_window=window)?void 0:_window.addEventListener)){var listener=function(){return onOnline()};return window.addEventListener("online",listener,!1),window.addEventListener("offline",listener,!1),function(){window.removeEventListener("online",listener),window.removeEventListener("offline",listener)}}},_this}(0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__.Z)(OnlineManager,_Subscribable);var _proto=OnlineManager.prototype;return _proto.onSubscribe=function onSubscribe(){this.cleanup||this.setEventListener(this.setup)},_proto.onUnsubscribe=function onUnsubscribe(){if(!this.hasListeners()){var _this$cleanup;null==(_this$cleanup=this.cleanup)||_this$cleanup.call(this),this.cleanup=void 0}},_proto.setEventListener=function setEventListener(setup){var _this$cleanup2,_this2=this;this.setup=setup,null==(_this$cleanup2=this.cleanup)||_this$cleanup2.call(this),this.cleanup=setup(function(online){"boolean"==typeof online?_this2.setOnline(online):_this2.onOnline()})},_proto.setOnline=function setOnline(online){this.online=online,online&&this.onOnline()},_proto.onOnline=function onOnline(){this.listeners.forEach(function(listener){listener()})},_proto.isOnline=function isOnline(){return"boolean"==typeof this.online?this.online:"undefined"==typeof navigator||void 0===navigator.onLine||navigator.onLine},OnlineManager}(_subscribable__WEBPACK_IMPORTED_MODULE_2__.l))},"./node_modules/react-query/es/core/queryClient.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{S:()=>QueryClient});var esm_extends=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/extends.js"),utils=__webpack_require__("./node_modules/react-query/es/core/utils.js"),inheritsLoose=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js"),notifyManager=__webpack_require__("./node_modules/react-query/es/core/notifyManager.js"),logger=__webpack_require__("./node_modules/react-query/es/core/logger.js"),retryer=__webpack_require__("./node_modules/react-query/es/core/retryer.js"),Query=function(){function Query(config){this.abortSignalConsumed=!1,this.hadObservers=!1,this.defaultOptions=config.defaultOptions,this.setOptions(config.options),this.observers=[],this.cache=config.cache,this.queryKey=config.queryKey,this.queryHash=config.queryHash,this.initialState=config.state||this.getDefaultState(this.options),this.state=this.initialState,this.meta=config.meta,this.scheduleGc()}var _proto=Query.prototype;return _proto.setOptions=function setOptions(options){var _this$options$cacheTi;this.options=(0,esm_extends.Z)({},this.defaultOptions,options),this.meta=null==options?void 0:options.meta,this.cacheTime=Math.max(this.cacheTime||0,null!=(_this$options$cacheTi=this.options.cacheTime)?_this$options$cacheTi:3e5)},_proto.setDefaultOptions=function setDefaultOptions(options){this.defaultOptions=options},_proto.scheduleGc=function scheduleGc(){var _this=this;this.clearGcTimeout(),(0,utils.PN)(this.cacheTime)&&(this.gcTimeout=setTimeout(function(){_this.optionalRemove()},this.cacheTime))},_proto.clearGcTimeout=function clearGcTimeout(){this.gcTimeout&&(clearTimeout(this.gcTimeout),this.gcTimeout=void 0)},_proto.optionalRemove=function optionalRemove(){!this.observers.length&&(this.state.isFetching?this.hadObservers&&this.scheduleGc():this.cache.remove(this))},_proto.setData=function setData(updater,options){var _this$options$isDataE,_this$options,prevData=this.state.data,data=(0,utils.SE)(updater,prevData);return(null==(_this$options$isDataE=(_this$options=this.options).isDataEqual)?void 0:_this$options$isDataE.call(_this$options,prevData,data))?data=prevData:!1!==this.options.structuralSharing&&(data=(0,utils.Q$)(prevData,data)),this.dispatch({data:data,type:"success",dataUpdatedAt:null==options?void 0:options.updatedAt}),data},_proto.setState=function setState(state,setStateOptions){this.dispatch({type:"setState",state:state,setStateOptions:setStateOptions})},_proto.cancel=function cancel(options){var _this$retryer,promise=this.promise;return null==(_this$retryer=this.retryer)||_this$retryer.cancel(options),promise?promise.then(utils.ZT).catch(utils.ZT):Promise.resolve()},_proto.destroy=function destroy(){this.clearGcTimeout(),this.cancel({silent:!0})},_proto.reset=function reset(){this.destroy(),this.setState(this.initialState)},_proto.isActive=function isActive(){return this.observers.some(function(observer){return!1!==observer.options.enabled})},_proto.isFetching=function isFetching(){return this.state.isFetching},_proto.isStale=function isStale(){return this.state.isInvalidated||!this.state.dataUpdatedAt||this.observers.some(function(observer){return observer.getCurrentResult().isStale})},_proto.isStaleByTime=function isStaleByTime(staleTime){return void 0===staleTime&&(staleTime=0),this.state.isInvalidated||!this.state.dataUpdatedAt||!(0,utils.Kp)(this.state.dataUpdatedAt,staleTime)},_proto.onFocus=function onFocus(){var _this$retryer2,observer=this.observers.find(function(x){return x.shouldFetchOnWindowFocus()});observer&&observer.refetch(),null==(_this$retryer2=this.retryer)||_this$retryer2.continue()},_proto.onOnline=function onOnline(){var _this$retryer3,observer=this.observers.find(function(x){return x.shouldFetchOnReconnect()});observer&&observer.refetch(),null==(_this$retryer3=this.retryer)||_this$retryer3.continue()},_proto.addObserver=function addObserver(observer){-1===this.observers.indexOf(observer)&&(this.observers.push(observer),this.hadObservers=!0,this.clearGcTimeout(),this.cache.notify({type:"observerAdded",query:this,observer:observer}))},_proto.removeObserver=function removeObserver(observer){-1!==this.observers.indexOf(observer)&&(this.observers=this.observers.filter(function(x){return x!==observer}),this.observers.length||(this.retryer&&(this.retryer.isTransportCancelable||this.abortSignalConsumed?this.retryer.cancel({revert:!0}):this.retryer.cancelRetry()),this.cacheTime?this.scheduleGc():this.cache.remove(this)),this.cache.notify({type:"observerRemoved",query:this,observer:observer}))},_proto.getObserversCount=function getObserversCount(){return this.observers.length},_proto.invalidate=function invalidate(){this.state.isInvalidated||this.dispatch({type:"invalidate"})},_proto.fetch=function fetch1(options,fetchOptions){var _this$retryer4,_this$options$behavio2,_context$fetchOptions2,_this$options$behavio,_context$fetchOptions,_abortController$abor,_this2=this;if(this.state.isFetching){if(this.state.dataUpdatedAt&&(null==fetchOptions?void 0:fetchOptions.cancelRefetch))this.cancel({silent:!0});else if(this.promise)return null==(_this$retryer4=this.retryer)||_this$retryer4.continueRetry(),this.promise}if(options&&this.setOptions(options),!this.options.queryFn){var observer=this.observers.find(function(x){return x.options.queryFn});observer&&this.setOptions(observer.options)}var queryKey=(0,utils.mc)(this.queryKey),abortController=(0,utils.G9)(),queryFnContext={queryKey:queryKey,pageParam:void 0,meta:this.meta};Object.defineProperty(queryFnContext,"signal",{enumerable:!0,get:function get(){if(abortController)return _this2.abortSignalConsumed=!0,abortController.signal}});var context={fetchOptions:fetchOptions,options:this.options,queryKey:queryKey,state:this.state,fetchFn:function(){return _this2.options.queryFn?(_this2.abortSignalConsumed=!1,_this2.options.queryFn(queryFnContext)):Promise.reject("Missing queryFn")},meta:this.meta};return(null==(_this$options$behavio=this.options.behavior)?void 0:_this$options$behavio.onFetch)&&(null==(_this$options$behavio2=this.options.behavior)||_this$options$behavio2.onFetch(context)),this.revertState=this.state,this.state.isFetching&&this.state.fetchMeta===(null==(_context$fetchOptions=context.fetchOptions)?void 0:_context$fetchOptions.meta)||this.dispatch({type:"fetch",meta:null==(_context$fetchOptions2=context.fetchOptions)?void 0:_context$fetchOptions2.meta}),this.retryer=new retryer.m4({fn:context.fetchFn,abort:null==abortController?void 0:null==(_abortController$abor=abortController.abort)?void 0:_abortController$abor.bind(abortController),onSuccess:function onSuccess(data){_this2.setData(data),null==_this2.cache.config.onSuccess||_this2.cache.config.onSuccess(data,_this2),0===_this2.cacheTime&&_this2.optionalRemove()},onError:function onError(error){(0,retryer.DV)(error)&&error.silent||_this2.dispatch({type:"error",error:error}),(0,retryer.DV)(error)||(null==_this2.cache.config.onError||_this2.cache.config.onError(error,_this2),(0,logger.j)().error(error)),0===_this2.cacheTime&&_this2.optionalRemove()},onFail:function onFail(){_this2.dispatch({type:"failed"})},onPause:function onPause(){_this2.dispatch({type:"pause"})},onContinue:function onContinue(){_this2.dispatch({type:"continue"})},retry:context.options.retry,retryDelay:context.options.retryDelay}),this.promise=this.retryer.promise,this.promise},_proto.dispatch=function dispatch(action){var _this3=this;this.state=this.reducer(this.state,action),notifyManager.V.batch(function(){_this3.observers.forEach(function(observer){observer.onQueryUpdate(action)}),_this3.cache.notify({query:_this3,type:"queryUpdated",action:action})})},_proto.getDefaultState=function getDefaultState(options){var data="function"==typeof options.initialData?options.initialData():options.initialData,initialDataUpdatedAt=void 0!==options.initialData?"function"==typeof options.initialDataUpdatedAt?options.initialDataUpdatedAt():options.initialDataUpdatedAt:0,hasData=void 0!==data;return{data:data,dataUpdateCount:0,dataUpdatedAt:hasData?null!=initialDataUpdatedAt?initialDataUpdatedAt:Date.now():0,error:null,errorUpdateCount:0,errorUpdatedAt:0,fetchFailureCount:0,fetchMeta:null,isFetching:!1,isInvalidated:!1,isPaused:!1,status:hasData?"success":"idle"}},_proto.reducer=function reducer(state,action){var _action$meta,_action$dataUpdatedAt;switch(action.type){case"failed":return(0,esm_extends.Z)({},state,{fetchFailureCount:state.fetchFailureCount+1});case"pause":return(0,esm_extends.Z)({},state,{isPaused:!0});case"continue":return(0,esm_extends.Z)({},state,{isPaused:!1});case"fetch":return(0,esm_extends.Z)({},state,{fetchFailureCount:0,fetchMeta:null!=(_action$meta=action.meta)?_action$meta:null,isFetching:!0,isPaused:!1},!state.dataUpdatedAt&&{error:null,status:"loading"});case"success":return(0,esm_extends.Z)({},state,{data:action.data,dataUpdateCount:state.dataUpdateCount+1,dataUpdatedAt:null!=(_action$dataUpdatedAt=action.dataUpdatedAt)?_action$dataUpdatedAt:Date.now(),error:null,fetchFailureCount:0,isFetching:!1,isInvalidated:!1,isPaused:!1,status:"success"});case"error":var error=action.error;if((0,retryer.DV)(error)&&error.revert&&this.revertState)return(0,esm_extends.Z)({},this.revertState);return(0,esm_extends.Z)({},state,{error:error,errorUpdateCount:state.errorUpdateCount+1,errorUpdatedAt:Date.now(),fetchFailureCount:state.fetchFailureCount+1,isFetching:!1,isPaused:!1,status:"error"});case"invalidate":return(0,esm_extends.Z)({},state,{isInvalidated:!0});case"setState":return(0,esm_extends.Z)({},state,action.state);default:return state}},Query}(),subscribable=__webpack_require__("./node_modules/react-query/es/core/subscribable.js"),QueryCache=function(_Subscribable){function QueryCache(config){var _this;return(_this=_Subscribable.call(this)||this).config=config||{},_this.queries=[],_this.queriesMap={},_this}(0,inheritsLoose.Z)(QueryCache,_Subscribable);var _proto=QueryCache.prototype;return _proto.build=function build(client,options,state){var _options$queryHash,queryKey=options.queryKey,queryHash=null!=(_options$queryHash=options.queryHash)?_options$queryHash:(0,utils.Rm)(queryKey,options),query=this.get(queryHash);return query||(query=new Query({cache:this,queryKey:queryKey,queryHash:queryHash,options:client.defaultQueryOptions(options),state:state,defaultOptions:client.getQueryDefaults(queryKey),meta:options.meta}),this.add(query)),query},_proto.add=function add(query){this.queriesMap[query.queryHash]||(this.queriesMap[query.queryHash]=query,this.queries.push(query),this.notify({type:"queryAdded",query:query}))},_proto.remove=function remove(query){var queryInMap=this.queriesMap[query.queryHash];queryInMap&&(query.destroy(),this.queries=this.queries.filter(function(x){return x!==query}),queryInMap===query&&delete this.queriesMap[query.queryHash],this.notify({type:"queryRemoved",query:query}))},_proto.clear=function clear(){var _this2=this;notifyManager.V.batch(function(){_this2.queries.forEach(function(query){_this2.remove(query)})})},_proto.get=function get(queryHash){return this.queriesMap[queryHash]},_proto.getAll=function getAll(){return this.queries},_proto.find=function find(arg1,arg2){var filters=(0,utils.I6)(arg1,arg2)[0];return void 0===filters.exact&&(filters.exact=!0),this.queries.find(function(query){return(0,utils._x)(filters,query)})},_proto.findAll=function findAll(arg1,arg2){var filters=(0,utils.I6)(arg1,arg2)[0];return Object.keys(filters).length>0?this.queries.filter(function(query){return(0,utils._x)(filters,query)}):this.queries},_proto.notify=function notify(event){var _this3=this;notifyManager.V.batch(function(){_this3.listeners.forEach(function(listener){listener(event)})})},_proto.onFocus=function onFocus(){var _this4=this;notifyManager.V.batch(function(){_this4.queries.forEach(function(query){query.onFocus()})})},_proto.onOnline=function onOnline(){var _this5=this;notifyManager.V.batch(function(){_this5.queries.forEach(function(query){query.onOnline()})})},QueryCache}(subscribable.l),Mutation=function(){function Mutation(config){this.options=(0,esm_extends.Z)({},config.defaultOptions,config.options),this.mutationId=config.mutationId,this.mutationCache=config.mutationCache,this.observers=[],this.state=config.state||getDefaultState(),this.meta=config.meta}var _proto=Mutation.prototype;return _proto.setState=function setState(state){this.dispatch({type:"setState",state:state})},_proto.addObserver=function addObserver(observer){-1===this.observers.indexOf(observer)&&this.observers.push(observer)},_proto.removeObserver=function removeObserver(observer){this.observers=this.observers.filter(function(x){return x!==observer})},_proto.cancel=function cancel(){return this.retryer?(this.retryer.cancel(),this.retryer.promise.then(utils.ZT).catch(utils.ZT)):Promise.resolve()},_proto.continue=function _continue(){return this.retryer?(this.retryer.continue(),this.retryer.promise):this.execute()},_proto.execute=function execute(){var data,_this=this,restored="loading"===this.state.status,promise=Promise.resolve();return restored||(this.dispatch({type:"loading",variables:this.options.variables}),promise=promise.then(function(){null==_this.mutationCache.config.onMutate||_this.mutationCache.config.onMutate(_this.state.variables,_this)}).then(function(){return null==_this.options.onMutate?void 0:_this.options.onMutate(_this.state.variables)}).then(function(context){context!==_this.state.context&&_this.dispatch({type:"loading",context:context,variables:_this.state.variables})})),promise.then(function(){return _this.executeMutation()}).then(function(result){data=result,null==_this.mutationCache.config.onSuccess||_this.mutationCache.config.onSuccess(data,_this.state.variables,_this.state.context,_this)}).then(function(){return null==_this.options.onSuccess?void 0:_this.options.onSuccess(data,_this.state.variables,_this.state.context)}).then(function(){return null==_this.options.onSettled?void 0:_this.options.onSettled(data,null,_this.state.variables,_this.state.context)}).then(function(){return _this.dispatch({type:"success",data:data}),data}).catch(function(error){return null==_this.mutationCache.config.onError||_this.mutationCache.config.onError(error,_this.state.variables,_this.state.context,_this),(0,logger.j)().error(error),Promise.resolve().then(function(){return null==_this.options.onError?void 0:_this.options.onError(error,_this.state.variables,_this.state.context)}).then(function(){return null==_this.options.onSettled?void 0:_this.options.onSettled(void 0,error,_this.state.variables,_this.state.context)}).then(function(){throw _this.dispatch({type:"error",error:error}),error})})},_proto.executeMutation=function executeMutation(){var _this$options$retry,_this2=this;return this.retryer=new retryer.m4({fn:function fn(){return _this2.options.mutationFn?_this2.options.mutationFn(_this2.state.variables):Promise.reject("No mutationFn found")},onFail:function onFail(){_this2.dispatch({type:"failed"})},onPause:function onPause(){_this2.dispatch({type:"pause"})},onContinue:function onContinue(){_this2.dispatch({type:"continue"})},retry:null!=(_this$options$retry=this.options.retry)?_this$options$retry:0,retryDelay:this.options.retryDelay}),this.retryer.promise},_proto.dispatch=function dispatch(action){var _this3=this;this.state=reducer(this.state,action),notifyManager.V.batch(function(){_this3.observers.forEach(function(observer){observer.onMutationUpdate(action)}),_this3.mutationCache.notify(_this3)})},Mutation}();function getDefaultState(){return{context:void 0,data:void 0,error:null,failureCount:0,isPaused:!1,status:"idle",variables:void 0}}function reducer(state,action){switch(action.type){case"failed":return(0,esm_extends.Z)({},state,{failureCount:state.failureCount+1});case"pause":return(0,esm_extends.Z)({},state,{isPaused:!0});case"continue":return(0,esm_extends.Z)({},state,{isPaused:!1});case"loading":return(0,esm_extends.Z)({},state,{context:action.context,data:void 0,error:null,isPaused:!1,status:"loading",variables:action.variables});case"success":return(0,esm_extends.Z)({},state,{data:action.data,error:null,status:"success",isPaused:!1});case"error":return(0,esm_extends.Z)({},state,{data:void 0,error:action.error,failureCount:state.failureCount+1,isPaused:!1,status:"error"});case"setState":return(0,esm_extends.Z)({},state,action.state);default:return state}}var MutationCache=function(_Subscribable){function MutationCache(config){var _this;return(_this=_Subscribable.call(this)||this).config=config||{},_this.mutations=[],_this.mutationId=0,_this}(0,inheritsLoose.Z)(MutationCache,_Subscribable);var _proto=MutationCache.prototype;return _proto.build=function build(client,options,state){var mutation=new Mutation({mutationCache:this,mutationId:++this.mutationId,options:client.defaultMutationOptions(options),state:state,defaultOptions:options.mutationKey?client.getMutationDefaults(options.mutationKey):void 0,meta:options.meta});return this.add(mutation),mutation},_proto.add=function add(mutation){this.mutations.push(mutation),this.notify(mutation)},_proto.remove=function remove(mutation){this.mutations=this.mutations.filter(function(x){return x!==mutation}),mutation.cancel(),this.notify(mutation)},_proto.clear=function clear(){var _this2=this;notifyManager.V.batch(function(){_this2.mutations.forEach(function(mutation){_this2.remove(mutation)})})},_proto.getAll=function getAll(){return this.mutations},_proto.find=function find(filters){return void 0===filters.exact&&(filters.exact=!0),this.mutations.find(function(mutation){return(0,utils.X7)(filters,mutation)})},_proto.findAll=function findAll(filters){return this.mutations.filter(function(mutation){return(0,utils.X7)(filters,mutation)})},_proto.notify=function notify(mutation){var _this3=this;notifyManager.V.batch(function(){_this3.listeners.forEach(function(listener){listener(mutation)})})},_proto.onFocus=function onFocus(){this.resumePausedMutations()},_proto.onOnline=function onOnline(){this.resumePausedMutations()},_proto.resumePausedMutations=function resumePausedMutations(){var pausedMutations=this.mutations.filter(function(x){return x.state.isPaused});return notifyManager.V.batch(function(){return pausedMutations.reduce(function(promise,mutation){return promise.then(function(){return mutation.continue().catch(utils.ZT)})},Promise.resolve())})},MutationCache}(subscribable.l),focusManager=__webpack_require__("./node_modules/react-query/es/core/focusManager.js"),onlineManager=__webpack_require__("./node_modules/react-query/es/core/onlineManager.js");function infiniteQueryBehavior(){return{onFetch:function onFetch(context){context.fetchFn=function(){var _context$fetchOptions,_context$fetchOptions2,_context$fetchOptions3,_context$fetchOptions4,_context$state$data,_context$state$data2,promise,refetchPage=null==(_context$fetchOptions=context.fetchOptions)?void 0:null==(_context$fetchOptions2=_context$fetchOptions.meta)?void 0:_context$fetchOptions2.refetchPage,fetchMore=null==(_context$fetchOptions3=context.fetchOptions)?void 0:null==(_context$fetchOptions4=_context$fetchOptions3.meta)?void 0:_context$fetchOptions4.fetchMore,pageParam=null==fetchMore?void 0:fetchMore.pageParam,isFetchingNextPage=(null==fetchMore?void 0:fetchMore.direction)==="forward",isFetchingPreviousPage=(null==fetchMore?void 0:fetchMore.direction)==="backward",oldPages=(null==(_context$state$data=context.state.data)?void 0:_context$state$data.pages)||[],oldPageParams=(null==(_context$state$data2=context.state.data)?void 0:_context$state$data2.pageParams)||[],abortController=(0,utils.G9)(),abortSignal=null==abortController?void 0:abortController.signal,newPageParams=oldPageParams,cancelled=!1,queryFn=context.options.queryFn||function(){return Promise.reject("Missing queryFn")},buildNewPages=function(pages,param,page,previous){return newPageParams=previous?[param].concat(newPageParams):[].concat(newPageParams,[param]),previous?[page].concat(pages):[].concat(pages,[page])},fetchPage=function(pages,manual,param,previous){if(cancelled)return Promise.reject("Cancelled");if(void 0===param&&!manual&&pages.length)return Promise.resolve(pages);var queryFnResult=queryFn({queryKey:context.queryKey,signal:abortSignal,pageParam:param,meta:context.meta}),promise=Promise.resolve(queryFnResult).then(function(page){return buildNewPages(pages,param,page,previous)});return(0,retryer.LE)(queryFnResult)&&(promise.cancel=queryFnResult.cancel),promise};if(oldPages.length){if(isFetchingNextPage){var manual=void 0!==pageParam,param=manual?pageParam:getNextPageParam(context.options,oldPages);promise=fetchPage(oldPages,manual,param)}else if(isFetchingPreviousPage){var _manual=void 0!==pageParam,_param=_manual?pageParam:getPreviousPageParam(context.options,oldPages);promise=fetchPage(oldPages,_manual,_param,!0)}else!function(){newPageParams=[];var manual=void 0===context.options.getNextPageParam;promise=!refetchPage||!oldPages[0]||refetchPage(oldPages[0],0,oldPages)?fetchPage([],manual,oldPageParams[0]):Promise.resolve(buildNewPages([],oldPageParams[0],oldPages[0]));for(var _loop=function(i){promise=promise.then(function(pages){if(!refetchPage||!oldPages[i]||refetchPage(oldPages[i],i,oldPages)){var _param2=manual?oldPageParams[i]:getNextPageParam(context.options,pages);return fetchPage(pages,manual,_param2)}return Promise.resolve(buildNewPages(pages,oldPageParams[i],oldPages[i]))})},i=1;i<oldPages.length;i++)_loop(i)}()}else promise=fetchPage([]);var finalPromise=promise.then(function(pages){return{pages:pages,pageParams:newPageParams}});return finalPromise.cancel=function(){cancelled=!0,null==abortController||abortController.abort(),(0,retryer.LE)(promise)&&promise.cancel()},finalPromise}}}}function getNextPageParam(options,pages){return null==options.getNextPageParam?void 0:options.getNextPageParam(pages[pages.length-1],pages)}function getPreviousPageParam(options,pages){return null==options.getPreviousPageParam?void 0:options.getPreviousPageParam(pages[0],pages)}var QueryClient=function(){function QueryClient(config){void 0===config&&(config={}),this.queryCache=config.queryCache||new QueryCache,this.mutationCache=config.mutationCache||new MutationCache,this.defaultOptions=config.defaultOptions||{},this.queryDefaults=[],this.mutationDefaults=[]}var _proto=QueryClient.prototype;return _proto.mount=function mount(){var _this=this;this.unsubscribeFocus=focusManager.j.subscribe(function(){focusManager.j.isFocused()&&onlineManager.N.isOnline()&&(_this.mutationCache.onFocus(),_this.queryCache.onFocus())}),this.unsubscribeOnline=onlineManager.N.subscribe(function(){focusManager.j.isFocused()&&onlineManager.N.isOnline()&&(_this.mutationCache.onOnline(),_this.queryCache.onOnline())})},_proto.unmount=function unmount(){var _this$unsubscribeFocu,_this$unsubscribeOnli;null==(_this$unsubscribeFocu=this.unsubscribeFocus)||_this$unsubscribeFocu.call(this),null==(_this$unsubscribeOnli=this.unsubscribeOnline)||_this$unsubscribeOnli.call(this)},_proto.isFetching=function isFetching(arg1,arg2){var filters=(0,utils.I6)(arg1,arg2)[0];return filters.fetching=!0,this.queryCache.findAll(filters).length},_proto.isMutating=function isMutating(filters){return this.mutationCache.findAll((0,esm_extends.Z)({},filters,{fetching:!0})).length},_proto.getQueryData=function getQueryData(queryKey,filters){var _this$queryCache$find;return null==(_this$queryCache$find=this.queryCache.find(queryKey,filters))?void 0:_this$queryCache$find.state.data},_proto.getQueriesData=function getQueriesData(queryKeyOrFilters){return this.getQueryCache().findAll(queryKeyOrFilters).map(function(_ref){return[_ref.queryKey,_ref.state.data]})},_proto.setQueryData=function setQueryData(queryKey,updater,options){var parsedOptions=(0,utils._v)(queryKey),defaultedOptions=this.defaultQueryOptions(parsedOptions);return this.queryCache.build(this,defaultedOptions).setData(updater,options)},_proto.setQueriesData=function setQueriesData(queryKeyOrFilters,updater,options){var _this2=this;return notifyManager.V.batch(function(){return _this2.getQueryCache().findAll(queryKeyOrFilters).map(function(_ref2){var queryKey=_ref2.queryKey;return[queryKey,_this2.setQueryData(queryKey,updater,options)]})})},_proto.getQueryState=function getQueryState(queryKey,filters){var _this$queryCache$find2;return null==(_this$queryCache$find2=this.queryCache.find(queryKey,filters))?void 0:_this$queryCache$find2.state},_proto.removeQueries=function removeQueries(arg1,arg2){var filters=(0,utils.I6)(arg1,arg2)[0],queryCache=this.queryCache;notifyManager.V.batch(function(){queryCache.findAll(filters).forEach(function(query){queryCache.remove(query)})})},_proto.resetQueries=function resetQueries(arg1,arg2,arg3){var _this3=this,_parseFilterArgs3=(0,utils.I6)(arg1,arg2,arg3),filters=_parseFilterArgs3[0],options=_parseFilterArgs3[1],queryCache=this.queryCache,refetchFilters=(0,esm_extends.Z)({},filters,{active:!0});return notifyManager.V.batch(function(){return queryCache.findAll(filters).forEach(function(query){query.reset()}),_this3.refetchQueries(refetchFilters,options)})},_proto.cancelQueries=function cancelQueries(arg1,arg2,arg3){var _this4=this,_parseFilterArgs4=(0,utils.I6)(arg1,arg2,arg3),filters=_parseFilterArgs4[0],_parseFilterArgs4$=_parseFilterArgs4[1],cancelOptions=void 0===_parseFilterArgs4$?{}:_parseFilterArgs4$;return void 0===cancelOptions.revert&&(cancelOptions.revert=!0),Promise.all(notifyManager.V.batch(function(){return _this4.queryCache.findAll(filters).map(function(query){return query.cancel(cancelOptions)})})).then(utils.ZT).catch(utils.ZT)},_proto.invalidateQueries=function invalidateQueries(arg1,arg2,arg3){var _ref3,_filters$refetchActiv,_filters$refetchInact,_this5=this,_parseFilterArgs5=(0,utils.I6)(arg1,arg2,arg3),filters=_parseFilterArgs5[0],options=_parseFilterArgs5[1],refetchFilters=(0,esm_extends.Z)({},filters,{active:null==(_ref3=null!=(_filters$refetchActiv=filters.refetchActive)?_filters$refetchActiv:filters.active)||_ref3,inactive:null!=(_filters$refetchInact=filters.refetchInactive)&&_filters$refetchInact});return notifyManager.V.batch(function(){return _this5.queryCache.findAll(filters).forEach(function(query){query.invalidate()}),_this5.refetchQueries(refetchFilters,options)})},_proto.refetchQueries=function refetchQueries(arg1,arg2,arg3){var _this6=this,_parseFilterArgs6=(0,utils.I6)(arg1,arg2,arg3),filters=_parseFilterArgs6[0],options=_parseFilterArgs6[1],promise=Promise.all(notifyManager.V.batch(function(){return _this6.queryCache.findAll(filters).map(function(query){return query.fetch(void 0,(0,esm_extends.Z)({},options,{meta:{refetchPage:null==filters?void 0:filters.refetchPage}}))})})).then(utils.ZT);return(null==options?void 0:options.throwOnError)||(promise=promise.catch(utils.ZT)),promise},_proto.fetchQuery=function fetchQuery(arg1,arg2,arg3){var parsedOptions=(0,utils._v)(arg1,arg2,arg3),defaultedOptions=this.defaultQueryOptions(parsedOptions);void 0===defaultedOptions.retry&&(defaultedOptions.retry=!1);var query=this.queryCache.build(this,defaultedOptions);return query.isStaleByTime(defaultedOptions.staleTime)?query.fetch(defaultedOptions):Promise.resolve(query.state.data)},_proto.prefetchQuery=function prefetchQuery(arg1,arg2,arg3){return this.fetchQuery(arg1,arg2,arg3).then(utils.ZT).catch(utils.ZT)},_proto.fetchInfiniteQuery=function fetchInfiniteQuery(arg1,arg2,arg3){var parsedOptions=(0,utils._v)(arg1,arg2,arg3);return parsedOptions.behavior=infiniteQueryBehavior(),this.fetchQuery(parsedOptions)},_proto.prefetchInfiniteQuery=function prefetchInfiniteQuery(arg1,arg2,arg3){return this.fetchInfiniteQuery(arg1,arg2,arg3).then(utils.ZT).catch(utils.ZT)},_proto.cancelMutations=function cancelMutations(){var _this7=this;return Promise.all(notifyManager.V.batch(function(){return _this7.mutationCache.getAll().map(function(mutation){return mutation.cancel()})})).then(utils.ZT).catch(utils.ZT)},_proto.resumePausedMutations=function resumePausedMutations(){return this.getMutationCache().resumePausedMutations()},_proto.executeMutation=function executeMutation(options){return this.mutationCache.build(this,options).execute()},_proto.getQueryCache=function getQueryCache(){return this.queryCache},_proto.getMutationCache=function getMutationCache(){return this.mutationCache},_proto.getDefaultOptions=function getDefaultOptions(){return this.defaultOptions},_proto.setDefaultOptions=function setDefaultOptions(options){this.defaultOptions=options},_proto.setQueryDefaults=function setQueryDefaults(queryKey,options){var result=this.queryDefaults.find(function(x){return(0,utils.yF)(queryKey)===(0,utils.yF)(x.queryKey)});result?result.defaultOptions=options:this.queryDefaults.push({queryKey:queryKey,defaultOptions:options})},_proto.getQueryDefaults=function getQueryDefaults(queryKey){var _this$queryDefaults$f;return queryKey?null==(_this$queryDefaults$f=this.queryDefaults.find(function(x){return(0,utils.to)(queryKey,x.queryKey)}))?void 0:_this$queryDefaults$f.defaultOptions:void 0},_proto.setMutationDefaults=function setMutationDefaults(mutationKey,options){var result=this.mutationDefaults.find(function(x){return(0,utils.yF)(mutationKey)===(0,utils.yF)(x.mutationKey)});result?result.defaultOptions=options:this.mutationDefaults.push({mutationKey:mutationKey,defaultOptions:options})},_proto.getMutationDefaults=function getMutationDefaults(mutationKey){var _this$mutationDefault;return mutationKey?null==(_this$mutationDefault=this.mutationDefaults.find(function(x){return(0,utils.to)(mutationKey,x.mutationKey)}))?void 0:_this$mutationDefault.defaultOptions:void 0},_proto.defaultQueryOptions=function defaultQueryOptions(options){if(null==options?void 0:options._defaulted)return options;var defaultedOptions=(0,esm_extends.Z)({},this.defaultOptions.queries,this.getQueryDefaults(null==options?void 0:options.queryKey),options,{_defaulted:!0});return!defaultedOptions.queryHash&&defaultedOptions.queryKey&&(defaultedOptions.queryHash=(0,utils.Rm)(defaultedOptions.queryKey,defaultedOptions)),defaultedOptions},_proto.defaultQueryObserverOptions=function defaultQueryObserverOptions(options){return this.defaultQueryOptions(options)},_proto.defaultMutationOptions=function defaultMutationOptions(options){return(null==options?void 0:options._defaulted)?options:(0,esm_extends.Z)({},this.defaultOptions.mutations,this.getMutationDefaults(null==options?void 0:options.mutationKey),options,{_defaulted:!0})},_proto.clear=function clear(){this.queryCache.clear(),this.mutationCache.clear()},QueryClient}()},"./node_modules/react-query/es/core/retryer.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{DV:()=>isCancelledError,LE:()=>isCancelable,m4:()=>Retryer});var _focusManager__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-query/es/core/focusManager.js"),_onlineManager__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react-query/es/core/onlineManager.js"),_utils__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react-query/es/core/utils.js");function defaultRetryDelay(failureCount){return Math.min(1e3*Math.pow(2,failureCount),3e4)}function isCancelable(value){return"function"==typeof(null==value?void 0:value.cancel)}var CancelledError=function(options){this.revert=null==options?void 0:options.revert,this.silent=null==options?void 0:options.silent};function isCancelledError(value){return value instanceof CancelledError}var Retryer=function(config){var cancelFn,continueFn,promiseResolve,promiseReject,_this=this,cancelRetry=!1;this.abort=config.abort,this.cancel=function(cancelOptions){return null==cancelFn?void 0:cancelFn(cancelOptions)},this.cancelRetry=function(){cancelRetry=!0},this.continueRetry=function(){cancelRetry=!1},this.continue=function(){return null==continueFn?void 0:continueFn()},this.failureCount=0,this.isPaused=!1,this.isResolved=!1,this.isTransportCancelable=!1,this.promise=new Promise(function(outerResolve,outerReject){promiseResolve=outerResolve,promiseReject=outerReject});var resolve=function(value){_this.isResolved||(_this.isResolved=!0,null==config.onSuccess||config.onSuccess(value),null==continueFn||continueFn(),promiseResolve(value))},reject=function(value){_this.isResolved||(_this.isResolved=!0,null==config.onError||config.onError(value),null==continueFn||continueFn(),promiseReject(value))};!function run(){var promiseOrValue;if(!_this.isResolved){try{promiseOrValue=config.fn()}catch(error){promiseOrValue=Promise.reject(error)}cancelFn=function cancelFn(cancelOptions){if(!_this.isResolved&&(reject(new CancelledError(cancelOptions)),null==_this.abort||_this.abort(),isCancelable(promiseOrValue)))try{promiseOrValue.cancel()}catch(_unused){}},_this.isTransportCancelable=isCancelable(promiseOrValue),Promise.resolve(promiseOrValue).then(resolve).catch(function(error){if(!_this.isResolved){var _config$retry,_config$retryDelay,retry=null!=(_config$retry=config.retry)?_config$retry:3,retryDelay=null!=(_config$retryDelay=config.retryDelay)?_config$retryDelay:defaultRetryDelay,delay="function"==typeof retryDelay?retryDelay(_this.failureCount,error):retryDelay,shouldRetry=!0===retry||"number"==typeof retry&&_this.failureCount<retry||"function"==typeof retry&&retry(_this.failureCount,error);if(cancelRetry||!shouldRetry){reject(error);return}_this.failureCount++,null==config.onFail||config.onFail(_this.failureCount,error),(0,_utils__WEBPACK_IMPORTED_MODULE_0__.Gh)(delay).then(function(){if(!_focusManager__WEBPACK_IMPORTED_MODULE_1__.j.isFocused()||!_onlineManager__WEBPACK_IMPORTED_MODULE_2__.N.isOnline())return new Promise(function(continueResolve){continueFn=continueResolve,_this.isPaused=!0,null==config.onPause||config.onPause()}).then(function(){continueFn=void 0,_this.isPaused=!1,null==config.onContinue||config.onContinue()})}).then(function(){cancelRetry?reject(error):run()})}})}}()}},"./node_modules/react-query/es/core/subscribable.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{l:()=>Subscribable});var Subscribable=function(){function Subscribable(){this.listeners=[]}var _proto=Subscribable.prototype;return _proto.subscribe=function subscribe(listener){var _this=this,callback=listener||function(){};return this.listeners.push(callback),this.onSubscribe(),function(){_this.listeners=_this.listeners.filter(function(x){return x!==callback}),_this.onUnsubscribe()}},_proto.hasListeners=function hasListeners(){return this.listeners.length>0},_proto.onSubscribe=function onSubscribe(){},_proto.onUnsubscribe=function onUnsubscribe(){},Subscribable}()},"./node_modules/react-query/es/core/types.js":()=>{},"./node_modules/react-query/es/core/utils.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{A4:()=>scheduleMicrotask,G9:()=>getAbortController,Gh:()=>sleep,I6:()=>parseFilterArgs,Kp:()=>timeUntilStale,PN:()=>isValidTimeout,Q$:()=>replaceEqualDeep,Rm:()=>hashQueryKeyByOptions,SE:()=>functionalUpdate,VS:()=>shallowEqualObjects,X7:()=>matchMutation,ZT:()=>noop,_v:()=>parseQueryArgs,_x:()=>matchQuery,mc:()=>ensureQueryKeyArray,sk:()=>isServer,to:()=>partialMatchKey,yF:()=>hashQueryKey});var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/extends.js"),isServer="undefined"==typeof window;function noop(){}function functionalUpdate(updater,input){return"function"==typeof updater?updater(input):updater}function isValidTimeout(value){return"number"==typeof value&&value>=0&&value!==1/0}function ensureQueryKeyArray(value){return Array.isArray(value)?value:[value]}function timeUntilStale(updatedAt,staleTime){return Math.max(updatedAt+(staleTime||0)-Date.now(),0)}function parseQueryArgs(arg1,arg2,arg3){return isQueryKey(arg1)?"function"==typeof arg2?(0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.Z)({},arg3,{queryKey:arg1,queryFn:arg2}):(0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.Z)({},arg2,{queryKey:arg1}):arg1}function parseFilterArgs(arg1,arg2,arg3){return isQueryKey(arg1)?[(0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.Z)({},arg2,{queryKey:arg1}),arg3]:[arg1||{},arg2]}function mapQueryStatusFilter(active,inactive){return!0===active&&!0===inactive||null==active&&null==inactive?"all":!1===active&&!1===inactive?"none":(null!=active?active:!inactive)?"active":"inactive"}function matchQuery(filters,query){var active=filters.active,exact=filters.exact,fetching=filters.fetching,inactive=filters.inactive,predicate=filters.predicate,queryKey=filters.queryKey,stale=filters.stale;if(isQueryKey(queryKey)){if(exact){if(query.queryHash!==hashQueryKeyByOptions(queryKey,query.options))return!1}else if(!partialMatchKey(query.queryKey,queryKey))return!1}var queryStatusFilter=mapQueryStatusFilter(active,inactive);if("none"===queryStatusFilter)return!1;if("all"!==queryStatusFilter){var isActive=query.isActive();if("active"===queryStatusFilter&&!isActive||"inactive"===queryStatusFilter&&isActive)return!1}return("boolean"!=typeof stale||query.isStale()===stale)&&("boolean"!=typeof fetching||query.isFetching()===fetching)&&(!predicate||!!predicate(query))}function matchMutation(filters,mutation){var exact=filters.exact,fetching=filters.fetching,predicate=filters.predicate,mutationKey=filters.mutationKey;if(isQueryKey(mutationKey)){if(!mutation.options.mutationKey)return!1;if(exact){if(hashQueryKey(mutation.options.mutationKey)!==hashQueryKey(mutationKey))return!1}else if(!partialMatchKey(mutation.options.mutationKey,mutationKey))return!1}return("boolean"!=typeof fetching||"loading"===mutation.state.status===fetching)&&(!predicate||!!predicate(mutation))}function hashQueryKeyByOptions(queryKey,options){return((null==options?void 0:options.queryKeyHashFn)||hashQueryKey)(queryKey)}function hashQueryKey(queryKey){return stableValueHash(ensureQueryKeyArray(queryKey))}function stableValueHash(value){return JSON.stringify(value,function(_,val){return isPlainObject(val)?Object.keys(val).sort().reduce(function(result,key){return result[key]=val[key],result},{}):val})}function partialMatchKey(a,b){return partialDeepEqual(ensureQueryKeyArray(a),ensureQueryKeyArray(b))}function partialDeepEqual(a,b){return a===b||typeof a==typeof b&&!!a&&!!b&&"object"==typeof a&&"object"==typeof b&&!Object.keys(b).some(function(key){return!partialDeepEqual(a[key],b[key])})}function replaceEqualDeep(a,b){if(a===b)return a;var array=Array.isArray(a)&&Array.isArray(b);if(array||isPlainObject(a)&&isPlainObject(b)){for(var aSize=array?a.length:Object.keys(a).length,bItems=array?b:Object.keys(b),bSize=bItems.length,copy=array?[]:{},equalItems=0,i=0;i<bSize;i++){var key=array?i:bItems[i];copy[key]=replaceEqualDeep(a[key],b[key]),copy[key]===a[key]&&equalItems++}return aSize===bSize&&equalItems===aSize?a:copy}return b}function shallowEqualObjects(a,b){if(a&&!b||b&&!a)return!1;for(var key in a)if(a[key]!==b[key])return!1;return!0}function isPlainObject(o){if(!hasObjectPrototype(o))return!1;var ctor=o.constructor;if(void 0===ctor)return!0;var prot=ctor.prototype;return!!(hasObjectPrototype(prot)&&prot.hasOwnProperty("isPrototypeOf"))}function hasObjectPrototype(o){return"[object Object]"===Object.prototype.toString.call(o)}function isQueryKey(value){return"string"==typeof value||Array.isArray(value)}function sleep(timeout){return new Promise(function(resolve){setTimeout(resolve,timeout)})}function scheduleMicrotask(callback){Promise.resolve().then(callback).catch(function(error){return setTimeout(function(){throw error})})}function getAbortController(){if("function"==typeof AbortController)return new AbortController}},"./node_modules/react-query/es/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{QueryClient:()=>_core__WEBPACK_IMPORTED_MODULE_0__.QueryClient,QueryClientProvider:()=>_react__WEBPACK_IMPORTED_MODULE_1__.QueryClientProvider,useQuery:()=>_react__WEBPACK_IMPORTED_MODULE_1__.useQuery});var _core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react-query/es/core/index.js");__webpack_require__.o(_core__WEBPACK_IMPORTED_MODULE_0__,"QueryClientProvider")&&__webpack_require__.d(__webpack_exports__,{QueryClientProvider:function(){return _core__WEBPACK_IMPORTED_MODULE_0__.QueryClientProvider}}),__webpack_require__.o(_core__WEBPACK_IMPORTED_MODULE_0__,"useQuery")&&__webpack_require__.d(__webpack_exports__,{useQuery:function(){return _core__WEBPACK_IMPORTED_MODULE_0__.useQuery}});var _react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-query/es/react/index.js")},"./node_modules/react-query/es/react/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{QueryClientProvider:()=>QueryClientProvider,useQuery:()=>useQuery});var notifyManager=__webpack_require__("./node_modules/react-query/es/core/notifyManager.js"),unstable_batchedUpdates=__webpack_require__("./node_modules/react-dom/index.js").unstable_batchedUpdates;notifyManager.V.setBatchNotifyFunction(unstable_batchedUpdates);var logger=__webpack_require__("./node_modules/react-query/es/core/logger.js"),logger_logger=console;(0,logger.E)(logger_logger);var react=__webpack_require__("./node_modules/react/index.js"),defaultContext=react.createContext(void 0),QueryClientSharingContext=react.createContext(!1);function getQueryClientContext(contextSharing){return contextSharing&&"undefined"!=typeof window?(window.ReactQueryClientContext||(window.ReactQueryClientContext=defaultContext),window.ReactQueryClientContext):defaultContext}var useQueryClient=function(){var queryClient=react.useContext(getQueryClientContext(react.useContext(QueryClientSharingContext)));if(!queryClient)throw Error("No QueryClient set, use QueryClientProvider to set one");return queryClient},QueryClientProvider=function(_ref){var client=_ref.client,_ref$contextSharing=_ref.contextSharing,contextSharing=void 0!==_ref$contextSharing&&_ref$contextSharing,children=_ref.children;react.useEffect(function(){return client.mount(),function(){client.unmount()}},[client]);var Context=getQueryClientContext(contextSharing);return react.createElement(QueryClientSharingContext.Provider,{value:contextSharing},react.createElement(Context.Provider,{value:client},children))},esm_extends=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/extends.js"),inheritsLoose=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js"),utils=__webpack_require__("./node_modules/react-query/es/core/utils.js"),focusManager=__webpack_require__("./node_modules/react-query/es/core/focusManager.js"),subscribable=__webpack_require__("./node_modules/react-query/es/core/subscribable.js"),retryer=__webpack_require__("./node_modules/react-query/es/core/retryer.js"),QueryObserver=function(_Subscribable){function QueryObserver(client,options){var _this;return(_this=_Subscribable.call(this)||this).client=client,_this.options=options,_this.trackedProps=[],_this.selectError=null,_this.bindMethods(),_this.setOptions(options),_this}(0,inheritsLoose.Z)(QueryObserver,_Subscribable);var _proto=QueryObserver.prototype;return _proto.bindMethods=function bindMethods(){this.remove=this.remove.bind(this),this.refetch=this.refetch.bind(this)},_proto.onSubscribe=function onSubscribe(){1===this.listeners.length&&(this.currentQuery.addObserver(this),shouldFetchOnMount(this.currentQuery,this.options)&&this.executeFetch(),this.updateTimers())},_proto.onUnsubscribe=function onUnsubscribe(){this.listeners.length||this.destroy()},_proto.shouldFetchOnReconnect=function shouldFetchOnReconnect(){return shouldFetchOn(this.currentQuery,this.options,this.options.refetchOnReconnect)},_proto.shouldFetchOnWindowFocus=function shouldFetchOnWindowFocus(){return shouldFetchOn(this.currentQuery,this.options,this.options.refetchOnWindowFocus)},_proto.destroy=function destroy(){this.listeners=[],this.clearTimers(),this.currentQuery.removeObserver(this)},_proto.setOptions=function setOptions(options,notifyOptions){var prevOptions=this.options,prevQuery=this.currentQuery;if(this.options=this.client.defaultQueryObserverOptions(options),void 0!==this.options.enabled&&"boolean"!=typeof this.options.enabled)throw Error("Expected enabled to be a boolean");this.options.queryKey||(this.options.queryKey=prevOptions.queryKey),this.updateQuery();var mounted=this.hasListeners();mounted&&shouldFetchOptionally(this.currentQuery,prevQuery,this.options,prevOptions)&&this.executeFetch(),this.updateResult(notifyOptions),mounted&&(this.currentQuery!==prevQuery||this.options.enabled!==prevOptions.enabled||this.options.staleTime!==prevOptions.staleTime)&&this.updateStaleTimeout();var nextRefetchInterval=this.computeRefetchInterval();mounted&&(this.currentQuery!==prevQuery||this.options.enabled!==prevOptions.enabled||nextRefetchInterval!==this.currentRefetchInterval)&&this.updateRefetchInterval(nextRefetchInterval)},_proto.getOptimisticResult=function getOptimisticResult(options){var defaultedOptions=this.client.defaultQueryObserverOptions(options),query=this.client.getQueryCache().build(this.client,defaultedOptions);return this.createResult(query,defaultedOptions)},_proto.getCurrentResult=function getCurrentResult(){return this.currentResult},_proto.trackResult=function trackResult(result,defaultedOptions){var _this2=this,trackedResult={},trackProp=function(key){_this2.trackedProps.includes(key)||_this2.trackedProps.push(key)};return Object.keys(result).forEach(function(key){Object.defineProperty(trackedResult,key,{configurable:!1,enumerable:!0,get:function get(){return trackProp(key),result[key]}})}),(defaultedOptions.useErrorBoundary||defaultedOptions.suspense)&&trackProp("error"),trackedResult},_proto.getNextResult=function getNextResult(options){var _this3=this;return new Promise(function(resolve,reject){var unsubscribe=_this3.subscribe(function(result){result.isFetching||(unsubscribe(),result.isError&&(null==options?void 0:options.throwOnError)?reject(result.error):resolve(result))})})},_proto.getCurrentQuery=function getCurrentQuery(){return this.currentQuery},_proto.remove=function remove(){this.client.getQueryCache().remove(this.currentQuery)},_proto.refetch=function refetch(options){return this.fetch((0,esm_extends.Z)({},options,{meta:{refetchPage:null==options?void 0:options.refetchPage}}))},_proto.fetchOptimistic=function fetchOptimistic(options){var _this4=this,defaultedOptions=this.client.defaultQueryObserverOptions(options),query=this.client.getQueryCache().build(this.client,defaultedOptions);return query.fetch().then(function(){return _this4.createResult(query,defaultedOptions)})},_proto.fetch=function fetch1(fetchOptions){var _this5=this;return this.executeFetch(fetchOptions).then(function(){return _this5.updateResult(),_this5.currentResult})},_proto.executeFetch=function executeFetch(fetchOptions){this.updateQuery();var promise=this.currentQuery.fetch(this.options,fetchOptions);return(null==fetchOptions?void 0:fetchOptions.throwOnError)||(promise=promise.catch(utils.ZT)),promise},_proto.updateStaleTimeout=function updateStaleTimeout(){var _this6=this;if(this.clearStaleTimeout(),!utils.sk&&!this.currentResult.isStale&&(0,utils.PN)(this.options.staleTime)){var time=(0,utils.Kp)(this.currentResult.dataUpdatedAt,this.options.staleTime);this.staleTimeoutId=setTimeout(function(){_this6.currentResult.isStale||_this6.updateResult()},time+1)}},_proto.computeRefetchInterval=function computeRefetchInterval(){var _this$options$refetch;return"function"==typeof this.options.refetchInterval?this.options.refetchInterval(this.currentResult.data,this.currentQuery):null!=(_this$options$refetch=this.options.refetchInterval)&&_this$options$refetch},_proto.updateRefetchInterval=function updateRefetchInterval(nextInterval){var _this7=this;this.clearRefetchInterval(),this.currentRefetchInterval=nextInterval,!utils.sk&&!1!==this.options.enabled&&(0,utils.PN)(this.currentRefetchInterval)&&0!==this.currentRefetchInterval&&(this.refetchIntervalId=setInterval(function(){(_this7.options.refetchIntervalInBackground||focusManager.j.isFocused())&&_this7.executeFetch()},this.currentRefetchInterval))},_proto.updateTimers=function updateTimers(){this.updateStaleTimeout(),this.updateRefetchInterval(this.computeRefetchInterval())},_proto.clearTimers=function clearTimers(){this.clearStaleTimeout(),this.clearRefetchInterval()},_proto.clearStaleTimeout=function clearStaleTimeout(){this.staleTimeoutId&&(clearTimeout(this.staleTimeoutId),this.staleTimeoutId=void 0)},_proto.clearRefetchInterval=function clearRefetchInterval(){this.refetchIntervalId&&(clearInterval(this.refetchIntervalId),this.refetchIntervalId=void 0)},_proto.createResult=function createResult(query,options){var data,placeholderData,prevQuery=this.currentQuery,prevOptions=this.options,prevResult=this.currentResult,prevResultState=this.currentResultState,prevResultOptions=this.currentResultOptions,queryChange=query!==prevQuery,queryInitialState=queryChange?query.state:this.currentQueryInitialState,prevQueryResult=queryChange?this.currentResult:this.previousQueryResult,state=query.state,dataUpdatedAt=state.dataUpdatedAt,error=state.error,errorUpdatedAt=state.errorUpdatedAt,isFetching=state.isFetching,status=state.status,isPreviousData=!1,isPlaceholderData=!1;if(options.optimisticResults){var mounted=this.hasListeners(),fetchOnMount=!mounted&&shouldFetchOnMount(query,options),fetchOptionally=mounted&&shouldFetchOptionally(query,prevQuery,options,prevOptions);(fetchOnMount||fetchOptionally)&&(isFetching=!0,dataUpdatedAt||(status="loading"))}if(options.keepPreviousData&&!state.dataUpdateCount&&(null==prevQueryResult?void 0:prevQueryResult.isSuccess)&&"error"!==status)data=prevQueryResult.data,dataUpdatedAt=prevQueryResult.dataUpdatedAt,status=prevQueryResult.status,isPreviousData=!0;else if(options.select&&void 0!==state.data){if(prevResult&&state.data===(null==prevResultState?void 0:prevResultState.data)&&options.select===this.selectFn)data=this.selectResult;else try{this.selectFn=options.select,data=options.select(state.data),!1!==options.structuralSharing&&(data=(0,utils.Q$)(null==prevResult?void 0:prevResult.data,data)),this.selectResult=data,this.selectError=null}catch(selectError){(0,logger.j)().error(selectError),this.selectError=selectError}}else data=state.data;if(void 0!==options.placeholderData&&void 0===data&&("loading"===status||"idle"===status)){if((null==prevResult?void 0:prevResult.isPlaceholderData)&&options.placeholderData===(null==prevResultOptions?void 0:prevResultOptions.placeholderData))placeholderData=prevResult.data;else if(placeholderData="function"==typeof options.placeholderData?options.placeholderData():options.placeholderData,options.select&&void 0!==placeholderData)try{placeholderData=options.select(placeholderData),!1!==options.structuralSharing&&(placeholderData=(0,utils.Q$)(null==prevResult?void 0:prevResult.data,placeholderData)),this.selectError=null}catch(selectError){(0,logger.j)().error(selectError),this.selectError=selectError}void 0!==placeholderData&&(status="success",data=placeholderData,isPlaceholderData=!0)}return this.selectError&&(error=this.selectError,data=this.selectResult,errorUpdatedAt=Date.now(),status="error"),{status:status,isLoading:"loading"===status,isSuccess:"success"===status,isError:"error"===status,isIdle:"idle"===status,data:data,dataUpdatedAt:dataUpdatedAt,error:error,errorUpdatedAt:errorUpdatedAt,failureCount:state.fetchFailureCount,errorUpdateCount:state.errorUpdateCount,isFetched:state.dataUpdateCount>0||state.errorUpdateCount>0,isFetchedAfterMount:state.dataUpdateCount>queryInitialState.dataUpdateCount||state.errorUpdateCount>queryInitialState.errorUpdateCount,isFetching:isFetching,isRefetching:isFetching&&"loading"!==status,isLoadingError:"error"===status&&0===state.dataUpdatedAt,isPlaceholderData:isPlaceholderData,isPreviousData:isPreviousData,isRefetchError:"error"===status&&0!==state.dataUpdatedAt,isStale:isStale(query,options),refetch:this.refetch,remove:this.remove}},_proto.shouldNotifyListeners=function shouldNotifyListeners(result,prevResult){if(!prevResult)return!0;var _this$options=this.options,notifyOnChangeProps=_this$options.notifyOnChangeProps,notifyOnChangePropsExclusions=_this$options.notifyOnChangePropsExclusions;if(!notifyOnChangeProps&&!notifyOnChangePropsExclusions||"tracked"===notifyOnChangeProps&&!this.trackedProps.length)return!0;var includedProps="tracked"===notifyOnChangeProps?this.trackedProps:notifyOnChangeProps;return Object.keys(result).some(function(key){var changed=result[key]!==prevResult[key],isIncluded=null==includedProps?void 0:includedProps.some(function(x){return x===key}),isExcluded=null==notifyOnChangePropsExclusions?void 0:notifyOnChangePropsExclusions.some(function(x){return x===key});return changed&&!isExcluded&&(!includedProps||isIncluded)})},_proto.updateResult=function updateResult(notifyOptions){var prevResult=this.currentResult;if(this.currentResult=this.createResult(this.currentQuery,this.options),this.currentResultState=this.currentQuery.state,this.currentResultOptions=this.options,!(0,utils.VS)(this.currentResult,prevResult)){var defaultNotifyOptions={cache:!0};(null==notifyOptions?void 0:notifyOptions.listeners)!==!1&&this.shouldNotifyListeners(this.currentResult,prevResult)&&(defaultNotifyOptions.listeners=!0),this.notify((0,esm_extends.Z)({},defaultNotifyOptions,notifyOptions))}},_proto.updateQuery=function updateQuery(){var query=this.client.getQueryCache().build(this.client,this.options);if(query!==this.currentQuery){var prevQuery=this.currentQuery;this.currentQuery=query,this.currentQueryInitialState=query.state,this.previousQueryResult=this.currentResult,this.hasListeners()&&(null==prevQuery||prevQuery.removeObserver(this),query.addObserver(this))}},_proto.onQueryUpdate=function onQueryUpdate(action){var notifyOptions={};"success"===action.type?notifyOptions.onSuccess=!0:"error"!==action.type||(0,retryer.DV)(action.error)||(notifyOptions.onError=!0),this.updateResult(notifyOptions),this.hasListeners()&&this.updateTimers()},_proto.notify=function notify(notifyOptions){var _this8=this;notifyManager.V.batch(function(){notifyOptions.onSuccess?(null==_this8.options.onSuccess||_this8.options.onSuccess(_this8.currentResult.data),null==_this8.options.onSettled||_this8.options.onSettled(_this8.currentResult.data,null)):notifyOptions.onError&&(null==_this8.options.onError||_this8.options.onError(_this8.currentResult.error),null==_this8.options.onSettled||_this8.options.onSettled(void 0,_this8.currentResult.error)),notifyOptions.listeners&&_this8.listeners.forEach(function(listener){listener(_this8.currentResult)}),notifyOptions.cache&&_this8.client.getQueryCache().notify({query:_this8.currentQuery,type:"observerResultsUpdated"})})},QueryObserver}(subscribable.l);function shouldLoadOnMount(query,options){return!1!==options.enabled&&!query.state.dataUpdatedAt&&!("error"===query.state.status&&!1===options.retryOnMount)}function shouldFetchOnMount(query,options){return shouldLoadOnMount(query,options)||query.state.dataUpdatedAt>0&&shouldFetchOn(query,options,options.refetchOnMount)}function shouldFetchOn(query,options,field){if(!1!==options.enabled){var value="function"==typeof field?field(query):field;return"always"===value||!1!==value&&isStale(query,options)}return!1}function shouldFetchOptionally(query,prevQuery,options,prevOptions){return!1!==options.enabled&&(query!==prevQuery||!1===prevOptions.enabled)&&(!options.suspense||"error"!==query.state.status)&&isStale(query,options)}function isStale(query,options){return query.isStaleByTime(options.staleTime)}function createValue(){var _isReset=!1;return{clearReset:function clearReset(){_isReset=!1},reset:function reset(){_isReset=!0},isReset:function isReset(){return _isReset}}}var QueryErrorResetBoundaryContext=react.createContext(createValue());function shouldThrowError(suspense,_useErrorBoundary,params){return"function"==typeof _useErrorBoundary?_useErrorBoundary.apply(void 0,params):"boolean"==typeof _useErrorBoundary?_useErrorBoundary:!!suspense}function useBaseQuery(options,Observer){var mountedRef=react.useRef(!1),forceUpdate=react.useState(0)[1],queryClient=useQueryClient(),errorResetBoundary=react.useContext(QueryErrorResetBoundaryContext),defaultedOptions=queryClient.defaultQueryObserverOptions(options);defaultedOptions.optimisticResults=!0,defaultedOptions.onError&&(defaultedOptions.onError=notifyManager.V.batchCalls(defaultedOptions.onError)),defaultedOptions.onSuccess&&(defaultedOptions.onSuccess=notifyManager.V.batchCalls(defaultedOptions.onSuccess)),defaultedOptions.onSettled&&(defaultedOptions.onSettled=notifyManager.V.batchCalls(defaultedOptions.onSettled)),defaultedOptions.suspense&&("number"!=typeof defaultedOptions.staleTime&&(defaultedOptions.staleTime=1e3),0===defaultedOptions.cacheTime&&(defaultedOptions.cacheTime=1)),(defaultedOptions.suspense||defaultedOptions.useErrorBoundary)&&!errorResetBoundary.isReset()&&(defaultedOptions.retryOnMount=!1);var observer=react.useState(function(){return new Observer(queryClient,defaultedOptions)})[0],result=observer.getOptimisticResult(defaultedOptions);if(react.useEffect(function(){mountedRef.current=!0,errorResetBoundary.clearReset();var unsubscribe=observer.subscribe(notifyManager.V.batchCalls(function(){mountedRef.current&&forceUpdate(function(x){return x+1})}));return observer.updateResult(),function(){mountedRef.current=!1,unsubscribe()}},[errorResetBoundary,observer]),react.useEffect(function(){observer.setOptions(defaultedOptions,{listeners:!1})},[defaultedOptions,observer]),defaultedOptions.suspense&&result.isLoading)throw observer.fetchOptimistic(defaultedOptions).then(function(_ref){var data=_ref.data;null==defaultedOptions.onSuccess||defaultedOptions.onSuccess(data),null==defaultedOptions.onSettled||defaultedOptions.onSettled(data,null)}).catch(function(error){errorResetBoundary.clearReset(),null==defaultedOptions.onError||defaultedOptions.onError(error),null==defaultedOptions.onSettled||defaultedOptions.onSettled(void 0,error)});if(result.isError&&!errorResetBoundary.isReset()&&!result.isFetching&&shouldThrowError(defaultedOptions.suspense,defaultedOptions.useErrorBoundary,[result.error,observer.getCurrentQuery()]))throw result.error;return"tracked"===defaultedOptions.notifyOnChangeProps&&(result=observer.trackResult(result,defaultedOptions)),result}function useQuery(arg1,arg2,arg3){return useBaseQuery((0,utils._v)(arg1,arg2,arg3),QueryObserver)}},"./node_modules/react/cjs/react-jsx-runtime.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var f=__webpack_require__("./node_modules/react/index.js"),k=Symbol.for("react.element"),l=Symbol.for("react.fragment"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};function q(c,a,g){var b,d={},e=null,h=null;for(b in void 0!==g&&(e=""+g),void 0!==a.key&&(e=""+a.key),void 0!==a.ref&&(h=a.ref),a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l,exports.jsx=q,exports.jsxs=q},"./node_modules/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__("./node_modules/react/cjs/react-jsx-runtime.production.min.js")}}]);
//# sourceMappingURL=209.e62ad19c.iframe.bundle.js.map